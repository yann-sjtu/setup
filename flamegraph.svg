<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="34175"><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (20 samples, 0.06%)</title><rect x="0.0000%" y="1221" width="0.0585%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1231.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.06%)</title><rect x="0.0000%" y="1205" width="0.0585%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1215.50"></text></g><g><title>ord::index::Index::update (20 samples, 0.06%)</title><rect x="0.0000%" y="1189" width="0.0585%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1199.50"></text></g><g><title>ord::index::updater::Updater::update_index (20 samples, 0.06%)</title><rect x="0.0000%" y="1173" width="0.0585%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1183.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (20 samples, 0.06%)</title><rect x="0.0000%" y="1157" width="0.0585%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1167.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (20 samples, 0.06%)</title><rect x="0.0000%" y="1141" width="0.0585%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.06%)</title><rect x="0.0000%" y="1125" width="0.0585%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.06%)</title><rect x="0.0000%" y="1109" width="0.0585%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.06%)</title><rect x="0.0000%" y="1093" width="0.0585%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.06%)</title><rect x="0.0000%" y="1077" width="0.0585%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.06%)</title><rect x="0.0000%" y="1061" width="0.0585%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (17 samples, 0.05%)</title><rect x="0.0088%" y="1045" width="0.0497%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="17"/><text x="0.2588%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (17 samples, 0.05%)</title><rect x="0.0088%" y="1029" width="0.0497%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="17"/><text x="0.2588%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (17 samples, 0.05%)</title><rect x="0.0088%" y="1013" width="0.0497%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="17"/><text x="0.2588%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (17 samples, 0.05%)</title><rect x="0.0088%" y="997" width="0.0497%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="17"/><text x="0.2588%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (17 samples, 0.05%)</title><rect x="0.0088%" y="981" width="0.0497%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="17"/><text x="0.2588%" y="991.50"></text></g><g><title>ord::index::Index::update (4 samples, 0.01%)</title><rect x="0.0585%" y="1221" width="0.0117%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1231.50"></text></g><g><title>ord::index::updater::Updater::update_index (4 samples, 0.01%)</title><rect x="0.0585%" y="1205" width="0.0117%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1215.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (4 samples, 0.01%)</title><rect x="0.0585%" y="1189" width="0.0117%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1199.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (4 samples, 0.01%)</title><rect x="0.0585%" y="1173" width="0.0117%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1183.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4 samples, 0.01%)</title><rect x="0.0585%" y="1157" width="0.0117%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4 samples, 0.01%)</title><rect x="0.0585%" y="1141" width="0.0117%" height="15" fill="rgb(235,183,28)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4 samples, 0.01%)</title><rect x="0.0585%" y="1125" width="0.0117%" height="15" fill="rgb(221,5,38)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4 samples, 0.01%)</title><rect x="0.0585%" y="1109" width="0.0117%" height="15" fill="rgb(247,18,42)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4 samples, 0.01%)</title><rect x="0.0585%" y="1093" width="0.0117%" height="15" fill="rgb(241,131,45)" fg:x="20" fg:w="4"/><text x="0.3085%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.09%)</title><rect x="0.0732%" y="933" width="0.0936%" height="15" fill="rgb(249,31,29)" fg:x="25" fg:w="32"/><text x="0.3232%" y="943.50"></text></g><g><title>__libc_calloc (32 samples, 0.09%)</title><rect x="0.0732%" y="917" width="0.0936%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="32"/><text x="0.3232%" y="927.50"></text></g><g><title>_IO_str_seekoff (32 samples, 0.09%)</title><rect x="0.0732%" y="901" width="0.0936%" height="15" fill="rgb(238,160,17)" fg:x="25" fg:w="32"/><text x="0.3232%" y="911.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (84 samples, 0.25%)</title><rect x="0.0702%" y="981" width="0.2458%" height="15" fill="rgb(214,148,48)" fg:x="24" fg:w="84"/><text x="0.3202%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (84 samples, 0.25%)</title><rect x="0.0702%" y="965" width="0.2458%" height="15" fill="rgb(232,36,49)" fg:x="24" fg:w="84"/><text x="0.3202%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (84 samples, 0.25%)</title><rect x="0.0702%" y="949" width="0.2458%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="84"/><text x="0.3202%" y="959.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (49 samples, 0.14%)</title><rect x="0.1726%" y="933" width="0.1434%" height="15" fill="rgb(229,88,8)" fg:x="59" fg:w="49"/><text x="0.4226%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (38 samples, 0.11%)</title><rect x="0.2048%" y="917" width="0.1112%" height="15" fill="rgb(213,181,19)" fg:x="70" fg:w="38"/><text x="0.4548%" y="927.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="0.3745%" y="933" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="128" fg:w="4"/><text x="0.6245%" y="943.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (28 samples, 0.08%)</title><rect x="0.3189%" y="949" width="0.0819%" height="15" fill="rgb(241,83,37)" fg:x="109" fg:w="28"/><text x="0.5689%" y="959.50"></text></g><g><title>start_thread (117 samples, 0.34%)</title><rect x="0.0702%" y="1221" width="0.3424%" height="15" fill="rgb(233,36,39)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (117 samples, 0.34%)</title><rect x="0.0702%" y="1205" width="0.3424%" height="15" fill="rgb(226,3,54)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (117 samples, 0.34%)</title><rect x="0.0702%" y="1189" width="0.3424%" height="15" fill="rgb(245,192,40)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (117 samples, 0.34%)</title><rect x="0.0702%" y="1173" width="0.3424%" height="15" fill="rgb(238,167,29)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (117 samples, 0.34%)</title><rect x="0.0702%" y="1157" width="0.3424%" height="15" fill="rgb(232,182,51)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (117 samples, 0.34%)</title><rect x="0.0702%" y="1141" width="0.3424%" height="15" fill="rgb(231,60,39)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1151.50"></text></g><g><title>ord::index::Index::update (117 samples, 0.34%)</title><rect x="0.0702%" y="1125" width="0.3424%" height="15" fill="rgb(208,69,12)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1135.50"></text></g><g><title>ord::index::updater::Updater::update_index (117 samples, 0.34%)</title><rect x="0.0702%" y="1109" width="0.3424%" height="15" fill="rgb(235,93,37)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1119.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (117 samples, 0.34%)</title><rect x="0.0702%" y="1093" width="0.3424%" height="15" fill="rgb(213,116,39)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1103.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (117 samples, 0.34%)</title><rect x="0.0702%" y="1077" width="0.3424%" height="15" fill="rgb(222,207,29)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (117 samples, 0.34%)</title><rect x="0.0702%" y="1061" width="0.3424%" height="15" fill="rgb(206,96,30)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (117 samples, 0.34%)</title><rect x="0.0702%" y="1045" width="0.3424%" height="15" fill="rgb(218,138,4)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1055.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (117 samples, 0.34%)</title><rect x="0.0702%" y="1029" width="0.3424%" height="15" fill="rgb(250,191,14)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1039.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (117 samples, 0.34%)</title><rect x="0.0702%" y="1013" width="0.3424%" height="15" fill="rgb(239,60,40)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (117 samples, 0.34%)</title><rect x="0.0702%" y="997" width="0.3424%" height="15" fill="rgb(206,27,48)" fg:x="24" fg:w="117"/><text x="0.3202%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (33 samples, 0.10%)</title><rect x="0.3160%" y="981" width="0.0966%" height="15" fill="rgb(225,35,8)" fg:x="108" fg:w="33"/><text x="0.5660%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (33 samples, 0.10%)</title><rect x="0.3160%" y="965" width="0.0966%" height="15" fill="rgb(250,213,24)" fg:x="108" fg:w="33"/><text x="0.5660%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (4 samples, 0.01%)</title><rect x="0.4009%" y="949" width="0.0117%" height="15" fill="rgb(247,123,22)" fg:x="137" fg:w="4"/><text x="0.6509%" y="959.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (4 samples, 0.01%)</title><rect x="0.4009%" y="933" width="0.0117%" height="15" fill="rgb(231,138,38)" fg:x="137" fg:w="4"/><text x="0.6509%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.02%)</title><rect x="0.4126%" y="1221" width="0.0205%" height="15" fill="rgb(231,145,46)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="0.4126%" y="1205" width="0.0205%" height="15" fill="rgb(251,118,11)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="0.4126%" y="1189" width="0.0205%" height="15" fill="rgb(217,147,25)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.02%)</title><rect x="0.4126%" y="1173" width="0.0205%" height="15" fill="rgb(247,81,37)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1183.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.02%)</title><rect x="0.4126%" y="1157" width="0.0205%" height="15" fill="rgb(209,12,38)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1167.50"></text></g><g><title>ord::index::Index::update (7 samples, 0.02%)</title><rect x="0.4126%" y="1141" width="0.0205%" height="15" fill="rgb(227,1,9)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1151.50"></text></g><g><title>ord::index::updater::Updater::update_index (7 samples, 0.02%)</title><rect x="0.4126%" y="1125" width="0.0205%" height="15" fill="rgb(248,47,43)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1135.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (7 samples, 0.02%)</title><rect x="0.4126%" y="1109" width="0.0205%" height="15" fill="rgb(221,10,30)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1119.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (7 samples, 0.02%)</title><rect x="0.4126%" y="1093" width="0.0205%" height="15" fill="rgb(210,229,1)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.02%)</title><rect x="0.4126%" y="1077" width="0.0205%" height="15" fill="rgb(222,148,37)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.02%)</title><rect x="0.4126%" y="1061" width="0.0205%" height="15" fill="rgb(234,67,33)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.02%)</title><rect x="0.4126%" y="1045" width="0.0205%" height="15" fill="rgb(247,98,35)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1055.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.02%)</title><rect x="0.4126%" y="1029" width="0.0205%" height="15" fill="rgb(247,138,52)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1039.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.02%)</title><rect x="0.4126%" y="1013" width="0.0205%" height="15" fill="rgb(213,79,30)" fg:x="141" fg:w="7"/><text x="0.6626%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (6 samples, 0.02%)</title><rect x="0.4155%" y="997" width="0.0176%" height="15" fill="rgb(246,177,23)" fg:x="142" fg:w="6"/><text x="0.6655%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (6 samples, 0.02%)</title><rect x="0.4155%" y="981" width="0.0176%" height="15" fill="rgb(230,62,27)" fg:x="142" fg:w="6"/><text x="0.6655%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (6 samples, 0.02%)</title><rect x="0.4155%" y="965" width="0.0176%" height="15" fill="rgb(216,154,8)" fg:x="142" fg:w="6"/><text x="0.6655%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (4 samples, 0.01%)</title><rect x="0.4331%" y="1061" width="0.0117%" height="15" fill="rgb(244,35,45)" fg:x="148" fg:w="4"/><text x="0.6831%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (4 samples, 0.01%)</title><rect x="0.4331%" y="1045" width="0.0117%" height="15" fill="rgb(251,115,12)" fg:x="148" fg:w="4"/><text x="0.6831%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (4 samples, 0.01%)</title><rect x="0.4331%" y="1029" width="0.0117%" height="15" fill="rgb(240,54,50)" fg:x="148" fg:w="4"/><text x="0.6831%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (4 samples, 0.01%)</title><rect x="0.4331%" y="1013" width="0.0117%" height="15" fill="rgb(233,84,52)" fg:x="148" fg:w="4"/><text x="0.6831%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.01%)</title><rect x="0.4331%" y="997" width="0.0117%" height="15" fill="rgb(207,117,47)" fg:x="148" fg:w="4"/><text x="0.6831%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.01%)</title><rect x="0.4331%" y="981" width="0.0117%" height="15" fill="rgb(249,43,39)" fg:x="148" fg:w="4"/><text x="0.6831%" y="991.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="0.4331%" y="965" width="0.0117%" height="15" fill="rgb(209,38,44)" fg:x="148" fg:w="4"/><text x="0.6831%" y="975.50"></text></g><g><title>[unknown] (159 samples, 0.47%)</title><rect x="0.0000%" y="1237" width="0.4653%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="159"/><text x="0.2500%" y="1247.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.03%)</title><rect x="0.4331%" y="1221" width="0.0322%" height="15" fill="rgb(242,79,21)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1231.50"></text></g><g><title>ord::index::Index::update (11 samples, 0.03%)</title><rect x="0.4331%" y="1205" width="0.0322%" height="15" fill="rgb(211,96,35)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1215.50"></text></g><g><title>ord::index::updater::Updater::update_index (11 samples, 0.03%)</title><rect x="0.4331%" y="1189" width="0.0322%" height="15" fill="rgb(253,215,40)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1199.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (11 samples, 0.03%)</title><rect x="0.4331%" y="1173" width="0.0322%" height="15" fill="rgb(211,81,21)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1183.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (11 samples, 0.03%)</title><rect x="0.4331%" y="1157" width="0.0322%" height="15" fill="rgb(208,190,38)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (11 samples, 0.03%)</title><rect x="0.4331%" y="1141" width="0.0322%" height="15" fill="rgb(235,213,38)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (11 samples, 0.03%)</title><rect x="0.4331%" y="1125" width="0.0322%" height="15" fill="rgb(237,122,38)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (11 samples, 0.03%)</title><rect x="0.4331%" y="1109" width="0.0322%" height="15" fill="rgb(244,218,35)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (11 samples, 0.03%)</title><rect x="0.4331%" y="1093" width="0.0322%" height="15" fill="rgb(240,68,47)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (11 samples, 0.03%)</title><rect x="0.4331%" y="1077" width="0.0322%" height="15" fill="rgb(210,16,53)" fg:x="148" fg:w="11"/><text x="0.6831%" y="1087.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (7 samples, 0.02%)</title><rect x="0.4448%" y="1061" width="0.0205%" height="15" fill="rgb(235,124,12)" fg:x="152" fg:w="7"/><text x="0.6948%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (7 samples, 0.02%)</title><rect x="0.4448%" y="1045" width="0.0205%" height="15" fill="rgb(224,169,11)" fg:x="152" fg:w="7"/><text x="0.6948%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (7 samples, 0.02%)</title><rect x="0.4448%" y="1029" width="0.0205%" height="15" fill="rgb(250,166,2)" fg:x="152" fg:w="7"/><text x="0.6948%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.02%)</title><rect x="0.4448%" y="1013" width="0.0205%" height="15" fill="rgb(242,216,29)" fg:x="152" fg:w="7"/><text x="0.6948%" y="1023.50"></text></g><g><title>__libc_calloc (7 samples, 0.02%)</title><rect x="0.4448%" y="997" width="0.0205%" height="15" fill="rgb(230,116,27)" fg:x="152" fg:w="7"/><text x="0.6948%" y="1007.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.02%)</title><rect x="0.4448%" y="981" width="0.0205%" height="15" fill="rgb(228,99,48)" fg:x="152" fg:w="7"/><text x="0.6948%" y="991.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="1.1178%" y="997" width="0.0234%" height="15" fill="rgb(253,11,6)" fg:x="382" fg:w="8"/><text x="1.3678%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (215 samples, 0.63%)</title><rect x="0.5208%" y="1061" width="0.6291%" height="15" fill="rgb(247,143,39)" fg:x="178" fg:w="215"/><text x="0.7708%" y="1071.50"></text></g><g><title>std::io::Write::write_all (214 samples, 0.63%)</title><rect x="0.5238%" y="1045" width="0.6262%" height="15" fill="rgb(236,97,10)" fg:x="179" fg:w="214"/><text x="0.7738%" y="1055.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (209 samples, 0.61%)</title><rect x="0.5384%" y="1029" width="0.6116%" height="15" fill="rgb(233,208,19)" fg:x="184" fg:w="209"/><text x="0.7884%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (207 samples, 0.61%)</title><rect x="0.5443%" y="1013" width="0.6057%" height="15" fill="rgb(216,164,2)" fg:x="186" fg:w="207"/><text x="0.7943%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (319 samples, 0.93%)</title><rect x="0.4974%" y="1077" width="0.9334%" height="15" fill="rgb(220,129,5)" fg:x="170" fg:w="319"/><text x="0.7474%" y="1087.50"></text></g><g><title>std::io::Write::write_all (96 samples, 0.28%)</title><rect x="1.1500%" y="1061" width="0.2809%" height="15" fill="rgb(242,17,10)" fg:x="393" fg:w="96"/><text x="1.4000%" y="1071.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (88 samples, 0.26%)</title><rect x="1.1734%" y="1045" width="0.2575%" height="15" fill="rgb(242,107,0)" fg:x="401" fg:w="88"/><text x="1.4234%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (87 samples, 0.25%)</title><rect x="1.1763%" y="1029" width="0.2546%" height="15" fill="rgb(251,28,31)" fg:x="402" fg:w="87"/><text x="1.4263%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (18 samples, 0.05%)</title><rect x="1.3782%" y="1013" width="0.0527%" height="15" fill="rgb(233,223,10)" fg:x="471" fg:w="18"/><text x="1.6282%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (92 samples, 0.27%)</title><rect x="1.4455%" y="1061" width="0.2692%" height="15" fill="rgb(215,21,27)" fg:x="494" fg:w="92"/><text x="1.6955%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (166 samples, 0.49%)</title><rect x="1.4396%" y="1077" width="0.4857%" height="15" fill="rgb(232,23,21)" fg:x="492" fg:w="166"/><text x="1.6896%" y="1087.50"></text></g><g><title>bitcoin_hashes::Hash::hash (72 samples, 0.21%)</title><rect x="1.7147%" y="1061" width="0.2107%" height="15" fill="rgb(244,5,23)" fg:x="586" fg:w="72"/><text x="1.9647%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (70 samples, 0.20%)</title><rect x="1.7206%" y="1045" width="0.2048%" height="15" fill="rgb(226,81,46)" fg:x="588" fg:w="70"/><text x="1.9706%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.03%)</title><rect x="2.2765%" y="1013" width="0.0263%" height="15" fill="rgb(247,70,30)" fg:x="778" fg:w="9"/><text x="2.5265%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (131 samples, 0.38%)</title><rect x="1.9254%" y="1077" width="0.3833%" height="15" fill="rgb(212,68,19)" fg:x="658" fg:w="131"/><text x="2.1754%" y="1087.50"></text></g><g><title>std::io::Write::write_all (127 samples, 0.37%)</title><rect x="1.9371%" y="1061" width="0.3716%" height="15" fill="rgb(240,187,13)" fg:x="662" fg:w="127"/><text x="2.1871%" y="1071.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (125 samples, 0.37%)</title><rect x="1.9429%" y="1045" width="0.3658%" height="15" fill="rgb(223,113,26)" fg:x="664" fg:w="125"/><text x="2.1929%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (124 samples, 0.36%)</title><rect x="1.9459%" y="1029" width="0.3628%" height="15" fill="rgb(206,192,2)" fg:x="665" fg:w="124"/><text x="2.1959%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (5 samples, 0.01%)</title><rect x="2.4140%" y="1029" width="0.0146%" height="15" fill="rgb(241,108,4)" fg:x="825" fg:w="5"/><text x="2.6640%" y="1039.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (671 samples, 1.96%)</title><rect x="0.4682%" y="1125" width="1.9634%" height="15" fill="rgb(247,173,49)" fg:x="160" fg:w="671"/><text x="0.7182%" y="1135.50">a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (671 samples, 1.96%)</title><rect x="0.4682%" y="1109" width="1.9634%" height="15" fill="rgb(224,114,35)" fg:x="160" fg:w="671"/><text x="0.7182%" y="1119.50">&lt;..</text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (664 samples, 1.94%)</title><rect x="0.4887%" y="1093" width="1.9429%" height="15" fill="rgb(245,159,27)" fg:x="167" fg:w="664"/><text x="0.7387%" y="1103.50">b..</text></g><g><title>std::io::Write::write_all (42 samples, 0.12%)</title><rect x="2.3087%" y="1077" width="0.1229%" height="15" fill="rgb(245,172,44)" fg:x="789" fg:w="42"/><text x="2.5587%" y="1087.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (35 samples, 0.10%)</title><rect x="2.3292%" y="1061" width="0.1024%" height="15" fill="rgb(236,23,11)" fg:x="796" fg:w="35"/><text x="2.5792%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (31 samples, 0.09%)</title><rect x="2.3409%" y="1045" width="0.0907%" height="15" fill="rgb(205,117,38)" fg:x="800" fg:w="31"/><text x="2.5909%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.16%)</title><rect x="2.7213%" y="1093" width="0.1609%" height="15" fill="rgb(237,72,25)" fg:x="930" fg:w="55"/><text x="2.9713%" y="1103.50"></text></g><g><title>cfree (51 samples, 0.15%)</title><rect x="2.7330%" y="1077" width="0.1492%" height="15" fill="rgb(244,70,9)" fg:x="934" fg:w="51"/><text x="2.9830%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.03%)</title><rect x="2.8822%" y="1077" width="0.0263%" height="15" fill="rgb(217,125,39)" fg:x="985" fg:w="9"/><text x="3.1322%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="2.8851%" y="1061" width="0.0234%" height="15" fill="rgb(235,36,10)" fg:x="986" fg:w="8"/><text x="3.1351%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="2.8851%" y="1045" width="0.0234%" height="15" fill="rgb(251,123,47)" fg:x="986" fg:w="8"/><text x="3.1351%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (64 samples, 0.19%)</title><rect x="2.8822%" y="1093" width="0.1873%" height="15" fill="rgb(221,13,13)" fg:x="985" fg:w="64"/><text x="3.1322%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (55 samples, 0.16%)</title><rect x="2.9086%" y="1077" width="0.1609%" height="15" fill="rgb(238,131,9)" fg:x="994" fg:w="55"/><text x="3.1586%" y="1087.50"></text></g><g><title>__libc_malloc (55 samples, 0.16%)</title><rect x="2.9086%" y="1061" width="0.1609%" height="15" fill="rgb(211,50,8)" fg:x="994" fg:w="55"/><text x="3.1586%" y="1071.50"></text></g><g><title>_IO_str_seekoff (55 samples, 0.16%)</title><rect x="2.9086%" y="1045" width="0.1609%" height="15" fill="rgb(245,182,24)" fg:x="994" fg:w="55"/><text x="3.1586%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="3.1163%" y="1077" width="0.0205%" height="15" fill="rgb(242,14,37)" fg:x="1065" fg:w="7"/><text x="3.3663%" y="1087.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.01%)</title><rect x="3.1953%" y="1045" width="0.0117%" height="15" fill="rgb(246,228,12)" fg:x="1092" fg:w="4"/><text x="3.4453%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (9 samples, 0.03%)</title><rect x="3.3446%" y="1029" width="0.0263%" height="15" fill="rgb(213,55,15)" fg:x="1143" fg:w="9"/><text x="3.5946%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (33 samples, 0.10%)</title><rect x="3.7659%" y="1013" width="0.0966%" height="15" fill="rgb(209,9,3)" fg:x="1287" fg:w="33"/><text x="4.0159%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (24 samples, 0.07%)</title><rect x="4.1843%" y="997" width="0.0702%" height="15" fill="rgb(230,59,30)" fg:x="1430" fg:w="24"/><text x="4.4343%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (144 samples, 0.42%)</title><rect x="4.2546%" y="997" width="0.4214%" height="15" fill="rgb(209,121,21)" fg:x="1454" fg:w="144"/><text x="4.5046%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (9 samples, 0.03%)</title><rect x="4.6759%" y="997" width="0.0263%" height="15" fill="rgb(220,109,13)" fg:x="1598" fg:w="9"/><text x="4.9259%" y="1007.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (309 samples, 0.90%)</title><rect x="3.8625%" y="1013" width="0.9042%" height="15" fill="rgb(232,18,1)" fg:x="1320" fg:w="309"/><text x="4.1125%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_range (19 samples, 0.06%)</title><rect x="4.7110%" y="997" width="0.0556%" height="15" fill="rgb(215,41,42)" fg:x="1610" fg:w="19"/><text x="4.9610%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (14 samples, 0.04%)</title><rect x="4.7257%" y="981" width="0.0410%" height="15" fill="rgb(224,123,36)" fg:x="1615" fg:w="14"/><text x="4.9757%" y="991.50"></text></g><g><title>__nss_passwd_lookup (212 samples, 0.62%)</title><rect x="4.8281%" y="997" width="0.6203%" height="15" fill="rgb(240,125,3)" fg:x="1650" fg:w="212"/><text x="5.0781%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (26 samples, 0.08%)</title><rect x="5.4484%" y="997" width="0.0761%" height="15" fill="rgb(205,98,50)" fg:x="1862" fg:w="26"/><text x="5.6984%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (279 samples, 0.82%)</title><rect x="4.7666%" y="1013" width="0.8164%" height="15" fill="rgb(205,185,37)" fg:x="1629" fg:w="279"/><text x="5.0166%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (20 samples, 0.06%)</title><rect x="5.5245%" y="997" width="0.0585%" height="15" fill="rgb(238,207,15)" fg:x="1888" fg:w="20"/><text x="5.7745%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (11 samples, 0.03%)</title><rect x="5.5508%" y="981" width="0.0322%" height="15" fill="rgb(213,199,42)" fg:x="1897" fg:w="11"/><text x="5.8008%" y="991.50"></text></g><g><title>__libc_malloc (22 samples, 0.06%)</title><rect x="7.5816%" y="981" width="0.0644%" height="15" fill="rgb(235,201,11)" fg:x="2591" fg:w="22"/><text x="7.8316%" y="991.50"></text></g><g><title>_IO_str_seekoff (17 samples, 0.05%)</title><rect x="7.5962%" y="965" width="0.0497%" height="15" fill="rgb(207,46,11)" fg:x="2596" fg:w="17"/><text x="7.8462%" y="975.50"></text></g><g><title>__libc_malloc (6 samples, 0.02%)</title><rect x="7.6869%" y="933" width="0.0176%" height="15" fill="rgb(241,35,35)" fg:x="2627" fg:w="6"/><text x="7.9369%" y="943.50"></text></g><g><title>_IO_str_seekoff (5 samples, 0.01%)</title><rect x="7.6898%" y="917" width="0.0146%" height="15" fill="rgb(243,32,47)" fg:x="2628" fg:w="5"/><text x="7.9398%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.03%)</title><rect x="7.6840%" y="949" width="0.0322%" height="15" fill="rgb(247,202,23)" fg:x="2626" fg:w="11"/><text x="7.9340%" y="959.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.01%)</title><rect x="7.7045%" y="933" width="0.0117%" height="15" fill="rgb(219,102,11)" fg:x="2633" fg:w="4"/><text x="7.9545%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (24 samples, 0.07%)</title><rect x="7.6489%" y="981" width="0.0702%" height="15" fill="rgb(243,110,44)" fg:x="2614" fg:w="24"/><text x="7.8989%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.04%)</title><rect x="7.6811%" y="965" width="0.0380%" height="15" fill="rgb(222,74,54)" fg:x="2625" fg:w="13"/><text x="7.9311%" y="975.50"></text></g><g><title>_IO_str_seekoff (37 samples, 0.11%)</title><rect x="7.7747%" y="949" width="0.1083%" height="15" fill="rgb(216,99,12)" fg:x="2657" fg:w="37"/><text x="8.0247%" y="959.50"></text></g><g><title>__libc_calloc (70 samples, 0.20%)</title><rect x="7.7308%" y="965" width="0.2048%" height="15" fill="rgb(226,22,26)" fg:x="2642" fg:w="70"/><text x="7.9808%" y="975.50"></text></g><g><title>__nss_passwd_lookup (18 samples, 0.05%)</title><rect x="7.8830%" y="949" width="0.0527%" height="15" fill="rgb(217,163,10)" fg:x="2694" fg:w="18"/><text x="8.1330%" y="959.50"></text></g><g><title>__pthread_enable_asynccancel (31 samples, 0.09%)</title><rect x="8.0029%" y="885" width="0.0907%" height="15" fill="rgb(213,25,53)" fg:x="2735" fg:w="31"/><text x="8.2529%" y="895.50"></text></g><g><title>__fdget (4 samples, 0.01%)</title><rect x="8.1170%" y="821" width="0.0117%" height="15" fill="rgb(252,105,26)" fg:x="2774" fg:w="4"/><text x="8.3670%" y="831.50"></text></g><g><title>__fget_light (4 samples, 0.01%)</title><rect x="8.1170%" y="805" width="0.0117%" height="15" fill="rgb(220,39,43)" fg:x="2774" fg:w="4"/><text x="8.3670%" y="815.50"></text></g><g><title>copy_page_to_iter (86 samples, 0.25%)</title><rect x="8.1931%" y="741" width="0.2516%" height="15" fill="rgb(229,68,48)" fg:x="2800" fg:w="86"/><text x="8.4431%" y="751.50"></text></g><g><title>copy_user_enhanced_fast_string (85 samples, 0.25%)</title><rect x="8.1960%" y="725" width="0.2487%" height="15" fill="rgb(252,8,32)" fg:x="2801" fg:w="85"/><text x="8.4460%" y="735.50"></text></g><g><title>io_schedule (39 samples, 0.11%)</title><rect x="8.4477%" y="741" width="0.1141%" height="15" fill="rgb(223,20,43)" fg:x="2887" fg:w="39"/><text x="8.6977%" y="751.50"></text></g><g><title>schedule (37 samples, 0.11%)</title><rect x="8.4535%" y="725" width="0.1083%" height="15" fill="rgb(229,81,49)" fg:x="2889" fg:w="37"/><text x="8.7035%" y="735.50"></text></g><g><title>__sched_text_start (37 samples, 0.11%)</title><rect x="8.4535%" y="709" width="0.1083%" height="15" fill="rgb(236,28,36)" fg:x="2889" fg:w="37"/><text x="8.7035%" y="719.50"></text></g><g><title>finish_task_switch (37 samples, 0.11%)</title><rect x="8.4535%" y="693" width="0.1083%" height="15" fill="rgb(249,185,26)" fg:x="2889" fg:w="37"/><text x="8.7035%" y="703.50"></text></g><g><title>mark_page_accessed (5 samples, 0.01%)</title><rect x="8.5618%" y="741" width="0.0146%" height="15" fill="rgb(249,174,33)" fg:x="2926" fg:w="5"/><text x="8.8118%" y="751.50"></text></g><g><title>__page_cache_alloc (11 samples, 0.03%)</title><rect x="8.5852%" y="693" width="0.0322%" height="15" fill="rgb(233,201,37)" fg:x="2934" fg:w="11"/><text x="8.8352%" y="703.50"></text></g><g><title>alloc_pages_current (10 samples, 0.03%)</title><rect x="8.5881%" y="677" width="0.0293%" height="15" fill="rgb(221,78,26)" fg:x="2935" fg:w="10"/><text x="8.8381%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (10 samples, 0.03%)</title><rect x="8.5881%" y="661" width="0.0293%" height="15" fill="rgb(250,127,30)" fg:x="2935" fg:w="10"/><text x="8.8381%" y="671.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.02%)</title><rect x="8.5940%" y="645" width="0.0234%" height="15" fill="rgb(230,49,44)" fg:x="2937" fg:w="8"/><text x="8.8440%" y="655.50"></text></g><g><title>prep_new_page (4 samples, 0.01%)</title><rect x="8.6057%" y="629" width="0.0117%" height="15" fill="rgb(229,67,23)" fg:x="2941" fg:w="4"/><text x="8.8557%" y="639.50"></text></g><g><title>clear_page_erms (4 samples, 0.01%)</title><rect x="8.6057%" y="613" width="0.0117%" height="15" fill="rgb(249,83,47)" fg:x="2941" fg:w="4"/><text x="8.8557%" y="623.50"></text></g><g><title>__blk_mq_try_issue_directly (8 samples, 0.02%)</title><rect x="8.6233%" y="581" width="0.0234%" height="15" fill="rgb(215,43,3)" fg:x="2947" fg:w="8"/><text x="8.8733%" y="591.50"></text></g><g><title>nvme_queue_rq (7 samples, 0.02%)</title><rect x="8.6262%" y="565" width="0.0205%" height="15" fill="rgb(238,154,13)" fg:x="2948" fg:w="7"/><text x="8.8762%" y="575.50"></text></g><g><title>blk_finish_plug (10 samples, 0.03%)</title><rect x="8.6203%" y="677" width="0.0293%" height="15" fill="rgb(219,56,2)" fg:x="2946" fg:w="10"/><text x="8.8703%" y="687.50"></text></g><g><title>blk_flush_plug_list (10 samples, 0.03%)</title><rect x="8.6203%" y="661" width="0.0293%" height="15" fill="rgb(233,0,4)" fg:x="2946" fg:w="10"/><text x="8.8703%" y="671.50"></text></g><g><title>blk_mq_flush_plug_list (10 samples, 0.03%)</title><rect x="8.6203%" y="645" width="0.0293%" height="15" fill="rgb(235,30,7)" fg:x="2946" fg:w="10"/><text x="8.8703%" y="655.50"></text></g><g><title>blk_mq_sched_insert_requests (10 samples, 0.03%)</title><rect x="8.6203%" y="629" width="0.0293%" height="15" fill="rgb(250,79,13)" fg:x="2946" fg:w="10"/><text x="8.8703%" y="639.50"></text></g><g><title>blk_mq_try_issue_list_directly (10 samples, 0.03%)</title><rect x="8.6203%" y="613" width="0.0293%" height="15" fill="rgb(211,146,34)" fg:x="2946" fg:w="10"/><text x="8.8703%" y="623.50"></text></g><g><title>blk_mq_request_issue_directly (9 samples, 0.03%)</title><rect x="8.6233%" y="597" width="0.0263%" height="15" fill="rgb(228,22,38)" fg:x="2947" fg:w="9"/><text x="8.8733%" y="607.50"></text></g><g><title>__add_to_page_cache_locked (6 samples, 0.02%)</title><rect x="8.6554%" y="629" width="0.0176%" height="15" fill="rgb(235,168,5)" fg:x="2958" fg:w="6"/><text x="8.9054%" y="639.50"></text></g><g><title>add_to_page_cache_lru (14 samples, 0.04%)</title><rect x="8.6554%" y="645" width="0.0410%" height="15" fill="rgb(221,155,16)" fg:x="2958" fg:w="14"/><text x="8.9054%" y="655.50"></text></g><g><title>workingset_refault (4 samples, 0.01%)</title><rect x="8.6847%" y="629" width="0.0117%" height="15" fill="rgb(215,215,53)" fg:x="2968" fg:w="4"/><text x="8.9347%" y="639.50"></text></g><g><title>ext4_map_blocks (11 samples, 0.03%)</title><rect x="8.7023%" y="645" width="0.0322%" height="15" fill="rgb(223,4,10)" fg:x="2974" fg:w="11"/><text x="8.9523%" y="655.50"></text></g><g><title>ext4_es_lookup_extent (7 samples, 0.02%)</title><rect x="8.7140%" y="629" width="0.0205%" height="15" fill="rgb(234,103,6)" fg:x="2978" fg:w="7"/><text x="8.9640%" y="639.50"></text></g><g><title>blk_mq_make_request (4 samples, 0.01%)</title><rect x="8.7374%" y="613" width="0.0117%" height="15" fill="rgb(227,97,0)" fg:x="2986" fg:w="4"/><text x="8.9874%" y="623.50"></text></g><g><title>generic_make_request (10 samples, 0.03%)</title><rect x="8.7345%" y="629" width="0.0293%" height="15" fill="rgb(234,150,53)" fg:x="2985" fg:w="10"/><text x="8.9845%" y="639.50"></text></g><g><title>read_pages (51 samples, 0.15%)</title><rect x="8.6203%" y="693" width="0.1492%" height="15" fill="rgb(228,201,54)" fg:x="2946" fg:w="51"/><text x="8.8703%" y="703.50"></text></g><g><title>ext4_readpages (41 samples, 0.12%)</title><rect x="8.6496%" y="677" width="0.1200%" height="15" fill="rgb(222,22,37)" fg:x="2956" fg:w="41"/><text x="8.8996%" y="687.50"></text></g><g><title>ext4_mpage_readpages (41 samples, 0.12%)</title><rect x="8.6496%" y="661" width="0.1200%" height="15" fill="rgb(237,53,32)" fg:x="2956" fg:w="41"/><text x="8.8996%" y="671.50"></text></g><g><title>submit_bio (12 samples, 0.04%)</title><rect x="8.7345%" y="645" width="0.0351%" height="15" fill="rgb(233,25,53)" fg:x="2985" fg:w="12"/><text x="8.9845%" y="655.50"></text></g><g><title>page_cache_sync_readahead (68 samples, 0.20%)</title><rect x="8.5823%" y="741" width="0.1990%" height="15" fill="rgb(210,40,34)" fg:x="2933" fg:w="68"/><text x="8.8323%" y="751.50"></text></g><g><title>ondemand_readahead (68 samples, 0.20%)</title><rect x="8.5823%" y="725" width="0.1990%" height="15" fill="rgb(241,220,44)" fg:x="2933" fg:w="68"/><text x="8.8323%" y="735.50"></text></g><g><title>__do_page_cache_readahead (68 samples, 0.20%)</title><rect x="8.5823%" y="709" width="0.1990%" height="15" fill="rgb(235,28,35)" fg:x="2933" fg:w="68"/><text x="8.8323%" y="719.50"></text></g><g><title>xa_load (4 samples, 0.01%)</title><rect x="8.7696%" y="693" width="0.0117%" height="15" fill="rgb(210,56,17)" fg:x="2997" fg:w="4"/><text x="9.0196%" y="703.50"></text></g><g><title>pagecache_get_page (85 samples, 0.25%)</title><rect x="8.7813%" y="741" width="0.2487%" height="15" fill="rgb(224,130,29)" fg:x="3001" fg:w="85"/><text x="9.0313%" y="751.50"></text></g><g><title>find_get_entry (83 samples, 0.24%)</title><rect x="8.7871%" y="725" width="0.2429%" height="15" fill="rgb(235,212,8)" fg:x="3003" fg:w="83"/><text x="9.0371%" y="735.50"></text></g><g><title>xas_load (62 samples, 0.18%)</title><rect x="8.8486%" y="709" width="0.1814%" height="15" fill="rgb(223,33,50)" fg:x="3024" fg:w="62"/><text x="9.0986%" y="719.50"></text></g><g><title>ext4_file_read_iter (298 samples, 0.87%)</title><rect x="8.1668%" y="773" width="0.8720%" height="15" fill="rgb(219,149,13)" fg:x="2791" fg:w="298"/><text x="8.4168%" y="783.50"></text></g><g><title>generic_file_read_iter (297 samples, 0.87%)</title><rect x="8.1697%" y="757" width="0.8691%" height="15" fill="rgb(250,156,29)" fg:x="2792" fg:w="297"/><text x="8.4197%" y="767.50"></text></g><g><title>__vfs_read (306 samples, 0.90%)</title><rect x="8.1492%" y="805" width="0.8954%" height="15" fill="rgb(216,193,19)" fg:x="2785" fg:w="306"/><text x="8.3992%" y="815.50"></text></g><g><title>new_sync_read (304 samples, 0.89%)</title><rect x="8.1551%" y="789" width="0.8895%" height="15" fill="rgb(216,135,14)" fg:x="2787" fg:w="304"/><text x="8.4051%" y="799.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,942 samples, 5.68%)</title><rect x="3.3709%" y="1029" width="5.6825%" height="15" fill="rgb(241,47,5)" fg:x="1152" fg:w="1942"/><text x="3.6209%" y="1039.50">redb::t..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (1,186 samples, 3.47%)</title><rect x="5.5830%" y="1013" width="3.4704%" height="15" fill="rgb(233,42,35)" fg:x="1908" fg:w="1186"/><text x="5.8330%" y="1023.50">red..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (1,183 samples, 3.46%)</title><rect x="5.5918%" y="997" width="3.4616%" height="15" fill="rgb(231,13,6)" fg:x="1911" fg:w="1183"/><text x="5.8418%" y="1007.50">red..</text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (455 samples, 1.33%)</title><rect x="7.7220%" y="981" width="1.3314%" height="15" fill="rgb(207,181,40)" fg:x="2639" fg:w="455"/><text x="7.9720%" y="991.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (382 samples, 1.12%)</title><rect x="7.9356%" y="965" width="1.1178%" height="15" fill="rgb(254,173,49)" fg:x="2712" fg:w="382"/><text x="8.1856%" y="975.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (376 samples, 1.10%)</title><rect x="7.9532%" y="949" width="1.1002%" height="15" fill="rgb(221,1,38)" fg:x="2718" fg:w="376"/><text x="8.2032%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::read_at (375 samples, 1.10%)</title><rect x="7.9561%" y="933" width="1.0973%" height="15" fill="rgb(206,124,46)" fg:x="2719" fg:w="375"/><text x="8.2061%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (375 samples, 1.10%)</title><rect x="7.9561%" y="917" width="1.0973%" height="15" fill="rgb(249,21,11)" fg:x="2719" fg:w="375"/><text x="8.2061%" y="927.50"></text></g><g><title>__libc_pread (374 samples, 1.09%)</title><rect x="7.9590%" y="901" width="1.0944%" height="15" fill="rgb(222,201,40)" fg:x="2720" fg:w="374"/><text x="8.2090%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (327 samples, 0.96%)</title><rect x="8.0966%" y="885" width="0.9568%" height="15" fill="rgb(235,61,29)" fg:x="2767" fg:w="327"/><text x="8.3466%" y="895.50"></text></g><g><title>do_syscall_64 (327 samples, 0.96%)</title><rect x="8.0966%" y="869" width="0.9568%" height="15" fill="rgb(219,207,3)" fg:x="2767" fg:w="327"/><text x="8.3466%" y="879.50"></text></g><g><title>__x64_sys_pread64 (320 samples, 0.94%)</title><rect x="8.1170%" y="853" width="0.9364%" height="15" fill="rgb(222,56,46)" fg:x="2774" fg:w="320"/><text x="8.3670%" y="863.50"></text></g><g><title>ksys_pread64 (320 samples, 0.94%)</title><rect x="8.1170%" y="837" width="0.9364%" height="15" fill="rgb(239,76,54)" fg:x="2774" fg:w="320"/><text x="8.3670%" y="847.50"></text></g><g><title>vfs_read (315 samples, 0.92%)</title><rect x="8.1317%" y="821" width="0.9217%" height="15" fill="rgb(231,124,27)" fg:x="2779" fg:w="315"/><text x="8.3817%" y="831.50"></text></g><g><title>__nss_passwd_lookup (104 samples, 0.30%)</title><rect x="9.1353%" y="1013" width="0.3043%" height="15" fill="rgb(249,195,6)" fg:x="3122" fg:w="104"/><text x="9.3853%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (33 samples, 0.10%)</title><rect x="9.4396%" y="1013" width="0.0966%" height="15" fill="rgb(237,174,47)" fg:x="3226" fg:w="33"/><text x="9.6896%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (189 samples, 0.55%)</title><rect x="9.0534%" y="1029" width="0.5530%" height="15" fill="rgb(206,201,31)" fg:x="3094" fg:w="189"/><text x="9.3034%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (24 samples, 0.07%)</title><rect x="9.5362%" y="1013" width="0.0702%" height="15" fill="rgb(231,57,52)" fg:x="3259" fg:w="24"/><text x="9.7862%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (14 samples, 0.04%)</title><rect x="9.5655%" y="997" width="0.0410%" height="15" fill="rgb(248,177,22)" fg:x="3269" fg:w="14"/><text x="9.8155%" y="1007.50"></text></g><g><title>__libc_malloc (6 samples, 0.02%)</title><rect x="10.4960%" y="997" width="0.0176%" height="15" fill="rgb(215,211,37)" fg:x="3587" fg:w="6"/><text x="10.7460%" y="1007.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.02%)</title><rect x="10.4960%" y="981" width="0.0176%" height="15" fill="rgb(241,128,51)" fg:x="3587" fg:w="6"/><text x="10.7460%" y="991.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.03%)</title><rect x="10.5252%" y="965" width="0.0263%" height="15" fill="rgb(227,165,31)" fg:x="3597" fg:w="9"/><text x="10.7752%" y="975.50"></text></g><g><title>__libc_calloc (12 samples, 0.04%)</title><rect x="10.5223%" y="981" width="0.0351%" height="15" fill="rgb(228,167,24)" fg:x="3596" fg:w="12"/><text x="10.7723%" y="991.50"></text></g><g><title>copy_page_to_iter (5 samples, 0.01%)</title><rect x="10.5691%" y="757" width="0.0146%" height="15" fill="rgb(228,143,12)" fg:x="3612" fg:w="5"/><text x="10.8191%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string (5 samples, 0.01%)</title><rect x="10.5691%" y="741" width="0.0146%" height="15" fill="rgb(249,149,8)" fg:x="3612" fg:w="5"/><text x="10.8191%" y="751.50"></text></g><g><title>pagecache_get_page (9 samples, 0.03%)</title><rect x="10.6013%" y="757" width="0.0263%" height="15" fill="rgb(243,35,44)" fg:x="3623" fg:w="9"/><text x="10.8513%" y="767.50"></text></g><g><title>find_get_entry (9 samples, 0.03%)</title><rect x="10.6013%" y="741" width="0.0263%" height="15" fill="rgb(246,89,9)" fg:x="3623" fg:w="9"/><text x="10.8513%" y="751.50"></text></g><g><title>xas_load (5 samples, 0.01%)</title><rect x="10.6130%" y="725" width="0.0146%" height="15" fill="rgb(233,213,13)" fg:x="3627" fg:w="5"/><text x="10.8630%" y="735.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2,537 samples, 7.42%)</title><rect x="3.2070%" y="1045" width="7.4236%" height="15" fill="rgb(233,141,41)" fg:x="1096" fg:w="2537"/><text x="3.4570%" y="1055.50">redb::tree..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (350 samples, 1.02%)</title><rect x="9.6064%" y="1029" width="1.0241%" height="15" fill="rgb(239,167,4)" fg:x="3283" fg:w="350"/><text x="9.8564%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (348 samples, 1.02%)</title><rect x="9.6123%" y="1013" width="1.0183%" height="15" fill="rgb(209,217,16)" fg:x="3285" fg:w="348"/><text x="9.8623%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (37 samples, 0.11%)</title><rect x="10.5223%" y="997" width="0.1083%" height="15" fill="rgb(219,88,35)" fg:x="3596" fg:w="37"/><text x="10.7723%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (25 samples, 0.07%)</title><rect x="10.5574%" y="981" width="0.0732%" height="15" fill="rgb(220,193,23)" fg:x="3608" fg:w="25"/><text x="10.8074%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (25 samples, 0.07%)</title><rect x="10.5574%" y="965" width="0.0732%" height="15" fill="rgb(230,90,52)" fg:x="3608" fg:w="25"/><text x="10.8074%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::read_at (25 samples, 0.07%)</title><rect x="10.5574%" y="949" width="0.0732%" height="15" fill="rgb(252,106,19)" fg:x="3608" fg:w="25"/><text x="10.8074%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (25 samples, 0.07%)</title><rect x="10.5574%" y="933" width="0.0732%" height="15" fill="rgb(206,74,20)" fg:x="3608" fg:w="25"/><text x="10.8074%" y="943.50"></text></g><g><title>__libc_pread (25 samples, 0.07%)</title><rect x="10.5574%" y="917" width="0.0732%" height="15" fill="rgb(230,138,44)" fg:x="3608" fg:w="25"/><text x="10.8074%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.06%)</title><rect x="10.5691%" y="901" width="0.0614%" height="15" fill="rgb(235,182,43)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="911.50"></text></g><g><title>do_syscall_64 (21 samples, 0.06%)</title><rect x="10.5691%" y="885" width="0.0614%" height="15" fill="rgb(242,16,51)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="895.50"></text></g><g><title>__x64_sys_pread64 (21 samples, 0.06%)</title><rect x="10.5691%" y="869" width="0.0614%" height="15" fill="rgb(248,9,4)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="879.50"></text></g><g><title>ksys_pread64 (21 samples, 0.06%)</title><rect x="10.5691%" y="853" width="0.0614%" height="15" fill="rgb(210,31,22)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="863.50"></text></g><g><title>vfs_read (21 samples, 0.06%)</title><rect x="10.5691%" y="837" width="0.0614%" height="15" fill="rgb(239,54,39)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="847.50"></text></g><g><title>__vfs_read (21 samples, 0.06%)</title><rect x="10.5691%" y="821" width="0.0614%" height="15" fill="rgb(230,99,41)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="831.50"></text></g><g><title>new_sync_read (21 samples, 0.06%)</title><rect x="10.5691%" y="805" width="0.0614%" height="15" fill="rgb(253,106,12)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="815.50"></text></g><g><title>ext4_file_read_iter (21 samples, 0.06%)</title><rect x="10.5691%" y="789" width="0.0614%" height="15" fill="rgb(213,46,41)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="799.50"></text></g><g><title>generic_file_read_iter (21 samples, 0.06%)</title><rect x="10.5691%" y="773" width="0.0614%" height="15" fill="rgb(215,133,35)" fg:x="3612" fg:w="21"/><text x="10.8191%" y="783.50"></text></g><g><title>__nss_passwd_lookup (31 samples, 0.09%)</title><rect x="10.6832%" y="1029" width="0.0907%" height="15" fill="rgb(213,28,5)" fg:x="3651" fg:w="31"/><text x="10.9332%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (13 samples, 0.04%)</title><rect x="10.7740%" y="1029" width="0.0380%" height="15" fill="rgb(215,77,49)" fg:x="3682" fg:w="13"/><text x="11.0240%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.01%)</title><rect x="10.8413%" y="1013" width="0.0117%" height="15" fill="rgb(248,100,22)" fg:x="3705" fg:w="4"/><text x="11.0913%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (27 samples, 0.08%)</title><rect x="10.8120%" y="1029" width="0.0790%" height="15" fill="rgb(208,67,9)" fg:x="3695" fg:w="27"/><text x="11.0620%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (13 samples, 0.04%)</title><rect x="10.8530%" y="1013" width="0.0380%" height="15" fill="rgb(219,133,21)" fg:x="3709" fg:w="13"/><text x="11.1030%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (90 samples, 0.26%)</title><rect x="10.6306%" y="1045" width="0.2634%" height="15" fill="rgb(246,46,29)" fg:x="3633" fg:w="90"/><text x="10.8806%" y="1055.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2,768 samples, 8.10%)</title><rect x="3.1602%" y="1061" width="8.0995%" height="15" fill="rgb(246,185,52)" fg:x="1080" fg:w="2768"/><text x="3.4102%" y="1071.50">redb::tree_..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (125 samples, 0.37%)</title><rect x="10.8939%" y="1045" width="0.3658%" height="15" fill="rgb(252,136,11)" fg:x="3723" fg:w="125"/><text x="11.1439%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (123 samples, 0.36%)</title><rect x="10.8998%" y="1029" width="0.3599%" height="15" fill="rgb(219,138,53)" fg:x="3725" fg:w="123"/><text x="11.1498%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (7 samples, 0.02%)</title><rect x="11.2831%" y="1045" width="0.0205%" height="15" fill="rgb(211,51,23)" fg:x="3856" fg:w="7"/><text x="11.5331%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.01%)</title><rect x="11.3036%" y="1029" width="0.0117%" height="15" fill="rgb(247,221,28)" fg:x="3863" fg:w="4"/><text x="11.5536%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (22 samples, 0.06%)</title><rect x="11.2597%" y="1061" width="0.0644%" height="15" fill="rgb(251,222,45)" fg:x="3848" fg:w="22"/><text x="11.5097%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (7 samples, 0.02%)</title><rect x="11.3036%" y="1045" width="0.0205%" height="15" fill="rgb(217,162,53)" fg:x="3863" fg:w="7"/><text x="11.5536%" y="1055.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2,836 samples, 8.30%)</title><rect x="3.1368%" y="1077" width="8.2985%" height="15" fill="rgb(229,93,14)" fg:x="1072" fg:w="2836"/><text x="3.3868%" y="1087.50">redb::tree_s..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (38 samples, 0.11%)</title><rect x="11.3241%" y="1061" width="0.1112%" height="15" fill="rgb(209,67,49)" fg:x="3870" fg:w="38"/><text x="11.5741%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (37 samples, 0.11%)</title><rect x="11.3270%" y="1045" width="0.1083%" height="15" fill="rgb(213,87,29)" fg:x="3871" fg:w="37"/><text x="11.5770%" y="1055.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (8 samples, 0.02%)</title><rect x="11.4353%" y="1077" width="0.0234%" height="15" fill="rgb(205,151,52)" fg:x="3908" fg:w="8"/><text x="11.6853%" y="1087.50"></text></g><g><title>&lt;redb::table::Table&lt;K,V&gt; as redb::table::ReadableTable&lt;K,V&gt;&gt;::get (2,896 samples, 8.47%)</title><rect x="3.0695%" y="1093" width="8.4740%" height="15" fill="rgb(253,215,39)" fg:x="1049" fg:w="2896"/><text x="3.3195%" y="1103.50">&lt;redb::table..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (29 samples, 0.08%)</title><rect x="11.4587%" y="1077" width="0.0849%" height="15" fill="rgb(221,220,41)" fg:x="3916" fg:w="29"/><text x="11.7087%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (28 samples, 0.08%)</title><rect x="11.4616%" y="1061" width="0.0819%" height="15" fill="rgb(218,133,21)" fg:x="3917" fg:w="28"/><text x="11.7116%" y="1071.50"></text></g><g><title>cfree (56 samples, 0.16%)</title><rect x="11.5465%" y="1093" width="0.1639%" height="15" fill="rgb(221,193,43)" fg:x="3946" fg:w="56"/><text x="11.7965%" y="1103.50"></text></g><g><title>_IO_str_seekoff (56 samples, 0.16%)</title><rect x="11.5465%" y="1077" width="0.1639%" height="15" fill="rgb(240,128,52)" fg:x="3946" fg:w="56"/><text x="11.7965%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.04%)</title><rect x="11.7103%" y="1093" width="0.0439%" height="15" fill="rgb(253,114,12)" fg:x="4002" fg:w="15"/><text x="11.9603%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="11.7279%" y="1077" width="0.0263%" height="15" fill="rgb(215,223,47)" fg:x="4008" fg:w="9"/><text x="11.9779%" y="1087.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.02%)</title><rect x="11.9473%" y="1045" width="0.0176%" height="15" fill="rgb(248,225,23)" fg:x="4083" fg:w="6"/><text x="12.1973%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;ord::index::updater::BlockData&gt; (73 samples, 0.21%)</title><rect x="11.7542%" y="1093" width="0.2136%" height="15" fill="rgb(250,108,0)" fg:x="4017" fg:w="73"/><text x="12.0042%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (70 samples, 0.20%)</title><rect x="11.7630%" y="1077" width="0.2048%" height="15" fill="rgb(228,208,7)" fg:x="4020" fg:w="70"/><text x="12.0130%" y="1087.50"></text></g><g><title>cfree (59 samples, 0.17%)</title><rect x="11.7952%" y="1061" width="0.1726%" height="15" fill="rgb(244,45,10)" fg:x="4031" fg:w="59"/><text x="12.0452%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_base::EitherPage&gt; (5 samples, 0.01%)</title><rect x="11.9707%" y="1093" width="0.0146%" height="15" fill="rgb(207,125,25)" fg:x="4091" fg:w="5"/><text x="12.2207%" y="1103.50"></text></g><g><title>clear_page_dirty_for_io (8 samples, 0.02%)</title><rect x="12.0644%" y="709" width="0.0234%" height="15" fill="rgb(210,195,18)" fg:x="4123" fg:w="8"/><text x="12.3144%" y="719.50"></text></g><g><title>__lock_text_start (9 samples, 0.03%)</title><rect x="12.1463%" y="677" width="0.0263%" height="15" fill="rgb(249,80,12)" fg:x="4151" fg:w="9"/><text x="12.3963%" y="687.50"></text></g><g><title>__test_set_page_writeback (15 samples, 0.04%)</title><rect x="12.1317%" y="693" width="0.0439%" height="15" fill="rgb(221,65,9)" fg:x="4146" fg:w="15"/><text x="12.3817%" y="703.50"></text></g><g><title>kmem_cache_alloc (8 samples, 0.02%)</title><rect x="12.2078%" y="629" width="0.0234%" height="15" fill="rgb(235,49,36)" fg:x="4172" fg:w="8"/><text x="12.4578%" y="639.50"></text></g><g><title>__slab_alloc (7 samples, 0.02%)</title><rect x="12.2107%" y="613" width="0.0205%" height="15" fill="rgb(225,32,20)" fg:x="4173" fg:w="7"/><text x="12.4607%" y="623.50"></text></g><g><title>bvec_alloc (22 samples, 0.06%)</title><rect x="12.1902%" y="677" width="0.0644%" height="15" fill="rgb(215,141,46)" fg:x="4166" fg:w="22"/><text x="12.4402%" y="687.50"></text></g><g><title>mempool_alloc (22 samples, 0.06%)</title><rect x="12.1902%" y="661" width="0.0644%" height="15" fill="rgb(250,160,47)" fg:x="4166" fg:w="22"/><text x="12.4402%" y="671.50"></text></g><g><title>mempool_alloc_slab (16 samples, 0.05%)</title><rect x="12.2078%" y="645" width="0.0468%" height="15" fill="rgb(216,222,40)" fg:x="4172" fg:w="16"/><text x="12.4578%" y="655.50"></text></g><g><title>memset_erms (8 samples, 0.02%)</title><rect x="12.2312%" y="629" width="0.0234%" height="15" fill="rgb(234,217,39)" fg:x="4180" fg:w="8"/><text x="12.4812%" y="639.50"></text></g><g><title>bio_alloc_bioset (31 samples, 0.09%)</title><rect x="12.1814%" y="693" width="0.0907%" height="15" fill="rgb(207,178,40)" fg:x="4163" fg:w="31"/><text x="12.4314%" y="703.50"></text></g><g><title>mempool_alloc (6 samples, 0.02%)</title><rect x="12.2546%" y="677" width="0.0176%" height="15" fill="rgb(221,136,13)" fg:x="4188" fg:w="6"/><text x="12.5046%" y="687.50"></text></g><g><title>bio_associate_blkg (4 samples, 0.01%)</title><rect x="12.2721%" y="693" width="0.0117%" height="15" fill="rgb(249,199,10)" fg:x="4194" fg:w="4"/><text x="12.5221%" y="703.50"></text></g><g><title>io_schedule_prepare (7 samples, 0.02%)</title><rect x="12.3248%" y="565" width="0.0205%" height="15" fill="rgb(249,222,13)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="575.50"></text></g><g><title>blk_flush_plug_list (7 samples, 0.02%)</title><rect x="12.3248%" y="549" width="0.0205%" height="15" fill="rgb(244,185,38)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="559.50"></text></g><g><title>blk_mq_flush_plug_list (7 samples, 0.02%)</title><rect x="12.3248%" y="533" width="0.0205%" height="15" fill="rgb(236,202,9)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="543.50"></text></g><g><title>blk_mq_sched_insert_requests (7 samples, 0.02%)</title><rect x="12.3248%" y="517" width="0.0205%" height="15" fill="rgb(250,229,37)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="527.50"></text></g><g><title>blk_mq_run_hw_queue (7 samples, 0.02%)</title><rect x="12.3248%" y="501" width="0.0205%" height="15" fill="rgb(206,174,23)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="511.50"></text></g><g><title>__blk_mq_delay_run_hw_queue (7 samples, 0.02%)</title><rect x="12.3248%" y="485" width="0.0205%" height="15" fill="rgb(211,33,43)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="495.50"></text></g><g><title>kblockd_mod_delayed_work_on (7 samples, 0.02%)</title><rect x="12.3248%" y="469" width="0.0205%" height="15" fill="rgb(245,58,50)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="479.50"></text></g><g><title>mod_delayed_work_on (7 samples, 0.02%)</title><rect x="12.3248%" y="453" width="0.0205%" height="15" fill="rgb(244,68,36)" fg:x="4212" fg:w="7"/><text x="12.5748%" y="463.50"></text></g><g><title>io_schedule (14 samples, 0.04%)</title><rect x="12.3248%" y="581" width="0.0410%" height="15" fill="rgb(232,229,15)" fg:x="4212" fg:w="14"/><text x="12.5748%" y="591.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="12.3453%" y="565" width="0.0205%" height="15" fill="rgb(254,30,23)" fg:x="4219" fg:w="7"/><text x="12.5953%" y="575.50"></text></g><g><title>__sched_text_start (7 samples, 0.02%)</title><rect x="12.3453%" y="549" width="0.0205%" height="15" fill="rgb(235,160,14)" fg:x="4219" fg:w="7"/><text x="12.5953%" y="559.50"></text></g><g><title>finish_task_switch (7 samples, 0.02%)</title><rect x="12.3453%" y="533" width="0.0205%" height="15" fill="rgb(212,155,44)" fg:x="4219" fg:w="7"/><text x="12.5953%" y="543.50"></text></g><g><title>rq_qos_wait (19 samples, 0.06%)</title><rect x="12.3189%" y="597" width="0.0556%" height="15" fill="rgb(226,2,50)" fg:x="4210" fg:w="19"/><text x="12.5689%" y="607.50"></text></g><g><title>__rq_qos_throttle (21 samples, 0.06%)</title><rect x="12.3160%" y="629" width="0.0614%" height="15" fill="rgb(234,177,6)" fg:x="4209" fg:w="21"/><text x="12.5660%" y="639.50"></text></g><g><title>wbt_wait (20 samples, 0.06%)</title><rect x="12.3189%" y="613" width="0.0585%" height="15" fill="rgb(217,24,9)" fg:x="4210" fg:w="20"/><text x="12.5689%" y="623.50"></text></g><g><title>blk_attempt_plug_merge (10 samples, 0.03%)</title><rect x="12.3833%" y="629" width="0.0293%" height="15" fill="rgb(220,13,46)" fg:x="4232" fg:w="10"/><text x="12.6333%" y="639.50"></text></g><g><title>blk_rq_map_sg (7 samples, 0.02%)</title><rect x="12.4389%" y="517" width="0.0205%" height="15" fill="rgb(239,221,27)" fg:x="4251" fg:w="7"/><text x="12.6889%" y="527.50"></text></g><g><title>blk_flush_plug_list (23 samples, 0.07%)</title><rect x="12.4126%" y="629" width="0.0673%" height="15" fill="rgb(222,198,25)" fg:x="4242" fg:w="23"/><text x="12.6626%" y="639.50"></text></g><g><title>blk_mq_flush_plug_list (23 samples, 0.07%)</title><rect x="12.4126%" y="613" width="0.0673%" height="15" fill="rgb(211,99,13)" fg:x="4242" fg:w="23"/><text x="12.6626%" y="623.50"></text></g><g><title>blk_mq_sched_insert_requests (22 samples, 0.06%)</title><rect x="12.4155%" y="597" width="0.0644%" height="15" fill="rgb(232,111,31)" fg:x="4243" fg:w="22"/><text x="12.6655%" y="607.50"></text></g><g><title>blk_mq_try_issue_list_directly (22 samples, 0.06%)</title><rect x="12.4155%" y="581" width="0.0644%" height="15" fill="rgb(245,82,37)" fg:x="4243" fg:w="22"/><text x="12.6655%" y="591.50"></text></g><g><title>blk_mq_request_issue_directly (20 samples, 0.06%)</title><rect x="12.4214%" y="565" width="0.0585%" height="15" fill="rgb(227,149,46)" fg:x="4245" fg:w="20"/><text x="12.6714%" y="575.50"></text></g><g><title>__blk_mq_try_issue_directly (20 samples, 0.06%)</title><rect x="12.4214%" y="549" width="0.0585%" height="15" fill="rgb(218,36,50)" fg:x="4245" fg:w="20"/><text x="12.6714%" y="559.50"></text></g><g><title>nvme_queue_rq (20 samples, 0.06%)</title><rect x="12.4214%" y="533" width="0.0585%" height="15" fill="rgb(226,80,48)" fg:x="4245" fg:w="20"/><text x="12.6714%" y="543.50"></text></g><g><title>__lock_text_start (8 samples, 0.02%)</title><rect x="12.5033%" y="549" width="0.0234%" height="15" fill="rgb(238,224,15)" fg:x="4273" fg:w="8"/><text x="12.7533%" y="559.50"></text></g><g><title>__sbitmap_get_word (4 samples, 0.01%)</title><rect x="12.5267%" y="549" width="0.0117%" height="15" fill="rgb(241,136,10)" fg:x="4281" fg:w="4"/><text x="12.7767%" y="559.50"></text></g><g><title>blk_mq_get_request (21 samples, 0.06%)</title><rect x="12.4799%" y="629" width="0.0614%" height="15" fill="rgb(208,32,45)" fg:x="4265" fg:w="21"/><text x="12.7299%" y="639.50"></text></g><g><title>blk_mq_get_tag (17 samples, 0.05%)</title><rect x="12.4916%" y="613" width="0.0497%" height="15" fill="rgb(207,135,9)" fg:x="4269" fg:w="17"/><text x="12.7416%" y="623.50"></text></g><g><title>__blk_mq_get_tag (17 samples, 0.05%)</title><rect x="12.4916%" y="597" width="0.0497%" height="15" fill="rgb(206,86,44)" fg:x="4269" fg:w="17"/><text x="12.7416%" y="607.50"></text></g><g><title>__sbitmap_queue_get (17 samples, 0.05%)</title><rect x="12.4916%" y="581" width="0.0497%" height="15" fill="rgb(245,177,15)" fg:x="4269" fg:w="17"/><text x="12.7416%" y="591.50"></text></g><g><title>sbitmap_get (16 samples, 0.05%)</title><rect x="12.4945%" y="565" width="0.0468%" height="15" fill="rgb(206,64,50)" fg:x="4270" fg:w="16"/><text x="12.7445%" y="575.50"></text></g><g><title>blk_rq_merge_ok (4 samples, 0.01%)</title><rect x="12.5472%" y="629" width="0.0117%" height="15" fill="rgb(234,36,40)" fg:x="4288" fg:w="4"/><text x="12.7972%" y="639.50"></text></g><g><title>blk_mq_make_request (92 samples, 0.27%)</title><rect x="12.2985%" y="645" width="0.2692%" height="15" fill="rgb(213,64,8)" fg:x="4203" fg:w="92"/><text x="12.5485%" y="655.50"></text></g><g><title>generic_make_request_checks (4 samples, 0.01%)</title><rect x="12.5677%" y="645" width="0.0117%" height="15" fill="rgb(210,75,36)" fg:x="4295" fg:w="4"/><text x="12.8177%" y="655.50"></text></g><g><title>ktime_get (4 samples, 0.01%)</title><rect x="12.5677%" y="629" width="0.0117%" height="15" fill="rgb(229,88,21)" fg:x="4295" fg:w="4"/><text x="12.8177%" y="639.50"></text></g><g><title>ext4_io_submit (103 samples, 0.30%)</title><rect x="12.2838%" y="693" width="0.3014%" height="15" fill="rgb(252,204,47)" fg:x="4198" fg:w="103"/><text x="12.5338%" y="703.50"></text></g><g><title>submit_bio (101 samples, 0.30%)</title><rect x="12.2897%" y="677" width="0.2955%" height="15" fill="rgb(208,77,27)" fg:x="4200" fg:w="101"/><text x="12.5397%" y="687.50"></text></g><g><title>generic_make_request (101 samples, 0.30%)</title><rect x="12.2897%" y="661" width="0.2955%" height="15" fill="rgb(221,76,26)" fg:x="4200" fg:w="101"/><text x="12.5397%" y="671.50"></text></g><g><title>mpage_process_page_bufs (191 samples, 0.56%)</title><rect x="12.0293%" y="741" width="0.5589%" height="15" fill="rgb(225,139,18)" fg:x="4111" fg:w="191"/><text x="12.2793%" y="751.50"></text></g><g><title>mpage_submit_page (181 samples, 0.53%)</title><rect x="12.0585%" y="725" width="0.5296%" height="15" fill="rgb(230,137,11)" fg:x="4121" fg:w="181"/><text x="12.3085%" y="735.50"></text></g><g><title>ext4_bio_write_page (171 samples, 0.50%)</title><rect x="12.0878%" y="709" width="0.5004%" height="15" fill="rgb(212,28,1)" fg:x="4131" fg:w="171"/><text x="12.3378%" y="719.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::commit (218 samples, 0.64%)</title><rect x="12.0088%" y="1045" width="0.6379%" height="15" fill="rgb(248,164,17)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::flush (218 samples, 0.64%)</title><rect x="12.0088%" y="1029" width="0.6379%" height="15" fill="rgb(222,171,42)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="1039.50"></text></g><g><title>std::fs::File::sync_data (218 samples, 0.64%)</title><rect x="12.0088%" y="1013" width="0.6379%" height="15" fill="rgb(243,84,45)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::datasync (218 samples, 0.64%)</title><rect x="12.0088%" y="997" width="0.6379%" height="15" fill="rgb(252,49,23)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="1007.50"></text></g><g><title>std::sys::unix::cvt_r (218 samples, 0.64%)</title><rect x="12.0088%" y="981" width="0.6379%" height="15" fill="rgb(215,19,7)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::datasync::_{{closure}} (218 samples, 0.64%)</title><rect x="12.0088%" y="965" width="0.6379%" height="15" fill="rgb(238,81,41)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::datasync::os_datasync (218 samples, 0.64%)</title><rect x="12.0088%" y="949" width="0.6379%" height="15" fill="rgb(210,199,37)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="959.50"></text></g><g><title>fdatasync (218 samples, 0.64%)</title><rect x="12.0088%" y="933" width="0.6379%" height="15" fill="rgb(244,192,49)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (218 samples, 0.64%)</title><rect x="12.0088%" y="917" width="0.6379%" height="15" fill="rgb(226,211,11)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="927.50"></text></g><g><title>do_syscall_64 (218 samples, 0.64%)</title><rect x="12.0088%" y="901" width="0.6379%" height="15" fill="rgb(236,162,54)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="911.50"></text></g><g><title>__x64_sys_fdatasync (218 samples, 0.64%)</title><rect x="12.0088%" y="885" width="0.6379%" height="15" fill="rgb(220,229,9)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="895.50"></text></g><g><title>do_fsync (218 samples, 0.64%)</title><rect x="12.0088%" y="869" width="0.6379%" height="15" fill="rgb(250,87,22)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="879.50"></text></g><g><title>vfs_fsync_range (218 samples, 0.64%)</title><rect x="12.0088%" y="853" width="0.6379%" height="15" fill="rgb(239,43,17)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="863.50"></text></g><g><title>ext4_sync_file (218 samples, 0.64%)</title><rect x="12.0088%" y="837" width="0.6379%" height="15" fill="rgb(231,177,25)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="847.50"></text></g><g><title>file_write_and_wait_range (218 samples, 0.64%)</title><rect x="12.0088%" y="821" width="0.6379%" height="15" fill="rgb(219,179,1)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="831.50"></text></g><g><title>__filemap_fdatawrite_range (218 samples, 0.64%)</title><rect x="12.0088%" y="805" width="0.6379%" height="15" fill="rgb(238,219,53)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="815.50"></text></g><g><title>do_writepages (218 samples, 0.64%)</title><rect x="12.0088%" y="789" width="0.6379%" height="15" fill="rgb(232,167,36)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="799.50"></text></g><g><title>ext4_writepages (218 samples, 0.64%)</title><rect x="12.0088%" y="773" width="0.6379%" height="15" fill="rgb(244,19,51)" fg:x="4104" fg:w="218"/><text x="12.2588%" y="783.50"></text></g><g><title>mpage_prepare_extent_to_map (216 samples, 0.63%)</title><rect x="12.0146%" y="757" width="0.6320%" height="15" fill="rgb(224,6,22)" fg:x="4106" fg:w="216"/><text x="12.2646%" y="767.50"></text></g><g><title>pagevec_lookup_range_tag (20 samples, 0.06%)</title><rect x="12.5881%" y="741" width="0.0585%" height="15" fill="rgb(224,145,5)" fg:x="4302" fg:w="20"/><text x="12.8381%" y="751.50"></text></g><g><title>find_get_pages_range_tag (19 samples, 0.06%)</title><rect x="12.5911%" y="725" width="0.0556%" height="15" fill="rgb(234,130,49)" fg:x="4303" fg:w="19"/><text x="12.8411%" y="735.50"></text></g><g><title>ord::index::updater::Updater::commit (221 samples, 0.65%)</title><rect x="12.0029%" y="1093" width="0.6467%" height="15" fill="rgb(254,6,2)" fg:x="4102" fg:w="221"/><text x="12.2529%" y="1103.50"></text></g><g><title>redb::transactions::WriteTransaction::commit (219 samples, 0.64%)</title><rect x="12.0088%" y="1077" width="0.6408%" height="15" fill="rgb(208,96,46)" fg:x="4104" fg:w="219"/><text x="12.2588%" y="1087.50"></text></g><g><title>redb::transactions::WriteTransaction::durable_commit (219 samples, 0.64%)</title><rect x="12.0088%" y="1061" width="0.6408%" height="15" fill="rgb(239,3,39)" fg:x="4104" fg:w="219"/><text x="12.2588%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.04%)</title><rect x="12.7813%" y="1077" width="0.0380%" height="15" fill="rgb(233,210,1)" fg:x="4368" fg:w="13"/><text x="13.0313%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="12.7901%" y="1061" width="0.0293%" height="15" fill="rgb(244,137,37)" fg:x="4371" fg:w="10"/><text x="13.0401%" y="1071.50"></text></g><g><title>__libc_malloc (9 samples, 0.03%)</title><rect x="12.7930%" y="1045" width="0.0263%" height="15" fill="rgb(240,136,2)" fg:x="4372" fg:w="9"/><text x="13.0430%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (117 samples, 0.34%)</title><rect x="12.8252%" y="1061" width="0.3424%" height="15" fill="rgb(239,18,37)" fg:x="4383" fg:w="117"/><text x="13.0752%" y="1071.50"></text></g><g><title>_IO_str_seekoff (58 samples, 0.17%)</title><rect x="13.3811%" y="997" width="0.1697%" height="15" fill="rgb(218,185,22)" fg:x="4573" fg:w="58"/><text x="13.6311%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (251 samples, 0.73%)</title><rect x="12.8193%" y="1077" width="0.7345%" height="15" fill="rgb(225,218,4)" fg:x="4381" fg:w="251"/><text x="13.0693%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (132 samples, 0.39%)</title><rect x="13.1675%" y="1061" width="0.3862%" height="15" fill="rgb(230,182,32)" fg:x="4500" fg:w="132"/><text x="13.4175%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 samples, 0.37%)</title><rect x="13.1792%" y="1045" width="0.3745%" height="15" fill="rgb(242,56,43)" fg:x="4504" fg:w="128"/><text x="13.4292%" y="1055.50"></text></g><g><title>realloc (121 samples, 0.35%)</title><rect x="13.1997%" y="1029" width="0.3541%" height="15" fill="rgb(233,99,24)" fg:x="4511" fg:w="121"/><text x="13.4497%" y="1039.50"></text></g><g><title>_IO_str_seekoff (65 samples, 0.19%)</title><rect x="13.3636%" y="1013" width="0.1902%" height="15" fill="rgb(234,209,42)" fg:x="4567" fg:w="65"/><text x="13.6136%" y="1023.50"></text></g><g><title>cfree (7 samples, 0.02%)</title><rect x="13.5538%" y="1077" width="0.0205%" height="15" fill="rgb(227,7,12)" fg:x="4632" fg:w="7"/><text x="13.8038%" y="1087.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (71 samples, 0.21%)</title><rect x="13.7293%" y="1061" width="0.2078%" height="15" fill="rgb(245,203,43)" fg:x="4692" fg:w="71"/><text x="13.9793%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (5 samples, 0.01%)</title><rect x="14.0044%" y="1045" width="0.0146%" height="15" fill="rgb(238,205,33)" fg:x="4786" fg:w="5"/><text x="14.2544%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (28 samples, 0.08%)</title><rect x="14.0190%" y="1045" width="0.0819%" height="15" fill="rgb(231,56,7)" fg:x="4791" fg:w="28"/><text x="14.2690%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="14.0219%" y="1029" width="0.0790%" height="15" fill="rgb(244,186,29)" fg:x="4792" fg:w="27"/><text x="14.2719%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (5 samples, 0.01%)</title><rect x="14.1331%" y="1029" width="0.0146%" height="15" fill="rgb(234,111,31)" fg:x="4830" fg:w="5"/><text x="14.3831%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (12 samples, 0.04%)</title><rect x="14.1478%" y="1029" width="0.0351%" height="15" fill="rgb(241,149,10)" fg:x="4835" fg:w="12"/><text x="14.3978%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (35 samples, 0.10%)</title><rect x="14.1010%" y="1045" width="0.1024%" height="15" fill="rgb(249,206,44)" fg:x="4819" fg:w="35"/><text x="14.3510%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (7 samples, 0.02%)</title><rect x="14.1829%" y="1029" width="0.0205%" height="15" fill="rgb(251,153,30)" fg:x="4847" fg:w="7"/><text x="14.4329%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (4 samples, 0.01%)</title><rect x="14.1917%" y="1013" width="0.0117%" height="15" fill="rgb(239,152,38)" fg:x="4850" fg:w="4"/><text x="14.4417%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::get_page_number (4 samples, 0.01%)</title><rect x="14.3087%" y="1029" width="0.0117%" height="15" fill="rgb(249,139,47)" fg:x="4890" fg:w="4"/><text x="14.5587%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.01%)</title><rect x="14.3204%" y="1029" width="0.0117%" height="15" fill="rgb(244,64,35)" fg:x="4894" fg:w="4"/><text x="14.5704%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="14.3409%" y="1029" width="0.0234%" height="15" fill="rgb(216,46,15)" fg:x="4901" fg:w="8"/><text x="14.5909%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (25 samples, 0.07%)</title><rect x="14.3643%" y="1029" width="0.0732%" height="15" fill="rgb(250,74,19)" fg:x="4909" fg:w="25"/><text x="14.6143%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="14.3643%" y="1013" width="0.0732%" height="15" fill="rgb(249,42,33)" fg:x="4909" fg:w="25"/><text x="14.6143%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (37 samples, 0.11%)</title><rect x="14.5311%" y="1013" width="0.1083%" height="15" fill="rgb(242,149,17)" fg:x="4966" fg:w="37"/><text x="14.7811%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (11 samples, 0.03%)</title><rect x="14.6394%" y="1013" width="0.0322%" height="15" fill="rgb(244,29,21)" fg:x="5003" fg:w="11"/><text x="14.8894%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::base::PageNumber::from_le_bytes (4 samples, 0.01%)</title><rect x="14.6598%" y="997" width="0.0117%" height="15" fill="rgb(220,130,37)" fg:x="5010" fg:w="4"/><text x="14.9098%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (100 samples, 0.29%)</title><rect x="14.4375%" y="1029" width="0.2926%" height="15" fill="rgb(211,67,2)" fg:x="4934" fg:w="100"/><text x="14.6875%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (20 samples, 0.06%)</title><rect x="14.6715%" y="1013" width="0.0585%" height="15" fill="rgb(235,68,52)" fg:x="5014" fg:w="20"/><text x="14.9215%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (10 samples, 0.03%)</title><rect x="14.7008%" y="997" width="0.0293%" height="15" fill="rgb(246,142,3)" fg:x="5024" fg:w="10"/><text x="14.9508%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (8 samples, 0.02%)</title><rect x="14.9554%" y="1013" width="0.0234%" height="15" fill="rgb(241,25,7)" fg:x="5111" fg:w="8"/><text x="15.2054%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="14.9817%" y="1013" width="0.0234%" height="15" fill="rgb(242,119,39)" fg:x="5120" fg:w="8"/><text x="15.2317%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (58 samples, 0.17%)</title><rect x="15.0051%" y="1013" width="0.1697%" height="15" fill="rgb(241,98,45)" fg:x="5128" fg:w="58"/><text x="15.2551%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (57 samples, 0.17%)</title><rect x="15.0080%" y="997" width="0.1668%" height="15" fill="rgb(254,28,30)" fg:x="5129" fg:w="57"/><text x="15.2580%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (90 samples, 0.26%)</title><rect x="15.2304%" y="997" width="0.2634%" height="15" fill="rgb(241,142,54)" fg:x="5205" fg:w="90"/><text x="15.4804%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (20 samples, 0.06%)</title><rect x="15.4938%" y="997" width="0.0585%" height="15" fill="rgb(222,85,15)" fg:x="5295" fg:w="20"/><text x="15.7438%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (5 samples, 0.01%)</title><rect x="15.5757%" y="981" width="0.0146%" height="15" fill="rgb(210,85,47)" fg:x="5323" fg:w="5"/><text x="15.8257%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (157 samples, 0.46%)</title><rect x="15.1748%" y="1013" width="0.4594%" height="15" fill="rgb(224,206,25)" fg:x="5186" fg:w="157"/><text x="15.4248%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (28 samples, 0.08%)</title><rect x="15.5523%" y="997" width="0.0819%" height="15" fill="rgb(243,201,19)" fg:x="5315" fg:w="28"/><text x="15.8023%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (15 samples, 0.04%)</title><rect x="15.5903%" y="981" width="0.0439%" height="15" fill="rgb(236,59,4)" fg:x="5328" fg:w="15"/><text x="15.8403%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (23 samples, 0.07%)</title><rect x="16.0585%" y="997" width="0.0673%" height="15" fill="rgb(254,179,45)" fg:x="5488" fg:w="23"/><text x="16.3085%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="16.1258%" y="997" width="0.0146%" height="15" fill="rgb(226,14,10)" fg:x="5511" fg:w="5"/><text x="16.3758%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.03%)</title><rect x="16.1405%" y="997" width="0.0293%" height="15" fill="rgb(244,27,41)" fg:x="5516" fg:w="10"/><text x="16.3905%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (53 samples, 0.16%)</title><rect x="16.1726%" y="997" width="0.1551%" height="15" fill="rgb(235,35,32)" fg:x="5527" fg:w="53"/><text x="16.4226%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (50 samples, 0.15%)</title><rect x="16.1814%" y="981" width="0.1463%" height="15" fill="rgb(218,68,31)" fg:x="5530" fg:w="50"/><text x="16.4314%" y="991.50"></text></g><g><title>__nss_passwd_lookup (167 samples, 0.49%)</title><rect x="16.4009%" y="981" width="0.4887%" height="15" fill="rgb(207,120,37)" fg:x="5605" fg:w="167"/><text x="16.6509%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (31 samples, 0.09%)</title><rect x="16.8895%" y="981" width="0.0907%" height="15" fill="rgb(227,98,0)" fg:x="5772" fg:w="31"/><text x="17.1395%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (8 samples, 0.02%)</title><rect x="17.0007%" y="965" width="0.0234%" height="15" fill="rgb(207,7,3)" fg:x="5810" fg:w="8"/><text x="17.2507%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (261 samples, 0.76%)</title><rect x="16.3277%" y="997" width="0.7637%" height="15" fill="rgb(206,98,19)" fg:x="5580" fg:w="261"/><text x="16.5777%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (38 samples, 0.11%)</title><rect x="16.9802%" y="981" width="0.1112%" height="15" fill="rgb(217,5,26)" fg:x="5803" fg:w="38"/><text x="17.2302%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (23 samples, 0.07%)</title><rect x="17.0241%" y="965" width="0.0673%" height="15" fill="rgb(235,190,38)" fg:x="5818" fg:w="23"/><text x="17.2741%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (35 samples, 0.10%)</title><rect x="17.0914%" y="997" width="0.1024%" height="15" fill="rgb(247,86,24)" fg:x="5841" fg:w="35"/><text x="17.3414%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (8 samples, 0.02%)</title><rect x="17.1939%" y="997" width="0.0234%" height="15" fill="rgb(205,101,16)" fg:x="5876" fg:w="8"/><text x="17.4439%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (5 samples, 0.01%)</title><rect x="17.2026%" y="981" width="0.0146%" height="15" fill="rgb(246,168,33)" fg:x="5879" fg:w="5"/><text x="17.4526%" y="991.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.03%)</title><rect x="17.2202%" y="981" width="0.0263%" height="15" fill="rgb(231,114,1)" fg:x="5885" fg:w="9"/><text x="17.4702%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::RawBranchBuilder::write_nth_key (9 samples, 0.03%)</title><rect x="17.2495%" y="981" width="0.0263%" height="15" fill="rgb(207,184,53)" fg:x="5895" fg:w="9"/><text x="17.4995%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="17.2787%" y="965" width="0.0117%" height="15" fill="rgb(224,95,51)" fg:x="5905" fg:w="4"/><text x="17.5287%" y="975.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="17.3343%" y="949" width="0.0117%" height="15" fill="rgb(212,188,45)" fg:x="5924" fg:w="4"/><text x="17.5843%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.02%)</title><rect x="17.3460%" y="949" width="0.0176%" height="15" fill="rgb(223,154,38)" fg:x="5928" fg:w="6"/><text x="17.5960%" y="959.50"></text></g><g><title>__libc_calloc (6 samples, 0.02%)</title><rect x="17.3460%" y="933" width="0.0176%" height="15" fill="rgb(251,22,52)" fg:x="5928" fg:w="6"/><text x="17.5960%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::build (68 samples, 0.20%)</title><rect x="17.2173%" y="997" width="0.1990%" height="15" fill="rgb(229,209,22)" fg:x="5884" fg:w="68"/><text x="17.4673%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (48 samples, 0.14%)</title><rect x="17.2758%" y="981" width="0.1405%" height="15" fill="rgb(234,138,34)" fg:x="5904" fg:w="48"/><text x="17.5258%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (43 samples, 0.13%)</title><rect x="17.2904%" y="965" width="0.1258%" height="15" fill="rgb(212,95,11)" fg:x="5909" fg:w="43"/><text x="17.5404%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (18 samples, 0.05%)</title><rect x="17.3636%" y="949" width="0.0527%" height="15" fill="rgb(240,179,47)" fg:x="5934" fg:w="18"/><text x="17.6136%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.04%)</title><rect x="17.3782%" y="933" width="0.0380%" height="15" fill="rgb(240,163,11)" fg:x="5939" fg:w="13"/><text x="17.6282%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.02%)</title><rect x="17.3987%" y="917" width="0.0176%" height="15" fill="rgb(236,37,12)" fg:x="5946" fg:w="6"/><text x="17.6487%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::new (12 samples, 0.04%)</title><rect x="17.4192%" y="997" width="0.0351%" height="15" fill="rgb(232,164,16)" fg:x="5953" fg:w="12"/><text x="17.6692%" y="1007.50"></text></g><g><title>__libc_malloc (11 samples, 0.03%)</title><rect x="17.4221%" y="981" width="0.0322%" height="15" fill="rgb(244,205,15)" fg:x="5954" fg:w="11"/><text x="17.6721%" y="991.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.03%)</title><rect x="17.4221%" y="965" width="0.0322%" height="15" fill="rgb(223,117,47)" fg:x="5954" fg:w="11"/><text x="17.6721%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::push_child (6 samples, 0.02%)</title><rect x="17.4543%" y="997" width="0.0176%" height="15" fill="rgb(244,107,35)" fg:x="5965" fg:w="6"/><text x="17.7043%" y="1007.50"></text></g><g><title>&lt;&amp;str as redb::types::RedbValue&gt;::fixed_width (4 samples, 0.01%)</title><rect x="18.0863%" y="981" width="0.0117%" height="15" fill="rgb(205,140,8)" fg:x="6181" fg:w="4"/><text x="18.3363%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (15 samples, 0.04%)</title><rect x="18.1010%" y="981" width="0.0439%" height="15" fill="rgb(228,84,46)" fg:x="6186" fg:w="15"/><text x="18.3510%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="18.1448%" y="981" width="0.0176%" height="15" fill="rgb(254,188,9)" fg:x="6201" fg:w="6"/><text x="18.3948%" y="991.50"></text></g><g><title>__nss_passwd_lookup (114 samples, 0.33%)</title><rect x="18.1624%" y="981" width="0.3336%" height="15" fill="rgb(206,112,54)" fg:x="6207" fg:w="114"/><text x="18.4124%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::EntryAccessor::key (6 samples, 0.02%)</title><rect x="18.5018%" y="981" width="0.0176%" height="15" fill="rgb(216,84,49)" fg:x="6323" fg:w="6"/><text x="18.7518%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::entry (63 samples, 0.18%)</title><rect x="18.5223%" y="981" width="0.1843%" height="15" fill="rgb(214,194,35)" fg:x="6330" fg:w="63"/><text x="18.7723%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (23 samples, 0.07%)</title><rect x="18.6394%" y="965" width="0.0673%" height="15" fill="rgb(249,28,3)" fg:x="6370" fg:w="23"/><text x="18.8894%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (11 samples, 0.03%)</title><rect x="18.7067%" y="981" width="0.0322%" height="15" fill="rgb(222,56,52)" fg:x="6393" fg:w="11"/><text x="18.9567%" y="991.50"></text></g><g><title>cfree (10 samples, 0.03%)</title><rect x="18.7886%" y="965" width="0.0293%" height="15" fill="rgb(245,217,50)" fg:x="6421" fg:w="10"/><text x="19.0386%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (153 samples, 0.45%)</title><rect x="18.8178%" y="965" width="0.4477%" height="15" fill="rgb(213,201,24)" fg:x="6431" fg:w="153"/><text x="19.0678%" y="975.50"></text></g><g><title>__nss_passwd_lookup (92 samples, 0.27%)</title><rect x="18.9963%" y="949" width="0.2692%" height="15" fill="rgb(248,116,28)" fg:x="6492" fg:w="92"/><text x="19.2463%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.09%)</title><rect x="19.3680%" y="949" width="0.0878%" height="15" fill="rgb(219,72,43)" fg:x="6619" fg:w="30"/><text x="19.6180%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="19.4440%" y="933" width="0.0117%" height="15" fill="rgb(209,138,14)" fg:x="6645" fg:w="4"/><text x="19.6940%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="19.4440%" y="917" width="0.0117%" height="15" fill="rgb(222,18,33)" fg:x="6645" fg:w="4"/><text x="19.6940%" y="927.50"></text></g><g><title>__libc_malloc (23 samples, 0.07%)</title><rect x="19.8157%" y="933" width="0.0673%" height="15" fill="rgb(213,199,7)" fg:x="6772" fg:w="23"/><text x="20.0657%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (14 samples, 0.04%)</title><rect x="19.8859%" y="933" width="0.0410%" height="15" fill="rgb(250,110,10)" fg:x="6796" fg:w="14"/><text x="20.1359%" y="943.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (193 samples, 0.56%)</title><rect x="19.4557%" y="949" width="0.5647%" height="15" fill="rgb(248,123,6)" fg:x="6649" fg:w="193"/><text x="19.7057%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.09%)</title><rect x="19.9268%" y="933" width="0.0936%" height="15" fill="rgb(206,91,31)" fg:x="6810" fg:w="32"/><text x="20.1768%" y="943.50"></text></g><g><title>__libc_calloc (32 samples, 0.09%)</title><rect x="19.9268%" y="917" width="0.0936%" height="15" fill="rgb(211,154,13)" fg:x="6810" fg:w="32"/><text x="20.1768%" y="927.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.03%)</title><rect x="19.9941%" y="901" width="0.0263%" height="15" fill="rgb(225,148,7)" fg:x="6833" fg:w="9"/><text x="20.2441%" y="911.50"></text></g><g><title>redb::tree_store::page_store::bitmap::BtreeBitmap::find_first_unset (13 samples, 0.04%)</title><rect x="20.0527%" y="917" width="0.0380%" height="15" fill="rgb(220,160,43)" fg:x="6853" fg:w="13"/><text x="20.3027%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (464 samples, 1.36%)</title><rect x="18.7476%" y="981" width="1.3577%" height="15" fill="rgb(213,52,39)" fg:x="6407" fg:w="464"/><text x="18.9976%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (287 samples, 0.84%)</title><rect x="19.2655%" y="965" width="0.8398%" height="15" fill="rgb(243,137,7)" fg:x="6584" fg:w="287"/><text x="19.5155%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (29 samples, 0.08%)</title><rect x="20.0205%" y="949" width="0.0849%" height="15" fill="rgb(230,79,13)" fg:x="6842" fg:w="29"/><text x="20.2705%" y="959.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (25 samples, 0.07%)</title><rect x="20.0322%" y="933" width="0.0732%" height="15" fill="rgb(247,105,23)" fg:x="6846" fg:w="25"/><text x="20.2822%" y="943.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (4 samples, 0.01%)</title><rect x="20.0936%" y="917" width="0.0117%" height="15" fill="rgb(223,179,41)" fg:x="6867" fg:w="4"/><text x="20.3436%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (20 samples, 0.06%)</title><rect x="20.1170%" y="965" width="0.0585%" height="15" fill="rgb(218,9,34)" fg:x="6875" fg:w="20"/><text x="20.3670%" y="975.50"></text></g><g><title>__nss_passwd_lookup (11 samples, 0.03%)</title><rect x="20.1434%" y="949" width="0.0322%" height="15" fill="rgb(222,106,8)" fg:x="6884" fg:w="11"/><text x="20.3934%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (38 samples, 0.11%)</title><rect x="20.1053%" y="981" width="0.1112%" height="15" fill="rgb(211,220,0)" fg:x="6871" fg:w="38"/><text x="20.3553%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (14 samples, 0.04%)</title><rect x="20.1756%" y="965" width="0.0410%" height="15" fill="rgb(229,52,16)" fg:x="6895" fg:w="14"/><text x="20.4256%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="20.2019%" y="949" width="0.0146%" height="15" fill="rgb(212,155,18)" fg:x="6904" fg:w="5"/><text x="20.4519%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::new (58 samples, 0.17%)</title><rect x="20.2165%" y="981" width="0.1697%" height="15" fill="rgb(242,21,14)" fg:x="6909" fg:w="58"/><text x="20.4665%" y="991.50"></text></g><g><title>__libc_malloc (54 samples, 0.16%)</title><rect x="20.2282%" y="965" width="0.1580%" height="15" fill="rgb(222,19,48)" fg:x="6913" fg:w="54"/><text x="20.4782%" y="975.50"></text></g><g><title>_IO_str_seekoff (49 samples, 0.14%)</title><rect x="20.2429%" y="949" width="0.1434%" height="15" fill="rgb(232,45,27)" fg:x="6918" fg:w="49"/><text x="20.4929%" y="959.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.02%)</title><rect x="20.3658%" y="933" width="0.0205%" height="15" fill="rgb(249,103,42)" fg:x="6960" fg:w="7"/><text x="20.6158%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::push (17 samples, 0.05%)</title><rect x="20.3862%" y="981" width="0.0497%" height="15" fill="rgb(246,81,33)" fg:x="6967" fg:w="17"/><text x="20.6362%" y="991.50"></text></g><g><title>__nss_passwd_lookup (128 samples, 0.37%)</title><rect x="20.4974%" y="965" width="0.3745%" height="15" fill="rgb(252,33,42)" fg:x="7005" fg:w="128"/><text x="20.7474%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::insert (205 samples, 0.60%)</title><rect x="20.4389%" y="981" width="0.5999%" height="15" fill="rgb(209,212,41)" fg:x="6985" fg:w="205"/><text x="20.6889%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::update_value_end (53 samples, 0.16%)</title><rect x="20.8837%" y="965" width="0.1551%" height="15" fill="rgb(207,154,6)" fg:x="7137" fg:w="53"/><text x="21.1337%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.01%)</title><rect x="21.0651%" y="965" width="0.0117%" height="15" fill="rgb(223,64,47)" fg:x="7199" fg:w="4"/><text x="21.3151%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (5 samples, 0.01%)</title><rect x="21.0797%" y="949" width="0.0146%" height="15" fill="rgb(211,161,38)" fg:x="7204" fg:w="5"/><text x="21.3297%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (16 samples, 0.05%)</title><rect x="21.0505%" y="981" width="0.0468%" height="15" fill="rgb(219,138,40)" fg:x="7194" fg:w="16"/><text x="21.3005%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (7 samples, 0.02%)</title><rect x="21.0768%" y="965" width="0.0205%" height="15" fill="rgb(241,228,46)" fg:x="7203" fg:w="7"/><text x="21.3268%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (295 samples, 0.86%)</title><rect x="21.0973%" y="981" width="0.8632%" height="15" fill="rgb(223,209,38)" fg:x="7210" fg:w="295"/><text x="21.3473%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (294 samples, 0.86%)</title><rect x="21.1002%" y="965" width="0.8603%" height="15" fill="rgb(236,164,45)" fg:x="7211" fg:w="294"/><text x="21.3502%" y="975.50"></text></g><g><title>cfree (16 samples, 0.05%)</title><rect x="21.9137%" y="949" width="0.0468%" height="15" fill="rgb(231,15,5)" fg:x="7489" fg:w="16"/><text x="22.1637%" y="959.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (1,645 samples, 4.81%)</title><rect x="17.4806%" y="997" width="4.8135%" height="15" fill="rgb(252,35,15)" fg:x="5974" fg:w="1645"/><text x="17.7306%" y="1007.50">redb::..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (114 samples, 0.33%)</title><rect x="21.9605%" y="981" width="0.3336%" height="15" fill="rgb(248,181,18)" fg:x="7505" fg:w="114"/><text x="22.2105%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.03%)</title><rect x="22.2648%" y="965" width="0.0293%" height="15" fill="rgb(233,39,42)" fg:x="7609" fg:w="10"/><text x="22.5148%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.01%)</title><rect x="22.2941%" y="981" width="0.0117%" height="15" fill="rgb(238,110,33)" fg:x="7619" fg:w="4"/><text x="22.5441%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (12 samples, 0.04%)</title><rect x="22.3146%" y="965" width="0.0351%" height="15" fill="rgb(233,195,10)" fg:x="7626" fg:w="12"/><text x="22.5646%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.01%)</title><rect x="22.3380%" y="949" width="0.0117%" height="15" fill="rgb(254,105,3)" fg:x="7634" fg:w="4"/><text x="22.5880%" y="959.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="22.3380%" y="933" width="0.0117%" height="15" fill="rgb(221,225,9)" fg:x="7634" fg:w="4"/><text x="22.5880%" y="943.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (26 samples, 0.08%)</title><rect x="22.2941%" y="997" width="0.0761%" height="15" fill="rgb(224,227,45)" fg:x="7619" fg:w="26"/><text x="22.5441%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (22 samples, 0.06%)</title><rect x="22.3058%" y="981" width="0.0644%" height="15" fill="rgb(229,198,43)" fg:x="7623" fg:w="22"/><text x="22.5558%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::invalidate_cache (7 samples, 0.02%)</title><rect x="22.3497%" y="965" width="0.0205%" height="15" fill="rgb(206,209,35)" fg:x="7638" fg:w="7"/><text x="22.5997%" y="975.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="23.9971%" y="965" width="0.0117%" height="15" fill="rgb(245,195,53)" fg:x="8201" fg:w="4"/><text x="24.2471%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.06%)</title><rect x="24.0146%" y="965" width="0.0556%" height="15" fill="rgb(240,92,26)" fg:x="8207" fg:w="19"/><text x="24.2646%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (12 samples, 0.04%)</title><rect x="24.0351%" y="949" width="0.0351%" height="15" fill="rgb(207,40,23)" fg:x="8214" fg:w="12"/><text x="24.2851%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (10 samples, 0.03%)</title><rect x="24.0410%" y="933" width="0.0293%" height="15" fill="rgb(223,111,35)" fg:x="8216" fg:w="10"/><text x="24.2910%" y="943.50"></text></g><g><title>_IO_str_seekoff (23 samples, 0.07%)</title><rect x="24.0995%" y="933" width="0.0673%" height="15" fill="rgb(229,147,28)" fg:x="8236" fg:w="23"/><text x="24.3495%" y="943.50"></text></g><g><title>_IO_str_seekoff (5 samples, 0.01%)</title><rect x="24.1522%" y="917" width="0.0146%" height="15" fill="rgb(211,29,28)" fg:x="8254" fg:w="5"/><text x="24.4022%" y="927.50"></text></g><g><title>__libc_calloc (35 samples, 0.10%)</title><rect x="24.0790%" y="949" width="0.1024%" height="15" fill="rgb(228,72,33)" fg:x="8229" fg:w="35"/><text x="24.3290%" y="959.50"></text></g><g><title>__nss_passwd_lookup (5 samples, 0.01%)</title><rect x="24.1668%" y="933" width="0.0146%" height="15" fill="rgb(205,214,31)" fg:x="8259" fg:w="5"/><text x="24.4168%" y="943.50"></text></g><g><title>__pthread_enable_asynccancel (32 samples, 0.09%)</title><rect x="24.2341%" y="869" width="0.0936%" height="15" fill="rgb(224,111,15)" fg:x="8282" fg:w="32"/><text x="24.4841%" y="879.50"></text></g><g><title>__fdget (7 samples, 0.02%)</title><rect x="24.3394%" y="805" width="0.0205%" height="15" fill="rgb(253,21,26)" fg:x="8318" fg:w="7"/><text x="24.5894%" y="815.50"></text></g><g><title>__fget_light (7 samples, 0.02%)</title><rect x="24.3394%" y="789" width="0.0205%" height="15" fill="rgb(245,139,43)" fg:x="8318" fg:w="7"/><text x="24.5894%" y="799.50"></text></g><g><title>copy_user_enhanced_fast_string (45 samples, 0.13%)</title><rect x="24.4038%" y="709" width="0.1317%" height="15" fill="rgb(252,170,7)" fg:x="8340" fg:w="45"/><text x="24.6538%" y="719.50"></text></g><g><title>copy_page_to_iter (46 samples, 0.13%)</title><rect x="24.4038%" y="725" width="0.1346%" height="15" fill="rgb(231,118,14)" fg:x="8340" fg:w="46"/><text x="24.6538%" y="735.50"></text></g><g><title>io_schedule (15 samples, 0.04%)</title><rect x="24.5384%" y="725" width="0.0439%" height="15" fill="rgb(238,83,0)" fg:x="8386" fg:w="15"/><text x="24.7884%" y="735.50"></text></g><g><title>schedule (15 samples, 0.04%)</title><rect x="24.5384%" y="709" width="0.0439%" height="15" fill="rgb(221,39,39)" fg:x="8386" fg:w="15"/><text x="24.7884%" y="719.50"></text></g><g><title>__sched_text_start (15 samples, 0.04%)</title><rect x="24.5384%" y="693" width="0.0439%" height="15" fill="rgb(222,119,46)" fg:x="8386" fg:w="15"/><text x="24.7884%" y="703.50"></text></g><g><title>finish_task_switch (15 samples, 0.04%)</title><rect x="24.5384%" y="677" width="0.0439%" height="15" fill="rgb(222,165,49)" fg:x="8386" fg:w="15"/><text x="24.7884%" y="687.50"></text></g><g><title>mark_page_accessed (7 samples, 0.02%)</title><rect x="24.5852%" y="725" width="0.0205%" height="15" fill="rgb(219,113,52)" fg:x="8402" fg:w="7"/><text x="24.8352%" y="735.50"></text></g><g><title>activate_page (4 samples, 0.01%)</title><rect x="24.5940%" y="709" width="0.0117%" height="15" fill="rgb(214,7,15)" fg:x="8405" fg:w="4"/><text x="24.8440%" y="719.50"></text></g><g><title>pagevec_lru_move_fn (4 samples, 0.01%)</title><rect x="24.5940%" y="693" width="0.0117%" height="15" fill="rgb(235,32,4)" fg:x="8405" fg:w="4"/><text x="24.8440%" y="703.50"></text></g><g><title>__lock_text_start (4 samples, 0.01%)</title><rect x="24.5940%" y="677" width="0.0117%" height="15" fill="rgb(238,90,54)" fg:x="8405" fg:w="4"/><text x="24.8440%" y="687.50"></text></g><g><title>__page_cache_alloc (7 samples, 0.02%)</title><rect x="24.6145%" y="677" width="0.0205%" height="15" fill="rgb(213,208,19)" fg:x="8412" fg:w="7"/><text x="24.8645%" y="687.50"></text></g><g><title>alloc_pages_current (7 samples, 0.02%)</title><rect x="24.6145%" y="661" width="0.0205%" height="15" fill="rgb(233,156,4)" fg:x="8412" fg:w="7"/><text x="24.8645%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.02%)</title><rect x="24.6145%" y="645" width="0.0205%" height="15" fill="rgb(207,194,5)" fg:x="8412" fg:w="7"/><text x="24.8645%" y="655.50"></text></g><g><title>get_page_from_freelist (7 samples, 0.02%)</title><rect x="24.6145%" y="629" width="0.0205%" height="15" fill="rgb(206,111,30)" fg:x="8412" fg:w="7"/><text x="24.8645%" y="639.50"></text></g><g><title>blk_finish_plug (4 samples, 0.01%)</title><rect x="24.6379%" y="661" width="0.0117%" height="15" fill="rgb(243,70,54)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="671.50"></text></g><g><title>blk_flush_plug_list (4 samples, 0.01%)</title><rect x="24.6379%" y="645" width="0.0117%" height="15" fill="rgb(242,28,8)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="655.50"></text></g><g><title>blk_mq_flush_plug_list (4 samples, 0.01%)</title><rect x="24.6379%" y="629" width="0.0117%" height="15" fill="rgb(219,106,18)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="639.50"></text></g><g><title>blk_mq_sched_insert_requests (4 samples, 0.01%)</title><rect x="24.6379%" y="613" width="0.0117%" height="15" fill="rgb(244,222,10)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="623.50"></text></g><g><title>blk_mq_try_issue_list_directly (4 samples, 0.01%)</title><rect x="24.6379%" y="597" width="0.0117%" height="15" fill="rgb(236,179,52)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="607.50"></text></g><g><title>blk_mq_request_issue_directly (4 samples, 0.01%)</title><rect x="24.6379%" y="581" width="0.0117%" height="15" fill="rgb(213,23,39)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="591.50"></text></g><g><title>__blk_mq_try_issue_directly (4 samples, 0.01%)</title><rect x="24.6379%" y="565" width="0.0117%" height="15" fill="rgb(238,48,10)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="575.50"></text></g><g><title>nvme_queue_rq (4 samples, 0.01%)</title><rect x="24.6379%" y="549" width="0.0117%" height="15" fill="rgb(251,196,23)" fg:x="8420" fg:w="4"/><text x="24.8879%" y="559.50"></text></g><g><title>__add_to_page_cache_locked (4 samples, 0.01%)</title><rect x="24.6496%" y="613" width="0.0117%" height="15" fill="rgb(250,152,24)" fg:x="8424" fg:w="4"/><text x="24.8996%" y="623.50"></text></g><g><title>add_to_page_cache_lru (8 samples, 0.02%)</title><rect x="24.6496%" y="629" width="0.0234%" height="15" fill="rgb(209,150,17)" fg:x="8424" fg:w="8"/><text x="24.8996%" y="639.50"></text></g><g><title>ext4_es_lookup_extent (4 samples, 0.01%)</title><rect x="24.6876%" y="613" width="0.0117%" height="15" fill="rgb(234,202,34)" fg:x="8437" fg:w="4"/><text x="24.9376%" y="623.50"></text></g><g><title>ext4_map_blocks (9 samples, 0.03%)</title><rect x="24.6789%" y="629" width="0.0263%" height="15" fill="rgb(253,148,53)" fg:x="8434" fg:w="9"/><text x="24.9289%" y="639.50"></text></g><g><title>blk_mq_make_request (7 samples, 0.02%)</title><rect x="24.7052%" y="597" width="0.0205%" height="15" fill="rgb(218,129,16)" fg:x="8443" fg:w="7"/><text x="24.9552%" y="607.50"></text></g><g><title>blk_mq_get_request (6 samples, 0.02%)</title><rect x="24.7081%" y="581" width="0.0176%" height="15" fill="rgb(216,85,19)" fg:x="8444" fg:w="6"/><text x="24.9581%" y="591.50"></text></g><g><title>blk_mq_get_tag (4 samples, 0.01%)</title><rect x="24.7140%" y="565" width="0.0117%" height="15" fill="rgb(235,228,7)" fg:x="8446" fg:w="4"/><text x="24.9640%" y="575.50"></text></g><g><title>generic_make_request (8 samples, 0.02%)</title><rect x="24.7052%" y="613" width="0.0234%" height="15" fill="rgb(245,175,0)" fg:x="8443" fg:w="8"/><text x="24.9552%" y="623.50"></text></g><g><title>psi_memstall_enter (5 samples, 0.01%)</title><rect x="24.7286%" y="613" width="0.0146%" height="15" fill="rgb(208,168,36)" fg:x="8451" fg:w="5"/><text x="24.9786%" y="623.50"></text></g><g><title>read_pages (38 samples, 0.11%)</title><rect x="24.6350%" y="677" width="0.1112%" height="15" fill="rgb(246,171,24)" fg:x="8419" fg:w="38"/><text x="24.8850%" y="687.50"></text></g><g><title>ext4_readpages (33 samples, 0.10%)</title><rect x="24.6496%" y="661" width="0.0966%" height="15" fill="rgb(215,142,24)" fg:x="8424" fg:w="33"/><text x="24.8996%" y="671.50"></text></g><g><title>ext4_mpage_readpages (33 samples, 0.10%)</title><rect x="24.6496%" y="645" width="0.0966%" height="15" fill="rgb(250,187,7)" fg:x="8424" fg:w="33"/><text x="24.8996%" y="655.50"></text></g><g><title>submit_bio (14 samples, 0.04%)</title><rect x="24.7052%" y="629" width="0.0410%" height="15" fill="rgb(228,66,33)" fg:x="8443" fg:w="14"/><text x="24.9552%" y="639.50"></text></g><g><title>__do_page_cache_readahead (46 samples, 0.13%)</title><rect x="24.6145%" y="693" width="0.1346%" height="15" fill="rgb(234,215,21)" fg:x="8412" fg:w="46"/><text x="24.8645%" y="703.50"></text></g><g><title>page_cache_sync_readahead (49 samples, 0.14%)</title><rect x="24.6116%" y="725" width="0.1434%" height="15" fill="rgb(222,191,20)" fg:x="8411" fg:w="49"/><text x="24.8616%" y="735.50"></text></g><g><title>ondemand_readahead (48 samples, 0.14%)</title><rect x="24.6145%" y="709" width="0.1405%" height="15" fill="rgb(245,79,54)" fg:x="8412" fg:w="48"/><text x="24.8645%" y="719.50"></text></g><g><title>pagecache_get_page (79 samples, 0.23%)</title><rect x="24.7549%" y="725" width="0.2312%" height="15" fill="rgb(240,10,37)" fg:x="8460" fg:w="79"/><text x="25.0049%" y="735.50"></text></g><g><title>find_get_entry (78 samples, 0.23%)</title><rect x="24.7579%" y="709" width="0.2282%" height="15" fill="rgb(214,192,32)" fg:x="8461" fg:w="78"/><text x="25.0079%" y="719.50"></text></g><g><title>xas_load (59 samples, 0.17%)</title><rect x="24.8135%" y="693" width="0.1726%" height="15" fill="rgb(209,36,54)" fg:x="8480" fg:w="59"/><text x="25.0635%" y="703.50"></text></g><g><title>__vfs_read (211 samples, 0.62%)</title><rect x="24.3716%" y="789" width="0.6174%" height="15" fill="rgb(220,10,11)" fg:x="8329" fg:w="211"/><text x="24.6216%" y="799.50"></text></g><g><title>new_sync_read (211 samples, 0.62%)</title><rect x="24.3716%" y="773" width="0.6174%" height="15" fill="rgb(221,106,17)" fg:x="8329" fg:w="211"/><text x="24.6216%" y="783.50"></text></g><g><title>ext4_file_read_iter (209 samples, 0.61%)</title><rect x="24.3775%" y="757" width="0.6116%" height="15" fill="rgb(251,142,44)" fg:x="8331" fg:w="209"/><text x="24.6275%" y="767.50"></text></g><g><title>generic_file_read_iter (207 samples, 0.61%)</title><rect x="24.3833%" y="741" width="0.6057%" height="15" fill="rgb(238,13,15)" fg:x="8333" fg:w="207"/><text x="24.6333%" y="751.50"></text></g><g><title>__libc_pread (273 samples, 0.80%)</title><rect x="24.2048%" y="885" width="0.7988%" height="15" fill="rgb(208,107,27)" fg:x="8272" fg:w="273"/><text x="24.4548%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (231 samples, 0.68%)</title><rect x="24.3277%" y="869" width="0.6759%" height="15" fill="rgb(205,136,37)" fg:x="8314" fg:w="231"/><text x="24.5777%" y="879.50"></text></g><g><title>do_syscall_64 (231 samples, 0.68%)</title><rect x="24.3277%" y="853" width="0.6759%" height="15" fill="rgb(250,205,27)" fg:x="8314" fg:w="231"/><text x="24.5777%" y="863.50"></text></g><g><title>__x64_sys_pread64 (227 samples, 0.66%)</title><rect x="24.3394%" y="837" width="0.6642%" height="15" fill="rgb(210,80,43)" fg:x="8318" fg:w="227"/><text x="24.5894%" y="847.50"></text></g><g><title>ksys_pread64 (227 samples, 0.66%)</title><rect x="24.3394%" y="821" width="0.6642%" height="15" fill="rgb(247,160,36)" fg:x="8318" fg:w="227"/><text x="24.5894%" y="831.50"></text></g><g><title>vfs_read (218 samples, 0.64%)</title><rect x="24.3658%" y="805" width="0.6379%" height="15" fill="rgb(234,13,49)" fg:x="8327" fg:w="218"/><text x="24.6158%" y="815.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (319 samples, 0.93%)</title><rect x="24.0732%" y="965" width="0.9334%" height="15" fill="rgb(234,122,0)" fg:x="8227" fg:w="319"/><text x="24.3232%" y="975.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (282 samples, 0.83%)</title><rect x="24.1814%" y="949" width="0.8252%" height="15" fill="rgb(207,146,38)" fg:x="8264" fg:w="282"/><text x="24.4314%" y="959.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (274 samples, 0.80%)</title><rect x="24.2048%" y="933" width="0.8018%" height="15" fill="rgb(207,177,25)" fg:x="8272" fg:w="274"/><text x="24.4548%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::read_at (274 samples, 0.80%)</title><rect x="24.2048%" y="917" width="0.8018%" height="15" fill="rgb(211,178,42)" fg:x="8272" fg:w="274"/><text x="24.4548%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (274 samples, 0.80%)</title><rect x="24.2048%" y="901" width="0.8018%" height="15" fill="rgb(230,69,54)" fg:x="8272" fg:w="274"/><text x="24.4548%" y="911.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (902 samples, 2.64%)</title><rect x="22.3702%" y="997" width="2.6394%" height="15" fill="rgb(214,135,41)" fg:x="7645" fg:w="902"/><text x="22.6202%" y="1007.50">re..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (901 samples, 2.64%)</title><rect x="22.3731%" y="981" width="2.6364%" height="15" fill="rgb(237,67,25)" fg:x="7646" fg:w="901"/><text x="22.6231%" y="991.50">re..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (369 samples, 1.08%)</title><rect x="25.0095%" y="997" width="1.0797%" height="15" fill="rgb(222,189,50)" fg:x="8547" fg:w="369"/><text x="25.2595%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (368 samples, 1.08%)</title><rect x="25.0124%" y="981" width="1.0768%" height="15" fill="rgb(245,148,34)" fg:x="8548" fg:w="368"/><text x="25.2624%" y="991.50"></text></g><g><title>cfree (23 samples, 0.07%)</title><rect x="26.0219%" y="965" width="0.0673%" height="15" fill="rgb(222,29,6)" fg:x="8893" fg:w="23"/><text x="26.2719%" y="975.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3,714 samples, 10.87%)</title><rect x="15.6401%" y="1013" width="10.8676%" height="15" fill="rgb(221,189,43)" fg:x="5345" fg:w="3714"/><text x="15.8901%" y="1023.50">redb::tree_store..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (143 samples, 0.42%)</title><rect x="26.0892%" y="997" width="0.4184%" height="15" fill="rgb(207,36,27)" fg:x="8916" fg:w="143"/><text x="26.3392%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="26.4843%" y="981" width="0.0234%" height="15" fill="rgb(217,90,24)" fg:x="9051" fg:w="8"/><text x="26.7343%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (250 samples, 0.73%)</title><rect x="26.5077%" y="1013" width="0.7315%" height="15" fill="rgb(224,66,35)" fg:x="9059" fg:w="250"/><text x="26.7577%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (249 samples, 0.73%)</title><rect x="26.5106%" y="997" width="0.7286%" height="15" fill="rgb(221,13,50)" fg:x="9060" fg:w="249"/><text x="26.7606%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (12 samples, 0.04%)</title><rect x="27.2041%" y="981" width="0.0351%" height="15" fill="rgb(236,68,49)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="991.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (12 samples, 0.04%)</title><rect x="27.2041%" y="965" width="0.0351%" height="15" fill="rgb(229,146,28)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="975.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (12 samples, 0.04%)</title><rect x="27.2041%" y="949" width="0.0351%" height="15" fill="rgb(225,31,38)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::read_at (12 samples, 0.04%)</title><rect x="27.2041%" y="933" width="0.0351%" height="15" fill="rgb(250,208,3)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (12 samples, 0.04%)</title><rect x="27.2041%" y="917" width="0.0351%" height="15" fill="rgb(246,54,23)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="927.50"></text></g><g><title>__libc_pread (12 samples, 0.04%)</title><rect x="27.2041%" y="901" width="0.0351%" height="15" fill="rgb(243,76,11)" fg:x="9297" fg:w="12"/><text x="27.4541%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="27.2129%" y="885" width="0.0263%" height="15" fill="rgb(245,21,50)" fg:x="9300" fg:w="9"/><text x="27.4629%" y="895.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="27.2129%" y="869" width="0.0263%" height="15" fill="rgb(228,9,43)" fg:x="9300" fg:w="9"/><text x="27.4629%" y="879.50"></text></g><g><title>__x64_sys_pread64 (8 samples, 0.02%)</title><rect x="27.2158%" y="853" width="0.0234%" height="15" fill="rgb(208,100,47)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="863.50"></text></g><g><title>ksys_pread64 (8 samples, 0.02%)</title><rect x="27.2158%" y="837" width="0.0234%" height="15" fill="rgb(232,26,8)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="847.50"></text></g><g><title>vfs_read (8 samples, 0.02%)</title><rect x="27.2158%" y="821" width="0.0234%" height="15" fill="rgb(216,166,38)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="831.50"></text></g><g><title>__vfs_read (8 samples, 0.02%)</title><rect x="27.2158%" y="805" width="0.0234%" height="15" fill="rgb(251,202,51)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="815.50"></text></g><g><title>new_sync_read (8 samples, 0.02%)</title><rect x="27.2158%" y="789" width="0.0234%" height="15" fill="rgb(254,216,34)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="799.50"></text></g><g><title>ext4_file_read_iter (8 samples, 0.02%)</title><rect x="27.2158%" y="773" width="0.0234%" height="15" fill="rgb(251,32,27)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="783.50"></text></g><g><title>generic_file_read_iter (8 samples, 0.02%)</title><rect x="27.2158%" y="757" width="0.0234%" height="15" fill="rgb(208,127,28)" fg:x="9301" fg:w="8"/><text x="27.4658%" y="767.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (231 samples, 0.68%)</title><rect x="27.2392%" y="1013" width="0.6759%" height="15" fill="rgb(224,137,22)" fg:x="9309" fg:w="231"/><text x="27.4892%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (230 samples, 0.67%)</title><rect x="27.2421%" y="997" width="0.6730%" height="15" fill="rgb(254,70,32)" fg:x="9310" fg:w="230"/><text x="27.4921%" y="1007.50"></text></g><g><title>cfree (19 samples, 0.06%)</title><rect x="27.8595%" y="981" width="0.0556%" height="15" fill="rgb(229,75,37)" fg:x="9521" fg:w="19"/><text x="28.1095%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (93 samples, 0.27%)</title><rect x="27.9151%" y="1013" width="0.2721%" height="15" fill="rgb(252,64,23)" fg:x="9540" fg:w="93"/><text x="28.1651%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="28.1522%" y="997" width="0.0351%" height="15" fill="rgb(232,162,48)" fg:x="9621" fg:w="12"/><text x="28.4022%" y="1007.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (4,599 samples, 13.46%)</title><rect x="14.7330%" y="1029" width="13.4572%" height="15" fill="rgb(246,160,12)" fg:x="5035" fg:w="4599"/><text x="14.9830%" y="1039.50">redb::tree_store::bt..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (136 samples, 0.40%)</title><rect x="28.1902%" y="1029" width="0.3980%" height="15" fill="rgb(247,166,0)" fg:x="9634" fg:w="136"/><text x="28.4402%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (135 samples, 0.40%)</title><rect x="28.1931%" y="1013" width="0.3950%" height="15" fill="rgb(249,219,21)" fg:x="9635" fg:w="135"/><text x="28.4431%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (76 samples, 0.22%)</title><rect x="28.5881%" y="1029" width="0.2224%" height="15" fill="rgb(205,209,3)" fg:x="9770" fg:w="76"/><text x="28.8381%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (72 samples, 0.21%)</title><rect x="28.5999%" y="1013" width="0.2107%" height="15" fill="rgb(243,44,1)" fg:x="9774" fg:w="72"/><text x="28.8499%" y="1023.50"></text></g><g><title>cfree (11 samples, 0.03%)</title><rect x="28.7783%" y="997" width="0.0322%" height="15" fill="rgb(206,159,16)" fg:x="9835" fg:w="11"/><text x="29.0283%" y="1007.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (5,026 samples, 14.71%)</title><rect x="14.2092%" y="1045" width="14.7067%" height="15" fill="rgb(244,77,30)" fg:x="4856" fg:w="5026"/><text x="14.4592%" y="1055.50">redb::tree_store::btre..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (36 samples, 0.11%)</title><rect x="28.8105%" y="1029" width="0.1053%" height="15" fill="rgb(218,69,12)" fg:x="9846" fg:w="36"/><text x="29.0605%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="28.8837%" y="1013" width="0.0322%" height="15" fill="rgb(212,87,7)" fg:x="9871" fg:w="11"/><text x="29.1337%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (29 samples, 0.08%)</title><rect x="28.9159%" y="1045" width="0.0849%" height="15" fill="rgb(245,114,25)" fg:x="9882" fg:w="29"/><text x="29.1659%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (27 samples, 0.08%)</title><rect x="28.9217%" y="1029" width="0.0790%" height="15" fill="rgb(210,61,42)" fg:x="9884" fg:w="27"/><text x="29.1717%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (54 samples, 0.16%)</title><rect x="29.0007%" y="1045" width="0.1580%" height="15" fill="rgb(211,52,33)" fg:x="9911" fg:w="54"/><text x="29.2507%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (51 samples, 0.15%)</title><rect x="29.0095%" y="1029" width="0.1492%" height="15" fill="rgb(234,58,33)" fg:x="9914" fg:w="51"/><text x="29.2595%" y="1039.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="29.1470%" y="1013" width="0.0117%" height="15" fill="rgb(220,115,36)" fg:x="9961" fg:w="4"/><text x="29.3970%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (5,237 samples, 15.32%)</title><rect x="13.9371%" y="1061" width="15.3241%" height="15" fill="rgb(243,153,54)" fg:x="4763" fg:w="5237"/><text x="14.1871%" y="1071.50">redb::tree_store::btree..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (35 samples, 0.10%)</title><rect x="29.1587%" y="1045" width="0.1024%" height="15" fill="rgb(251,47,18)" fg:x="9965" fg:w="35"/><text x="29.4087%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="29.2377%" y="1029" width="0.0234%" height="15" fill="rgb(242,102,42)" fg:x="9992" fg:w="8"/><text x="29.4877%" y="1039.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (5,693 samples, 16.66%)</title><rect x="12.6525%" y="1093" width="16.6584%" height="15" fill="rgb(234,31,38)" fg:x="4324" fg:w="5693"/><text x="12.9025%" y="1103.50">ord::index::updater::inscr..</text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (5,378 samples, 15.74%)</title><rect x="13.5743%" y="1077" width="15.7366%" height="15" fill="rgb(221,117,51)" fg:x="4639" fg:w="5378"/><text x="13.8243%" y="1087.50">redb::table::Table&lt;K,V&gt;:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (17 samples, 0.05%)</title><rect x="29.2612%" y="1061" width="0.0497%" height="15" fill="rgb(212,20,18)" fg:x="10000" fg:w="17"/><text x="29.5112%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (17 samples, 0.05%)</title><rect x="29.2612%" y="1045" width="0.0497%" height="15" fill="rgb(245,133,36)" fg:x="10000" fg:w="17"/><text x="29.5112%" y="1055.50"></text></g><g><title>__libc_malloc (120 samples, 0.35%)</title><rect x="29.5040%" y="1077" width="0.3511%" height="15" fill="rgb(212,6,19)" fg:x="10083" fg:w="120"/><text x="29.7540%" y="1087.50"></text></g><g><title>_IO_str_seekoff (91 samples, 0.27%)</title><rect x="29.5889%" y="1061" width="0.2663%" height="15" fill="rgb(218,1,36)" fg:x="10112" fg:w="91"/><text x="29.8389%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (37 samples, 0.11%)</title><rect x="29.8552%" y="1077" width="0.1083%" height="15" fill="rgb(246,84,54)" fg:x="10203" fg:w="37"/><text x="30.1052%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.01%)</title><rect x="29.9693%" y="1077" width="0.0117%" height="15" fill="rgb(242,110,6)" fg:x="10242" fg:w="4"/><text x="30.2193%" y="1087.50"></text></g><g><title>cfree (14 samples, 0.04%)</title><rect x="29.9839%" y="1077" width="0.0410%" height="15" fill="rgb(214,47,5)" fg:x="10247" fg:w="14"/><text x="30.2339%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.04%)</title><rect x="30.0249%" y="1077" width="0.0351%" height="15" fill="rgb(218,159,25)" fg:x="10261" fg:w="12"/><text x="30.2749%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="30.0337%" y="1061" width="0.0263%" height="15" fill="rgb(215,211,28)" fg:x="10264" fg:w="9"/><text x="30.2837%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.08%)</title><rect x="30.1478%" y="1061" width="0.0790%" height="15" fill="rgb(238,59,32)" fg:x="10303" fg:w="27"/><text x="30.3978%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="30.1946%" y="1045" width="0.0322%" height="15" fill="rgb(226,82,3)" fg:x="10319" fg:w="11"/><text x="30.4446%" y="1055.50"></text></g><g><title>__libc_malloc (25 samples, 0.07%)</title><rect x="30.2677%" y="1045" width="0.0732%" height="15" fill="rgb(240,164,32)" fg:x="10344" fg:w="25"/><text x="30.5177%" y="1055.50"></text></g><g><title>_IO_str_seekoff (25 samples, 0.07%)</title><rect x="30.2677%" y="1029" width="0.0732%" height="15" fill="rgb(232,46,7)" fg:x="10344" fg:w="25"/><text x="30.5177%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (139 samples, 0.41%)</title><rect x="30.0600%" y="1077" width="0.4067%" height="15" fill="rgb(229,129,53)" fg:x="10273" fg:w="139"/><text x="30.3100%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (82 samples, 0.24%)</title><rect x="30.2268%" y="1061" width="0.2399%" height="15" fill="rgb(234,188,29)" fg:x="10330" fg:w="82"/><text x="30.4768%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (42 samples, 0.12%)</title><rect x="30.3438%" y="1045" width="0.1229%" height="15" fill="rgb(246,141,4)" fg:x="10370" fg:w="42"/><text x="30.5938%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="30.3877%" y="1029" width="0.0790%" height="15" fill="rgb(229,23,39)" fg:x="10385" fg:w="27"/><text x="30.6377%" y="1039.50"></text></g><g><title>&lt;redb::multimap_table::MultimapRange&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="30.5165%" y="1061" width="0.0146%" height="15" fill="rgb(206,12,3)" fg:x="10429" fg:w="5"/><text x="30.7665%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_iters::RangeIterState&gt; (11 samples, 0.03%)</title><rect x="30.5311%" y="1061" width="0.0322%" height="15" fill="rgb(252,226,20)" fg:x="10434" fg:w="11"/><text x="30.7811%" y="1071.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (16 samples, 0.05%)</title><rect x="30.5633%" y="1061" width="0.0468%" height="15" fill="rgb(216,123,35)" fg:x="10445" fg:w="16"/><text x="30.8133%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="30.6950%" y="1029" width="0.0234%" height="15" fill="rgb(212,68,40)" fg:x="10490" fg:w="8"/><text x="30.9450%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_left (22 samples, 0.06%)</title><rect x="30.6715%" y="1045" width="0.0644%" height="15" fill="rgb(254,125,32)" fg:x="10482" fg:w="22"/><text x="30.9215%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (6 samples, 0.02%)</title><rect x="30.7184%" y="1029" width="0.0176%" height="15" fill="rgb(253,97,22)" fg:x="10498" fg:w="6"/><text x="30.9684%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.03%)</title><rect x="30.7710%" y="1029" width="0.0293%" height="15" fill="rgb(241,101,14)" fg:x="10516" fg:w="10"/><text x="31.0210%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (4 samples, 0.01%)</title><rect x="30.8003%" y="1029" width="0.0117%" height="15" fill="rgb(238,103,29)" fg:x="10526" fg:w="4"/><text x="31.0503%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_right (28 samples, 0.08%)</title><rect x="30.7359%" y="1045" width="0.0819%" height="15" fill="rgb(233,195,47)" fg:x="10504" fg:w="28"/><text x="30.9859%" y="1055.50"></text></g><g><title>redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt;::new (213 samples, 0.62%)</title><rect x="30.6101%" y="1061" width="0.6233%" height="15" fill="rgb(246,218,30)" fg:x="10461" fg:w="213"/><text x="30.8601%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (142 samples, 0.42%)</title><rect x="30.8178%" y="1045" width="0.4155%" height="15" fill="rgb(219,145,47)" fg:x="10532" fg:w="142"/><text x="31.0678%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (137 samples, 0.40%)</title><rect x="30.8325%" y="1029" width="0.4009%" height="15" fill="rgb(243,12,26)" fg:x="10537" fg:w="137"/><text x="31.0825%" y="1039.50"></text></g><g><title>ord::index::Index::inscriptions_on_output_ordered (351 samples, 1.03%)</title><rect x="30.4667%" y="1077" width="1.0271%" height="15" fill="rgb(214,87,16)" fg:x="10412" fg:w="351"/><text x="30.7167%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (89 samples, 0.26%)</title><rect x="31.2334%" y="1061" width="0.2604%" height="15" fill="rgb(208,99,42)" fg:x="10674" fg:w="89"/><text x="31.4834%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (88 samples, 0.26%)</title><rect x="31.2363%" y="1045" width="0.2575%" height="15" fill="rgb(253,99,2)" fg:x="10675" fg:w="88"/><text x="31.4863%" y="1055.50"></text></g><g><title>_IO_str_seekoff (28 samples, 0.08%)</title><rect x="31.5582%" y="997" width="0.0819%" height="15" fill="rgb(220,168,23)" fg:x="10785" fg:w="28"/><text x="31.8082%" y="1007.50"></text></g><g><title>__libc_malloc (33 samples, 0.10%)</title><rect x="31.5465%" y="1013" width="0.0966%" height="15" fill="rgb(242,38,24)" fg:x="10781" fg:w="33"/><text x="31.7965%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.11%)</title><rect x="31.5377%" y="1045" width="0.1083%" height="15" fill="rgb(225,182,9)" fg:x="10778" fg:w="37"/><text x="31.7877%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.11%)</title><rect x="31.5406%" y="1029" width="0.1053%" height="15" fill="rgb(243,178,37)" fg:x="10779" fg:w="36"/><text x="31.7906%" y="1039.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (88 samples, 0.26%)</title><rect x="31.5289%" y="1061" width="0.2575%" height="15" fill="rgb(232,139,19)" fg:x="10775" fg:w="88"/><text x="31.7789%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (48 samples, 0.14%)</title><rect x="31.6459%" y="1045" width="0.1405%" height="15" fill="rgb(225,201,24)" fg:x="10815" fg:w="48"/><text x="31.8959%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (41 samples, 0.12%)</title><rect x="31.6664%" y="1029" width="0.1200%" height="15" fill="rgb(221,47,46)" fg:x="10822" fg:w="41"/><text x="31.9164%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="31.8391%" y="1045" width="0.0117%" height="15" fill="rgb(249,23,13)" fg:x="10881" fg:w="4"/><text x="32.0891%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (11 samples, 0.03%)</title><rect x="32.0351%" y="997" width="0.0322%" height="15" fill="rgb(219,9,5)" fg:x="10948" fg:w="11"/><text x="32.2851%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (37 samples, 0.11%)</title><rect x="32.3745%" y="981" width="0.1083%" height="15" fill="rgb(254,171,16)" fg:x="11064" fg:w="37"/><text x="32.6245%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (23 samples, 0.07%)</title><rect x="32.8427%" y="965" width="0.0673%" height="15" fill="rgb(230,171,20)" fg:x="11224" fg:w="23"/><text x="33.0927%" y="975.50"></text></g><g><title>__nss_passwd_lookup (145 samples, 0.42%)</title><rect x="32.9100%" y="965" width="0.4243%" height="15" fill="rgb(210,71,41)" fg:x="11247" fg:w="145"/><text x="33.1600%" y="975.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (311 samples, 0.91%)</title><rect x="32.4828%" y="981" width="0.9100%" height="15" fill="rgb(206,173,20)" fg:x="11101" fg:w="311"/><text x="32.7328%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_range (16 samples, 0.05%)</title><rect x="33.3460%" y="965" width="0.0468%" height="15" fill="rgb(233,88,34)" fg:x="11396" fg:w="16"/><text x="33.5960%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (16 samples, 0.05%)</title><rect x="33.3460%" y="949" width="0.0468%" height="15" fill="rgb(223,209,46)" fg:x="11396" fg:w="16"/><text x="33.5960%" y="959.50"></text></g><g><title>__nss_passwd_lookup (210 samples, 0.61%)</title><rect x="33.4631%" y="965" width="0.6145%" height="15" fill="rgb(250,43,18)" fg:x="11436" fg:w="210"/><text x="33.7131%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (44 samples, 0.13%)</title><rect x="34.0775%" y="965" width="0.1287%" height="15" fill="rgb(208,13,10)" fg:x="11646" fg:w="44"/><text x="34.3275%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (304 samples, 0.89%)</title><rect x="33.3928%" y="981" width="0.8895%" height="15" fill="rgb(212,200,36)" fg:x="11412" fg:w="304"/><text x="33.6428%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (26 samples, 0.08%)</title><rect x="34.2063%" y="965" width="0.0761%" height="15" fill="rgb(225,90,30)" fg:x="11690" fg:w="26"/><text x="34.4563%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (16 samples, 0.05%)</title><rect x="34.2356%" y="949" width="0.0468%" height="15" fill="rgb(236,182,39)" fg:x="11700" fg:w="16"/><text x="34.4856%" y="959.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,448 samples, 4.24%)</title><rect x="32.0673%" y="997" width="4.2370%" height="15" fill="rgb(212,144,35)" fg:x="10959" fg:w="1448"/><text x="32.3173%" y="1007.50">redb:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (691 samples, 2.02%)</title><rect x="34.2824%" y="981" width="2.0219%" height="15" fill="rgb(228,63,44)" fg:x="11716" fg:w="691"/><text x="34.5324%" y="991.50">r..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (688 samples, 2.01%)</title><rect x="34.2911%" y="965" width="2.0132%" height="15" fill="rgb(228,109,6)" fg:x="11719" fg:w="688"/><text x="34.5411%" y="975.50">r..</text></g><g><title>__nss_passwd_lookup (85 samples, 0.25%)</title><rect x="36.4067%" y="981" width="0.2487%" height="15" fill="rgb(238,117,24)" fg:x="12442" fg:w="85"/><text x="36.6567%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (30 samples, 0.09%)</title><rect x="36.6554%" y="981" width="0.0878%" height="15" fill="rgb(242,26,26)" fg:x="12527" fg:w="30"/><text x="36.9054%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (7 samples, 0.02%)</title><rect x="36.7813%" y="965" width="0.0205%" height="15" fill="rgb(221,92,48)" fg:x="12570" fg:w="7"/><text x="37.0313%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (185 samples, 0.54%)</title><rect x="36.3043%" y="997" width="0.5413%" height="15" fill="rgb(209,209,32)" fg:x="12407" fg:w="185"/><text x="36.5543%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (35 samples, 0.10%)</title><rect x="36.7432%" y="981" width="0.1024%" height="15" fill="rgb(221,70,22)" fg:x="12557" fg:w="35"/><text x="36.9932%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (15 samples, 0.04%)</title><rect x="36.8018%" y="965" width="0.0439%" height="15" fill="rgb(248,145,5)" fg:x="12577" fg:w="15"/><text x="37.0518%" y="975.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,954 samples, 5.72%)</title><rect x="31.9327%" y="1013" width="5.7176%" height="15" fill="rgb(226,116,26)" fg:x="10913" fg:w="1954"/><text x="32.1827%" y="1023.50">redb::t..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (275 samples, 0.80%)</title><rect x="36.8456%" y="997" width="0.8047%" height="15" fill="rgb(244,5,17)" fg:x="12592" fg:w="275"/><text x="37.0956%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (272 samples, 0.80%)</title><rect x="36.8544%" y="981" width="0.7959%" height="15" fill="rgb(252,159,33)" fg:x="12595" fg:w="272"/><text x="37.1044%" y="991.50"></text></g><g><title>__nss_passwd_lookup (21 samples, 0.06%)</title><rect x="37.7352%" y="997" width="0.0614%" height="15" fill="rgb(206,71,0)" fg:x="12896" fg:w="21"/><text x="37.9852%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (10 samples, 0.03%)</title><rect x="37.7966%" y="997" width="0.0293%" height="15" fill="rgb(233,118,54)" fg:x="12917" fg:w="10"/><text x="38.0466%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (91 samples, 0.27%)</title><rect x="37.6503%" y="1013" width="0.2663%" height="15" fill="rgb(234,83,48)" fg:x="12867" fg:w="91"/><text x="37.9003%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (31 samples, 0.09%)</title><rect x="37.8259%" y="997" width="0.0907%" height="15" fill="rgb(228,3,54)" fg:x="12927" fg:w="31"/><text x="38.0759%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (15 samples, 0.04%)</title><rect x="37.8727%" y="981" width="0.0439%" height="15" fill="rgb(226,155,13)" fg:x="12943" fg:w="15"/><text x="38.1227%" y="991.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2,187 samples, 6.40%)</title><rect x="31.8713%" y="1029" width="6.3994%" height="15" fill="rgb(241,28,37)" fg:x="10892" fg:w="2187"/><text x="32.1213%" y="1039.50">redb::tr..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (121 samples, 0.35%)</title><rect x="37.9166%" y="1013" width="0.3541%" height="15" fill="rgb(233,93,10)" fg:x="12958" fg:w="121"/><text x="38.1666%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (116 samples, 0.34%)</title><rect x="37.9312%" y="997" width="0.3394%" height="15" fill="rgb(225,113,19)" fg:x="12963" fg:w="116"/><text x="38.1812%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (5 samples, 0.01%)</title><rect x="38.2941%" y="1013" width="0.0146%" height="15" fill="rgb(241,2,18)" fg:x="13087" fg:w="5"/><text x="38.5441%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (23 samples, 0.07%)</title><rect x="38.2707%" y="1029" width="0.0673%" height="15" fill="rgb(228,207,21)" fg:x="13079" fg:w="23"/><text x="38.5207%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (10 samples, 0.03%)</title><rect x="38.3087%" y="1013" width="0.0293%" height="15" fill="rgb(213,211,35)" fg:x="13092" fg:w="10"/><text x="38.5587%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (7 samples, 0.02%)</title><rect x="38.3175%" y="997" width="0.0205%" height="15" fill="rgb(209,83,10)" fg:x="13095" fg:w="7"/><text x="38.5675%" y="1007.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (2,243 samples, 6.56%)</title><rect x="31.8508%" y="1045" width="6.5633%" height="15" fill="rgb(209,164,1)" fg:x="10885" fg:w="2243"/><text x="32.1008%" y="1055.50">redb::tre..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (26 samples, 0.08%)</title><rect x="38.3380%" y="1029" width="0.0761%" height="15" fill="rgb(213,184,43)" fg:x="13102" fg:w="26"/><text x="38.5880%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (24 samples, 0.07%)</title><rect x="38.3438%" y="1013" width="0.0702%" height="15" fill="rgb(231,61,34)" fg:x="13104" fg:w="24"/><text x="38.5938%" y="1023.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (17 samples, 0.05%)</title><rect x="38.4140%" y="1045" width="0.0497%" height="15" fill="rgb(235,75,3)" fg:x="13128" fg:w="17"/><text x="38.6640%" y="1055.50"></text></g><g><title>&lt;redb::table::Table&lt;K,V&gt; as redb::table::ReadableTable&lt;K,V&gt;&gt;::get (2,312 samples, 6.77%)</title><rect x="31.7864%" y="1061" width="6.7652%" height="15" fill="rgb(220,106,47)" fg:x="10863" fg:w="2312"/><text x="32.0364%" y="1071.50">&lt;redb::ta..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (30 samples, 0.09%)</title><rect x="38.4638%" y="1045" width="0.0878%" height="15" fill="rgb(210,196,33)" fg:x="13145" fg:w="30"/><text x="38.7138%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (28 samples, 0.08%)</title><rect x="38.4696%" y="1029" width="0.0819%" height="15" fill="rgb(229,154,42)" fg:x="13147" fg:w="28"/><text x="38.7196%" y="1039.50"></text></g><g><title>ord::index::Index::transaction_output_by_outpoint (2,417 samples, 7.07%)</title><rect x="31.4938%" y="1077" width="7.0724%" height="15" fill="rgb(228,114,26)" fg:x="10763" fg:w="2417"/><text x="31.7438%" y="1087.50">ord::inde..</text></g><g><title>&lt;bitcoin::blockdata::script::instruction::Instructions as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.12%)</title><rect x="38.6072%" y="1061" width="0.1170%" height="15" fill="rgb(208,144,1)" fg:x="13194" fg:w="40"/><text x="38.8572%" y="1071.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (23 samples, 0.07%)</title><rect x="38.6569%" y="1045" width="0.0673%" height="15" fill="rgb(239,112,37)" fg:x="13211" fg:w="23"/><text x="38.9069%" y="1055.50"></text></g><g><title>bitcoin::blockdata::opcodes::Ordinary::with (4 samples, 0.01%)</title><rect x="38.7125%" y="1029" width="0.0117%" height="15" fill="rgb(210,96,50)" fg:x="13230" fg:w="4"/><text x="38.9625%" y="1039.50"></text></g><g><title>__libc_malloc (8 samples, 0.02%)</title><rect x="38.7301%" y="1029" width="0.0234%" height="15" fill="rgb(222,178,2)" fg:x="13236" fg:w="8"/><text x="38.9801%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.03%)</title><rect x="38.7242%" y="1061" width="0.0322%" height="15" fill="rgb(226,74,18)" fg:x="13234" fg:w="11"/><text x="38.9742%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="38.7242%" y="1045" width="0.0322%" height="15" fill="rgb(225,67,54)" fg:x="13234" fg:w="11"/><text x="38.9742%" y="1055.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::tapscript (62 samples, 0.18%)</title><rect x="38.7652%" y="1061" width="0.1814%" height="15" fill="rgb(251,92,32)" fg:x="13248" fg:w="62"/><text x="39.0152%" y="1071.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::nth (51 samples, 0.15%)</title><rect x="38.7974%" y="1045" width="0.1492%" height="15" fill="rgb(228,149,22)" fg:x="13259" fg:w="51"/><text x="39.0474%" y="1055.50"></text></g><g><title>ord::inscription::Inscription::from_transaction (142 samples, 0.42%)</title><rect x="38.5662%" y="1077" width="0.4155%" height="15" fill="rgb(243,54,13)" fg:x="13180" fg:w="142"/><text x="38.8162%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.04%)</title><rect x="38.9466%" y="1061" width="0.0351%" height="15" fill="rgb(243,180,28)" fg:x="13310" fg:w="12"/><text x="39.1966%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.02%)</title><rect x="38.9963%" y="1061" width="0.0205%" height="15" fill="rgb(208,167,24)" fg:x="13327" fg:w="7"/><text x="39.2463%" y="1071.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (3,321 samples, 9.72%)</title><rect x="29.3109%" y="1093" width="9.7176%" height="15" fill="rgb(245,73,45)" fg:x="10017" fg:w="3321"/><text x="29.5609%" y="1103.50">ord::index::up..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (15 samples, 0.04%)</title><rect x="38.9846%" y="1077" width="0.0439%" height="15" fill="rgb(237,203,48)" fg:x="13323" fg:w="15"/><text x="39.2346%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (5 samples, 0.01%)</title><rect x="39.0432%" y="1077" width="0.0146%" height="15" fill="rgb(211,197,16)" fg:x="13343" fg:w="5"/><text x="39.2932%" y="1087.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (6 samples, 0.02%)</title><rect x="39.0432%" y="1093" width="0.0176%" height="15" fill="rgb(243,99,51)" fg:x="13343" fg:w="6"/><text x="39.2932%" y="1103.50"></text></g><g><title>redb::transactions::WriteTransaction::open_table (5 samples, 0.01%)</title><rect x="39.0636%" y="1093" width="0.0146%" height="15" fill="rgb(215,123,29)" fg:x="13350" fg:w="5"/><text x="39.3136%" y="1103.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_or_create_table (5 samples, 0.01%)</title><rect x="39.0636%" y="1077" width="0.0146%" height="15" fill="rgb(239,186,37)" fg:x="13350" fg:w="5"/><text x="39.3136%" y="1087.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table (4 samples, 0.01%)</title><rect x="39.0666%" y="1061" width="0.0117%" height="15" fill="rgb(252,136,39)" fg:x="13351" fg:w="4"/><text x="39.3166%" y="1071.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table_untyped (4 samples, 0.01%)</title><rect x="39.0666%" y="1045" width="0.0117%" height="15" fill="rgb(223,213,32)" fg:x="13351" fg:w="4"/><text x="39.3166%" y="1055.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::waker (4 samples, 0.01%)</title><rect x="39.1309%" y="1061" width="0.0117%" height="15" fill="rgb(233,115,5)" fg:x="13373" fg:w="4"/><text x="39.3809%" y="1071.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (11 samples, 0.03%)</title><rect x="39.1485%" y="1061" width="0.0322%" height="15" fill="rgb(207,226,44)" fg:x="13379" fg:w="11"/><text x="39.3985%" y="1071.50"></text></g><g><title>__libc_malloc (10 samples, 0.03%)</title><rect x="39.1514%" y="1045" width="0.0293%" height="15" fill="rgb(208,126,0)" fg:x="13380" fg:w="10"/><text x="39.4014%" y="1055.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.03%)</title><rect x="39.1514%" y="1029" width="0.0293%" height="15" fill="rgb(244,66,21)" fg:x="13380" fg:w="10"/><text x="39.4014%" y="1039.50"></text></g><g><title>ord::index::Index::update (12,563 samples, 36.76%)</title><rect x="2.4316%" y="1125" width="36.7608%" height="15" fill="rgb(222,97,12)" fg:x="831" fg:w="12563"/><text x="2.6816%" y="1135.50">ord::index::Index::update</text></g><g><title>ord::index::updater::Updater::update_index (12,563 samples, 36.76%)</title><rect x="2.4316%" y="1109" width="36.7608%" height="15" fill="rgb(219,213,19)" fg:x="831" fg:w="12563"/><text x="2.6816%" y="1119.50">ord::index::updater::Updater::update_index</text></g><g><title>tokio::future::block_on::block_on (38 samples, 0.11%)</title><rect x="39.0812%" y="1093" width="0.1112%" height="15" fill="rgb(252,169,30)" fg:x="13356" fg:w="38"/><text x="39.3312%" y="1103.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (36 samples, 0.11%)</title><rect x="39.0871%" y="1077" width="0.1053%" height="15" fill="rgb(206,32,51)" fg:x="13358" fg:w="36"/><text x="39.3371%" y="1087.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (4 samples, 0.01%)</title><rect x="39.1807%" y="1061" width="0.0117%" height="15" fill="rgb(250,172,42)" fg:x="13390" fg:w="4"/><text x="39.4307%" y="1071.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (212 samples, 0.62%)</title><rect x="39.1953%" y="1045" width="0.6203%" height="15" fill="rgb(209,34,43)" fg:x="13395" fg:w="212"/><text x="39.4453%" y="1055.50"></text></g><g><title>jsonrpc::Response::result (248 samples, 0.73%)</title><rect x="39.1953%" y="1077" width="0.7257%" height="15" fill="rgb(223,11,35)" fg:x="13395" fg:w="248"/><text x="39.4453%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (248 samples, 0.73%)</title><rect x="39.1953%" y="1061" width="0.7257%" height="15" fill="rgb(251,219,26)" fg:x="13395" fg:w="248"/><text x="39.4453%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (35 samples, 0.10%)</title><rect x="39.8186%" y="1045" width="0.1024%" height="15" fill="rgb(231,119,3)" fg:x="13608" fg:w="35"/><text x="40.0686%" y="1055.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::end_raw_buffering (24 samples, 0.07%)</title><rect x="39.9327%" y="981" width="0.0702%" height="15" fill="rgb(216,97,11)" fg:x="13647" fg:w="24"/><text x="40.1827%" y="991.50"></text></g><g><title>core::str::converts::from_utf8 (24 samples, 0.07%)</title><rect x="39.9327%" y="965" width="0.0702%" height="15" fill="rgb(223,59,9)" fg:x="13647" fg:w="24"/><text x="40.1827%" y="975.50"></text></g><g><title>core::str::validations::run_utf8_validation (24 samples, 0.07%)</title><rect x="39.9327%" y="949" width="0.0702%" height="15" fill="rgb(233,93,31)" fg:x="13647" fg:w="24"/><text x="40.1827%" y="959.50"></text></g><g><title>skb_release_data (4 samples, 0.01%)</title><rect x="47.6781%" y="693" width="0.0117%" height="15" fill="rgb(239,81,33)" fg:x="16294" fg:w="4"/><text x="47.9281%" y="703.50"></text></g><g><title>__kfree_skb (5 samples, 0.01%)</title><rect x="47.6781%" y="725" width="0.0146%" height="15" fill="rgb(213,120,34)" fg:x="16294" fg:w="5"/><text x="47.9281%" y="735.50"></text></g><g><title>skb_release_all (5 samples, 0.01%)</title><rect x="47.6781%" y="709" width="0.0146%" height="15" fill="rgb(243,49,53)" fg:x="16294" fg:w="5"/><text x="47.9281%" y="719.50"></text></g><g><title>skb_copy_datagram_iter (34 samples, 0.10%)</title><rect x="47.6928%" y="725" width="0.0995%" height="15" fill="rgb(247,216,33)" fg:x="16299" fg:w="34"/><text x="47.9428%" y="735.50"></text></g><g><title>__skb_datagram_iter (34 samples, 0.10%)</title><rect x="47.6928%" y="709" width="0.0995%" height="15" fill="rgb(226,26,14)" fg:x="16299" fg:w="34"/><text x="47.9428%" y="719.50"></text></g><g><title>simple_copy_to_iter (34 samples, 0.10%)</title><rect x="47.6928%" y="693" width="0.0995%" height="15" fill="rgb(215,49,53)" fg:x="16299" fg:w="34"/><text x="47.9428%" y="703.50"></text></g><g><title>_copy_to_iter (31 samples, 0.09%)</title><rect x="47.7015%" y="677" width="0.0907%" height="15" fill="rgb(245,162,40)" fg:x="16302" fg:w="31"/><text x="47.9515%" y="687.50"></text></g><g><title>copy_user_enhanced_fast_string (28 samples, 0.08%)</title><rect x="47.7103%" y="661" width="0.0819%" height="15" fill="rgb(229,68,17)" fg:x="16305" fg:w="28"/><text x="47.9603%" y="671.50"></text></g><g><title>tcp_cleanup_rbuf (5 samples, 0.01%)</title><rect x="47.7922%" y="725" width="0.0146%" height="15" fill="rgb(213,182,10)" fg:x="16333" fg:w="5"/><text x="48.0422%" y="735.50"></text></g><g><title>tcp_send_ack (4 samples, 0.01%)</title><rect x="47.7952%" y="709" width="0.0117%" height="15" fill="rgb(245,125,30)" fg:x="16334" fg:w="4"/><text x="48.0452%" y="719.50"></text></g><g><title>__tcp_send_ack.part.45 (4 samples, 0.01%)</title><rect x="47.7952%" y="693" width="0.0117%" height="15" fill="rgb(232,202,2)" fg:x="16334" fg:w="4"/><text x="48.0452%" y="703.50"></text></g><g><title>sock_recvmsg (49 samples, 0.14%)</title><rect x="47.6723%" y="773" width="0.1434%" height="15" fill="rgb(237,140,51)" fg:x="16292" fg:w="49"/><text x="47.9223%" y="783.50"></text></g><g><title>inet_recvmsg (48 samples, 0.14%)</title><rect x="47.6752%" y="757" width="0.1405%" height="15" fill="rgb(236,157,25)" fg:x="16293" fg:w="48"/><text x="47.9252%" y="767.50"></text></g><g><title>tcp_recvmsg (48 samples, 0.14%)</title><rect x="47.6752%" y="741" width="0.1405%" height="15" fill="rgb(219,209,0)" fg:x="16293" fg:w="48"/><text x="47.9252%" y="751.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (54 samples, 0.16%)</title><rect x="47.6635%" y="917" width="0.1580%" height="15" fill="rgb(240,116,54)" fg:x="16289" fg:w="54"/><text x="47.9135%" y="927.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (53 samples, 0.16%)</title><rect x="47.6664%" y="901" width="0.1551%" height="15" fill="rgb(216,10,36)" fg:x="16290" fg:w="53"/><text x="47.9164%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (53 samples, 0.16%)</title><rect x="47.6664%" y="885" width="0.1551%" height="15" fill="rgb(222,72,44)" fg:x="16290" fg:w="53"/><text x="47.9164%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (53 samples, 0.16%)</title><rect x="47.6664%" y="869" width="0.1551%" height="15" fill="rgb(232,159,9)" fg:x="16290" fg:w="53"/><text x="47.9164%" y="879.50"></text></g><g><title>__libc_recv (53 samples, 0.16%)</title><rect x="47.6664%" y="853" width="0.1551%" height="15" fill="rgb(210,39,32)" fg:x="16290" fg:w="53"/><text x="47.9164%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (51 samples, 0.15%)</title><rect x="47.6723%" y="837" width="0.1492%" height="15" fill="rgb(216,194,45)" fg:x="16292" fg:w="51"/><text x="47.9223%" y="847.50"></text></g><g><title>do_syscall_64 (51 samples, 0.15%)</title><rect x="47.6723%" y="821" width="0.1492%" height="15" fill="rgb(218,18,35)" fg:x="16292" fg:w="51"/><text x="47.9223%" y="831.50"></text></g><g><title>__x64_sys_recvfrom (51 samples, 0.15%)</title><rect x="47.6723%" y="805" width="0.1492%" height="15" fill="rgb(207,83,51)" fg:x="16292" fg:w="51"/><text x="47.9223%" y="815.50"></text></g><g><title>__sys_recvfrom (51 samples, 0.15%)</title><rect x="47.6723%" y="789" width="0.1492%" height="15" fill="rgb(225,63,43)" fg:x="16292" fg:w="51"/><text x="47.9223%" y="799.50"></text></g><g><title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="47.8215%" y="917" width="0.0117%" height="15" fill="rgb(207,57,36)" fg:x="16343" fg:w="4"/><text x="48.0715%" y="927.50"></text></g><g><title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="47.8215%" y="901" width="0.0117%" height="15" fill="rgb(216,99,33)" fg:x="16343" fg:w="4"/><text x="48.0715%" y="911.50"></text></g><g><title>irq_exit (4 samples, 0.01%)</title><rect x="47.8215%" y="885" width="0.0117%" height="15" fill="rgb(225,42,16)" fg:x="16343" fg:w="4"/><text x="48.0715%" y="895.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.01%)</title><rect x="47.8215%" y="869" width="0.0117%" height="15" fill="rgb(220,201,45)" fg:x="16343" fg:w="4"/><text x="48.0715%" y="879.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,254 samples, 3.67%)</title><rect x="44.1668%" y="933" width="3.6693%" height="15" fill="rgb(225,33,4)" fg:x="15094" fg:w="1254"/><text x="44.4168%" y="943.50">&lt;std..</text></g><g><title>_IO_str_seekoff (10 samples, 0.03%)</title><rect x="47.8361%" y="869" width="0.0293%" height="15" fill="rgb(224,33,50)" fg:x="16348" fg:w="10"/><text x="48.0861%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (52 samples, 0.15%)</title><rect x="47.8361%" y="933" width="0.1522%" height="15" fill="rgb(246,198,51)" fg:x="16348" fg:w="52"/><text x="48.0861%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.15%)</title><rect x="47.8361%" y="917" width="0.1522%" height="15" fill="rgb(205,22,4)" fg:x="16348" fg:w="52"/><text x="48.0861%" y="927.50"></text></g><g><title>realloc (52 samples, 0.15%)</title><rect x="47.8361%" y="901" width="0.1522%" height="15" fill="rgb(206,3,8)" fg:x="16348" fg:w="52"/><text x="48.0861%" y="911.50"></text></g><g><title>_IO_str_seekoff (52 samples, 0.15%)</title><rect x="47.8361%" y="885" width="0.1522%" height="15" fill="rgb(251,23,15)" fg:x="16348" fg:w="52"/><text x="48.0861%" y="895.50"></text></g><g><title>__nss_passwd_lookup (42 samples, 0.12%)</title><rect x="47.8654%" y="869" width="0.1229%" height="15" fill="rgb(252,88,28)" fg:x="16358" fg:w="42"/><text x="48.1154%" y="879.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (2,754 samples, 8.06%)</title><rect x="39.9327%" y="997" width="8.0585%" height="15" fill="rgb(212,127,14)" fg:x="13647" fg:w="2754"/><text x="40.1827%" y="1007.50">serde_json:..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (2,730 samples, 7.99%)</title><rect x="40.0029%" y="981" width="7.9883%" height="15" fill="rgb(247,145,37)" fg:x="13671" fg:w="2730"/><text x="40.2529%" y="991.50">serde_json:..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::ignore_str (2,730 samples, 7.99%)</title><rect x="40.0029%" y="965" width="7.9883%" height="15" fill="rgb(209,117,53)" fg:x="13671" fg:w="2730"/><text x="40.2529%" y="975.50">&lt;serde_json..</text></g><g><title>serde_json::read::next_or_eof (2,086 samples, 6.10%)</title><rect x="41.8873%" y="949" width="6.1039%" height="15" fill="rgb(212,90,42)" fg:x="14315" fg:w="2086"/><text x="42.1373%" y="959.50">serde_js..</text></g><g><title>serde_json::de::from_reader (2,756 samples, 8.06%)</title><rect x="39.9298%" y="1045" width="8.0644%" height="15" fill="rgb(218,164,37)" fg:x="13646" fg:w="2756"/><text x="40.1798%" y="1055.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,756 samples, 8.06%)</title><rect x="39.9298%" y="1029" width="8.0644%" height="15" fill="rgb(246,65,34)" fg:x="13646" fg:w="2756"/><text x="40.1798%" y="1039.50">&lt;&amp;mut serde..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2,755 samples, 8.06%)</title><rect x="39.9327%" y="1013" width="8.0614%" height="15" fill="rgb(231,100,33)" fg:x="13647" fg:w="2755"/><text x="40.1827%" y="1023.50">serde::de::..</text></g><g><title>std::io::append_to_string (4 samples, 0.01%)</title><rect x="47.9941%" y="1045" width="0.0117%" height="15" fill="rgb(228,126,14)" fg:x="16402" fg:w="4"/><text x="48.2441%" y="1055.50"></text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (3,013 samples, 8.82%)</title><rect x="39.1924%" y="1093" width="8.8164%" height="15" fill="rgb(215,173,21)" fg:x="13394" fg:w="3013"/><text x="39.4424%" y="1103.50">&lt;bitcoincore..</text></g><g><title>jsonrpc::client::Client::send_request (2,764 samples, 8.09%)</title><rect x="39.9210%" y="1077" width="8.0878%" height="15" fill="rgb(210,6,40)" fg:x="13643" fg:w="2764"/><text x="40.1710%" y="1087.50">jsonrpc::cl..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (2,764 samples, 8.09%)</title><rect x="39.9210%" y="1061" width="8.0878%" height="15" fill="rgb(212,48,18)" fg:x="13643" fg:w="2764"/><text x="40.1710%" y="1071.50">&lt;jsonrpc::s..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (5 samples, 0.01%)</title><rect x="48.1580%" y="1061" width="0.0146%" height="15" fill="rgb(230,214,11)" fg:x="16458" fg:w="5"/><text x="48.4080%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (4 samples, 0.01%)</title><rect x="48.1609%" y="1045" width="0.0117%" height="15" fill="rgb(254,105,39)" fg:x="16459" fg:w="4"/><text x="48.4109%" y="1055.50"></text></g><g><title>__libc_malloc (18 samples, 0.05%)</title><rect x="48.1756%" y="1061" width="0.0527%" height="15" fill="rgb(245,158,5)" fg:x="16464" fg:w="18"/><text x="48.4256%" y="1071.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.01%)</title><rect x="48.2165%" y="1045" width="0.0117%" height="15" fill="rgb(249,208,11)" fg:x="16478" fg:w="4"/><text x="48.4665%" y="1055.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (6 samples, 0.02%)</title><rect x="48.2692%" y="1045" width="0.0176%" height="15" fill="rgb(210,39,28)" fg:x="16496" fg:w="6"/><text x="48.5192%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (5 samples, 0.01%)</title><rect x="48.2721%" y="1029" width="0.0146%" height="15" fill="rgb(211,56,53)" fg:x="16497" fg:w="5"/><text x="48.5221%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.05%)</title><rect x="48.2926%" y="1029" width="0.0497%" height="15" fill="rgb(226,201,30)" fg:x="16504" fg:w="17"/><text x="48.5426%" y="1039.50"></text></g><g><title>__libc_malloc (17 samples, 0.05%)</title><rect x="48.2926%" y="1013" width="0.0497%" height="15" fill="rgb(239,101,34)" fg:x="16504" fg:w="17"/><text x="48.5426%" y="1023.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.01%)</title><rect x="48.3307%" y="997" width="0.0117%" height="15" fill="rgb(226,209,5)" fg:x="16517" fg:w="4"/><text x="48.5807%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.06%)</title><rect x="48.2897%" y="1045" width="0.0556%" height="15" fill="rgb(250,105,47)" fg:x="16503" fg:w="19"/><text x="48.5397%" y="1055.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (232 samples, 0.68%)</title><rect x="48.2282%" y="1061" width="0.6789%" height="15" fill="rgb(230,72,3)" fg:x="16482" fg:w="232"/><text x="48.4782%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (192 samples, 0.56%)</title><rect x="48.3453%" y="1045" width="0.5618%" height="15" fill="rgb(232,218,39)" fg:x="16522" fg:w="192"/><text x="48.5953%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (191 samples, 0.56%)</title><rect x="48.3482%" y="1029" width="0.5589%" height="15" fill="rgb(248,166,6)" fg:x="16523" fg:w="191"/><text x="48.5982%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (478 samples, 1.40%)</title><rect x="48.0849%" y="1077" width="1.3987%" height="15" fill="rgb(247,89,20)" fg:x="16433" fg:w="478"/><text x="48.3349%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (197 samples, 0.58%)</title><rect x="48.9071%" y="1061" width="0.5764%" height="15" fill="rgb(248,130,54)" fg:x="16714" fg:w="197"/><text x="49.1571%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (185 samples, 0.54%)</title><rect x="48.9422%" y="1045" width="0.5413%" height="15" fill="rgb(234,196,4)" fg:x="16726" fg:w="185"/><text x="49.1922%" y="1055.50"></text></g><g><title>__libc_malloc (9 samples, 0.03%)</title><rect x="49.5245%" y="1061" width="0.0263%" height="15" fill="rgb(250,143,31)" fg:x="16925" fg:w="9"/><text x="49.7745%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (10 samples, 0.03%)</title><rect x="49.5947%" y="1045" width="0.0293%" height="15" fill="rgb(211,110,34)" fg:x="16949" fg:w="10"/><text x="49.8447%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (7 samples, 0.02%)</title><rect x="49.6035%" y="1029" width="0.0205%" height="15" fill="rgb(215,124,48)" fg:x="16952" fg:w="7"/><text x="49.8535%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.12%)</title><rect x="49.6240%" y="1045" width="0.1200%" height="15" fill="rgb(216,46,13)" fg:x="16959" fg:w="41"/><text x="49.8740%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.11%)</title><rect x="49.6328%" y="1029" width="0.1112%" height="15" fill="rgb(205,184,25)" fg:x="16962" fg:w="38"/><text x="49.8828%" y="1039.50"></text></g><g><title>__libc_malloc (37 samples, 0.11%)</title><rect x="49.6357%" y="1013" width="0.1083%" height="15" fill="rgb(228,1,10)" fg:x="16963" fg:w="37"/><text x="49.8857%" y="1023.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.04%)</title><rect x="49.7001%" y="997" width="0.0439%" height="15" fill="rgb(213,116,27)" fg:x="16985" fg:w="15"/><text x="49.9501%" y="1007.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (171 samples, 0.50%)</title><rect x="49.5508%" y="1061" width="0.5004%" height="15" fill="rgb(241,95,50)" fg:x="16934" fg:w="171"/><text x="49.8008%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (105 samples, 0.31%)</title><rect x="49.7440%" y="1045" width="0.3072%" height="15" fill="rgb(238,48,32)" fg:x="17000" fg:w="105"/><text x="49.9940%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (99 samples, 0.29%)</title><rect x="49.7615%" y="1029" width="0.2897%" height="15" fill="rgb(235,113,49)" fg:x="17006" fg:w="99"/><text x="50.0115%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (221 samples, 0.65%)</title><rect x="49.4835%" y="1077" width="0.6467%" height="15" fill="rgb(205,127,43)" fg:x="16911" fg:w="221"/><text x="49.7335%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (27 samples, 0.08%)</title><rect x="50.0512%" y="1061" width="0.0790%" height="15" fill="rgb(250,162,2)" fg:x="17105" fg:w="27"/><text x="50.3012%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (23 samples, 0.07%)</title><rect x="50.0629%" y="1045" width="0.0673%" height="15" fill="rgb(220,13,41)" fg:x="17109" fg:w="23"/><text x="50.3129%" y="1055.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (16 samples, 0.05%)</title><rect x="50.1302%" y="1077" width="0.0468%" height="15" fill="rgb(249,221,25)" fg:x="17132" fg:w="16"/><text x="50.3802%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (9 samples, 0.03%)</title><rect x="50.1507%" y="1061" width="0.0263%" height="15" fill="rgb(215,208,19)" fg:x="17139" fg:w="9"/><text x="50.4007%" y="1071.50"></text></g><g><title>__libc_calloc (41 samples, 0.12%)</title><rect x="50.1858%" y="1061" width="0.1200%" height="15" fill="rgb(236,175,2)" fg:x="17151" fg:w="41"/><text x="50.4358%" y="1071.50"></text></g><g><title>_IO_str_seekoff (20 samples, 0.06%)</title><rect x="50.2473%" y="1045" width="0.0585%" height="15" fill="rgb(241,52,2)" fg:x="17172" fg:w="20"/><text x="50.4973%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.13%)</title><rect x="50.1829%" y="1077" width="0.1287%" height="15" fill="rgb(248,140,14)" fg:x="17150" fg:w="44"/><text x="50.4329%" y="1087.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (4 samples, 0.01%)</title><rect x="50.3146%" y="1077" width="0.0117%" height="15" fill="rgb(253,22,42)" fg:x="17195" fg:w="4"/><text x="50.5646%" y="1087.50"></text></g><g><title>core::slice::rotate::ptr_rotate (10 samples, 0.03%)</title><rect x="50.3292%" y="1077" width="0.0293%" height="15" fill="rgb(234,61,47)" fg:x="17200" fg:w="10"/><text x="50.5792%" y="1087.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="50.3350%" y="1061" width="0.0234%" height="15" fill="rgb(208,226,15)" fg:x="17202" fg:w="8"/><text x="50.5850%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (453 samples, 1.33%)</title><rect x="50.3584%" y="1077" width="1.3255%" height="15" fill="rgb(217,221,4)" fg:x="17210" fg:w="453"/><text x="50.6084%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (445 samples, 1.30%)</title><rect x="50.3819%" y="1061" width="1.3021%" height="15" fill="rgb(212,174,34)" fg:x="17218" fg:w="445"/><text x="50.6319%" y="1071.50"></text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (4,270 samples, 12.49%)</title><rect x="39.1924%" y="1109" width="12.4945%" height="15" fill="rgb(253,83,4)" fg:x="13394" fg:w="4270"/><text x="39.4424%" y="1119.50">bitcoincore_rpc::cl..</text></g><g><title>bitcoincore_rpc::deserialize_hex (1,257 samples, 3.68%)</title><rect x="48.0088%" y="1093" width="3.6781%" height="15" fill="rgb(250,195,49)" fg:x="16407" fg:w="1257"/><text x="48.2588%" y="1103.50">bitc..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="51.6869%" y="1077" width="0.0117%" height="15" fill="rgb(241,192,25)" fg:x="17664" fg:w="4"/><text x="51.9369%" y="1087.50"></text></g><g><title>serde_json::ser::to_vec (4 samples, 0.01%)</title><rect x="51.6869%" y="1061" width="0.0117%" height="15" fill="rgb(208,124,10)" fg:x="17664" fg:w="4"/><text x="51.9369%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="51.6869%" y="1093" width="0.0205%" height="15" fill="rgb(222,33,0)" fg:x="17664" fg:w="7"/><text x="51.9369%" y="1103.50"></text></g><g><title>ord::index::updater::Updater::get_block_with_retries (4,279 samples, 12.52%)</title><rect x="39.1924%" y="1125" width="12.5208%" height="15" fill="rgb(234,209,28)" fg:x="13394" fg:w="4279"/><text x="39.4424%" y="1135.50">ord::index::updater..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (9 samples, 0.03%)</title><rect x="51.6869%" y="1109" width="0.0263%" height="15" fill="rgb(224,11,23)" fg:x="17664" fg:w="9"/><text x="51.9369%" y="1119.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="51.8186%" y="1093" width="0.0176%" height="15" fill="rgb(232,99,1)" fg:x="17709" fg:w="6"/><text x="52.0686%" y="1103.50"></text></g><g><title>_IO_str_seekoff (193 samples, 0.56%)</title><rect x="52.8018%" y="1077" width="0.5647%" height="15" fill="rgb(237,95,45)" fg:x="18045" fg:w="193"/><text x="53.0518%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (555 samples, 1.62%)</title><rect x="51.7454%" y="1109" width="1.6240%" height="15" fill="rgb(208,109,11)" fg:x="17684" fg:w="555"/><text x="51.9954%" y="1119.50"></text></g><g><title>cfree (524 samples, 1.53%)</title><rect x="51.8361%" y="1093" width="1.5333%" height="15" fill="rgb(216,190,48)" fg:x="17715" fg:w="524"/><text x="52.0861%" y="1103.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="53.4075%" y="885" width="0.0234%" height="15" fill="rgb(251,171,36)" fg:x="18252" fg:w="8"/><text x="53.6575%" y="895.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.01%)</title><rect x="53.4192%" y="869" width="0.0117%" height="15" fill="rgb(230,62,22)" fg:x="18256" fg:w="4"/><text x="53.6692%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="53.4045%" y="1077" width="0.0293%" height="15" fill="rgb(225,114,35)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="53.4045%" y="1061" width="0.0293%" height="15" fill="rgb(215,118,42)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.03%)</title><rect x="53.4045%" y="1045" width="0.0293%" height="15" fill="rgb(243,119,21)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="53.4045%" y="1029" width="0.0293%" height="15" fill="rgb(252,177,53)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.03%)</title><rect x="53.4045%" y="1013" width="0.0293%" height="15" fill="rgb(237,209,29)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="53.4045%" y="997" width="0.0293%" height="15" fill="rgb(212,65,23)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="53.4045%" y="981" width="0.0293%" height="15" fill="rgb(230,222,46)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.03%)</title><rect x="53.4045%" y="965" width="0.0293%" height="15" fill="rgb(215,135,32)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.03%)</title><rect x="53.4045%" y="949" width="0.0293%" height="15" fill="rgb(246,101,22)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.03%)</title><rect x="53.4045%" y="933" width="0.0293%" height="15" fill="rgb(206,107,13)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="943.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.03%)</title><rect x="53.4045%" y="917" width="0.0293%" height="15" fill="rgb(250,100,44)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="927.50"></text></g><g><title>__libc_malloc (10 samples, 0.03%)</title><rect x="53.4045%" y="901" width="0.0293%" height="15" fill="rgb(231,147,38)" fg:x="18251" fg:w="10"/><text x="53.6545%" y="911.50"></text></g><g><title>__nss_passwd_lookup (211 samples, 0.62%)</title><rect x="53.4396%" y="1061" width="0.6174%" height="15" fill="rgb(229,8,40)" fg:x="18263" fg:w="211"/><text x="53.6896%" y="1071.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.02%)</title><rect x="54.0629%" y="997" width="0.0205%" height="15" fill="rgb(221,135,30)" fg:x="18476" fg:w="7"/><text x="54.3129%" y="1007.50"></text></g><g><title>_IO_str_seekoff (250 samples, 0.73%)</title><rect x="54.0600%" y="1013" width="0.7315%" height="15" fill="rgb(249,193,18)" fg:x="18475" fg:w="250"/><text x="54.3100%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (242 samples, 0.71%)</title><rect x="54.0834%" y="997" width="0.7081%" height="15" fill="rgb(209,133,39)" fg:x="18483" fg:w="242"/><text x="54.3334%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.03%)</title><rect x="54.7915%" y="1013" width="0.0293%" height="15" fill="rgb(232,100,14)" fg:x="18725" fg:w="10"/><text x="55.0415%" y="1023.50"></text></g><g><title>async_page_fault (4 samples, 0.01%)</title><rect x="54.8091%" y="997" width="0.0117%" height="15" fill="rgb(224,185,1)" fg:x="18731" fg:w="4"/><text x="55.0591%" y="1007.50"></text></g><g><title>do_async_page_fault (4 samples, 0.01%)</title><rect x="54.8091%" y="981" width="0.0117%" height="15" fill="rgb(223,139,8)" fg:x="18731" fg:w="4"/><text x="55.0591%" y="991.50"></text></g><g><title>do_page_fault (4 samples, 0.01%)</title><rect x="54.8091%" y="965" width="0.0117%" height="15" fill="rgb(232,213,38)" fg:x="18731" fg:w="4"/><text x="55.0591%" y="975.50"></text></g><g><title>__do_page_fault (4 samples, 0.01%)</title><rect x="54.8091%" y="949" width="0.0117%" height="15" fill="rgb(207,94,22)" fg:x="18731" fg:w="4"/><text x="55.0591%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (475 samples, 1.39%)</title><rect x="53.4338%" y="1077" width="1.3899%" height="15" fill="rgb(219,183,54)" fg:x="18261" fg:w="475"/><text x="53.6838%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 samples, 0.77%)</title><rect x="54.0571%" y="1061" width="0.7666%" height="15" fill="rgb(216,185,54)" fg:x="18474" fg:w="262"/><text x="54.3071%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (262 samples, 0.77%)</title><rect x="54.0571%" y="1045" width="0.7666%" height="15" fill="rgb(254,217,39)" fg:x="18474" fg:w="262"/><text x="54.3071%" y="1055.50"></text></g><g><title>realloc (261 samples, 0.76%)</title><rect x="54.0600%" y="1029" width="0.7637%" height="15" fill="rgb(240,178,23)" fg:x="18475" fg:w="261"/><text x="54.3100%" y="1039.50"></text></g><g><title>syscall (27 samples, 0.08%)</title><rect x="54.8530%" y="981" width="0.0790%" height="15" fill="rgb(218,11,47)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.08%)</title><rect x="54.8530%" y="965" width="0.0790%" height="15" fill="rgb(218,51,51)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="975.50"></text></g><g><title>do_syscall_64 (27 samples, 0.08%)</title><rect x="54.8530%" y="949" width="0.0790%" height="15" fill="rgb(238,126,27)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="959.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.08%)</title><rect x="54.8530%" y="933" width="0.0790%" height="15" fill="rgb(249,202,22)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="943.50"></text></g><g><title>do_futex (27 samples, 0.08%)</title><rect x="54.8530%" y="917" width="0.0790%" height="15" fill="rgb(254,195,49)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="927.50"></text></g><g><title>futex_wake (27 samples, 0.08%)</title><rect x="54.8530%" y="901" width="0.0790%" height="15" fill="rgb(208,123,14)" fg:x="18746" fg:w="27"/><text x="55.1030%" y="911.50"></text></g><g><title>wake_up_q (26 samples, 0.08%)</title><rect x="54.8559%" y="885" width="0.0761%" height="15" fill="rgb(224,200,8)" fg:x="18747" fg:w="26"/><text x="55.1059%" y="895.50"></text></g><g><title>try_to_wake_up (26 samples, 0.08%)</title><rect x="54.8559%" y="869" width="0.0761%" height="15" fill="rgb(217,61,36)" fg:x="18747" fg:w="26"/><text x="55.1059%" y="879.50"></text></g><g><title>__lock_text_start (26 samples, 0.08%)</title><rect x="54.8559%" y="853" width="0.0761%" height="15" fill="rgb(206,35,45)" fg:x="18747" fg:w="26"/><text x="55.1059%" y="863.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (43 samples, 0.13%)</title><rect x="54.8237%" y="1077" width="0.1258%" height="15" fill="rgb(217,65,33)" fg:x="18736" fg:w="43"/><text x="55.0737%" y="1087.50"></text></g><g><title>hyper::body::body::Body::poll_inner (38 samples, 0.11%)</title><rect x="54.8383%" y="1061" width="0.1112%" height="15" fill="rgb(222,158,48)" fg:x="18741" fg:w="38"/><text x="55.0883%" y="1071.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (37 samples, 0.11%)</title><rect x="54.8413%" y="1045" width="0.1083%" height="15" fill="rgb(254,2,54)" fg:x="18742" fg:w="37"/><text x="55.0913%" y="1055.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (37 samples, 0.11%)</title><rect x="54.8413%" y="1029" width="0.1083%" height="15" fill="rgb(250,143,38)" fg:x="18742" fg:w="37"/><text x="55.0913%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (33 samples, 0.10%)</title><rect x="54.8530%" y="1013" width="0.0966%" height="15" fill="rgb(248,25,0)" fg:x="18746" fg:w="33"/><text x="55.1030%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (33 samples, 0.10%)</title><rect x="54.8530%" y="997" width="0.0966%" height="15" fill="rgb(206,152,27)" fg:x="18746" fg:w="33"/><text x="55.1030%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (4 samples, 0.01%)</title><rect x="54.9378%" y="981" width="0.0117%" height="15" fill="rgb(240,77,30)" fg:x="18775" fg:w="4"/><text x="55.1878%" y="991.50"></text></g><g><title>tokio::sync::oneshot::State::load (4 samples, 0.01%)</title><rect x="54.9905%" y="981" width="0.0117%" height="15" fill="rgb(231,5,3)" fg:x="18793" fg:w="4"/><text x="55.2405%" y="991.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.03%)</title><rect x="54.9759%" y="1013" width="0.0293%" height="15" fill="rgb(207,226,32)" fg:x="18788" fg:w="10"/><text x="55.2259%" y="1023.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="54.9817%" y="997" width="0.0234%" height="15" fill="rgb(222,207,47)" fg:x="18790" fg:w="8"/><text x="55.2317%" y="1007.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="54.9729%" y="1045" width="0.0351%" height="15" fill="rgb(229,115,45)" fg:x="18787" fg:w="12"/><text x="55.2229%" y="1055.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="54.9729%" y="1029" width="0.0351%" height="15" fill="rgb(224,191,6)" fg:x="18787" fg:w="12"/><text x="55.2229%" y="1039.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (5 samples, 0.01%)</title><rect x="55.0110%" y="1045" width="0.0146%" height="15" fill="rgb(230,227,24)" fg:x="18800" fg:w="5"/><text x="55.2610%" y="1055.50"></text></g><g><title>http::extensions::Extensions::insert (5 samples, 0.01%)</title><rect x="55.0110%" y="1029" width="0.0146%" height="15" fill="rgb(228,80,19)" fg:x="18800" fg:w="5"/><text x="55.2610%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="55.0519%" y="1045" width="0.0293%" height="15" fill="rgb(247,229,0)" fg:x="18814" fg:w="10"/><text x="55.3019%" y="1055.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="55.0519%" y="1029" width="0.0293%" height="15" fill="rgb(237,194,15)" fg:x="18814" fg:w="10"/><text x="55.3019%" y="1039.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (8 samples, 0.02%)</title><rect x="55.0578%" y="1013" width="0.0234%" height="15" fill="rgb(219,203,20)" fg:x="18816" fg:w="8"/><text x="55.3078%" y="1023.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (5 samples, 0.01%)</title><rect x="55.0812%" y="1045" width="0.0146%" height="15" fill="rgb(234,128,8)" fg:x="18824" fg:w="5"/><text x="55.3312%" y="1055.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.02%)</title><rect x="55.1105%" y="917" width="0.0205%" height="15" fill="rgb(248,202,8)" fg:x="18834" fg:w="7"/><text x="55.3605%" y="927.50"></text></g><g><title>do_futex (7 samples, 0.02%)</title><rect x="55.1105%" y="901" width="0.0205%" height="15" fill="rgb(206,104,37)" fg:x="18834" fg:w="7"/><text x="55.3605%" y="911.50"></text></g><g><title>futex_wake (7 samples, 0.02%)</title><rect x="55.1105%" y="885" width="0.0205%" height="15" fill="rgb(223,8,27)" fg:x="18834" fg:w="7"/><text x="55.3605%" y="895.50"></text></g><g><title>wake_up_q (6 samples, 0.02%)</title><rect x="55.1134%" y="869" width="0.0176%" height="15" fill="rgb(216,217,28)" fg:x="18835" fg:w="6"/><text x="55.3634%" y="879.50"></text></g><g><title>try_to_wake_up (6 samples, 0.02%)</title><rect x="55.1134%" y="853" width="0.0176%" height="15" fill="rgb(249,199,1)" fg:x="18835" fg:w="6"/><text x="55.3634%" y="863.50"></text></g><g><title>__lock_text_start (6 samples, 0.02%)</title><rect x="55.1134%" y="837" width="0.0176%" height="15" fill="rgb(240,85,17)" fg:x="18835" fg:w="6"/><text x="55.3634%" y="847.50"></text></g><g><title>syscall (9 samples, 0.03%)</title><rect x="55.1075%" y="965" width="0.0263%" height="15" fill="rgb(206,108,45)" fg:x="18833" fg:w="9"/><text x="55.3575%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="55.1105%" y="949" width="0.0234%" height="15" fill="rgb(245,210,41)" fg:x="18834" fg:w="8"/><text x="55.3605%" y="959.50"></text></g><g><title>do_syscall_64 (8 samples, 0.02%)</title><rect x="55.1105%" y="933" width="0.0234%" height="15" fill="rgb(206,13,37)" fg:x="18834" fg:w="8"/><text x="55.3605%" y="943.50"></text></g><g><title>__libc_write (4 samples, 0.01%)</title><rect x="55.1426%" y="885" width="0.0117%" height="15" fill="rgb(250,61,18)" fg:x="18845" fg:w="4"/><text x="55.3926%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="55.1426%" y="869" width="0.0117%" height="15" fill="rgb(235,172,48)" fg:x="18845" fg:w="4"/><text x="55.3926%" y="879.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="55.1426%" y="853" width="0.0117%" height="15" fill="rgb(249,201,17)" fg:x="18845" fg:w="4"/><text x="55.3926%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (18 samples, 0.05%)</title><rect x="55.1046%" y="997" width="0.0527%" height="15" fill="rgb(219,208,6)" fg:x="18832" fg:w="18"/><text x="55.3546%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (17 samples, 0.05%)</title><rect x="55.1075%" y="981" width="0.0497%" height="15" fill="rgb(248,31,23)" fg:x="18833" fg:w="17"/><text x="55.3575%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (6 samples, 0.02%)</title><rect x="55.1397%" y="965" width="0.0176%" height="15" fill="rgb(245,15,42)" fg:x="18844" fg:w="6"/><text x="55.3897%" y="975.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (6 samples, 0.02%)</title><rect x="55.1397%" y="949" width="0.0176%" height="15" fill="rgb(222,217,39)" fg:x="18844" fg:w="6"/><text x="55.3897%" y="959.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="55.1397%" y="933" width="0.0176%" height="15" fill="rgb(210,219,27)" fg:x="18844" fg:w="6"/><text x="55.3897%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::write (5 samples, 0.01%)</title><rect x="55.1426%" y="917" width="0.0146%" height="15" fill="rgb(252,166,36)" fg:x="18845" fg:w="5"/><text x="55.3926%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.01%)</title><rect x="55.1426%" y="901" width="0.0146%" height="15" fill="rgb(245,132,34)" fg:x="18845" fg:w="5"/><text x="55.3926%" y="911.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (19 samples, 0.06%)</title><rect x="55.1046%" y="1013" width="0.0556%" height="15" fill="rgb(236,54,3)" fg:x="18832" fg:w="19"/><text x="55.3546%" y="1023.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (21 samples, 0.06%)</title><rect x="55.1046%" y="1045" width="0.0614%" height="15" fill="rgb(241,173,43)" fg:x="18832" fg:w="21"/><text x="55.3546%" y="1055.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (21 samples, 0.06%)</title><rect x="55.1046%" y="1029" width="0.0614%" height="15" fill="rgb(215,190,9)" fg:x="18832" fg:w="21"/><text x="55.3546%" y="1039.50"></text></g><g><title>__vfs_write (5 samples, 0.01%)</title><rect x="55.1778%" y="821" width="0.0146%" height="15" fill="rgb(242,101,16)" fg:x="18857" fg:w="5"/><text x="55.4278%" y="831.50"></text></g><g><title>eventfd_write (5 samples, 0.01%)</title><rect x="55.1778%" y="805" width="0.0146%" height="15" fill="rgb(223,190,21)" fg:x="18857" fg:w="5"/><text x="55.4278%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (8 samples, 0.02%)</title><rect x="55.1719%" y="1013" width="0.0234%" height="15" fill="rgb(215,228,25)" fg:x="18855" fg:w="8"/><text x="55.4219%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (8 samples, 0.02%)</title><rect x="55.1719%" y="997" width="0.0234%" height="15" fill="rgb(225,36,22)" fg:x="18855" fg:w="8"/><text x="55.4219%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (7 samples, 0.02%)</title><rect x="55.1748%" y="981" width="0.0205%" height="15" fill="rgb(251,106,46)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="55.1748%" y="965" width="0.0205%" height="15" fill="rgb(208,90,1)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (7 samples, 0.02%)</title><rect x="55.1748%" y="949" width="0.0205%" height="15" fill="rgb(243,10,4)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (7 samples, 0.02%)</title><rect x="55.1748%" y="933" width="0.0205%" height="15" fill="rgb(212,137,27)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="943.50"></text></g><g><title>__libc_write (7 samples, 0.02%)</title><rect x="55.1748%" y="917" width="0.0205%" height="15" fill="rgb(231,220,49)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="55.1748%" y="901" width="0.0205%" height="15" fill="rgb(237,96,20)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="911.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="55.1748%" y="885" width="0.0205%" height="15" fill="rgb(239,229,30)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="895.50"></text></g><g><title>__x64_sys_write (7 samples, 0.02%)</title><rect x="55.1748%" y="869" width="0.0205%" height="15" fill="rgb(219,65,33)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="879.50"></text></g><g><title>ksys_write (7 samples, 0.02%)</title><rect x="55.1748%" y="853" width="0.0205%" height="15" fill="rgb(243,134,7)" fg:x="18856" fg:w="7"/><text x="55.4248%" y="863.50"></text></g><g><title>vfs_write (6 samples, 0.02%)</title><rect x="55.1778%" y="837" width="0.0176%" height="15" fill="rgb(216,177,54)" fg:x="18857" fg:w="6"/><text x="55.4278%" y="847.50"></text></g><g><title>tokio::runtime::context::current::with_current (10 samples, 0.03%)</title><rect x="55.1690%" y="1045" width="0.0293%" height="15" fill="rgb(211,160,20)" fg:x="18854" fg:w="10"/><text x="55.4190%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (10 samples, 0.03%)</title><rect x="55.1690%" y="1029" width="0.0293%" height="15" fill="rgb(239,85,39)" fg:x="18854" fg:w="10"/><text x="55.4190%" y="1039.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (86 samples, 0.25%)</title><rect x="54.9495%" y="1077" width="0.2516%" height="15" fill="rgb(232,125,22)" fg:x="18779" fg:w="86"/><text x="55.1995%" y="1087.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (86 samples, 0.25%)</title><rect x="54.9495%" y="1061" width="0.2516%" height="15" fill="rgb(244,57,34)" fg:x="18779" fg:w="86"/><text x="55.1995%" y="1071.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 0.04%)</title><rect x="55.2099%" y="1013" width="0.0380%" height="15" fill="rgb(214,203,32)" fg:x="18868" fg:w="13"/><text x="55.4599%" y="1023.50"></text></g><g><title>serde_json::ser::format_escaped_str (12 samples, 0.04%)</title><rect x="55.2129%" y="997" width="0.0351%" height="15" fill="rgb(207,58,43)" fg:x="18869" fg:w="12"/><text x="55.4629%" y="1007.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="55.2275%" y="981" width="0.0205%" height="15" fill="rgb(215,193,15)" fg:x="18874" fg:w="7"/><text x="55.4775%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="55.2275%" y="965" width="0.0205%" height="15" fill="rgb(232,15,44)" fg:x="18874" fg:w="7"/><text x="55.4775%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="55.2363%" y="949" width="0.0117%" height="15" fill="rgb(212,3,48)" fg:x="18877" fg:w="4"/><text x="55.4863%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="55.2363%" y="933" width="0.0117%" height="15" fill="rgb(218,128,7)" fg:x="18877" fg:w="4"/><text x="55.4863%" y="943.50"></text></g><g><title>realloc (4 samples, 0.01%)</title><rect x="55.2363%" y="917" width="0.0117%" height="15" fill="rgb(226,216,39)" fg:x="18877" fg:w="4"/><text x="55.4863%" y="927.50"></text></g><g><title>serde::ser::Serializer::collect_seq (19 samples, 0.06%)</title><rect x="55.2070%" y="1029" width="0.0556%" height="15" fill="rgb(243,47,51)" fg:x="18867" fg:w="19"/><text x="55.4570%" y="1039.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.01%)</title><rect x="55.2480%" y="1013" width="0.0146%" height="15" fill="rgb(241,183,40)" fg:x="18881" fg:w="5"/><text x="55.4980%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.03%)</title><rect x="55.2802%" y="997" width="0.0322%" height="15" fill="rgb(231,217,32)" fg:x="18892" fg:w="11"/><text x="55.5302%" y="1007.50"></text></g><g><title>serde_json::ser::format_escaped_str (18 samples, 0.05%)</title><rect x="55.2626%" y="1029" width="0.0527%" height="15" fill="rgb(229,61,38)" fg:x="18886" fg:w="18"/><text x="55.5126%" y="1039.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.04%)</title><rect x="55.2743%" y="1013" width="0.0410%" height="15" fill="rgb(225,210,5)" fg:x="18890" fg:w="14"/><text x="55.5243%" y="1023.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.01%)</title><rect x="55.3211%" y="1013" width="0.0146%" height="15" fill="rgb(231,79,45)" fg:x="18906" fg:w="5"/><text x="55.5711%" y="1023.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.02%)</title><rect x="55.3153%" y="1029" width="0.0234%" height="15" fill="rgb(224,100,7)" fg:x="18904" fg:w="8"/><text x="55.5653%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.02%)</title><rect x="55.3446%" y="1013" width="0.0176%" height="15" fill="rgb(241,198,18)" fg:x="18914" fg:w="6"/><text x="55.5946%" y="1023.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (57 samples, 0.17%)</title><rect x="55.2012%" y="1045" width="0.1668%" height="15" fill="rgb(252,97,53)" fg:x="18865" fg:w="57"/><text x="55.4512%" y="1055.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.03%)</title><rect x="55.3387%" y="1029" width="0.0293%" height="15" fill="rgb(220,88,7)" fg:x="18912" fg:w="10"/><text x="55.5887%" y="1039.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (58 samples, 0.17%)</title><rect x="55.2012%" y="1077" width="0.1697%" height="15" fill="rgb(213,176,14)" fg:x="18865" fg:w="58"/><text x="55.4512%" y="1087.50"></text></g><g><title>serde::ser::Serializer::collect_seq (58 samples, 0.17%)</title><rect x="55.2012%" y="1061" width="0.1697%" height="15" fill="rgb(246,73,7)" fg:x="18865" fg:w="58"/><text x="55.4512%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="55.3972%" y="1045" width="0.0117%" height="15" fill="rgb(245,64,36)" fg:x="18932" fg:w="4"/><text x="55.6472%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="55.3972%" y="1029" width="0.0117%" height="15" fill="rgb(245,80,10)" fg:x="18932" fg:w="4"/><text x="55.6472%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="55.3972%" y="1013" width="0.0117%" height="15" fill="rgb(232,107,50)" fg:x="18932" fg:w="4"/><text x="55.6472%" y="1023.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="55.3972%" y="997" width="0.0117%" height="15" fill="rgb(253,3,0)" fg:x="18932" fg:w="4"/><text x="55.6472%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.02%)</title><rect x="55.4089%" y="1045" width="0.0205%" height="15" fill="rgb(212,99,53)" fg:x="18936" fg:w="7"/><text x="55.6589%" y="1055.50"></text></g><g><title>bitcoin_private::hex::buf_encoder::out_bytes::OutBytes::write (8 samples, 0.02%)</title><rect x="55.4294%" y="1045" width="0.0234%" height="15" fill="rgb(249,111,54)" fg:x="18943" fg:w="8"/><text x="55.6794%" y="1055.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::collect_str (32 samples, 0.09%)</title><rect x="55.3709%" y="1077" width="0.0936%" height="15" fill="rgb(249,55,30)" fg:x="18923" fg:w="32"/><text x="55.6209%" y="1087.50"></text></g><g><title>bitcoin_private::hex::display::DisplayArray&lt;A,B&gt;::display (30 samples, 0.09%)</title><rect x="55.3767%" y="1061" width="0.0878%" height="15" fill="rgb(237,47,42)" fg:x="18925" fg:w="30"/><text x="55.6267%" y="1071.50"></text></g><g><title>_IO_str_seekoff (22 samples, 0.06%)</title><rect x="55.5055%" y="1061" width="0.0644%" height="15" fill="rgb(211,20,18)" fg:x="18969" fg:w="22"/><text x="55.7555%" y="1071.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.02%)</title><rect x="55.5523%" y="1045" width="0.0176%" height="15" fill="rgb(231,203,46)" fg:x="18985" fg:w="6"/><text x="55.8023%" y="1055.50"></text></g><g><title>__libc_malloc (37 samples, 0.11%)</title><rect x="55.4645%" y="1077" width="0.1083%" height="15" fill="rgb(237,142,3)" fg:x="18955" fg:w="37"/><text x="55.7145%" y="1087.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="55.6050%" y="1061" width="0.0117%" height="15" fill="rgb(241,107,1)" fg:x="19003" fg:w="4"/><text x="55.8550%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.04%)</title><rect x="55.5757%" y="1077" width="0.0439%" height="15" fill="rgb(229,83,13)" fg:x="18993" fg:w="15"/><text x="55.8257%" y="1087.50"></text></g><g><title>apic_timer_interrupt (8 samples, 0.02%)</title><rect x="72.9364%" y="965" width="0.0234%" height="15" fill="rgb(241,91,40)" fg:x="24926" fg:w="8"/><text x="73.1864%" y="975.50"></text></g><g><title>smp_apic_timer_interrupt (8 samples, 0.02%)</title><rect x="72.9364%" y="949" width="0.0234%" height="15" fill="rgb(225,3,45)" fg:x="24926" fg:w="8"/><text x="73.1864%" y="959.50"></text></g><g><title>irq_exit (8 samples, 0.02%)</title><rect x="72.9364%" y="933" width="0.0234%" height="15" fill="rgb(244,223,14)" fg:x="24926" fg:w="8"/><text x="73.1864%" y="943.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.02%)</title><rect x="72.9364%" y="917" width="0.0234%" height="15" fill="rgb(224,124,37)" fg:x="24926" fg:w="8"/><text x="73.1864%" y="927.50"></text></g><g><title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="86.8266%" y="949" width="0.0117%" height="15" fill="rgb(251,171,30)" fg:x="29673" fg:w="4"/><text x="87.0766%" y="959.50"></text></g><g><title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="86.8266%" y="933" width="0.0117%" height="15" fill="rgb(236,46,54)" fg:x="29673" fg:w="4"/><text x="87.0766%" y="943.50"></text></g><g><title>irq_exit (4 samples, 0.01%)</title><rect x="86.8266%" y="917" width="0.0117%" height="15" fill="rgb(245,213,5)" fg:x="29673" fg:w="4"/><text x="87.0766%" y="927.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.01%)</title><rect x="86.8266%" y="901" width="0.0117%" height="15" fill="rgb(230,144,27)" fg:x="29673" fg:w="4"/><text x="87.0766%" y="911.50"></text></g><g><title>ret_from_intr (5 samples, 0.01%)</title><rect x="86.8383%" y="949" width="0.0146%" height="15" fill="rgb(220,86,6)" fg:x="29677" fg:w="5"/><text x="87.0883%" y="959.50"></text></g><g><title>do_IRQ (5 samples, 0.01%)</title><rect x="86.8383%" y="933" width="0.0146%" height="15" fill="rgb(240,20,13)" fg:x="29677" fg:w="5"/><text x="87.0883%" y="943.50"></text></g><g><title>irq_exit (5 samples, 0.01%)</title><rect x="86.8383%" y="917" width="0.0146%" height="15" fill="rgb(217,89,34)" fg:x="29677" fg:w="5"/><text x="87.0883%" y="927.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.01%)</title><rect x="86.8383%" y="901" width="0.0146%" height="15" fill="rgb(229,13,5)" fg:x="29677" fg:w="5"/><text x="87.0883%" y="911.50"></text></g><g><title>hex::val (4,749 samples, 13.90%)</title><rect x="72.9598%" y="965" width="13.8961%" height="15" fill="rgb(244,67,35)" fg:x="24934" fg:w="4749"/><text x="73.2098%" y="975.50">hex::val</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,826 samples, 28.75%)</title><rect x="58.1156%" y="981" width="28.7520%" height="15" fill="rgb(221,40,2)" fg:x="19861" fg:w="9826"/><text x="58.3656%" y="991.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as co..</text></g><g><title>__libc_malloc (6 samples, 0.02%)</title><rect x="86.8676%" y="981" width="0.0176%" height="15" fill="rgb(237,157,21)" fg:x="29687" fg:w="6"/><text x="87.1176%" y="991.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.01%)</title><rect x="86.8734%" y="965" width="0.0117%" height="15" fill="rgb(222,94,11)" fg:x="29689" fg:w="4"/><text x="87.1234%" y="975.50"></text></g><g><title>_IO_str_seekoff (37 samples, 0.11%)</title><rect x="86.9934%" y="917" width="0.1083%" height="15" fill="rgb(249,113,6)" fg:x="29730" fg:w="37"/><text x="87.2434%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (100 samples, 0.29%)</title><rect x="86.8851%" y="981" width="0.2926%" height="15" fill="rgb(238,137,36)" fg:x="29693" fg:w="100"/><text x="87.1351%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (97 samples, 0.28%)</title><rect x="86.8939%" y="965" width="0.2838%" height="15" fill="rgb(210,102,26)" fg:x="29696" fg:w="97"/><text x="87.1439%" y="975.50"></text></g><g><title>realloc (95 samples, 0.28%)</title><rect x="86.8998%" y="949" width="0.2780%" height="15" fill="rgb(218,30,30)" fg:x="29698" fg:w="95"/><text x="87.1498%" y="959.50"></text></g><g><title>_IO_str_seekoff (71 samples, 0.21%)</title><rect x="86.9700%" y="933" width="0.2078%" height="15" fill="rgb(214,67,26)" fg:x="29722" fg:w="71"/><text x="87.2200%" y="943.50"></text></g><g><title>__nss_passwd_lookup (26 samples, 0.08%)</title><rect x="87.1017%" y="917" width="0.0761%" height="15" fill="rgb(251,9,53)" fg:x="29767" fg:w="26"/><text x="87.3517%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,779 samples, 31.54%)</title><rect x="55.6430%" y="997" width="31.5406%" height="15" fill="rgb(228,204,25)" fg:x="19016" fg:w="10779"/><text x="55.8930%" y="1007.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (10,786 samples, 31.56%)</title><rect x="55.6401%" y="1013" width="31.5611%" height="15" fill="rgb(207,153,8)" fg:x="19015" fg:w="10786"/><text x="55.8901%" y="1023.50">&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex</text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="87.1836%" y="997" width="0.0176%" height="15" fill="rgb(242,9,16)" fg:x="29795" fg:w="6"/><text x="87.4336%" y="1007.50"></text></g><g><title>__libc_malloc (16 samples, 0.05%)</title><rect x="87.2772%" y="981" width="0.0468%" height="15" fill="rgb(217,211,10)" fg:x="29827" fg:w="16"/><text x="87.5272%" y="991.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="87.3007%" y="965" width="0.0234%" height="15" fill="rgb(219,228,52)" fg:x="29835" fg:w="8"/><text x="87.5507%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (38 samples, 0.11%)</title><rect x="87.2363%" y="997" width="0.1112%" height="15" fill="rgb(231,92,29)" fg:x="29813" fg:w="38"/><text x="87.4863%" y="1007.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (8 samples, 0.02%)</title><rect x="87.3241%" y="981" width="0.0234%" height="15" fill="rgb(232,8,23)" fg:x="29843" fg:w="8"/><text x="87.5741%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="87.3328%" y="965" width="0.0146%" height="15" fill="rgb(216,211,34)" fg:x="29846" fg:w="5"/><text x="87.5828%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="87.3358%" y="949" width="0.0117%" height="15" fill="rgb(236,151,0)" fg:x="29847" fg:w="4"/><text x="87.5858%" y="959.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="87.3358%" y="933" width="0.0117%" height="15" fill="rgb(209,168,3)" fg:x="29847" fg:w="4"/><text x="87.5858%" y="943.50"></text></g><g><title>__libc_malloc (12 samples, 0.04%)</title><rect x="87.7513%" y="981" width="0.0351%" height="15" fill="rgb(208,129,28)" fg:x="29989" fg:w="12"/><text x="88.0013%" y="991.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="87.7630%" y="965" width="0.0234%" height="15" fill="rgb(229,78,22)" fg:x="29993" fg:w="8"/><text x="88.0130%" y="975.50"></text></g><g><title>__nss_passwd_lookup (54 samples, 0.16%)</title><rect x="88.3511%" y="965" width="0.1580%" height="15" fill="rgb(228,187,13)" fg:x="30194" fg:w="54"/><text x="88.6011%" y="975.50"></text></g><g><title>__libc_malloc (728 samples, 2.13%)</title><rect x="88.8222%" y="933" width="2.1302%" height="15" fill="rgb(240,119,24)" fg:x="30355" fg:w="728"/><text x="89.0722%" y="943.50">_..</text></g><g><title>_IO_str_seekoff (205 samples, 0.60%)</title><rect x="90.3526%" y="917" width="0.5999%" height="15" fill="rgb(209,194,42)" fg:x="30878" fg:w="205"/><text x="90.6026%" y="927.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (1,087 samples, 3.18%)</title><rect x="87.7893%" y="981" width="3.1807%" height="15" fill="rgb(247,200,46)" fg:x="30002" fg:w="1087"/><text x="88.0393%" y="991.50">bit..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (841 samples, 2.46%)</title><rect x="88.5091%" y="965" width="2.4609%" height="15" fill="rgb(218,76,16)" fg:x="30248" fg:w="841"/><text x="88.7591%" y="975.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (781 samples, 2.29%)</title><rect x="88.6847%" y="949" width="2.2853%" height="15" fill="rgb(225,21,48)" fg:x="30308" fg:w="781"/><text x="88.9347%" y="959.50">a..</text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="90.9554%" y="933" width="0.0146%" height="15" fill="rgb(239,223,50)" fg:x="31084" fg:w="5"/><text x="91.2054%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,239 samples, 3.63%)</title><rect x="87.3475%" y="997" width="3.6255%" height="15" fill="rgb(244,45,21)" fg:x="29851" fg:w="1239"/><text x="87.5975%" y="1007.50">&lt;all..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (4 samples, 0.01%)</title><rect x="90.9729%" y="997" width="0.0117%" height="15" fill="rgb(232,33,43)" fg:x="31090" fg:w="4"/><text x="91.2229%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.01%)</title><rect x="90.9934%" y="997" width="0.0117%" height="15" fill="rgb(209,8,3)" fg:x="31097" fg:w="4"/><text x="91.2434%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.04%)</title><rect x="91.0051%" y="997" width="0.0410%" height="15" fill="rgb(214,25,53)" fg:x="31101" fg:w="14"/><text x="91.2551%" y="1007.50"></text></g><g><title>__libc_calloc (13 samples, 0.04%)</title><rect x="91.0080%" y="981" width="0.0380%" height="15" fill="rgb(254,186,54)" fg:x="31102" fg:w="13"/><text x="91.2580%" y="991.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (6 samples, 0.02%)</title><rect x="91.0461%" y="997" width="0.0176%" height="15" fill="rgb(208,174,49)" fg:x="31115" fg:w="6"/><text x="91.2961%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="91.0490%" y="981" width="0.0146%" height="15" fill="rgb(233,191,51)" fg:x="31116" fg:w="5"/><text x="91.2990%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (1,325 samples, 3.88%)</title><rect x="87.2012%" y="1013" width="3.8771%" height="15" fill="rgb(222,134,10)" fg:x="29801" fg:w="1325"/><text x="87.4512%" y="1023.50">bitc..</text></g><g><title>core::iter::adapters::try_process (12,120 samples, 35.46%)</title><rect x="55.6284%" y="1077" width="35.4645%" height="15" fill="rgb(230,226,20)" fg:x="19011" fg:w="12120"/><text x="55.8784%" y="1087.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12,120 samples, 35.46%)</title><rect x="55.6284%" y="1061" width="35.4645%" height="15" fill="rgb(251,111,25)" fg:x="19011" fg:w="12120"/><text x="55.8784%" y="1071.50">alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12,120 samples, 35.46%)</title><rect x="55.6284%" y="1045" width="35.4645%" height="15" fill="rgb(224,40,46)" fg:x="19011" fg:w="12120"/><text x="55.8784%" y="1055.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::tr..</text></g><g><title>ord::index::fetcher::Fetcher::get_transactions::_{{closure}}::_{{closure}} (12,119 samples, 35.46%)</title><rect x="55.6313%" y="1029" width="35.4616%" height="15" fill="rgb(236,108,47)" fg:x="19012" fg:w="12119"/><text x="55.8813%" y="1039.50">ord::index::fetcher::Fetcher::get_transactions::_{{closure..</text></g><g><title>cfree (5 samples, 0.01%)</title><rect x="91.0783%" y="1013" width="0.0146%" height="15" fill="rgb(234,93,0)" fg:x="31126" fg:w="5"/><text x="91.3283%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="91.0958%" y="1045" width="0.0117%" height="15" fill="rgb(224,213,32)" fg:x="31132" fg:w="4"/><text x="91.3458%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt; (6 samples, 0.02%)</title><rect x="91.0929%" y="1077" width="0.0176%" height="15" fill="rgb(251,11,48)" fg:x="31131" fg:w="6"/><text x="91.3429%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.01%)</title><rect x="91.0958%" y="1061" width="0.0146%" height="15" fill="rgb(236,173,5)" fg:x="31132" fg:w="5"/><text x="91.3458%" y="1071.50"></text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="91.1251%" y="1029" width="0.0205%" height="15" fill="rgb(230,95,12)" fg:x="31142" fg:w="7"/><text x="91.3751%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="91.1280%" y="1013" width="0.0176%" height="15" fill="rgb(232,209,1)" fg:x="31143" fg:w="6"/><text x="91.3780%" y="1023.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="91.1280%" y="997" width="0.0176%" height="15" fill="rgb(232,6,1)" fg:x="31143" fg:w="6"/><text x="91.3780%" y="1007.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="91.1309%" y="981" width="0.0146%" height="15" fill="rgb(210,224,50)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="991.50"></text></g><g><title>do_futex (5 samples, 0.01%)</title><rect x="91.1309%" y="965" width="0.0146%" height="15" fill="rgb(228,127,35)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="975.50"></text></g><g><title>futex_wake (5 samples, 0.01%)</title><rect x="91.1309%" y="949" width="0.0146%" height="15" fill="rgb(245,102,45)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="959.50"></text></g><g><title>wake_up_q (5 samples, 0.01%)</title><rect x="91.1309%" y="933" width="0.0146%" height="15" fill="rgb(214,1,49)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="943.50"></text></g><g><title>try_to_wake_up (5 samples, 0.01%)</title><rect x="91.1309%" y="917" width="0.0146%" height="15" fill="rgb(226,163,40)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="927.50"></text></g><g><title>__lock_text_start (5 samples, 0.01%)</title><rect x="91.1309%" y="901" width="0.0146%" height="15" fill="rgb(239,212,28)" fg:x="31144" fg:w="5"/><text x="91.3809%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (26 samples, 0.08%)</title><rect x="91.1105%" y="1077" width="0.0761%" height="15" fill="rgb(220,20,13)" fg:x="31137" fg:w="26"/><text x="91.3605%" y="1087.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (22 samples, 0.06%)</title><rect x="91.1222%" y="1061" width="0.0644%" height="15" fill="rgb(210,164,35)" fg:x="31141" fg:w="22"/><text x="91.3722%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (22 samples, 0.06%)</title><rect x="91.1222%" y="1045" width="0.0644%" height="15" fill="rgb(248,109,41)" fg:x="31141" fg:w="22"/><text x="91.3722%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.04%)</title><rect x="91.1514%" y="1029" width="0.0351%" height="15" fill="rgb(238,23,50)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (12 samples, 0.04%)</title><rect x="91.1514%" y="1013" width="0.0351%" height="15" fill="rgb(211,48,49)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (12 samples, 0.04%)</title><rect x="91.1514%" y="997" width="0.0351%" height="15" fill="rgb(223,36,21)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (12 samples, 0.04%)</title><rect x="91.1514%" y="981" width="0.0351%" height="15" fill="rgb(207,123,46)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (12 samples, 0.04%)</title><rect x="91.1514%" y="965" width="0.0351%" height="15" fill="rgb(240,218,32)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="975.50"></text></g><g><title>__libc_write (12 samples, 0.04%)</title><rect x="91.1514%" y="949" width="0.0351%" height="15" fill="rgb(252,5,43)" fg:x="31151" fg:w="12"/><text x="91.4014%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.03%)</title><rect x="91.1544%" y="933" width="0.0322%" height="15" fill="rgb(252,84,19)" fg:x="31152" fg:w="11"/><text x="91.4044%" y="943.50"></text></g><g><title>do_syscall_64 (11 samples, 0.03%)</title><rect x="91.1544%" y="917" width="0.0322%" height="15" fill="rgb(243,152,39)" fg:x="31152" fg:w="11"/><text x="91.4044%" y="927.50"></text></g><g><title>__x64_sys_write (10 samples, 0.03%)</title><rect x="91.1573%" y="901" width="0.0293%" height="15" fill="rgb(234,160,15)" fg:x="31153" fg:w="10"/><text x="91.4073%" y="911.50"></text></g><g><title>ksys_write (10 samples, 0.03%)</title><rect x="91.1573%" y="885" width="0.0293%" height="15" fill="rgb(237,34,20)" fg:x="31153" fg:w="10"/><text x="91.4073%" y="895.50"></text></g><g><title>vfs_write (10 samples, 0.03%)</title><rect x="91.1573%" y="869" width="0.0293%" height="15" fill="rgb(229,97,13)" fg:x="31153" fg:w="10"/><text x="91.4073%" y="879.50"></text></g><g><title>__vfs_write (9 samples, 0.03%)</title><rect x="91.1602%" y="853" width="0.0263%" height="15" fill="rgb(234,71,50)" fg:x="31154" fg:w="9"/><text x="91.4102%" y="863.50"></text></g><g><title>eventfd_write (9 samples, 0.03%)</title><rect x="91.1602%" y="837" width="0.0263%" height="15" fill="rgb(253,155,4)" fg:x="31154" fg:w="9"/><text x="91.4102%" y="847.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.02%)</title><rect x="91.1982%" y="1029" width="0.0205%" height="15" fill="rgb(222,185,37)" fg:x="31167" fg:w="7"/><text x="91.4482%" y="1039.50"></text></g><g><title>cfree (12 samples, 0.04%)</title><rect x="91.2187%" y="1029" width="0.0351%" height="15" fill="rgb(251,177,13)" fg:x="31174" fg:w="12"/><text x="91.4687%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 0.08%)</title><rect x="91.1924%" y="1077" width="0.0790%" height="15" fill="rgb(250,179,40)" fg:x="31165" fg:w="27"/><text x="91.4424%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (27 samples, 0.08%)</title><rect x="91.1924%" y="1061" width="0.0790%" height="15" fill="rgb(242,44,2)" fg:x="31165" fg:w="27"/><text x="91.4424%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (27 samples, 0.08%)</title><rect x="91.1924%" y="1045" width="0.0790%" height="15" fill="rgb(216,177,13)" fg:x="31165" fg:w="27"/><text x="91.4424%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.02%)</title><rect x="91.2538%" y="1029" width="0.0176%" height="15" fill="rgb(216,106,43)" fg:x="31186" fg:w="6"/><text x="91.5038%" y="1039.50"></text></g><g><title>__libc_malloc (5 samples, 0.01%)</title><rect x="91.2919%" y="1061" width="0.0146%" height="15" fill="rgb(216,183,2)" fg:x="31199" fg:w="5"/><text x="91.5419%" y="1071.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::request (7 samples, 0.02%)</title><rect x="91.2919%" y="1077" width="0.0205%" height="15" fill="rgb(249,75,3)" fg:x="31199" fg:w="7"/><text x="91.5419%" y="1087.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (7 samples, 0.02%)</title><rect x="91.3299%" y="997" width="0.0205%" height="15" fill="rgb(219,67,39)" fg:x="31212" fg:w="7"/><text x="91.5799%" y="1007.50"></text></g><g><title>core::str::converts::from_utf8 (4 samples, 0.01%)</title><rect x="91.3387%" y="981" width="0.0117%" height="15" fill="rgb(253,228,2)" fg:x="31215" fg:w="4"/><text x="91.5887%" y="991.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,564 samples, 4.58%)</title><rect x="91.4001%" y="965" width="4.5764%" height="15" fill="rgb(235,138,27)" fg:x="31236" fg:w="1564"/><text x="91.6501%" y="975.50">&lt;serd..</text></g><g><title>core::str::converts::from_utf8 (68 samples, 0.20%)</title><rect x="95.7776%" y="949" width="0.1990%" height="15" fill="rgb(236,97,51)" fg:x="32732" fg:w="68"/><text x="96.0276%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (67 samples, 0.20%)</title><rect x="95.7805%" y="933" width="0.1960%" height="15" fill="rgb(240,80,30)" fg:x="32733" fg:w="67"/><text x="96.0305%" y="943.50"></text></g><g><title>__libc_malloc (23 samples, 0.07%)</title><rect x="95.9766%" y="965" width="0.0673%" height="15" fill="rgb(230,178,19)" fg:x="32800" fg:w="23"/><text x="96.2266%" y="975.50"></text></g><g><title>_IO_str_seekoff (14 samples, 0.04%)</title><rect x="96.0029%" y="949" width="0.0410%" height="15" fill="rgb(210,190,27)" fg:x="32809" fg:w="14"/><text x="96.2529%" y="959.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,758 samples, 5.14%)</title><rect x="91.3153%" y="1029" width="5.1441%" height="15" fill="rgb(222,107,31)" fg:x="31207" fg:w="1758"/><text x="91.5653%" y="1039.50">&lt;serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,757 samples, 5.14%)</title><rect x="91.3182%" y="1013" width="5.1412%" height="15" fill="rgb(216,127,34)" fg:x="31208" fg:w="1757"/><text x="91.5682%" y="1023.50">&lt;&amp;mut ..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1,746 samples, 5.11%)</title><rect x="91.3504%" y="997" width="5.1090%" height="15" fill="rgb(234,116,52)" fg:x="31219" fg:w="1746"/><text x="91.6004%" y="1007.50">serde:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,730 samples, 5.06%)</title><rect x="91.3972%" y="981" width="5.0622%" height="15" fill="rgb(222,124,15)" fg:x="31235" fg:w="1730"/><text x="91.6472%" y="991.50">&lt;&amp;mut ..</text></g><g><title>__nss_passwd_lookup (142 samples, 0.42%)</title><rect x="96.0439%" y="965" width="0.4155%" height="15" fill="rgb(231,179,28)" fg:x="32823" fg:w="142"/><text x="96.2939%" y="975.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,765 samples, 5.16%)</title><rect x="91.3124%" y="1045" width="5.1646%" height="15" fill="rgb(226,93,45)" fg:x="31206" fg:w="1765"/><text x="91.5624%" y="1055.50">&lt;serde..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.02%)</title><rect x="96.4594%" y="1029" width="0.0176%" height="15" fill="rgb(215,8,51)" fg:x="32965" fg:w="6"/><text x="96.7094%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="96.4623%" y="1013" width="0.0146%" height="15" fill="rgb(223,106,5)" fg:x="32966" fg:w="5"/><text x="96.7123%" y="1023.50"></text></g><g><title>realloc (4 samples, 0.01%)</title><rect x="96.4653%" y="997" width="0.0117%" height="15" fill="rgb(250,191,5)" fg:x="32967" fg:w="4"/><text x="96.7153%" y="1007.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (14,733 samples, 43.11%)</title><rect x="53.3694%" y="1109" width="43.1105%" height="15" fill="rgb(242,132,44)" fg:x="18239" fg:w="14733"/><text x="53.6194%" y="1119.50">&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::fut..</text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,731 samples, 43.10%)</title><rect x="53.3753%" y="1093" width="43.1046%" height="15" fill="rgb(251,152,29)" fg:x="18241" fg:w="14731"/><text x="53.6253%" y="1103.50">&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::futur..</text></g><g><title>serde_json::de::from_slice (1,766 samples, 5.17%)</title><rect x="91.3124%" y="1077" width="5.1675%" height="15" fill="rgb(218,179,5)" fg:x="31206" fg:w="1766"/><text x="91.5624%" y="1087.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,766 samples, 5.17%)</title><rect x="91.3124%" y="1061" width="5.1675%" height="15" fill="rgb(227,67,19)" fg:x="31206" fg:w="1766"/><text x="91.5624%" y="1071.50">&lt;&amp;mut ..</text></g><g><title>__libc_malloc (23 samples, 0.07%)</title><rect x="96.4887%" y="1109" width="0.0673%" height="15" fill="rgb(233,119,31)" fg:x="32975" fg:w="23"/><text x="96.7387%" y="1119.50"></text></g><g><title>_IO_str_seekoff (22 samples, 0.06%)</title><rect x="96.4916%" y="1093" width="0.0644%" height="15" fill="rgb(241,120,22)" fg:x="32976" fg:w="22"/><text x="96.7416%" y="1103.50"></text></g><g><title>_IO_str_seekoff (12 samples, 0.04%)</title><rect x="96.5208%" y="1077" width="0.0351%" height="15" fill="rgb(224,102,30)" fg:x="32986" fg:w="12"/><text x="96.7708%" y="1087.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="96.5560%" y="1109" width="0.0234%" height="15" fill="rgb(210,164,37)" fg:x="32998" fg:w="8"/><text x="96.8060%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.04%)</title><rect x="96.5794%" y="1109" width="0.0439%" height="15" fill="rgb(226,191,16)" fg:x="33006" fg:w="15"/><text x="96.8294%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.04%)</title><rect x="96.5794%" y="1093" width="0.0439%" height="15" fill="rgb(214,40,45)" fg:x="33006" fg:w="15"/><text x="96.8294%" y="1103.50"></text></g><g><title>realloc (15 samples, 0.04%)</title><rect x="96.5794%" y="1077" width="0.0439%" height="15" fill="rgb(244,29,26)" fg:x="33006" fg:w="15"/><text x="96.8294%" y="1087.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.04%)</title><rect x="96.5794%" y="1061" width="0.0439%" height="15" fill="rgb(216,16,5)" fg:x="33006" fg:w="15"/><text x="96.8294%" y="1071.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.04%)</title><rect x="96.5794%" y="1045" width="0.0439%" height="15" fill="rgb(249,76,35)" fg:x="33006" fg:w="15"/><text x="96.8294%" y="1055.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.03%)</title><rect x="96.5940%" y="1029" width="0.0293%" height="15" fill="rgb(207,11,44)" fg:x="33011" fg:w="10"/><text x="96.8440%" y="1039.50"></text></g><g><title>cfree (5 samples, 0.01%)</title><rect x="96.6233%" y="1109" width="0.0146%" height="15" fill="rgb(228,190,49)" fg:x="33021" fg:w="5"/><text x="96.8733%" y="1119.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.01%)</title><rect x="96.6262%" y="1093" width="0.0117%" height="15" fill="rgb(214,173,12)" fg:x="33022" fg:w="4"/><text x="96.8762%" y="1103.50"></text></g><g><title>futex_wait_queue_me (21 samples, 0.06%)</title><rect x="96.6759%" y="949" width="0.0614%" height="15" fill="rgb(218,26,35)" fg:x="33039" fg:w="21"/><text x="96.9259%" y="959.50"></text></g><g><title>schedule (20 samples, 0.06%)</title><rect x="96.6789%" y="933" width="0.0585%" height="15" fill="rgb(220,200,19)" fg:x="33040" fg:w="20"/><text x="96.9289%" y="943.50"></text></g><g><title>__sched_text_start (20 samples, 0.06%)</title><rect x="96.6789%" y="917" width="0.0585%" height="15" fill="rgb(239,95,49)" fg:x="33040" fg:w="20"/><text x="96.9289%" y="927.50"></text></g><g><title>finish_task_switch (20 samples, 0.06%)</title><rect x="96.6789%" y="901" width="0.0585%" height="15" fill="rgb(235,85,53)" fg:x="33040" fg:w="20"/><text x="96.9289%" y="911.50"></text></g><g><title>tokio::runtime::park::Inner::park (30 samples, 0.09%)</title><rect x="96.6554%" y="1109" width="0.0878%" height="15" fill="rgb(233,133,31)" fg:x="33032" fg:w="30"/><text x="96.9054%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (29 samples, 0.08%)</title><rect x="96.6584%" y="1093" width="0.0849%" height="15" fill="rgb(218,25,20)" fg:x="33033" fg:w="29"/><text x="96.9084%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (29 samples, 0.08%)</title><rect x="96.6584%" y="1077" width="0.0849%" height="15" fill="rgb(252,210,38)" fg:x="33033" fg:w="29"/><text x="96.9084%" y="1087.50"></text></g><g><title>std::sys::unix::futex::futex_wait (28 samples, 0.08%)</title><rect x="96.6613%" y="1061" width="0.0819%" height="15" fill="rgb(242,134,21)" fg:x="33034" fg:w="28"/><text x="96.9113%" y="1071.50"></text></g><g><title>syscall (28 samples, 0.08%)</title><rect x="96.6613%" y="1045" width="0.0819%" height="15" fill="rgb(213,28,48)" fg:x="33034" fg:w="28"/><text x="96.9113%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.08%)</title><rect x="96.6613%" y="1029" width="0.0819%" height="15" fill="rgb(250,196,2)" fg:x="33034" fg:w="28"/><text x="96.9113%" y="1039.50"></text></g><g><title>do_syscall_64 (28 samples, 0.08%)</title><rect x="96.6613%" y="1013" width="0.0819%" height="15" fill="rgb(227,5,17)" fg:x="33034" fg:w="28"/><text x="96.9113%" y="1023.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.08%)</title><rect x="96.6672%" y="997" width="0.0761%" height="15" fill="rgb(221,226,24)" fg:x="33036" fg:w="26"/><text x="96.9172%" y="1007.50"></text></g><g><title>do_futex (26 samples, 0.08%)</title><rect x="96.6672%" y="981" width="0.0761%" height="15" fill="rgb(211,5,48)" fg:x="33036" fg:w="26"/><text x="96.9172%" y="991.50"></text></g><g><title>futex_wait (24 samples, 0.07%)</title><rect x="96.6730%" y="965" width="0.0702%" height="15" fill="rgb(219,150,6)" fg:x="33038" fg:w="24"/><text x="96.9230%" y="975.50"></text></g><g><title>clone (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1237" width="96.2985%" height="15" fill="rgb(251,46,16)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1247.50">clone</text></g><g><title>start_thread (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1221" width="96.2985%" height="15" fill="rgb(220,204,40)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1205" width="96.2985%" height="15" fill="rgb(211,85,2)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1215.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1189" width="96.2985%" height="15" fill="rgb(229,17,7)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1173" width="96.2985%" height="15" fill="rgb(239,72,28)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1157" width="96.2985%" height="15" fill="rgb(230,47,54)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32,910 samples, 96.30%)</title><rect x="0.4682%" y="1141" width="96.2985%" height="15" fill="rgb(214,50,8)" fg:x="160" fg:w="32910"/><text x="0.7182%" y="1151.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (15,396 samples, 45.05%)</title><rect x="51.7162%" y="1125" width="45.0505%" height="15" fill="rgb(216,198,43)" fg:x="17674" fg:w="15396"/><text x="51.9662%" y="1135.50">tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (8 samples, 0.02%)</title><rect x="96.7432%" y="1109" width="0.0234%" height="15" fill="rgb(234,20,35)" fg:x="33062" fg:w="8"/><text x="96.9932%" y="1119.50"></text></g><g><title>ord (33,071 samples, 96.77%)</title><rect x="0.0000%" y="1253" width="96.7696%" height="15" fill="rgb(254,45,19)" fg:x="0" fg:w="33071"/><text x="0.2500%" y="1263.50">ord</text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (8 samples, 0.02%)</title><rect x="96.7959%" y="1045" width="0.0234%" height="15" fill="rgb(219,14,44)" fg:x="33080" fg:w="8"/><text x="97.0459%" y="1055.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (8 samples, 0.02%)</title><rect x="96.7959%" y="1029" width="0.0234%" height="15" fill="rgb(217,220,26)" fg:x="33080" fg:w="8"/><text x="97.0459%" y="1039.50"></text></g><g><title>httparse::parse_headers_iter_uninit (7 samples, 0.02%)</title><rect x="96.7988%" y="1013" width="0.0205%" height="15" fill="rgb(213,158,28)" fg:x="33081" fg:w="7"/><text x="97.0488%" y="1023.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="96.7696%" y="1237" width="0.0527%" height="15" fill="rgb(252,51,52)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (18 samples, 0.05%)</title><rect x="96.7696%" y="1221" width="0.0527%" height="15" fill="rgb(246,89,16)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (18 samples, 0.05%)</title><rect x="96.7696%" y="1205" width="0.0527%" height="15" fill="rgb(216,158,49)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (18 samples, 0.05%)</title><rect x="96.7696%" y="1189" width="0.0527%" height="15" fill="rgb(236,107,19)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.05%)</title><rect x="96.7696%" y="1173" width="0.0527%" height="15" fill="rgb(228,185,30)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.05%)</title><rect x="96.7696%" y="1157" width="0.0527%" height="15" fill="rgb(246,134,8)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1167.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (18 samples, 0.05%)</title><rect x="96.7696%" y="1141" width="0.0527%" height="15" fill="rgb(214,143,50)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1151.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (18 samples, 0.05%)</title><rect x="96.7696%" y="1125" width="0.0527%" height="15" fill="rgb(228,75,8)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (18 samples, 0.05%)</title><rect x="96.7696%" y="1109" width="0.0527%" height="15" fill="rgb(207,175,4)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1119.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (18 samples, 0.05%)</title><rect x="96.7696%" y="1093" width="0.0527%" height="15" fill="rgb(205,108,24)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1103.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (18 samples, 0.05%)</title><rect x="96.7696%" y="1077" width="0.0527%" height="15" fill="rgb(244,120,49)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1087.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (18 samples, 0.05%)</title><rect x="96.7696%" y="1061" width="0.0527%" height="15" fill="rgb(223,47,38)" fg:x="33071" fg:w="18"/><text x="97.0196%" y="1071.50"></text></g><g><title>pow (14 samples, 0.04%)</title><rect x="96.8661%" y="1029" width="0.0410%" height="15" fill="rgb(229,179,11)" fg:x="33104" fg:w="14"/><text x="97.1161%" y="1039.50"></text></g><g><title>__iscanonicall (10 samples, 0.03%)</title><rect x="96.8778%" y="1013" width="0.0293%" height="15" fill="rgb(231,122,1)" fg:x="33108" fg:w="10"/><text x="97.1278%" y="1023.50"></text></g><g><title>futex_wait_queue_me (72 samples, 0.21%)</title><rect x="96.9744%" y="853" width="0.2107%" height="15" fill="rgb(245,119,9)" fg:x="33141" fg:w="72"/><text x="97.2244%" y="863.50"></text></g><g><title>schedule (72 samples, 0.21%)</title><rect x="96.9744%" y="837" width="0.2107%" height="15" fill="rgb(241,163,25)" fg:x="33141" fg:w="72"/><text x="97.2244%" y="847.50"></text></g><g><title>__sched_text_start (69 samples, 0.20%)</title><rect x="96.9832%" y="821" width="0.2019%" height="15" fill="rgb(217,214,3)" fg:x="33144" fg:w="69"/><text x="97.2332%" y="831.50"></text></g><g><title>finish_task_switch (68 samples, 0.20%)</title><rect x="96.9861%" y="805" width="0.1990%" height="15" fill="rgb(240,86,28)" fg:x="33145" fg:w="68"/><text x="97.2361%" y="815.50"></text></g><g><title>std::sys::unix::futex::futex_wait (82 samples, 0.24%)</title><rect x="96.9481%" y="965" width="0.2399%" height="15" fill="rgb(215,47,9)" fg:x="33132" fg:w="82"/><text x="97.1981%" y="975.50"></text></g><g><title>syscall (81 samples, 0.24%)</title><rect x="96.9510%" y="949" width="0.2370%" height="15" fill="rgb(252,25,45)" fg:x="33133" fg:w="81"/><text x="97.2010%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (78 samples, 0.23%)</title><rect x="96.9598%" y="933" width="0.2282%" height="15" fill="rgb(251,164,9)" fg:x="33136" fg:w="78"/><text x="97.2098%" y="943.50"></text></g><g><title>do_syscall_64 (78 samples, 0.23%)</title><rect x="96.9598%" y="917" width="0.2282%" height="15" fill="rgb(233,194,0)" fg:x="33136" fg:w="78"/><text x="97.2098%" y="927.50"></text></g><g><title>__x64_sys_futex (77 samples, 0.23%)</title><rect x="96.9627%" y="901" width="0.2253%" height="15" fill="rgb(249,111,24)" fg:x="33137" fg:w="77"/><text x="97.2127%" y="911.50"></text></g><g><title>do_futex (76 samples, 0.22%)</title><rect x="96.9656%" y="885" width="0.2224%" height="15" fill="rgb(250,223,3)" fg:x="33138" fg:w="76"/><text x="97.2156%" y="895.50"></text></g><g><title>futex_wait (74 samples, 0.22%)</title><rect x="96.9715%" y="869" width="0.2165%" height="15" fill="rgb(236,178,37)" fg:x="33140" fg:w="74"/><text x="97.2215%" y="879.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (83 samples, 0.24%)</title><rect x="96.9481%" y="997" width="0.2429%" height="15" fill="rgb(241,158,50)" fg:x="33132" fg:w="83"/><text x="97.1981%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (83 samples, 0.24%)</title><rect x="96.9481%" y="981" width="0.2429%" height="15" fill="rgb(213,121,41)" fg:x="33132" fg:w="83"/><text x="97.1981%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (10 samples, 0.03%)</title><rect x="97.1909%" y="997" width="0.0293%" height="15" fill="rgb(240,92,3)" fg:x="33215" fg:w="10"/><text x="97.4409%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.01%)</title><rect x="97.2377%" y="981" width="0.0146%" height="15" fill="rgb(205,123,3)" fg:x="33231" fg:w="5"/><text x="97.4877%" y="991.50"></text></g><g><title>__clock_gettime (4 samples, 0.01%)</title><rect x="97.2407%" y="965" width="0.0117%" height="15" fill="rgb(205,97,47)" fg:x="33232" fg:w="4"/><text x="97.4907%" y="975.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="97.2641%" y="965" width="0.0146%" height="15" fill="rgb(247,152,14)" fg:x="33240" fg:w="5"/><text x="97.5141%" y="975.50"></text></g><g><title>ep_item_poll.isra.16 (9 samples, 0.03%)</title><rect x="97.3460%" y="821" width="0.0263%" height="15" fill="rgb(248,195,53)" fg:x="33268" fg:w="9"/><text x="97.5960%" y="831.50"></text></g><g><title>sock_poll (4 samples, 0.01%)</title><rect x="97.3606%" y="805" width="0.0117%" height="15" fill="rgb(226,201,16)" fg:x="33273" fg:w="4"/><text x="97.6106%" y="815.50"></text></g><g><title>ep_send_events_proc (12 samples, 0.04%)</title><rect x="97.3402%" y="837" width="0.0351%" height="15" fill="rgb(205,98,0)" fg:x="33266" fg:w="12"/><text x="97.5902%" y="847.50"></text></g><g><title>ep_scan_ready_list.constprop.20 (17 samples, 0.05%)</title><rect x="97.3343%" y="853" width="0.0497%" height="15" fill="rgb(214,191,48)" fg:x="33264" fg:w="17"/><text x="97.5843%" y="863.50"></text></g><g><title>schedule_hrtimeout_range (105 samples, 0.31%)</title><rect x="97.3841%" y="853" width="0.3072%" height="15" fill="rgb(237,112,39)" fg:x="33281" fg:w="105"/><text x="97.6341%" y="863.50"></text></g><g><title>schedule_hrtimeout_range_clock (103 samples, 0.30%)</title><rect x="97.3899%" y="837" width="0.3014%" height="15" fill="rgb(247,203,27)" fg:x="33283" fg:w="103"/><text x="97.6399%" y="847.50"></text></g><g><title>schedule (97 samples, 0.28%)</title><rect x="97.4075%" y="821" width="0.2838%" height="15" fill="rgb(235,124,28)" fg:x="33289" fg:w="97"/><text x="97.6575%" y="831.50"></text></g><g><title>__sched_text_start (96 samples, 0.28%)</title><rect x="97.4104%" y="805" width="0.2809%" height="15" fill="rgb(208,207,46)" fg:x="33290" fg:w="96"/><text x="97.6604%" y="815.50"></text></g><g><title>finish_task_switch (96 samples, 0.28%)</title><rect x="97.4104%" y="789" width="0.2809%" height="15" fill="rgb(234,176,4)" fg:x="33290" fg:w="96"/><text x="97.6604%" y="799.50"></text></g><g><title>ep_poll (128 samples, 0.37%)</title><rect x="97.3197%" y="869" width="0.3745%" height="15" fill="rgb(230,133,28)" fg:x="33259" fg:w="128"/><text x="97.5697%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (132 samples, 0.39%)</title><rect x="97.3138%" y="933" width="0.3862%" height="15" fill="rgb(211,137,40)" fg:x="33257" fg:w="132"/><text x="97.5638%" y="943.50"></text></g><g><title>do_syscall_64 (132 samples, 0.39%)</title><rect x="97.3138%" y="917" width="0.3862%" height="15" fill="rgb(254,35,13)" fg:x="33257" fg:w="132"/><text x="97.5638%" y="927.50"></text></g><g><title>__x64_sys_epoll_wait (132 samples, 0.39%)</title><rect x="97.3138%" y="901" width="0.3862%" height="15" fill="rgb(225,49,51)" fg:x="33257" fg:w="132"/><text x="97.5638%" y="911.50"></text></g><g><title>do_epoll_wait (132 samples, 0.39%)</title><rect x="97.3138%" y="885" width="0.3862%" height="15" fill="rgb(251,10,15)" fg:x="33257" fg:w="132"/><text x="97.5638%" y="895.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (141 samples, 0.41%)</title><rect x="97.2904%" y="965" width="0.4126%" height="15" fill="rgb(228,207,15)" fg:x="33249" fg:w="141"/><text x="97.5404%" y="975.50"></text></g><g><title>epoll_wait (140 samples, 0.41%)</title><rect x="97.2933%" y="949" width="0.4097%" height="15" fill="rgb(241,99,19)" fg:x="33250" fg:w="140"/><text x="97.5433%" y="959.50"></text></g><g><title>tokio::runtime::io::Driver::turn (156 samples, 0.46%)</title><rect x="97.2553%" y="981" width="0.4565%" height="15" fill="rgb(207,104,49)" fg:x="33237" fg:w="156"/><text x="97.5053%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (268 samples, 0.78%)</title><rect x="96.9305%" y="1029" width="0.7842%" height="15" fill="rgb(234,99,18)" fg:x="33126" fg:w="268"/><text x="97.1805%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (266 samples, 0.78%)</title><rect x="96.9364%" y="1013" width="0.7783%" height="15" fill="rgb(213,191,49)" fg:x="33128" fg:w="266"/><text x="97.1864%" y="1023.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (169 samples, 0.49%)</title><rect x="97.2202%" y="997" width="0.4945%" height="15" fill="rgb(210,226,19)" fg:x="33225" fg:w="169"/><text x="97.4702%" y="1007.50"></text></g><g><title>syscall (67 samples, 0.20%)</title><rect x="97.7323%" y="1013" width="0.1960%" height="15" fill="rgb(229,97,18)" fg:x="33400" fg:w="67"/><text x="97.9823%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.19%)</title><rect x="97.7381%" y="997" width="0.1902%" height="15" fill="rgb(211,167,15)" fg:x="33402" fg:w="65"/><text x="97.9881%" y="1007.50"></text></g><g><title>do_syscall_64 (65 samples, 0.19%)</title><rect x="97.7381%" y="981" width="0.1902%" height="15" fill="rgb(210,169,34)" fg:x="33402" fg:w="65"/><text x="97.9881%" y="991.50"></text></g><g><title>__x64_sys_futex (64 samples, 0.19%)</title><rect x="97.7410%" y="965" width="0.1873%" height="15" fill="rgb(241,121,31)" fg:x="33403" fg:w="64"/><text x="97.9910%" y="975.50"></text></g><g><title>do_futex (64 samples, 0.19%)</title><rect x="97.7410%" y="949" width="0.1873%" height="15" fill="rgb(232,40,11)" fg:x="33403" fg:w="64"/><text x="97.9910%" y="959.50"></text></g><g><title>futex_wake (64 samples, 0.19%)</title><rect x="97.7410%" y="933" width="0.1873%" height="15" fill="rgb(205,86,26)" fg:x="33403" fg:w="64"/><text x="97.9910%" y="943.50"></text></g><g><title>wake_up_q (63 samples, 0.18%)</title><rect x="97.7440%" y="917" width="0.1843%" height="15" fill="rgb(231,126,28)" fg:x="33404" fg:w="63"/><text x="97.9940%" y="927.50"></text></g><g><title>try_to_wake_up (63 samples, 0.18%)</title><rect x="97.7440%" y="901" width="0.1843%" height="15" fill="rgb(219,221,18)" fg:x="33404" fg:w="63"/><text x="97.9940%" y="911.50"></text></g><g><title>__lock_text_start (63 samples, 0.18%)</title><rect x="97.7440%" y="885" width="0.1843%" height="15" fill="rgb(211,40,0)" fg:x="33404" fg:w="63"/><text x="97.9940%" y="895.50"></text></g><g><title>__vfs_write (24 samples, 0.07%)</title><rect x="97.9371%" y="837" width="0.0702%" height="15" fill="rgb(239,85,43)" fg:x="33470" fg:w="24"/><text x="98.1871%" y="847.50"></text></g><g><title>eventfd_write (24 samples, 0.07%)</title><rect x="97.9371%" y="821" width="0.0702%" height="15" fill="rgb(231,55,21)" fg:x="33470" fg:w="24"/><text x="98.1871%" y="831.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (25 samples, 0.07%)</title><rect x="97.9371%" y="997" width="0.0732%" height="15" fill="rgb(225,184,43)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (25 samples, 0.07%)</title><rect x="97.9371%" y="981" width="0.0732%" height="15" fill="rgb(251,158,41)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (25 samples, 0.07%)</title><rect x="97.9371%" y="965" width="0.0732%" height="15" fill="rgb(234,159,37)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (25 samples, 0.07%)</title><rect x="97.9371%" y="949" width="0.0732%" height="15" fill="rgb(216,204,22)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="959.50"></text></g><g><title>__libc_write (25 samples, 0.07%)</title><rect x="97.9371%" y="933" width="0.0732%" height="15" fill="rgb(214,17,3)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.07%)</title><rect x="97.9371%" y="917" width="0.0732%" height="15" fill="rgb(212,111,17)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="927.50"></text></g><g><title>do_syscall_64 (25 samples, 0.07%)</title><rect x="97.9371%" y="901" width="0.0732%" height="15" fill="rgb(221,157,24)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="911.50"></text></g><g><title>__x64_sys_write (25 samples, 0.07%)</title><rect x="97.9371%" y="885" width="0.0732%" height="15" fill="rgb(252,16,13)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="895.50"></text></g><g><title>ksys_write (25 samples, 0.07%)</title><rect x="97.9371%" y="869" width="0.0732%" height="15" fill="rgb(221,62,2)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="879.50"></text></g><g><title>vfs_write (25 samples, 0.07%)</title><rect x="97.9371%" y="853" width="0.0732%" height="15" fill="rgb(247,87,22)" fg:x="33470" fg:w="25"/><text x="98.1871%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (28 samples, 0.08%)</title><rect x="97.9312%" y="1013" width="0.0819%" height="15" fill="rgb(215,73,9)" fg:x="33468" fg:w="28"/><text x="98.1812%" y="1023.50"></text></g><g><title>&lt;hyper::client::dispatch::Callback&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="98.0892%" y="853" width="0.0117%" height="15" fill="rgb(207,175,33)" fg:x="33522" fg:w="4"/><text x="98.3392%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="98.0892%" y="869" width="0.0146%" height="15" fill="rgb(243,129,54)" fg:x="33522" fg:w="5"/><text x="98.3392%" y="879.50"></text></g><g><title>syscall (17 samples, 0.05%)</title><rect x="98.1068%" y="837" width="0.0497%" height="15" fill="rgb(227,119,45)" fg:x="33528" fg:w="17"/><text x="98.3568%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.05%)</title><rect x="98.1068%" y="821" width="0.0497%" height="15" fill="rgb(205,109,36)" fg:x="33528" fg:w="17"/><text x="98.3568%" y="831.50"></text></g><g><title>do_syscall_64 (17 samples, 0.05%)</title><rect x="98.1068%" y="805" width="0.0497%" height="15" fill="rgb(205,6,39)" fg:x="33528" fg:w="17"/><text x="98.3568%" y="815.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.05%)</title><rect x="98.1068%" y="789" width="0.0497%" height="15" fill="rgb(221,32,16)" fg:x="33528" fg:w="17"/><text x="98.3568%" y="799.50"></text></g><g><title>do_futex (17 samples, 0.05%)</title><rect x="98.1068%" y="773" width="0.0497%" height="15" fill="rgb(228,144,50)" fg:x="33528" fg:w="17"/><text x="98.3568%" y="783.50"></text></g><g><title>futex_wake (16 samples, 0.05%)</title><rect x="98.1097%" y="757" width="0.0468%" height="15" fill="rgb(229,201,53)" fg:x="33529" fg:w="16"/><text x="98.3597%" y="767.50"></text></g><g><title>wake_up_q (14 samples, 0.04%)</title><rect x="98.1156%" y="741" width="0.0410%" height="15" fill="rgb(249,153,27)" fg:x="33531" fg:w="14"/><text x="98.3656%" y="751.50"></text></g><g><title>try_to_wake_up (14 samples, 0.04%)</title><rect x="98.1156%" y="725" width="0.0410%" height="15" fill="rgb(227,106,25)" fg:x="33531" fg:w="14"/><text x="98.3656%" y="735.50"></text></g><g><title>__lock_text_start (14 samples, 0.04%)</title><rect x="98.1156%" y="709" width="0.0410%" height="15" fill="rgb(230,65,29)" fg:x="33531" fg:w="14"/><text x="98.3656%" y="719.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (18 samples, 0.05%)</title><rect x="98.1068%" y="853" width="0.0527%" height="15" fill="rgb(221,57,46)" fg:x="33528" fg:w="18"/><text x="98.3568%" y="863.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (27 samples, 0.08%)</title><rect x="98.0892%" y="885" width="0.0790%" height="15" fill="rgb(229,161,17)" fg:x="33522" fg:w="27"/><text x="98.3392%" y="895.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (22 samples, 0.06%)</title><rect x="98.1039%" y="869" width="0.0644%" height="15" fill="rgb(222,213,11)" fg:x="33527" fg:w="22"/><text x="98.3539%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (31 samples, 0.09%)</title><rect x="98.0863%" y="901" width="0.0907%" height="15" fill="rgb(235,35,13)" fg:x="33521" fg:w="31"/><text x="98.3363%" y="911.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="98.1887%" y="885" width="0.0117%" height="15" fill="rgb(233,158,34)" fg:x="33556" fg:w="4"/><text x="98.4387%" y="895.50"></text></g><g><title>__libc_malloc (6 samples, 0.02%)</title><rect x="98.2004%" y="869" width="0.0176%" height="15" fill="rgb(215,151,48)" fg:x="33560" fg:w="6"/><text x="98.4504%" y="879.50"></text></g><g><title>_IO_str_seekoff (5 samples, 0.01%)</title><rect x="98.2034%" y="853" width="0.0146%" height="15" fill="rgb(229,84,14)" fg:x="33561" fg:w="5"/><text x="98.4534%" y="863.50"></text></g><g><title>hyper::body::body::Body::new_channel (12 samples, 0.04%)</title><rect x="98.1858%" y="901" width="0.0351%" height="15" fill="rgb(229,68,14)" fg:x="33555" fg:w="12"/><text x="98.4358%" y="911.50"></text></g><g><title>futures_channel::mpsc::channel (7 samples, 0.02%)</title><rect x="98.2004%" y="885" width="0.0205%" height="15" fill="rgb(243,106,26)" fg:x="33560" fg:w="7"/><text x="98.4504%" y="895.50"></text></g><g><title>hyper::body::body::Sender::poll_ready (5 samples, 0.01%)</title><rect x="98.2209%" y="901" width="0.0146%" height="15" fill="rgb(206,45,38)" fg:x="33567" fg:w="5"/><text x="98.4709%" y="911.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (16 samples, 0.05%)</title><rect x="98.2356%" y="901" width="0.0468%" height="15" fill="rgb(226,6,15)" fg:x="33572" fg:w="16"/><text x="98.4856%" y="911.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (16 samples, 0.05%)</title><rect x="98.2356%" y="885" width="0.0468%" height="15" fill="rgb(232,22,54)" fg:x="33572" fg:w="16"/><text x="98.4856%" y="895.50"></text></g><g><title>tokio::runtime::park::wake (13 samples, 0.04%)</title><rect x="98.2443%" y="869" width="0.0380%" height="15" fill="rgb(229,222,32)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="879.50"></text></g><g><title>syscall (13 samples, 0.04%)</title><rect x="98.2443%" y="853" width="0.0380%" height="15" fill="rgb(228,62,29)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.04%)</title><rect x="98.2443%" y="837" width="0.0380%" height="15" fill="rgb(251,103,34)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="847.50"></text></g><g><title>do_syscall_64 (13 samples, 0.04%)</title><rect x="98.2443%" y="821" width="0.0380%" height="15" fill="rgb(233,12,30)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="831.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.04%)</title><rect x="98.2443%" y="805" width="0.0380%" height="15" fill="rgb(238,52,0)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="815.50"></text></g><g><title>do_futex (13 samples, 0.04%)</title><rect x="98.2443%" y="789" width="0.0380%" height="15" fill="rgb(223,98,5)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="799.50"></text></g><g><title>futex_wake (13 samples, 0.04%)</title><rect x="98.2443%" y="773" width="0.0380%" height="15" fill="rgb(228,75,37)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="783.50"></text></g><g><title>wake_up_q (13 samples, 0.04%)</title><rect x="98.2443%" y="757" width="0.0380%" height="15" fill="rgb(205,115,49)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="767.50"></text></g><g><title>try_to_wake_up (13 samples, 0.04%)</title><rect x="98.2443%" y="741" width="0.0380%" height="15" fill="rgb(250,154,43)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="751.50"></text></g><g><title>__lock_text_start (13 samples, 0.04%)</title><rect x="98.2443%" y="725" width="0.0380%" height="15" fill="rgb(226,43,29)" fg:x="33575" fg:w="13"/><text x="98.4943%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.02%)</title><rect x="98.2941%" y="885" width="0.0205%" height="15" fill="rgb(249,228,39)" fg:x="33592" fg:w="7"/><text x="98.5441%" y="895.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (7 samples, 0.02%)</title><rect x="98.3146%" y="885" width="0.0205%" height="15" fill="rgb(216,79,43)" fg:x="33599" fg:w="7"/><text x="98.5646%" y="895.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (19 samples, 0.06%)</title><rect x="98.2824%" y="901" width="0.0556%" height="15" fill="rgb(228,95,12)" fg:x="33588" fg:w="19"/><text x="98.5324%" y="911.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.02%)</title><rect x="98.3584%" y="869" width="0.0176%" height="15" fill="rgb(249,221,15)" fg:x="33614" fg:w="6"/><text x="98.6084%" y="879.50"></text></g><g><title>bytes::bytes::promotable_even_drop (6 samples, 0.02%)</title><rect x="98.3584%" y="853" width="0.0176%" height="15" fill="rgb(233,34,13)" fg:x="33614" fg:w="6"/><text x="98.6084%" y="863.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="98.3584%" y="837" width="0.0176%" height="15" fill="rgb(214,103,39)" fg:x="33614" fg:w="6"/><text x="98.6084%" y="847.50"></text></g><g><title>pthread_setcanceltype (4 samples, 0.01%)</title><rect x="98.3643%" y="821" width="0.0117%" height="15" fill="rgb(251,126,39)" fg:x="33616" fg:w="4"/><text x="98.6143%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="98.3643%" y="805" width="0.0117%" height="15" fill="rgb(214,216,36)" fg:x="33616" fg:w="4"/><text x="98.6143%" y="815.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="98.3643%" y="789" width="0.0117%" height="15" fill="rgb(220,221,8)" fg:x="33616" fg:w="4"/><text x="98.6143%" y="799.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.01%)</title><rect x="98.3643%" y="773" width="0.0117%" height="15" fill="rgb(240,216,3)" fg:x="33616" fg:w="4"/><text x="98.6143%" y="783.50"></text></g><g><title>do_futex (4 samples, 0.01%)</title><rect x="98.3643%" y="757" width="0.0117%" height="15" fill="rgb(232,218,17)" fg:x="33616" fg:w="4"/><text x="98.6143%" y="767.50"></text></g><g><title>nf_hook_slow (8 samples, 0.02%)</title><rect x="98.4228%" y="421" width="0.0234%" height="15" fill="rgb(229,163,45)" fg:x="33636" fg:w="8"/><text x="98.6728%" y="431.50"></text></g><g><title>ipv4_conntrack_local (6 samples, 0.02%)</title><rect x="98.4287%" y="405" width="0.0176%" height="15" fill="rgb(231,110,42)" fg:x="33638" fg:w="6"/><text x="98.6787%" y="415.50"></text></g><g><title>nf_conntrack_in (5 samples, 0.01%)</title><rect x="98.4316%" y="389" width="0.0146%" height="15" fill="rgb(208,170,48)" fg:x="33639" fg:w="5"/><text x="98.6816%" y="399.50"></text></g><g><title>__ip_local_out (10 samples, 0.03%)</title><rect x="98.4199%" y="437" width="0.0293%" height="15" fill="rgb(239,116,25)" fg:x="33635" fg:w="10"/><text x="98.6699%" y="447.50"></text></g><g><title>tcp_data_queue (4 samples, 0.01%)</title><rect x="98.4901%" y="117" width="0.0117%" height="15" fill="rgb(219,200,50)" fg:x="33659" fg:w="4"/><text x="98.7401%" y="127.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.04%)</title><rect x="98.4726%" y="197" width="0.0351%" height="15" fill="rgb(245,200,0)" fg:x="33653" fg:w="12"/><text x="98.7226%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.04%)</title><rect x="98.4726%" y="181" width="0.0351%" height="15" fill="rgb(245,119,33)" fg:x="33653" fg:w="12"/><text x="98.7226%" y="191.50"></text></g><g><title>tcp_v4_rcv (12 samples, 0.04%)</title><rect x="98.4726%" y="165" width="0.0351%" height="15" fill="rgb(231,125,12)" fg:x="33653" fg:w="12"/><text x="98.7226%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.03%)</title><rect x="98.4784%" y="149" width="0.0293%" height="15" fill="rgb(216,96,41)" fg:x="33655" fg:w="10"/><text x="98.7284%" y="159.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.03%)</title><rect x="98.4813%" y="133" width="0.0263%" height="15" fill="rgb(248,43,45)" fg:x="33656" fg:w="9"/><text x="98.7313%" y="143.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 0.05%)</title><rect x="98.4579%" y="373" width="0.0527%" height="15" fill="rgb(217,222,7)" fg:x="33648" fg:w="18"/><text x="98.7079%" y="383.50"></text></g><g><title>do_softirq.part.20 (18 samples, 0.05%)</title><rect x="98.4579%" y="357" width="0.0527%" height="15" fill="rgb(233,28,6)" fg:x="33648" fg:w="18"/><text x="98.7079%" y="367.50"></text></g><g><title>do_softirq_own_stack (18 samples, 0.05%)</title><rect x="98.4579%" y="341" width="0.0527%" height="15" fill="rgb(231,218,15)" fg:x="33648" fg:w="18"/><text x="98.7079%" y="351.50"></text></g><g><title>__softirqentry_text_start (18 samples, 0.05%)</title><rect x="98.4579%" y="325" width="0.0527%" height="15" fill="rgb(226,171,48)" fg:x="33648" fg:w="18"/><text x="98.7079%" y="335.50"></text></g><g><title>net_rx_action (18 samples, 0.05%)</title><rect x="98.4579%" y="309" width="0.0527%" height="15" fill="rgb(235,201,9)" fg:x="33648" fg:w="18"/><text x="98.7079%" y="319.50"></text></g><g><title>process_backlog (17 samples, 0.05%)</title><rect x="98.4609%" y="293" width="0.0497%" height="15" fill="rgb(217,80,15)" fg:x="33649" fg:w="17"/><text x="98.7109%" y="303.50"></text></g><g><title>__netif_receive_skb (16 samples, 0.05%)</title><rect x="98.4638%" y="277" width="0.0468%" height="15" fill="rgb(219,152,8)" fg:x="33650" fg:w="16"/><text x="98.7138%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (16 samples, 0.05%)</title><rect x="98.4638%" y="261" width="0.0468%" height="15" fill="rgb(243,107,38)" fg:x="33650" fg:w="16"/><text x="98.7138%" y="271.50"></text></g><g><title>ip_rcv (14 samples, 0.04%)</title><rect x="98.4696%" y="245" width="0.0410%" height="15" fill="rgb(231,17,5)" fg:x="33652" fg:w="14"/><text x="98.7196%" y="255.50"></text></g><g><title>ip_rcv_finish (13 samples, 0.04%)</title><rect x="98.4726%" y="229" width="0.0380%" height="15" fill="rgb(209,25,54)" fg:x="33653" fg:w="13"/><text x="98.7226%" y="239.50"></text></g><g><title>ip_local_deliver (13 samples, 0.04%)</title><rect x="98.4726%" y="213" width="0.0380%" height="15" fill="rgb(219,0,2)" fg:x="33653" fg:w="13"/><text x="98.7226%" y="223.50"></text></g><g><title>ip_finish_output (24 samples, 0.07%)</title><rect x="98.4492%" y="421" width="0.0702%" height="15" fill="rgb(246,9,5)" fg:x="33645" fg:w="24"/><text x="98.6992%" y="431.50"></text></g><g><title>__ip_finish_output (24 samples, 0.07%)</title><rect x="98.4492%" y="405" width="0.0702%" height="15" fill="rgb(226,159,4)" fg:x="33645" fg:w="24"/><text x="98.6992%" y="415.50"></text></g><g><title>ip_finish_output2 (23 samples, 0.07%)</title><rect x="98.4521%" y="389" width="0.0673%" height="15" fill="rgb(219,175,34)" fg:x="33646" fg:w="23"/><text x="98.7021%" y="399.50"></text></g><g><title>__tcp_transmit_skb (35 samples, 0.10%)</title><rect x="98.4199%" y="501" width="0.1024%" height="15" fill="rgb(236,10,46)" fg:x="33635" fg:w="35"/><text x="98.6699%" y="511.50"></text></g><g><title>ip_queue_xmit (35 samples, 0.10%)</title><rect x="98.4199%" y="485" width="0.1024%" height="15" fill="rgb(240,211,16)" fg:x="33635" fg:w="35"/><text x="98.6699%" y="495.50"></text></g><g><title>__ip_queue_xmit (35 samples, 0.10%)</title><rect x="98.4199%" y="469" width="0.1024%" height="15" fill="rgb(205,3,43)" fg:x="33635" fg:w="35"/><text x="98.6699%" y="479.50"></text></g><g><title>ip_local_out (35 samples, 0.10%)</title><rect x="98.4199%" y="453" width="0.1024%" height="15" fill="rgb(245,7,22)" fg:x="33635" fg:w="35"/><text x="98.6699%" y="463.50"></text></g><g><title>ip_output (25 samples, 0.07%)</title><rect x="98.4492%" y="437" width="0.0732%" height="15" fill="rgb(239,132,32)" fg:x="33645" fg:w="25"/><text x="98.6992%" y="447.50"></text></g><g><title>tcp_push (37 samples, 0.11%)</title><rect x="98.4170%" y="549" width="0.1083%" height="15" fill="rgb(228,202,34)" fg:x="33634" fg:w="37"/><text x="98.6670%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (36 samples, 0.11%)</title><rect x="98.4199%" y="533" width="0.1053%" height="15" fill="rgb(254,200,22)" fg:x="33635" fg:w="36"/><text x="98.6699%" y="543.50"></text></g><g><title>tcp_write_xmit (36 samples, 0.11%)</title><rect x="98.4199%" y="517" width="0.1053%" height="15" fill="rgb(219,10,39)" fg:x="33635" fg:w="36"/><text x="98.6699%" y="527.50"></text></g><g><title>inet_sendmsg (51 samples, 0.15%)</title><rect x="98.3848%" y="597" width="0.1492%" height="15" fill="rgb(226,210,39)" fg:x="33623" fg:w="51"/><text x="98.6348%" y="607.50"></text></g><g><title>tcp_sendmsg (50 samples, 0.15%)</title><rect x="98.3877%" y="581" width="0.1463%" height="15" fill="rgb(208,219,16)" fg:x="33624" fg:w="50"/><text x="98.6377%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (47 samples, 0.14%)</title><rect x="98.3965%" y="565" width="0.1375%" height="15" fill="rgb(216,158,51)" fg:x="33627" fg:w="47"/><text x="98.6465%" y="575.50"></text></g><g><title>do_iter_readv_writev (52 samples, 0.15%)</title><rect x="98.3848%" y="645" width="0.1522%" height="15" fill="rgb(233,14,44)" fg:x="33623" fg:w="52"/><text x="98.6348%" y="655.50"></text></g><g><title>sock_write_iter (52 samples, 0.15%)</title><rect x="98.3848%" y="629" width="0.1522%" height="15" fill="rgb(237,97,39)" fg:x="33623" fg:w="52"/><text x="98.6348%" y="639.50"></text></g><g><title>sock_sendmsg (52 samples, 0.15%)</title><rect x="98.3848%" y="613" width="0.1522%" height="15" fill="rgb(218,198,43)" fg:x="33623" fg:w="52"/><text x="98.6348%" y="623.50"></text></g><g><title>do_iter_write (54 samples, 0.16%)</title><rect x="98.3819%" y="661" width="0.1580%" height="15" fill="rgb(231,104,20)" fg:x="33622" fg:w="54"/><text x="98.6319%" y="671.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (70 samples, 0.20%)</title><rect x="98.3380%" y="901" width="0.2048%" height="15" fill="rgb(254,36,13)" fg:x="33607" fg:w="70"/><text x="98.5880%" y="911.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (68 samples, 0.20%)</title><rect x="98.3438%" y="885" width="0.1990%" height="15" fill="rgb(248,14,50)" fg:x="33609" fg:w="68"/><text x="98.5938%" y="895.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="869" width="0.1639%" height="15" fill="rgb(217,107,29)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="879.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (56 samples, 0.16%)</title><rect x="98.3789%" y="853" width="0.1639%" height="15" fill="rgb(251,169,33)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="863.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="837" width="0.1639%" height="15" fill="rgb(217,108,32)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="821" width="0.1639%" height="15" fill="rgb(219,66,42)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="805" width="0.1639%" height="15" fill="rgb(206,180,7)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="789" width="0.1639%" height="15" fill="rgb(208,226,31)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="799.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (56 samples, 0.16%)</title><rect x="98.3789%" y="773" width="0.1639%" height="15" fill="rgb(218,26,49)" fg:x="33621" fg:w="56"/><text x="98.6289%" y="783.50"></text></g><g><title>writev (55 samples, 0.16%)</title><rect x="98.3819%" y="757" width="0.1609%" height="15" fill="rgb(233,197,48)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 0.16%)</title><rect x="98.3819%" y="741" width="0.1609%" height="15" fill="rgb(252,181,51)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="751.50"></text></g><g><title>do_syscall_64 (55 samples, 0.16%)</title><rect x="98.3819%" y="725" width="0.1609%" height="15" fill="rgb(253,90,19)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="735.50"></text></g><g><title>__x64_sys_writev (55 samples, 0.16%)</title><rect x="98.3819%" y="709" width="0.1609%" height="15" fill="rgb(215,171,30)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="719.50"></text></g><g><title>do_writev (55 samples, 0.16%)</title><rect x="98.3819%" y="693" width="0.1609%" height="15" fill="rgb(214,222,9)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="703.50"></text></g><g><title>vfs_writev (55 samples, 0.16%)</title><rect x="98.3819%" y="677" width="0.1609%" height="15" fill="rgb(223,3,22)" fg:x="33622" fg:w="55"/><text x="98.6319%" y="687.50"></text></g><g><title>__libc_malloc (4 samples, 0.01%)</title><rect x="98.5633%" y="837" width="0.0117%" height="15" fill="rgb(225,196,46)" fg:x="33684" fg:w="4"/><text x="98.8133%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (6 samples, 0.02%)</title><rect x="98.5604%" y="853" width="0.0176%" height="15" fill="rgb(209,110,37)" fg:x="33683" fg:w="6"/><text x="98.8104%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (9 samples, 0.03%)</title><rect x="98.5779%" y="837" width="0.0263%" height="15" fill="rgb(249,89,12)" fg:x="33689" fg:w="9"/><text x="98.8279%" y="847.50"></text></g><g><title>free_compound_page (7 samples, 0.02%)</title><rect x="98.6452%" y="533" width="0.0205%" height="15" fill="rgb(226,27,33)" fg:x="33712" fg:w="7"/><text x="98.8952%" y="543.50"></text></g><g><title>__free_pages_ok (7 samples, 0.02%)</title><rect x="98.6452%" y="517" width="0.0205%" height="15" fill="rgb(213,82,22)" fg:x="33712" fg:w="7"/><text x="98.8952%" y="527.50"></text></g><g><title>__put_compound_page (10 samples, 0.03%)</title><rect x="98.6394%" y="549" width="0.0293%" height="15" fill="rgb(248,140,0)" fg:x="33710" fg:w="10"/><text x="98.8894%" y="559.50"></text></g><g><title>__put_page (11 samples, 0.03%)</title><rect x="98.6394%" y="565" width="0.0322%" height="15" fill="rgb(228,106,3)" fg:x="33710" fg:w="11"/><text x="98.8894%" y="575.50"></text></g><g><title>__kfree_skb (17 samples, 0.05%)</title><rect x="98.6277%" y="613" width="0.0497%" height="15" fill="rgb(209,23,37)" fg:x="33706" fg:w="17"/><text x="98.8777%" y="623.50"></text></g><g><title>skb_release_all (15 samples, 0.04%)</title><rect x="98.6335%" y="597" width="0.0439%" height="15" fill="rgb(241,93,50)" fg:x="33708" fg:w="15"/><text x="98.8835%" y="607.50"></text></g><g><title>skb_release_data (14 samples, 0.04%)</title><rect x="98.6364%" y="581" width="0.0410%" height="15" fill="rgb(253,46,43)" fg:x="33709" fg:w="14"/><text x="98.8864%" y="591.50"></text></g><g><title>tcp_data_ready (12 samples, 0.04%)</title><rect x="98.6862%" y="549" width="0.0351%" height="15" fill="rgb(226,206,43)" fg:x="33726" fg:w="12"/><text x="98.9362%" y="559.50"></text></g><g><title>sock_def_readable (12 samples, 0.04%)</title><rect x="98.6862%" y="533" width="0.0351%" height="15" fill="rgb(217,54,7)" fg:x="33726" fg:w="12"/><text x="98.9362%" y="543.50"></text></g><g><title>__wake_up_sync_key (12 samples, 0.04%)</title><rect x="98.6862%" y="517" width="0.0351%" height="15" fill="rgb(223,5,52)" fg:x="33726" fg:w="12"/><text x="98.9362%" y="527.50"></text></g><g><title>__wake_up_common_lock (12 samples, 0.04%)</title><rect x="98.6862%" y="501" width="0.0351%" height="15" fill="rgb(206,52,46)" fg:x="33726" fg:w="12"/><text x="98.9362%" y="511.50"></text></g><g><title>__lock_text_start (12 samples, 0.04%)</title><rect x="98.6862%" y="485" width="0.0351%" height="15" fill="rgb(253,136,11)" fg:x="33726" fg:w="12"/><text x="98.9362%" y="495.50"></text></g><g><title>release_sock (16 samples, 0.05%)</title><rect x="98.6774%" y="613" width="0.0468%" height="15" fill="rgb(208,106,33)" fg:x="33723" fg:w="16"/><text x="98.9274%" y="623.50"></text></g><g><title>__release_sock (16 samples, 0.05%)</title><rect x="98.6774%" y="597" width="0.0468%" height="15" fill="rgb(206,54,4)" fg:x="33723" fg:w="16"/><text x="98.9274%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.04%)</title><rect x="98.6832%" y="581" width="0.0410%" height="15" fill="rgb(213,3,15)" fg:x="33725" fg:w="14"/><text x="98.9332%" y="591.50"></text></g><g><title>tcp_rcv_established (14 samples, 0.04%)</title><rect x="98.6832%" y="565" width="0.0410%" height="15" fill="rgb(252,211,39)" fg:x="33725" fg:w="14"/><text x="98.9332%" y="575.50"></text></g><g><title>__check_object_size (9 samples, 0.03%)</title><rect x="98.7418%" y="565" width="0.0263%" height="15" fill="rgb(223,6,36)" fg:x="33745" fg:w="9"/><text x="98.9918%" y="575.50"></text></g><g><title>copy_user_enhanced_fast_string (227 samples, 0.66%)</title><rect x="98.7827%" y="549" width="0.6642%" height="15" fill="rgb(252,169,45)" fg:x="33759" fg:w="227"/><text x="99.0327%" y="559.50"></text></g><g><title>_copy_to_iter (230 samples, 0.67%)</title><rect x="98.7769%" y="565" width="0.6730%" height="15" fill="rgb(212,48,26)" fg:x="33757" fg:w="230"/><text x="99.0269%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (250 samples, 0.73%)</title><rect x="98.7242%" y="613" width="0.7315%" height="15" fill="rgb(251,102,48)" fg:x="33739" fg:w="250"/><text x="98.9742%" y="623.50"></text></g><g><title>__skb_datagram_iter (249 samples, 0.73%)</title><rect x="98.7271%" y="597" width="0.7286%" height="15" fill="rgb(243,208,16)" fg:x="33740" fg:w="249"/><text x="98.9771%" y="607.50"></text></g><g><title>simple_copy_to_iter (245 samples, 0.72%)</title><rect x="98.7388%" y="581" width="0.7169%" height="15" fill="rgb(219,96,24)" fg:x="33744" fg:w="245"/><text x="98.9888%" y="591.50"></text></g><g><title>ipv4_conntrack_local (4 samples, 0.01%)</title><rect x="99.4762%" y="469" width="0.0117%" height="15" fill="rgb(219,33,29)" fg:x="33996" fg:w="4"/><text x="99.7262%" y="479.50"></text></g><g><title>__ip_local_out (5 samples, 0.01%)</title><rect x="99.4762%" y="501" width="0.0146%" height="15" fill="rgb(223,176,5)" fg:x="33996" fg:w="5"/><text x="99.7262%" y="511.50"></text></g><g><title>nf_hook_slow (5 samples, 0.01%)</title><rect x="99.4762%" y="485" width="0.0146%" height="15" fill="rgb(228,140,14)" fg:x="33996" fg:w="5"/><text x="99.7262%" y="495.50"></text></g><g><title>__ip_local_out (5 samples, 0.01%)</title><rect x="99.5201%" y="85" width="0.0146%" height="15" fill="rgb(217,179,31)" fg:x="34011" fg:w="5"/><text x="99.7701%" y="95.50"></text></g><g><title>nf_hook_slow (5 samples, 0.01%)</title><rect x="99.5201%" y="69" width="0.0146%" height="15" fill="rgb(230,9,30)" fg:x="34011" fg:w="5"/><text x="99.7701%" y="79.50"></text></g><g><title>ipv4_conntrack_local (5 samples, 0.01%)</title><rect x="99.5201%" y="53" width="0.0146%" height="15" fill="rgb(230,136,20)" fg:x="34011" fg:w="5"/><text x="99.7701%" y="63.50"></text></g><g><title>nf_conntrack_in (5 samples, 0.01%)</title><rect x="99.5201%" y="37" width="0.0146%" height="15" fill="rgb(215,210,22)" fg:x="34011" fg:w="5"/><text x="99.7701%" y="47.50"></text></g><g><title>ip_queue_xmit (8 samples, 0.02%)</title><rect x="99.5201%" y="133" width="0.0234%" height="15" fill="rgb(218,43,5)" fg:x="34011" fg:w="8"/><text x="99.7701%" y="143.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.02%)</title><rect x="99.5201%" y="117" width="0.0234%" height="15" fill="rgb(216,11,5)" fg:x="34011" fg:w="8"/><text x="99.7701%" y="127.50"></text></g><g><title>ip_local_out (8 samples, 0.02%)</title><rect x="99.5201%" y="101" width="0.0234%" height="15" fill="rgb(209,82,29)" fg:x="34011" fg:w="8"/><text x="99.7701%" y="111.50"></text></g><g><title>__tcp_transmit_skb (10 samples, 0.03%)</title><rect x="99.5201%" y="149" width="0.0293%" height="15" fill="rgb(244,115,12)" fg:x="34011" fg:w="10"/><text x="99.7701%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (11 samples, 0.03%)</title><rect x="99.5201%" y="181" width="0.0322%" height="15" fill="rgb(222,82,18)" fg:x="34011" fg:w="11"/><text x="99.7701%" y="191.50"></text></g><g><title>tcp_write_xmit (11 samples, 0.03%)</title><rect x="99.5201%" y="165" width="0.0322%" height="15" fill="rgb(249,227,8)" fg:x="34011" fg:w="11"/><text x="99.7701%" y="175.50"></text></g><g><title>tcp_ack (8 samples, 0.02%)</title><rect x="99.5523%" y="181" width="0.0234%" height="15" fill="rgb(253,141,45)" fg:x="34022" fg:w="8"/><text x="99.8023%" y="191.50"></text></g><g><title>tcp_clean_rtx_queue (6 samples, 0.02%)</title><rect x="99.5582%" y="165" width="0.0176%" height="15" fill="rgb(234,184,4)" fg:x="34024" fg:w="6"/><text x="99.8082%" y="175.50"></text></g><g><title>ip_rcv (25 samples, 0.07%)</title><rect x="99.5084%" y="309" width="0.0732%" height="15" fill="rgb(218,194,23)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="319.50"></text></g><g><title>ip_rcv_finish (25 samples, 0.07%)</title><rect x="99.5084%" y="293" width="0.0732%" height="15" fill="rgb(235,66,41)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="303.50"></text></g><g><title>ip_local_deliver (25 samples, 0.07%)</title><rect x="99.5084%" y="277" width="0.0732%" height="15" fill="rgb(245,217,1)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="287.50"></text></g><g><title>ip_local_deliver_finish (25 samples, 0.07%)</title><rect x="99.5084%" y="261" width="0.0732%" height="15" fill="rgb(229,91,1)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (25 samples, 0.07%)</title><rect x="99.5084%" y="245" width="0.0732%" height="15" fill="rgb(207,101,30)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="255.50"></text></g><g><title>tcp_v4_rcv (25 samples, 0.07%)</title><rect x="99.5084%" y="229" width="0.0732%" height="15" fill="rgb(223,82,49)" fg:x="34007" fg:w="25"/><text x="99.7584%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (21 samples, 0.06%)</title><rect x="99.5201%" y="213" width="0.0614%" height="15" fill="rgb(218,167,17)" fg:x="34011" fg:w="21"/><text x="99.7701%" y="223.50"></text></g><g><title>tcp_rcv_established (21 samples, 0.06%)</title><rect x="99.5201%" y="197" width="0.0614%" height="15" fill="rgb(208,103,14)" fg:x="34011" fg:w="21"/><text x="99.7701%" y="207.50"></text></g><g><title>__local_bh_enable_ip (29 samples, 0.08%)</title><rect x="99.4996%" y="437" width="0.0849%" height="15" fill="rgb(238,20,8)" fg:x="34004" fg:w="29"/><text x="99.7496%" y="447.50"></text></g><g><title>do_softirq.part.20 (29 samples, 0.08%)</title><rect x="99.4996%" y="421" width="0.0849%" height="15" fill="rgb(218,80,54)" fg:x="34004" fg:w="29"/><text x="99.7496%" y="431.50"></text></g><g><title>do_softirq_own_stack (28 samples, 0.08%)</title><rect x="99.5026%" y="405" width="0.0819%" height="15" fill="rgb(240,144,17)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="415.50"></text></g><g><title>__softirqentry_text_start (28 samples, 0.08%)</title><rect x="99.5026%" y="389" width="0.0819%" height="15" fill="rgb(245,27,50)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="399.50"></text></g><g><title>net_rx_action (28 samples, 0.08%)</title><rect x="99.5026%" y="373" width="0.0819%" height="15" fill="rgb(251,51,7)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="383.50"></text></g><g><title>process_backlog (28 samples, 0.08%)</title><rect x="99.5026%" y="357" width="0.0819%" height="15" fill="rgb(245,217,29)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="367.50"></text></g><g><title>__netif_receive_skb (28 samples, 0.08%)</title><rect x="99.5026%" y="341" width="0.0819%" height="15" fill="rgb(221,176,29)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (28 samples, 0.08%)</title><rect x="99.5026%" y="325" width="0.0819%" height="15" fill="rgb(212,180,24)" fg:x="34005" fg:w="28"/><text x="99.7526%" y="335.50"></text></g><g><title>ip_finish_output (36 samples, 0.11%)</title><rect x="99.4909%" y="485" width="0.1053%" height="15" fill="rgb(254,24,2)" fg:x="34001" fg:w="36"/><text x="99.7409%" y="495.50"></text></g><g><title>__ip_finish_output (35 samples, 0.10%)</title><rect x="99.4938%" y="469" width="0.1024%" height="15" fill="rgb(230,100,2)" fg:x="34002" fg:w="35"/><text x="99.7438%" y="479.50"></text></g><g><title>ip_finish_output2 (35 samples, 0.10%)</title><rect x="99.4938%" y="453" width="0.1024%" height="15" fill="rgb(219,142,25)" fg:x="34002" fg:w="35"/><text x="99.7438%" y="463.50"></text></g><g><title>dev_queue_xmit (4 samples, 0.01%)</title><rect x="99.5845%" y="437" width="0.0117%" height="15" fill="rgb(240,73,43)" fg:x="34033" fg:w="4"/><text x="99.8345%" y="447.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.01%)</title><rect x="99.5845%" y="421" width="0.0117%" height="15" fill="rgb(214,114,15)" fg:x="34033" fg:w="4"/><text x="99.8345%" y="431.50"></text></g><g><title>tcp_cleanup_rbuf (49 samples, 0.14%)</title><rect x="99.4557%" y="613" width="0.1434%" height="15" fill="rgb(207,130,4)" fg:x="33989" fg:w="49"/><text x="99.7057%" y="623.50"></text></g><g><title>tcp_send_ack (47 samples, 0.14%)</title><rect x="99.4616%" y="597" width="0.1375%" height="15" fill="rgb(221,25,40)" fg:x="33991" fg:w="47"/><text x="99.7116%" y="607.50"></text></g><g><title>__tcp_send_ack.part.45 (47 samples, 0.14%)</title><rect x="99.4616%" y="581" width="0.1375%" height="15" fill="rgb(241,184,7)" fg:x="33991" fg:w="47"/><text x="99.7116%" y="591.50"></text></g><g><title>__tcp_transmit_skb (42 samples, 0.12%)</title><rect x="99.4762%" y="565" width="0.1229%" height="15" fill="rgb(235,159,4)" fg:x="33996" fg:w="42"/><text x="99.7262%" y="575.50"></text></g><g><title>ip_queue_xmit (42 samples, 0.12%)</title><rect x="99.4762%" y="549" width="0.1229%" height="15" fill="rgb(214,87,48)" fg:x="33996" fg:w="42"/><text x="99.7262%" y="559.50"></text></g><g><title>__ip_queue_xmit (42 samples, 0.12%)</title><rect x="99.4762%" y="533" width="0.1229%" height="15" fill="rgb(246,198,24)" fg:x="33996" fg:w="42"/><text x="99.7262%" y="543.50"></text></g><g><title>ip_local_out (42 samples, 0.12%)</title><rect x="99.4762%" y="517" width="0.1229%" height="15" fill="rgb(209,66,40)" fg:x="33996" fg:w="42"/><text x="99.7262%" y="527.50"></text></g><g><title>ip_output (37 samples, 0.11%)</title><rect x="99.4909%" y="501" width="0.1083%" height="15" fill="rgb(233,147,39)" fg:x="34001" fg:w="37"/><text x="99.7409%" y="511.50"></text></g><g><title>inet_recvmsg (339 samples, 0.99%)</title><rect x="98.6159%" y="645" width="0.9920%" height="15" fill="rgb(231,145,52)" fg:x="33702" fg:w="339"/><text x="98.8659%" y="655.50"></text></g><g><title>tcp_recvmsg (338 samples, 0.99%)</title><rect x="98.6189%" y="629" width="0.9890%" height="15" fill="rgb(206,20,26)" fg:x="33703" fg:w="338"/><text x="98.8689%" y="639.50"></text></g><g><title>sock_recvmsg (340 samples, 0.99%)</title><rect x="98.6159%" y="661" width="0.9949%" height="15" fill="rgb(238,220,4)" fg:x="33702" fg:w="340"/><text x="98.8659%" y="671.50"></text></g><g><title>__sys_recvfrom (341 samples, 1.00%)</title><rect x="98.6159%" y="677" width="0.9978%" height="15" fill="rgb(252,195,42)" fg:x="33702" fg:w="341"/><text x="98.8659%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (346 samples, 1.01%)</title><rect x="98.6072%" y="821" width="1.0124%" height="15" fill="rgb(209,10,6)" fg:x="33699" fg:w="346"/><text x="98.8572%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (345 samples, 1.01%)</title><rect x="98.6101%" y="805" width="1.0095%" height="15" fill="rgb(229,3,52)" fg:x="33700" fg:w="345"/><text x="98.8601%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (345 samples, 1.01%)</title><rect x="98.6101%" y="789" width="1.0095%" height="15" fill="rgb(253,49,37)" fg:x="33700" fg:w="345"/><text x="98.8601%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::read (345 samples, 1.01%)</title><rect x="98.6101%" y="773" width="1.0095%" height="15" fill="rgb(240,103,49)" fg:x="33700" fg:w="345"/><text x="98.8601%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (345 samples, 1.01%)</title><rect x="98.6101%" y="757" width="1.0095%" height="15" fill="rgb(250,182,30)" fg:x="33700" fg:w="345"/><text x="98.8601%" y="767.50"></text></g><g><title>__libc_recv (345 samples, 1.01%)</title><rect x="98.6101%" y="741" width="1.0095%" height="15" fill="rgb(248,8,30)" fg:x="33700" fg:w="345"/><text x="98.8601%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (344 samples, 1.01%)</title><rect x="98.6130%" y="725" width="1.0066%" height="15" fill="rgb(237,120,30)" fg:x="33701" fg:w="344"/><text x="98.8630%" y="735.50"></text></g><g><title>do_syscall_64 (344 samples, 1.01%)</title><rect x="98.6130%" y="709" width="1.0066%" height="15" fill="rgb(221,146,34)" fg:x="33701" fg:w="344"/><text x="98.8630%" y="719.50"></text></g><g><title>__x64_sys_recvfrom (343 samples, 1.00%)</title><rect x="98.6159%" y="693" width="1.0037%" height="15" fill="rgb(242,55,13)" fg:x="33702" fg:w="343"/><text x="98.8659%" y="703.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (348 samples, 1.02%)</title><rect x="98.6042%" y="837" width="1.0183%" height="15" fill="rgb(242,112,31)" fg:x="33698" fg:w="348"/><text x="98.8542%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (370 samples, 1.08%)</title><rect x="98.5428%" y="901" width="1.0827%" height="15" fill="rgb(249,192,27)" fg:x="33677" fg:w="370"/><text x="98.7928%" y="911.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (368 samples, 1.08%)</title><rect x="98.5486%" y="885" width="1.0768%" height="15" fill="rgb(208,204,44)" fg:x="33679" fg:w="368"/><text x="98.7986%" y="895.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (366 samples, 1.07%)</title><rect x="98.5545%" y="869" width="1.0710%" height="15" fill="rgb(208,93,54)" fg:x="33681" fg:w="366"/><text x="98.8045%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (358 samples, 1.05%)</title><rect x="98.5779%" y="853" width="1.0475%" height="15" fill="rgb(242,1,31)" fg:x="33689" fg:w="358"/><text x="98.8279%" y="863.50"></text></g><g><title>release_sock (5 samples, 0.01%)</title><rect x="99.6606%" y="629" width="0.0146%" height="15" fill="rgb(241,83,25)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="639.50"></text></g><g><title>__release_sock (5 samples, 0.01%)</title><rect x="99.6606%" y="613" width="0.0146%" height="15" fill="rgb(205,169,50)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.01%)</title><rect x="99.6606%" y="597" width="0.0146%" height="15" fill="rgb(239,186,37)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="607.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.01%)</title><rect x="99.6606%" y="581" width="0.0146%" height="15" fill="rgb(205,221,10)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="591.50"></text></g><g><title>__tcp_ack_snd_check (5 samples, 0.01%)</title><rect x="99.6606%" y="565" width="0.0146%" height="15" fill="rgb(218,196,15)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="575.50"></text></g><g><title>tcp_send_ack (5 samples, 0.01%)</title><rect x="99.6606%" y="549" width="0.0146%" height="15" fill="rgb(218,196,35)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="559.50"></text></g><g><title>__tcp_send_ack.part.45 (5 samples, 0.01%)</title><rect x="99.6606%" y="533" width="0.0146%" height="15" fill="rgb(233,63,24)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="543.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.01%)</title><rect x="99.6606%" y="517" width="0.0146%" height="15" fill="rgb(225,8,4)" fg:x="34059" fg:w="5"/><text x="99.9106%" y="527.50"></text></g><g><title>ip_queue_xmit (4 samples, 0.01%)</title><rect x="99.6635%" y="501" width="0.0117%" height="15" fill="rgb(234,105,35)" fg:x="34060" fg:w="4"/><text x="99.9135%" y="511.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.01%)</title><rect x="99.6635%" y="485" width="0.0117%" height="15" fill="rgb(236,21,32)" fg:x="34060" fg:w="4"/><text x="99.9135%" y="495.50"></text></g><g><title>ip_local_out (4 samples, 0.01%)</title><rect x="99.6635%" y="469" width="0.0117%" height="15" fill="rgb(228,109,6)" fg:x="34060" fg:w="4"/><text x="99.9135%" y="479.50"></text></g><g><title>__skb_datagram_iter (15 samples, 0.04%)</title><rect x="99.6752%" y="613" width="0.0439%" height="15" fill="rgb(229,215,31)" fg:x="34064" fg:w="15"/><text x="99.9252%" y="623.50"></text></g><g><title>simple_copy_to_iter (13 samples, 0.04%)</title><rect x="99.6811%" y="597" width="0.0380%" height="15" fill="rgb(221,52,54)" fg:x="34066" fg:w="13"/><text x="99.9311%" y="607.50"></text></g><g><title>_copy_to_iter (12 samples, 0.04%)</title><rect x="99.6840%" y="581" width="0.0351%" height="15" fill="rgb(252,129,43)" fg:x="34067" fg:w="12"/><text x="99.9340%" y="591.50"></text></g><g><title>copy_user_enhanced_fast_string (12 samples, 0.04%)</title><rect x="99.6840%" y="565" width="0.0351%" height="15" fill="rgb(248,183,27)" fg:x="34067" fg:w="12"/><text x="99.9340%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (16 samples, 0.05%)</title><rect x="99.6752%" y="629" width="0.0468%" height="15" fill="rgb(250,0,22)" fg:x="34064" fg:w="16"/><text x="99.9252%" y="639.50"></text></g><g><title>__local_bh_enable_ip (10 samples, 0.03%)</title><rect x="99.7366%" y="453" width="0.0293%" height="15" fill="rgb(213,166,10)" fg:x="34085" fg:w="10"/><text x="99.9866%" y="463.50"></text></g><g><title>do_softirq.part.20 (10 samples, 0.03%)</title><rect x="99.7366%" y="437" width="0.0293%" height="15" fill="rgb(207,163,36)" fg:x="34085" fg:w="10"/><text x="99.9866%" y="447.50"></text></g><g><title>do_softirq_own_stack (10 samples, 0.03%)</title><rect x="99.7366%" y="421" width="0.0293%" height="15" fill="rgb(208,122,22)" fg:x="34085" fg:w="10"/><text x="99.9866%" y="431.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.03%)</title><rect x="99.7366%" y="405" width="0.0293%" height="15" fill="rgb(207,104,49)" fg:x="34085" fg:w="10"/><text x="99.9866%" y="415.50"></text></g><g><title>net_rx_action (9 samples, 0.03%)</title><rect x="99.7396%" y="389" width="0.0263%" height="15" fill="rgb(248,211,50)" fg:x="34086" fg:w="9"/><text x="99.9896%" y="399.50"></text></g><g><title>process_backlog (8 samples, 0.02%)</title><rect x="99.7425%" y="373" width="0.0234%" height="15" fill="rgb(217,13,45)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="383.50"></text></g><g><title>__netif_receive_skb (8 samples, 0.02%)</title><rect x="99.7425%" y="357" width="0.0234%" height="15" fill="rgb(211,216,49)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (8 samples, 0.02%)</title><rect x="99.7425%" y="341" width="0.0234%" height="15" fill="rgb(221,58,53)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="351.50"></text></g><g><title>ip_rcv (8 samples, 0.02%)</title><rect x="99.7425%" y="325" width="0.0234%" height="15" fill="rgb(220,112,41)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="335.50"></text></g><g><title>ip_rcv_finish (8 samples, 0.02%)</title><rect x="99.7425%" y="309" width="0.0234%" height="15" fill="rgb(236,38,28)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="319.50"></text></g><g><title>ip_local_deliver (8 samples, 0.02%)</title><rect x="99.7425%" y="293" width="0.0234%" height="15" fill="rgb(227,195,22)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="303.50"></text></g><g><title>ip_local_deliver_finish (8 samples, 0.02%)</title><rect x="99.7425%" y="277" width="0.0234%" height="15" fill="rgb(214,55,33)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (8 samples, 0.02%)</title><rect x="99.7425%" y="261" width="0.0234%" height="15" fill="rgb(248,80,13)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="271.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.02%)</title><rect x="99.7425%" y="245" width="0.0234%" height="15" fill="rgb(238,52,6)" fg:x="34087" fg:w="8"/><text x="99.9925%" y="255.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.02%)</title><rect x="99.7454%" y="229" width="0.0205%" height="15" fill="rgb(224,198,47)" fg:x="34088" fg:w="7"/><text x="99.9954%" y="239.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.02%)</title><rect x="99.7454%" y="213" width="0.0205%" height="15" fill="rgb(233,171,20)" fg:x="34088" fg:w="7"/><text x="99.9954%" y="223.50"></text></g><g><title>tcp_ack (4 samples, 0.01%)</title><rect x="99.7542%" y="197" width="0.0117%" height="15" fill="rgb(241,30,25)" fg:x="34091" fg:w="4"/><text x="100.0042%" y="207.50"></text></g><g><title>ip_output (12 samples, 0.04%)</title><rect x="99.7337%" y="517" width="0.0351%" height="15" fill="rgb(207,171,38)" fg:x="34084" fg:w="12"/><text x="99.9837%" y="527.50"></text></g><g><title>ip_finish_output (12 samples, 0.04%)</title><rect x="99.7337%" y="501" width="0.0351%" height="15" fill="rgb(234,70,1)" fg:x="34084" fg:w="12"/><text x="99.9837%" y="511.50"></text></g><g><title>__ip_finish_output (11 samples, 0.03%)</title><rect x="99.7366%" y="485" width="0.0322%" height="15" fill="rgb(232,178,18)" fg:x="34085" fg:w="11"/><text x="99.9866%" y="495.50"></text></g><g><title>ip_finish_output2 (11 samples, 0.03%)</title><rect x="99.7366%" y="469" width="0.0322%" height="15" fill="rgb(241,78,40)" fg:x="34085" fg:w="11"/><text x="99.9866%" y="479.50"></text></g><g><title>__sys_recvfrom (43 samples, 0.13%)</title><rect x="99.6459%" y="693" width="0.1258%" height="15" fill="rgb(222,35,25)" fg:x="34054" fg:w="43"/><text x="99.8959%" y="703.50"></text></g><g><title>sock_recvmsg (43 samples, 0.13%)</title><rect x="99.6459%" y="677" width="0.1258%" height="15" fill="rgb(207,92,16)" fg:x="34054" fg:w="43"/><text x="99.8959%" y="687.50"></text></g><g><title>inet_recvmsg (43 samples, 0.13%)</title><rect x="99.6459%" y="661" width="0.1258%" height="15" fill="rgb(216,59,51)" fg:x="34054" fg:w="43"/><text x="99.8959%" y="671.50"></text></g><g><title>tcp_recvmsg (43 samples, 0.13%)</title><rect x="99.6459%" y="645" width="0.1258%" height="15" fill="rgb(213,80,28)" fg:x="34054" fg:w="43"/><text x="99.8959%" y="655.50"></text></g><g><title>tcp_cleanup_rbuf (17 samples, 0.05%)</title><rect x="99.7220%" y="629" width="0.0497%" height="15" fill="rgb(220,93,7)" fg:x="34080" fg:w="17"/><text x="99.9720%" y="639.50"></text></g><g><title>tcp_send_ack (17 samples, 0.05%)</title><rect x="99.7220%" y="613" width="0.0497%" height="15" fill="rgb(225,24,44)" fg:x="34080" fg:w="17"/><text x="99.9720%" y="623.50"></text></g><g><title>__tcp_send_ack.part.45 (17 samples, 0.05%)</title><rect x="99.7220%" y="597" width="0.0497%" height="15" fill="rgb(243,74,40)" fg:x="34080" fg:w="17"/><text x="99.9720%" y="607.50"></text></g><g><title>__tcp_transmit_skb (16 samples, 0.05%)</title><rect x="99.7249%" y="581" width="0.0468%" height="15" fill="rgb(228,39,7)" fg:x="34081" fg:w="16"/><text x="99.9749%" y="591.50"></text></g><g><title>ip_queue_xmit (16 samples, 0.05%)</title><rect x="99.7249%" y="565" width="0.0468%" height="15" fill="rgb(227,79,8)" fg:x="34081" fg:w="16"/><text x="99.9749%" y="575.50"></text></g><g><title>__ip_queue_xmit (16 samples, 0.05%)</title><rect x="99.7249%" y="549" width="0.0468%" height="15" fill="rgb(236,58,11)" fg:x="34081" fg:w="16"/><text x="99.9749%" y="559.50"></text></g><g><title>ip_local_out (16 samples, 0.05%)</title><rect x="99.7249%" y="533" width="0.0468%" height="15" fill="rgb(249,63,35)" fg:x="34081" fg:w="16"/><text x="99.9749%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (46 samples, 0.13%)</title><rect x="99.6401%" y="837" width="0.1346%" height="15" fill="rgb(252,114,16)" fg:x="34052" fg:w="46"/><text x="99.8901%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (46 samples, 0.13%)</title><rect x="99.6401%" y="821" width="0.1346%" height="15" fill="rgb(254,151,24)" fg:x="34052" fg:w="46"/><text x="99.8901%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::read (45 samples, 0.13%)</title><rect x="99.6430%" y="805" width="0.1317%" height="15" fill="rgb(253,54,39)" fg:x="34053" fg:w="45"/><text x="99.8930%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::read (45 samples, 0.13%)</title><rect x="99.6430%" y="789" width="0.1317%" height="15" fill="rgb(243,25,45)" fg:x="34053" fg:w="45"/><text x="99.8930%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (45 samples, 0.13%)</title><rect x="99.6430%" y="773" width="0.1317%" height="15" fill="rgb(234,134,9)" fg:x="34053" fg:w="45"/><text x="99.8930%" y="783.50"></text></g><g><title>__libc_recv (45 samples, 0.13%)</title><rect x="99.6430%" y="757" width="0.1317%" height="15" fill="rgb(227,166,31)" fg:x="34053" fg:w="45"/><text x="99.8930%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.13%)</title><rect x="99.6430%" y="741" width="0.1317%" height="15" fill="rgb(245,143,41)" fg:x="34053" fg:w="45"/><text x="99.8930%" y="751.50"></text></g><g><title>do_syscall_64 (44 samples, 0.13%)</title><rect x="99.6459%" y="725" width="0.1287%" height="15" fill="rgb(238,181,32)" fg:x="34054" fg:w="44"/><text x="99.8959%" y="735.50"></text></g><g><title>__x64_sys_recvfrom (44 samples, 0.13%)</title><rect x="99.6459%" y="709" width="0.1287%" height="15" fill="rgb(224,113,18)" fg:x="34054" fg:w="44"/><text x="99.8959%" y="719.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (47 samples, 0.14%)</title><rect x="99.6401%" y="853" width="0.1375%" height="15" fill="rgb(240,229,28)" fg:x="34052" fg:w="47"/><text x="99.8901%" y="863.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (50 samples, 0.15%)</title><rect x="99.6342%" y="869" width="0.1463%" height="15" fill="rgb(250,185,3)" fg:x="34050" fg:w="50"/><text x="99.8842%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (59 samples, 0.17%)</title><rect x="99.6255%" y="901" width="0.1726%" height="15" fill="rgb(212,59,25)" fg:x="34047" fg:w="59"/><text x="99.8755%" y="911.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (56 samples, 0.16%)</title><rect x="99.6342%" y="885" width="0.1639%" height="15" fill="rgb(221,87,20)" fg:x="34050" fg:w="56"/><text x="99.8842%" y="895.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (6 samples, 0.02%)</title><rect x="99.7805%" y="869" width="0.0176%" height="15" fill="rgb(213,74,28)" fg:x="34100" fg:w="6"/><text x="100.0305%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (13 samples, 0.04%)</title><rect x="99.7981%" y="901" width="0.0380%" height="15" fill="rgb(224,132,34)" fg:x="34106" fg:w="13"/><text x="100.0481%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (9 samples, 0.03%)</title><rect x="99.8098%" y="885" width="0.0263%" height="15" fill="rgb(222,101,24)" fg:x="34110" fg:w="9"/><text x="100.0598%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (9 samples, 0.03%)</title><rect x="99.8098%" y="869" width="0.0263%" height="15" fill="rgb(254,142,4)" fg:x="34110" fg:w="9"/><text x="100.0598%" y="879.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.01%)</title><rect x="99.8449%" y="837" width="0.0117%" height="15" fill="rgb(230,229,49)" fg:x="34122" fg:w="4"/><text x="100.0949%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (18 samples, 0.05%)</title><rect x="99.8420%" y="853" width="0.0527%" height="15" fill="rgb(238,70,47)" fg:x="34121" fg:w="18"/><text x="100.0920%" y="863.50"></text></g><g><title>hyper::proto::h1::role::set_content_length (5 samples, 0.01%)</title><rect x="99.8800%" y="837" width="0.0146%" height="15" fill="rgb(231,160,17)" fg:x="34134" fg:w="5"/><text x="100.1300%" y="847.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::convert::From&lt;u64&gt;&gt;::from (4 samples, 0.01%)</title><rect x="99.8830%" y="821" width="0.0117%" height="15" fill="rgb(218,68,53)" fg:x="34135" fg:w="4"/><text x="100.1330%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (21 samples, 0.06%)</title><rect x="99.8361%" y="901" width="0.0614%" height="15" fill="rgb(236,111,10)" fg:x="34119" fg:w="21"/><text x="100.0861%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (21 samples, 0.06%)</title><rect x="99.8361%" y="885" width="0.0614%" height="15" fill="rgb(224,34,41)" fg:x="34119" fg:w="21"/><text x="100.0861%" y="895.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (20 samples, 0.06%)</title><rect x="99.8391%" y="869" width="0.0585%" height="15" fill="rgb(241,118,19)" fg:x="34120" fg:w="20"/><text x="100.0891%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (639 samples, 1.87%)</title><rect x="98.0395%" y="949" width="1.8698%" height="15" fill="rgb(238,129,25)" fg:x="33505" fg:w="639"/><text x="98.2895%" y="959.50">&lt;..</text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (636 samples, 1.86%)</title><rect x="98.0483%" y="933" width="1.8610%" height="15" fill="rgb(238,22,31)" fg:x="33508" fg:w="636"/><text x="98.2983%" y="943.50">&lt;..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (633 samples, 1.85%)</title><rect x="98.0571%" y="917" width="1.8522%" height="15" fill="rgb(222,174,48)" fg:x="33511" fg:w="633"/><text x="98.3071%" y="927.50">h..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (4 samples, 0.01%)</title><rect x="99.8976%" y="901" width="0.0117%" height="15" fill="rgb(206,152,40)" fg:x="34140" fg:w="4"/><text x="100.1476%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="99.9093%" y="949" width="0.0351%" height="15" fill="rgb(218,99,54)" fg:x="34144" fg:w="12"/><text x="100.1593%" y="959.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="99.9093%" y="933" width="0.0351%" height="15" fill="rgb(220,174,26)" fg:x="34144" fg:w="12"/><text x="100.1593%" y="943.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (6 samples, 0.02%)</title><rect x="99.9268%" y="917" width="0.0176%" height="15" fill="rgb(245,116,9)" fg:x="34150" fg:w="6"/><text x="100.1768%" y="927.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (655 samples, 1.92%)</title><rect x="98.0307%" y="965" width="1.9166%" height="15" fill="rgb(209,72,35)" fg:x="33502" fg:w="655"/><text x="98.2807%" y="975.50">&lt;..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (664 samples, 1.94%)</title><rect x="98.0190%" y="997" width="1.9429%" height="15" fill="rgb(226,126,21)" fg:x="33498" fg:w="664"/><text x="98.2690%" y="1007.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (663 samples, 1.94%)</title><rect x="98.0219%" y="981" width="1.9400%" height="15" fill="rgb(227,192,1)" fg:x="33499" fg:w="663"/><text x="98.2719%" y="991.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (672 samples, 1.97%)</title><rect x="98.0132%" y="1013" width="1.9663%" height="15" fill="rgb(237,180,29)" fg:x="33496" fg:w="672"/><text x="98.2632%" y="1023.50">t..</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (4 samples, 0.01%)</title><rect x="99.9678%" y="997" width="0.0117%" height="15" fill="rgb(230,197,35)" fg:x="34164" fg:w="4"/><text x="100.2178%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (775 samples, 2.27%)</title><rect x="97.7147%" y="1029" width="2.2677%" height="15" fill="rgb(246,193,31)" fg:x="33394" fg:w="775"/><text x="97.9647%" y="1039.50">t..</text></g><g><title>all (34,175 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(241,36,4)" fg:x="0" fg:w="34175"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio-runtime-w (1,104 samples, 3.23%)</title><rect x="96.7696%" y="1253" width="3.2304%" height="15" fill="rgb(241,130,17)" fg:x="33071" fg:w="1104"/><text x="97.0196%" y="1263.50">tok..</text></g><g><title>clone (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1237" width="3.1778%" height="15" fill="rgb(206,137,32)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1247.50">clo..</text></g><g><title>start_thread (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1221" width="3.1778%" height="15" fill="rgb(237,228,51)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1231.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1205" width="3.1778%" height="15" fill="rgb(243,6,42)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1215.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1189" width="3.1778%" height="15" fill="rgb(251,74,28)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1199.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1173" width="3.1778%" height="15" fill="rgb(218,20,49)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1183.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1157" width="3.1778%" height="15" fill="rgb(238,28,14)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1167.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1141" width="3.1778%" height="15" fill="rgb(229,40,46)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1151.50">std..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1125" width="3.1778%" height="15" fill="rgb(244,195,20)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1135.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1109" width="3.1778%" height="15" fill="rgb(253,56,35)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1119.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1093" width="3.1778%" height="15" fill="rgb(210,149,44)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1103.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1077" width="3.1778%" height="15" fill="rgb(240,135,12)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1087.50">tok..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1061" width="3.1778%" height="15" fill="rgb(251,24,50)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1071.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,086 samples, 3.18%)</title><rect x="96.8222%" y="1045" width="3.1778%" height="15" fill="rgb(243,200,47)" fg:x="33089" fg:w="1086"/><text x="97.0722%" y="1055.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (6 samples, 0.02%)</title><rect x="99.9824%" y="1029" width="0.0176%" height="15" fill="rgb(224,166,26)" fg:x="34169" fg:w="6"/><text x="100.2324%" y="1039.50"></text></g></svg></svg>