<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1285.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="70104"><g><title>rocksdb::lru_cache::LRUHandleTable::Lookup (90 samples, 0.13%)</title><rect x="0.0685%" y="901" width="0.1284%" height="15" fill="rgb(227,0,7)" fg:x="48" fg:w="90"/><text x="0.3185%" y="911.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (90 samples, 0.13%)</title><rect x="0.0685%" y="885" width="0.1284%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="90"/><text x="0.3185%" y="895.50"></text></g><g><title>rocksdb::port::Mutex::Lock (19 samples, 0.03%)</title><rect x="0.1969%" y="901" width="0.0271%" height="15" fill="rgb(221,193,54)" fg:x="138" fg:w="19"/><text x="0.4469%" y="911.50"></text></g><g><title>__GI___pthread_mutex_lock (18 samples, 0.03%)</title><rect x="0.1983%" y="885" width="0.0257%" height="15" fill="rgb(248,212,6)" fg:x="139" fg:w="18"/><text x="0.4483%" y="895.50"></text></g><g><title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (134 samples, 0.19%)</title><rect x="0.0456%" y="949" width="0.1911%" height="15" fill="rgb(208,68,35)" fg:x="32" fg:w="134"/><text x="0.2956%" y="959.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (121 samples, 0.17%)</title><rect x="0.0642%" y="933" width="0.1726%" height="15" fill="rgb(232,128,0)" fg:x="45" fg:w="121"/><text x="0.3142%" y="943.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Lookup (119 samples, 0.17%)</title><rect x="0.0670%" y="917" width="0.1697%" height="15" fill="rgb(207,160,47)" fg:x="47" fg:w="119"/><text x="0.3170%" y="927.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (9 samples, 0.01%)</title><rect x="0.2240%" y="901" width="0.0128%" height="15" fill="rgb(228,23,34)" fg:x="157" fg:w="9"/><text x="0.4740%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock (8 samples, 0.01%)</title><rect x="0.2254%" y="885" width="0.0114%" height="15" fill="rgb(218,30,26)" fg:x="158" fg:w="8"/><text x="0.4754%" y="895.50"></text></g><g><title>rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt; (54 samples, 0.08%)</title><rect x="0.2368%" y="949" width="0.0770%" height="15" fill="rgb(220,122,19)" fg:x="166" fg:w="54"/><text x="0.4868%" y="959.50"></text></g><g><title>rocksdb::Status::operator= (15 samples, 0.02%)</title><rect x="0.3295%" y="949" width="0.0214%" height="15" fill="rgb(250,228,42)" fg:x="231" fg:w="15"/><text x="0.5795%" y="959.50"></text></g><g><title>ord::index::Index::update (249 samples, 0.36%)</title><rect x="0.0000%" y="1205" width="0.3552%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1215.50"></text></g><g><title>ord::index::updater::Updater::update_index (249 samples, 0.36%)</title><rect x="0.0000%" y="1189" width="0.3552%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1199.50"></text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get_pinned (249 samples, 0.36%)</title><rect x="0.0000%" y="1173" width="0.3552%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1183.50"></text></g><g><title>rocksdb_transaction_get_pinned (249 samples, 0.36%)</title><rect x="0.0000%" y="1157" width="0.3552%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1167.50"></text></g><g><title>rocksdb::TransactionBaseImpl::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1141" width="0.3552%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1151.50"></text></g><g><title>rocksdb::TransactionBaseImpl::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1125" width="0.3552%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1135.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (249 samples, 0.36%)</title><rect x="0.0000%" y="1109" width="0.3552%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1119.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (249 samples, 0.36%)</title><rect x="0.0000%" y="1093" width="0.3552%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1103.50"></text></g><g><title>rocksdb::DBImpl::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1077" width="0.3552%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1087.50"></text></g><g><title>rocksdb::DBImpl::GetImpl (249 samples, 0.36%)</title><rect x="0.0000%" y="1061" width="0.3552%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1071.50"></text></g><g><title>rocksdb::Version::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1045" width="0.3552%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1055.50"></text></g><g><title>rocksdb::TableCache::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1029" width="0.3552%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1039.50"></text></g><g><title>rocksdb::BlockBasedTable::Get (249 samples, 0.36%)</title><rect x="0.0000%" y="1013" width="0.3552%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1023.50"></text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (249 samples, 0.36%)</title><rect x="0.0000%" y="997" width="0.3552%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="249"/><text x="0.2500%" y="1007.50"></text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (249 samples, 0.36%)</title><rect x="0.0000%" y="981" width="0.3552%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="249"/><text x="0.2500%" y="991.50"></text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (249 samples, 0.36%)</title><rect x="0.0000%" y="965" width="0.3552%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="249"/><text x="0.2500%" y="975.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Remove (13 samples, 0.02%)</title><rect x="0.4165%" y="901" width="0.0185%" height="15" fill="rgb(238,160,17)" fg:x="292" fg:w="13"/><text x="0.6665%" y="911.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Lookup (131 samples, 0.19%)</title><rect x="0.4351%" y="901" width="0.1869%" height="15" fill="rgb(214,148,48)" fg:x="305" fg:w="131"/><text x="0.6851%" y="911.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (131 samples, 0.19%)</title><rect x="0.4351%" y="885" width="0.1869%" height="15" fill="rgb(232,36,49)" fg:x="305" fg:w="131"/><text x="0.6851%" y="895.50"></text></g><g><title>__nss_passwd_lookup (13 samples, 0.02%)</title><rect x="0.6034%" y="869" width="0.0185%" height="15" fill="rgb(209,103,24)" fg:x="423" fg:w="13"/><text x="0.8534%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.02%)</title><rect x="0.6234%" y="885" width="0.0171%" height="15" fill="rgb(229,88,8)" fg:x="437" fg:w="12"/><text x="0.8734%" y="895.50"></text></g><g><title>rocksdb::port::Mutex::Lock (14 samples, 0.02%)</title><rect x="0.6219%" y="901" width="0.0200%" height="15" fill="rgb(213,181,19)" fg:x="436" fg:w="14"/><text x="0.8719%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock (29 samples, 0.04%)</title><rect x="0.6433%" y="885" width="0.0414%" height="15" fill="rgb(254,191,54)" fg:x="451" fg:w="29"/><text x="0.8933%" y="895.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (192 samples, 0.27%)</title><rect x="0.4122%" y="933" width="0.2739%" height="15" fill="rgb(241,83,37)" fg:x="289" fg:w="192"/><text x="0.6622%" y="943.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Lookup (189 samples, 0.27%)</title><rect x="0.4165%" y="917" width="0.2696%" height="15" fill="rgb(233,36,39)" fg:x="292" fg:w="189"/><text x="0.6665%" y="927.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (31 samples, 0.04%)</title><rect x="0.6419%" y="901" width="0.0442%" height="15" fill="rgb(226,3,54)" fg:x="450" fg:w="31"/><text x="0.8919%" y="911.50"></text></g><g><title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (208 samples, 0.30%)</title><rect x="0.3908%" y="949" width="0.2967%" height="15" fill="rgb(245,192,40)" fg:x="274" fg:w="208"/><text x="0.6408%" y="959.50"></text></g><g><title>rocksdb::BlockCreateContext::Create (13 samples, 0.02%)</title><rect x="0.7204%" y="933" width="0.0185%" height="15" fill="rgb(238,167,29)" fg:x="505" fg:w="13"/><text x="0.9704%" y="943.50"></text></g><g><title>rocksdb::Block::Block (8 samples, 0.01%)</title><rect x="0.7275%" y="917" width="0.0114%" height="15" fill="rgb(232,182,51)" fg:x="510" fg:w="8"/><text x="0.9775%" y="927.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Remove (46 samples, 0.07%)</title><rect x="0.7703%" y="869" width="0.0656%" height="15" fill="rgb(231,60,39)" fg:x="540" fg:w="46"/><text x="1.0203%" y="879.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::EvictFromLRU (56 samples, 0.08%)</title><rect x="0.7646%" y="885" width="0.0799%" height="15" fill="rgb(208,69,12)" fg:x="536" fg:w="56"/><text x="1.0146%" y="895.50"></text></g><g><title>cfree (124 samples, 0.18%)</title><rect x="0.8587%" y="853" width="0.1769%" height="15" fill="rgb(235,93,37)" fg:x="602" fg:w="124"/><text x="1.1087%" y="863.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::NotifyEvicted (173 samples, 0.25%)</title><rect x="0.8445%" y="885" width="0.2468%" height="15" fill="rgb(213,116,39)" fg:x="592" fg:w="173"/><text x="1.0945%" y="895.50"></text></g><g><title>rocksdb::BasicTypedCacheHelperFns&lt;rocksdb::Block_kData&gt;::Delete (163 samples, 0.23%)</title><rect x="0.8587%" y="869" width="0.2325%" height="15" fill="rgb(222,207,29)" fg:x="602" fg:w="163"/><text x="1.1087%" y="879.50"></text></g><g><title>rocksdb::Block::~Block (36 samples, 0.05%)</title><rect x="1.0399%" y="853" width="0.0514%" height="15" fill="rgb(206,96,30)" fg:x="729" fg:w="36"/><text x="1.2899%" y="863.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (280 samples, 0.40%)</title><rect x="0.7389%" y="933" width="0.3994%" height="15" fill="rgb(218,138,4)" fg:x="518" fg:w="280"/><text x="0.9889%" y="943.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Insert (273 samples, 0.39%)</title><rect x="0.7489%" y="917" width="0.3894%" height="15" fill="rgb(250,191,14)" fg:x="525" fg:w="273"/><text x="0.9989%" y="927.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::InsertItem (265 samples, 0.38%)</title><rect x="0.7603%" y="901" width="0.3780%" height="15" fill="rgb(239,60,40)" fg:x="533" fg:w="265"/><text x="1.0103%" y="911.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (25 samples, 0.04%)</title><rect x="1.1026%" y="885" width="0.0357%" height="15" fill="rgb(206,27,48)" fg:x="773" fg:w="25"/><text x="1.3526%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock (25 samples, 0.04%)</title><rect x="1.1026%" y="869" width="0.0357%" height="15" fill="rgb(225,35,8)" fg:x="773" fg:w="25"/><text x="1.3526%" y="879.50"></text></g><g><title>rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt; (317 samples, 0.45%)</title><rect x="0.6875%" y="949" width="0.4522%" height="15" fill="rgb(250,213,24)" fg:x="482" fg:w="317"/><text x="0.9375%" y="959.50"></text></g><g><title>__nss_passwd_lookup (35 samples, 0.05%)</title><rect x="1.1911%" y="933" width="0.0499%" height="15" fill="rgb(247,123,22)" fg:x="835" fg:w="35"/><text x="1.4411%" y="943.50"></text></g><g><title>operator new (33 samples, 0.05%)</title><rect x="1.2424%" y="933" width="0.0471%" height="15" fill="rgb(231,138,38)" fg:x="871" fg:w="33"/><text x="1.4924%" y="943.50"></text></g><g><title>__libc_malloc (33 samples, 0.05%)</title><rect x="1.2424%" y="917" width="0.0471%" height="15" fill="rgb(231,145,46)" fg:x="871" fg:w="33"/><text x="1.4924%" y="927.50"></text></g><g><title>_IO_str_seekoff (27 samples, 0.04%)</title><rect x="1.2510%" y="901" width="0.0385%" height="15" fill="rgb(251,118,11)" fg:x="877" fg:w="27"/><text x="1.5010%" y="911.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.01%)</title><rect x="1.2781%" y="885" width="0.0114%" height="15" fill="rgb(217,147,25)" fg:x="896" fg:w="8"/><text x="1.5281%" y="895.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (107 samples, 0.15%)</title><rect x="1.2909%" y="933" width="0.1526%" height="15" fill="rgb(247,81,37)" fg:x="905" fg:w="107"/><text x="1.5409%" y="943.50"></text></g><g><title>rocksdb::VerifyBlockChecksum (106 samples, 0.15%)</title><rect x="1.2924%" y="917" width="0.1512%" height="15" fill="rgb(209,12,38)" fg:x="906" fg:w="106"/><text x="1.5424%" y="927.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum (105 samples, 0.15%)</title><rect x="1.2938%" y="901" width="0.1498%" height="15" fill="rgb(227,1,9)" fg:x="907" fg:w="105"/><text x="1.5438%" y="911.50"></text></g><g><title>XXH3_hashLong_64b_default.constprop.9 (102 samples, 0.15%)</title><rect x="1.2981%" y="885" width="0.1455%" height="15" fill="rgb(248,47,43)" fg:x="910" fg:w="102"/><text x="1.5481%" y="895.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read (25 samples, 0.04%)</title><rect x="1.4507%" y="933" width="0.0357%" height="15" fill="rgb(221,10,30)" fg:x="1017" fg:w="25"/><text x="1.7007%" y="943.50"></text></g><g><title>_IO_str_seekoff (44 samples, 0.06%)</title><rect x="1.5149%" y="869" width="0.0628%" height="15" fill="rgb(210,229,1)" fg:x="1062" fg:w="44"/><text x="1.7649%" y="879.50"></text></g><g><title>_IO_str_seekoff (12 samples, 0.02%)</title><rect x="1.5605%" y="853" width="0.0171%" height="15" fill="rgb(222,148,37)" fg:x="1094" fg:w="12"/><text x="1.8105%" y="863.50"></text></g><g><title>operator new (57 samples, 0.08%)</title><rect x="1.5006%" y="901" width="0.0813%" height="15" fill="rgb(234,67,33)" fg:x="1052" fg:w="57"/><text x="1.7506%" y="911.50"></text></g><g><title>__libc_malloc (57 samples, 0.08%)</title><rect x="1.5006%" y="885" width="0.0813%" height="15" fill="rgb(247,98,35)" fg:x="1052" fg:w="57"/><text x="1.7506%" y="895.50"></text></g><g><title>__nss_passwd_lookup (20 samples, 0.03%)</title><rect x="1.6433%" y="869" width="0.0285%" height="15" fill="rgb(247,138,52)" fg:x="1152" fg:w="20"/><text x="1.8933%" y="879.50"></text></g><g><title>[ord] (11 samples, 0.02%)</title><rect x="2.1126%" y="853" width="0.0157%" height="15" fill="rgb(213,79,30)" fg:x="1481" fg:w="11"/><text x="2.3626%" y="863.50"></text></g><g><title>__nss_passwd_lookup (490 samples, 0.70%)</title><rect x="2.1283%" y="853" width="0.6990%" height="15" fill="rgb(246,177,23)" fg:x="1492" fg:w="490"/><text x="2.3783%" y="863.50"></text></g><g><title>snappy::AdvanceToNextTag (166 samples, 0.24%)</title><rect x="2.8315%" y="853" width="0.2368%" height="15" fill="rgb(230,62,27)" fg:x="1985" fg:w="166"/><text x="3.0815%" y="863.50"></text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (1,021 samples, 1.46%)</title><rect x="1.6761%" y="869" width="1.4564%" height="15" fill="rgb(216,154,8)" fg:x="1175" fg:w="1021"/><text x="1.9261%" y="879.50"></text></g><g><title>snappy::MemMove (44 samples, 0.06%)</title><rect x="3.0697%" y="853" width="0.0628%" height="15" fill="rgb(244,35,45)" fg:x="2152" fg:w="44"/><text x="3.3197%" y="863.50"></text></g><g><title>rocksdb::UncompressSerializedBlock (1,159 samples, 1.65%)</title><rect x="1.4864%" y="933" width="1.6533%" height="15" fill="rgb(251,115,12)" fg:x="1042" fg:w="1159"/><text x="1.7364%" y="943.50"></text></g><g><title>rocksdb::UncompressBlockData (1,157 samples, 1.65%)</title><rect x="1.4892%" y="917" width="1.6504%" height="15" fill="rgb(240,54,50)" fg:x="1044" fg:w="1157"/><text x="1.7392%" y="927.50"></text></g><g><title>snappy::RawUncompress (1,090 samples, 1.55%)</title><rect x="1.5848%" y="901" width="1.5548%" height="15" fill="rgb(233,84,52)" fg:x="1111" fg:w="1090"/><text x="1.8348%" y="911.50"></text></g><g><title>snappy::RawUncompress (1,088 samples, 1.55%)</title><rect x="1.5876%" y="885" width="1.5520%" height="15" fill="rgb(207,117,47)" fg:x="1113" fg:w="1088"/><text x="1.8376%" y="895.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents (1,403 samples, 2.00%)</title><rect x="1.1397%" y="949" width="2.0013%" height="15" fill="rgb(249,43,39)" fg:x="799" fg:w="1403"/><text x="1.3897%" y="959.50">r..</text></g><g><title>rocksdb::Status::operator= (12 samples, 0.02%)</title><rect x="3.1439%" y="949" width="0.0171%" height="15" fill="rgb(209,38,44)" fg:x="2204" fg:w="12"/><text x="3.3939%" y="959.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1189" width="2.8087%" height="15" fill="rgb(236,212,23)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1199.50">or..</text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1173" width="2.8087%" height="15" fill="rgb(242,79,21)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1183.50">ro..</text></g><g><title>rocksdb_transaction_get_pinned (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1157" width="2.8087%" height="15" fill="rgb(211,96,35)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1167.50">ro..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1141" width="2.8087%" height="15" fill="rgb(253,215,40)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1151.50">ro..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1125" width="2.8087%" height="15" fill="rgb(211,81,21)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1135.50">ro..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1109" width="2.8087%" height="15" fill="rgb(208,190,38)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1119.50">ro..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1093" width="2.8087%" height="15" fill="rgb(235,213,38)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1103.50">ro..</text></g><g><title>rocksdb::DBImpl::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1077" width="2.8087%" height="15" fill="rgb(237,122,38)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1087.50">ro..</text></g><g><title>rocksdb::DBImpl::GetImpl (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1061" width="2.8087%" height="15" fill="rgb(244,218,35)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1071.50">ro..</text></g><g><title>rocksdb::Version::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1045" width="2.8087%" height="15" fill="rgb(240,68,47)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1055.50">ro..</text></g><g><title>rocksdb::TableCache::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1029" width="2.8087%" height="15" fill="rgb(210,16,53)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1039.50">ro..</text></g><g><title>rocksdb::BlockBasedTable::Get (1,969 samples, 2.81%)</title><rect x="0.3552%" y="1013" width="2.8087%" height="15" fill="rgb(235,124,12)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1023.50">ro..</text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,969 samples, 2.81%)</title><rect x="0.3552%" y="997" width="2.8087%" height="15" fill="rgb(224,169,11)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="1007.50">ro..</text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (1,969 samples, 2.81%)</title><rect x="0.3552%" y="981" width="2.8087%" height="15" fill="rgb(250,166,2)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="991.50">ro..</text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (1,969 samples, 2.81%)</title><rect x="0.3552%" y="965" width="2.8087%" height="15" fill="rgb(242,216,29)" fg:x="249" fg:w="1969"/><text x="0.6052%" y="975.50">ro..</text></g><g><title>operator new (10 samples, 0.01%)</title><rect x="3.1639%" y="933" width="0.0143%" height="15" fill="rgb(230,116,27)" fg:x="2218" fg:w="10"/><text x="3.4139%" y="943.50"></text></g><g><title>__libc_malloc (10 samples, 0.01%)</title><rect x="3.1639%" y="917" width="0.0143%" height="15" fill="rgb(228,99,48)" fg:x="2218" fg:w="10"/><text x="3.4139%" y="927.50"></text></g><g><title>rocksdb::BlockCreateContext::Create (19 samples, 0.03%)</title><rect x="3.1639%" y="949" width="0.0271%" height="15" fill="rgb(253,11,6)" fg:x="2218" fg:w="19"/><text x="3.4139%" y="959.50"></text></g><g><title>rocksdb::Block::Block (9 samples, 0.01%)</title><rect x="3.1781%" y="933" width="0.0128%" height="15" fill="rgb(247,143,39)" fg:x="2228" fg:w="9"/><text x="3.4281%" y="943.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::CreateHandle (13 samples, 0.02%)</title><rect x="3.1953%" y="917" width="0.0185%" height="15" fill="rgb(236,97,10)" fg:x="2240" fg:w="13"/><text x="3.4453%" y="927.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Remove (70 samples, 0.10%)</title><rect x="3.2380%" y="885" width="0.0999%" height="15" fill="rgb(233,208,19)" fg:x="2270" fg:w="70"/><text x="3.4880%" y="895.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::EvictFromLRU (94 samples, 0.13%)</title><rect x="3.2323%" y="901" width="0.1341%" height="15" fill="rgb(216,164,2)" fg:x="2266" fg:w="94"/><text x="3.4823%" y="911.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::Remove (20 samples, 0.03%)</title><rect x="3.3379%" y="885" width="0.0285%" height="15" fill="rgb(220,129,5)" fg:x="2340" fg:w="20"/><text x="3.5879%" y="895.50"></text></g><g><title>rocksdb::lru_cache::LRUHandleTable::FindPointer (18 samples, 0.03%)</title><rect x="3.3408%" y="869" width="0.0257%" height="15" fill="rgb(242,17,10)" fg:x="2342" fg:w="18"/><text x="3.5908%" y="879.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="3.3793%" y="885" width="0.0185%" height="15" fill="rgb(242,107,0)" fg:x="2369" fg:w="13"/><text x="3.6293%" y="895.50"></text></g><g><title>cfree (169 samples, 0.24%)</title><rect x="3.3992%" y="869" width="0.2411%" height="15" fill="rgb(251,28,31)" fg:x="2383" fg:w="169"/><text x="3.6492%" y="879.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::NotifyEvicted (235 samples, 0.34%)</title><rect x="3.3664%" y="901" width="0.3352%" height="15" fill="rgb(233,223,10)" fg:x="2360" fg:w="235"/><text x="3.6164%" y="911.50"></text></g><g><title>rocksdb::BasicTypedCacheHelperFns&lt;rocksdb::Block_kData&gt;::Delete (213 samples, 0.30%)</title><rect x="3.3978%" y="885" width="0.3038%" height="15" fill="rgb(215,21,27)" fg:x="2382" fg:w="213"/><text x="3.6478%" y="895.50"></text></g><g><title>rocksdb::Block::~Block (41 samples, 0.06%)</title><rect x="3.6432%" y="869" width="0.0585%" height="15" fill="rgb(232,23,21)" fg:x="2554" fg:w="41"/><text x="3.8932%" y="879.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (38 samples, 0.05%)</title><rect x="3.7145%" y="901" width="0.0542%" height="15" fill="rgb(244,5,23)" fg:x="2604" fg:w="38"/><text x="3.9645%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock (35 samples, 0.05%)</title><rect x="3.7188%" y="885" width="0.0499%" height="15" fill="rgb(226,81,46)" fg:x="2607" fg:w="35"/><text x="3.9688%" y="895.50"></text></g><g><title>rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block_kData&gt; (425 samples, 0.61%)</title><rect x="3.1639%" y="965" width="0.6062%" height="15" fill="rgb(247,70,30)" fg:x="2218" fg:w="425"/><text x="3.4139%" y="975.50"></text></g><g><title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (406 samples, 0.58%)</title><rect x="3.1910%" y="949" width="0.5791%" height="15" fill="rgb(212,68,19)" fg:x="2237" fg:w="406"/><text x="3.4410%" y="959.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Insert (403 samples, 0.57%)</title><rect x="3.1953%" y="933" width="0.5749%" height="15" fill="rgb(240,187,13)" fg:x="2240" fg:w="403"/><text x="3.4453%" y="943.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::InsertItem (390 samples, 0.56%)</title><rect x="3.2138%" y="917" width="0.5563%" height="15" fill="rgb(223,113,26)" fg:x="2253" fg:w="390"/><text x="3.4638%" y="927.50"></text></g><g><title>__nss_passwd_lookup (54 samples, 0.08%)</title><rect x="3.8400%" y="949" width="0.0770%" height="15" fill="rgb(206,192,2)" fg:x="2692" fg:w="54"/><text x="4.0900%" y="959.50"></text></g><g><title>operator new (42 samples, 0.06%)</title><rect x="3.9213%" y="949" width="0.0599%" height="15" fill="rgb(241,108,4)" fg:x="2749" fg:w="42"/><text x="4.1713%" y="959.50"></text></g><g><title>__libc_malloc (41 samples, 0.06%)</title><rect x="3.9227%" y="933" width="0.0585%" height="15" fill="rgb(247,173,49)" fg:x="2750" fg:w="41"/><text x="4.1727%" y="943.50"></text></g><g><title>_IO_str_seekoff (31 samples, 0.04%)</title><rect x="3.9370%" y="917" width="0.0442%" height="15" fill="rgb(224,114,35)" fg:x="2760" fg:w="31"/><text x="4.1870%" y="927.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (147 samples, 0.21%)</title><rect x="3.9841%" y="949" width="0.2097%" height="15" fill="rgb(245,159,27)" fg:x="2793" fg:w="147"/><text x="4.2341%" y="959.50"></text></g><g><title>rocksdb::VerifyBlockChecksum (142 samples, 0.20%)</title><rect x="3.9912%" y="933" width="0.2026%" height="15" fill="rgb(245,172,44)" fg:x="2798" fg:w="142"/><text x="4.2412%" y="943.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum (134 samples, 0.19%)</title><rect x="4.0026%" y="917" width="0.1911%" height="15" fill="rgb(236,23,11)" fg:x="2806" fg:w="134"/><text x="4.2526%" y="927.50"></text></g><g><title>XXH3_hashLong_64b_default.constprop.9 (133 samples, 0.19%)</title><rect x="4.0041%" y="901" width="0.1897%" height="15" fill="rgb(205,117,38)" fg:x="2807" fg:w="133"/><text x="4.2541%" y="911.50"></text></g><g><title>__pthread_enable_asynccancel (8 samples, 0.01%)</title><rect x="4.2822%" y="901" width="0.0114%" height="15" fill="rgb(237,72,25)" fg:x="3002" fg:w="8"/><text x="4.5322%" y="911.50"></text></g><g><title>__fdget (29 samples, 0.04%)</title><rect x="4.3493%" y="837" width="0.0414%" height="15" fill="rgb(244,70,9)" fg:x="3049" fg:w="29"/><text x="4.5993%" y="847.50"></text></g><g><title>__fget_light (29 samples, 0.04%)</title><rect x="4.3493%" y="821" width="0.0414%" height="15" fill="rgb(217,125,39)" fg:x="3049" fg:w="29"/><text x="4.5993%" y="831.50"></text></g><g><title>copy_user_enhanced_fast_string (386 samples, 0.55%)</title><rect x="4.4862%" y="741" width="0.5506%" height="15" fill="rgb(235,36,10)" fg:x="3145" fg:w="386"/><text x="4.7362%" y="751.50"></text></g><g><title>copy_page_to_iter (406 samples, 0.58%)</title><rect x="4.4634%" y="757" width="0.5791%" height="15" fill="rgb(251,123,47)" fg:x="3129" fg:w="406"/><text x="4.7134%" y="767.50"></text></g><g><title>__lock_text_start (16 samples, 0.02%)</title><rect x="5.0539%" y="709" width="0.0228%" height="15" fill="rgb(221,13,13)" fg:x="3543" fg:w="16"/><text x="5.3039%" y="719.50"></text></g><g><title>activate_page (19 samples, 0.03%)</title><rect x="5.0525%" y="741" width="0.0271%" height="15" fill="rgb(238,131,9)" fg:x="3542" fg:w="19"/><text x="5.3025%" y="751.50"></text></g><g><title>pagevec_lru_move_fn (19 samples, 0.03%)</title><rect x="5.0525%" y="725" width="0.0271%" height="15" fill="rgb(211,50,8)" fg:x="3542" fg:w="19"/><text x="5.3025%" y="735.50"></text></g><g><title>mark_page_accessed (29 samples, 0.04%)</title><rect x="5.0454%" y="757" width="0.0414%" height="15" fill="rgb(245,182,24)" fg:x="3537" fg:w="29"/><text x="5.2954%" y="767.50"></text></g><g><title>xas_load (194 samples, 0.28%)</title><rect x="5.3221%" y="725" width="0.2767%" height="15" fill="rgb(242,14,37)" fg:x="3731" fg:w="194"/><text x="5.5721%" y="735.50"></text></g><g><title>xas_start (12 samples, 0.02%)</title><rect x="5.5817%" y="709" width="0.0171%" height="15" fill="rgb(246,228,12)" fg:x="3913" fg:w="12"/><text x="5.8317%" y="719.50"></text></g><g><title>find_get_entry (356 samples, 0.51%)</title><rect x="5.0924%" y="741" width="0.5078%" height="15" fill="rgb(213,55,15)" fg:x="3570" fg:w="356"/><text x="5.3424%" y="751.50"></text></g><g><title>pagecache_get_page (362 samples, 0.52%)</title><rect x="5.0867%" y="757" width="0.5164%" height="15" fill="rgb(209,9,3)" fg:x="3566" fg:w="362"/><text x="5.3367%" y="767.50"></text></g><g><title>atime_needs_update (9 samples, 0.01%)</title><rect x="5.6117%" y="741" width="0.0128%" height="15" fill="rgb(230,59,30)" fg:x="3934" fg:w="9"/><text x="5.8617%" y="751.50"></text></g><g><title>generic_file_read_iter (842 samples, 1.20%)</title><rect x="4.4263%" y="773" width="1.2011%" height="15" fill="rgb(209,121,21)" fg:x="3103" fg:w="842"/><text x="4.6763%" y="783.50"></text></g><g><title>touch_atime (15 samples, 0.02%)</title><rect x="5.6060%" y="757" width="0.0214%" height="15" fill="rgb(220,109,13)" fg:x="3930" fg:w="15"/><text x="5.8560%" y="767.50"></text></g><g><title>ext4_file_read_iter (844 samples, 1.20%)</title><rect x="4.4249%" y="789" width="1.2039%" height="15" fill="rgb(232,18,1)" fg:x="3102" fg:w="844"/><text x="4.6749%" y="799.50"></text></g><g><title>__vfs_read (854 samples, 1.22%)</title><rect x="4.4134%" y="821" width="1.2182%" height="15" fill="rgb(215,41,42)" fg:x="3094" fg:w="854"/><text x="4.6634%" y="831.50"></text></g><g><title>new_sync_read (854 samples, 1.22%)</title><rect x="4.4134%" y="805" width="1.2182%" height="15" fill="rgb(224,123,36)" fg:x="3094" fg:w="854"/><text x="4.6634%" y="815.50"></text></g><g><title>__x64_sys_pread64 (921 samples, 1.31%)</title><rect x="4.3478%" y="869" width="1.3138%" height="15" fill="rgb(240,125,3)" fg:x="3048" fg:w="921"/><text x="4.5978%" y="879.50"></text></g><g><title>ksys_pread64 (921 samples, 1.31%)</title><rect x="4.3478%" y="853" width="1.3138%" height="15" fill="rgb(205,98,50)" fg:x="3048" fg:w="921"/><text x="4.5978%" y="863.50"></text></g><g><title>vfs_read (881 samples, 1.26%)</title><rect x="4.4049%" y="837" width="1.2567%" height="15" fill="rgb(205,185,37)" fg:x="3088" fg:w="881"/><text x="4.6549%" y="847.50"></text></g><g><title>rw_verify_area (18 samples, 0.03%)</title><rect x="5.6359%" y="821" width="0.0257%" height="15" fill="rgb(238,207,15)" fg:x="3951" fg:w="18"/><text x="5.8859%" y="831.50"></text></g><g><title>security_file_permission (12 samples, 0.02%)</title><rect x="5.6445%" y="805" width="0.0171%" height="15" fill="rgb(213,199,42)" fg:x="3957" fg:w="12"/><text x="5.8945%" y="815.50"></text></g><g><title>rocksdb::PosixRandomAccessFile::Read (1,003 samples, 1.43%)</title><rect x="4.2323%" y="933" width="1.4307%" height="15" fill="rgb(235,201,11)" fg:x="2967" fg:w="1003"/><text x="4.4823%" y="943.50"></text></g><g><title>__libc_pread (998 samples, 1.42%)</title><rect x="4.2394%" y="917" width="1.4236%" height="15" fill="rgb(207,46,11)" fg:x="2972" fg:w="998"/><text x="4.4894%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (960 samples, 1.37%)</title><rect x="4.2936%" y="901" width="1.3694%" height="15" fill="rgb(241,35,35)" fg:x="3010" fg:w="960"/><text x="4.5436%" y="911.50"></text></g><g><title>do_syscall_64 (956 samples, 1.36%)</title><rect x="4.2993%" y="885" width="1.3637%" height="15" fill="rgb(243,32,47)" fg:x="3014" fg:w="956"/><text x="4.5493%" y="895.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read (1,027 samples, 1.46%)</title><rect x="4.2052%" y="949" width="1.4650%" height="15" fill="rgb(247,202,23)" fg:x="2948" fg:w="1027"/><text x="4.4552%" y="959.50"></text></g><g><title>operator new (59 samples, 0.08%)</title><rect x="5.6844%" y="917" width="0.0842%" height="15" fill="rgb(219,102,11)" fg:x="3985" fg:w="59"/><text x="5.9344%" y="927.50"></text></g><g><title>__libc_malloc (57 samples, 0.08%)</title><rect x="5.6873%" y="901" width="0.0813%" height="15" fill="rgb(243,110,44)" fg:x="3987" fg:w="57"/><text x="5.9373%" y="911.50"></text></g><g><title>_IO_str_seekoff (45 samples, 0.06%)</title><rect x="5.7044%" y="885" width="0.0642%" height="15" fill="rgb(222,74,54)" fg:x="3999" fg:w="45"/><text x="5.9544%" y="895.50"></text></g><g><title>__nss_passwd_lookup (27 samples, 0.04%)</title><rect x="5.8356%" y="885" width="0.0385%" height="15" fill="rgb(216,99,12)" fg:x="4091" fg:w="27"/><text x="6.0856%" y="895.50"></text></g><g><title>[ord] (17 samples, 0.02%)</title><rect x="6.5203%" y="869" width="0.0242%" height="15" fill="rgb(226,22,26)" fg:x="4571" fg:w="17"/><text x="6.7703%" y="879.50"></text></g><g><title>__nss_passwd_lookup (680 samples, 0.97%)</title><rect x="6.5446%" y="869" width="0.9700%" height="15" fill="rgb(217,163,10)" fg:x="4588" fg:w="680"/><text x="6.7946%" y="879.50"></text></g><g><title>snappy::AdvanceToNextTag (256 samples, 0.37%)</title><rect x="7.5160%" y="869" width="0.3652%" height="15" fill="rgb(213,25,53)" fg:x="5269" fg:w="256"/><text x="7.7660%" y="879.50"></text></g><g><title>snappy::DecompressBranchless&lt;char*&gt; (1,455 samples, 2.08%)</title><rect x="5.8756%" y="885" width="2.0755%" height="15" fill="rgb(252,105,26)" fg:x="4119" fg:w="1455"/><text x="6.1256%" y="895.50">s..</text></g><g><title>snappy::MemMove (46 samples, 0.07%)</title><rect x="7.8854%" y="869" width="0.0656%" height="15" fill="rgb(220,39,43)" fg:x="5528" fg:w="46"/><text x="8.1354%" y="879.50"></text></g><g><title>ord::index::updater::Updater::update_index (5,335 samples, 7.61%)</title><rect x="0.3552%" y="1205" width="7.6101%" height="15" fill="rgb(229,68,48)" fg:x="249" fg:w="5335"/><text x="0.6052%" y="1215.50">ord::index..</text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get_pinned (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1189" width="4.8014%" height="15" fill="rgb(252,8,32)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1199.50">rocksd..</text></g><g><title>rocksdb_transaction_get_pinned (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1173" width="4.8014%" height="15" fill="rgb(223,20,43)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1183.50">rocksd..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1157" width="4.8014%" height="15" fill="rgb(229,81,49)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1167.50">rocksd..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1141" width="4.8014%" height="15" fill="rgb(236,28,36)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1151.50">rocksd..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1125" width="4.8014%" height="15" fill="rgb(249,185,26)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1135.50">rocksd..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1109" width="4.8014%" height="15" fill="rgb(249,174,33)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1119.50">rocksd..</text></g><g><title>rocksdb::DBImpl::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1093" width="4.8014%" height="15" fill="rgb(233,201,37)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1103.50">rocksd..</text></g><g><title>rocksdb::DBImpl::GetImpl (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1077" width="4.8014%" height="15" fill="rgb(221,78,26)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1087.50">rocksd..</text></g><g><title>rocksdb::Version::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1061" width="4.8014%" height="15" fill="rgb(250,127,30)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1071.50">rocksd..</text></g><g><title>rocksdb::TableCache::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1045" width="4.8014%" height="15" fill="rgb(230,49,44)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1055.50">rocksd..</text></g><g><title>rocksdb::BlockBasedTable::Get (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1029" width="4.8014%" height="15" fill="rgb(229,67,23)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1039.50">rocksd..</text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (3,366 samples, 4.80%)</title><rect x="3.1639%" y="1013" width="4.8014%" height="15" fill="rgb(249,83,47)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1023.50">rocksd..</text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (3,366 samples, 4.80%)</title><rect x="3.1639%" y="997" width="4.8014%" height="15" fill="rgb(215,43,3)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="1007.50">rocksd..</text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (3,366 samples, 4.80%)</title><rect x="3.1639%" y="981" width="4.8014%" height="15" fill="rgb(238,154,13)" fg:x="2218" fg:w="3366"/><text x="3.4139%" y="991.50">rocksd..</text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents (2,941 samples, 4.20%)</title><rect x="3.7701%" y="965" width="4.1952%" height="15" fill="rgb(219,56,2)" fg:x="2643" fg:w="2941"/><text x="4.0201%" y="975.50">rocks..</text></g><g><title>rocksdb::UncompressSerializedBlock (1,609 samples, 2.30%)</title><rect x="5.6701%" y="949" width="2.2952%" height="15" fill="rgb(233,0,4)" fg:x="3975" fg:w="1609"/><text x="5.9201%" y="959.50">r..</text></g><g><title>rocksdb::UncompressBlockData (1,607 samples, 2.29%)</title><rect x="5.6730%" y="933" width="2.2923%" height="15" fill="rgb(235,30,7)" fg:x="3977" fg:w="1607"/><text x="5.9230%" y="943.50">r..</text></g><g><title>snappy::RawUncompress (1,539 samples, 2.20%)</title><rect x="5.7700%" y="917" width="2.1953%" height="15" fill="rgb(250,79,13)" fg:x="4045" fg:w="1539"/><text x="6.0200%" y="927.50">s..</text></g><g><title>snappy::RawUncompress (1,538 samples, 2.19%)</title><rect x="5.7714%" y="901" width="2.1939%" height="15" fill="rgb(211,146,34)" fg:x="4046" fg:w="1538"/><text x="6.0214%" y="911.50">s..</text></g><g><title>snappy::SnappyDecompressor::RefillTag (10 samples, 0.01%)</title><rect x="7.9510%" y="885" width="0.0143%" height="15" fill="rgb(228,22,38)" fg:x="5574" fg:w="10"/><text x="8.2010%" y="895.50"></text></g><g><title>__fdget (18 samples, 0.03%)</title><rect x="8.0352%" y="837" width="0.0257%" height="15" fill="rgb(235,168,5)" fg:x="5633" fg:w="18"/><text x="8.2852%" y="847.50"></text></g><g><title>__fget_light (18 samples, 0.03%)</title><rect x="8.0352%" y="821" width="0.0257%" height="15" fill="rgb(221,155,16)" fg:x="5633" fg:w="18"/><text x="8.2852%" y="831.50"></text></g><g><title>copy_user_enhanced_fast_string (290 samples, 0.41%)</title><rect x="8.1179%" y="741" width="0.4137%" height="15" fill="rgb(215,215,53)" fg:x="5691" fg:w="290"/><text x="8.3679%" y="751.50"></text></g><g><title>copy_page_to_iter (302 samples, 0.43%)</title><rect x="8.1065%" y="757" width="0.4308%" height="15" fill="rgb(223,4,10)" fg:x="5683" fg:w="302"/><text x="8.3565%" y="767.50"></text></g><g><title>find_get_entry (265 samples, 0.38%)</title><rect x="8.5430%" y="741" width="0.3780%" height="15" fill="rgb(234,103,6)" fg:x="5989" fg:w="265"/><text x="8.7930%" y="751.50"></text></g><g><title>xas_load (140 samples, 0.20%)</title><rect x="8.7213%" y="725" width="0.1997%" height="15" fill="rgb(227,97,0)" fg:x="6114" fg:w="140"/><text x="8.9713%" y="735.50"></text></g><g><title>xas_start (8 samples, 0.01%)</title><rect x="8.9096%" y="709" width="0.0114%" height="15" fill="rgb(234,150,53)" fg:x="6246" fg:w="8"/><text x="9.1596%" y="719.50"></text></g><g><title>pagecache_get_page (267 samples, 0.38%)</title><rect x="8.5430%" y="757" width="0.3809%" height="15" fill="rgb(228,201,54)" fg:x="5989" fg:w="267"/><text x="8.7930%" y="767.50"></text></g><g><title>generic_file_read_iter (597 samples, 0.85%)</title><rect x="8.0851%" y="773" width="0.8516%" height="15" fill="rgb(222,22,37)" fg:x="5668" fg:w="597"/><text x="8.3351%" y="783.50"></text></g><g><title>touch_atime (9 samples, 0.01%)</title><rect x="8.9239%" y="757" width="0.0128%" height="15" fill="rgb(237,53,32)" fg:x="6256" fg:w="9"/><text x="9.1739%" y="767.50"></text></g><g><title>ext4_file_read_iter (603 samples, 0.86%)</title><rect x="8.0780%" y="789" width="0.8602%" height="15" fill="rgb(233,25,53)" fg:x="5663" fg:w="603"/><text x="8.3280%" y="799.50"></text></g><g><title>__vfs_read (608 samples, 0.87%)</title><rect x="8.0723%" y="821" width="0.8673%" height="15" fill="rgb(210,40,34)" fg:x="5659" fg:w="608"/><text x="8.3223%" y="831.50"></text></g><g><title>new_sync_read (608 samples, 0.87%)</title><rect x="8.0723%" y="805" width="0.8673%" height="15" fill="rgb(241,220,44)" fg:x="5659" fg:w="608"/><text x="8.3223%" y="815.50"></text></g><g><title>__libc_pread (700 samples, 1.00%)</title><rect x="7.9710%" y="917" width="0.9985%" height="15" fill="rgb(235,28,35)" fg:x="5588" fg:w="700"/><text x="8.2210%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (677 samples, 0.97%)</title><rect x="8.0038%" y="901" width="0.9657%" height="15" fill="rgb(210,56,17)" fg:x="5611" fg:w="677"/><text x="8.2538%" y="911.50"></text></g><g><title>do_syscall_64 (676 samples, 0.96%)</title><rect x="8.0052%" y="885" width="0.9643%" height="15" fill="rgb(224,130,29)" fg:x="5612" fg:w="676"/><text x="8.2552%" y="895.50"></text></g><g><title>__x64_sys_pread64 (658 samples, 0.94%)</title><rect x="8.0309%" y="869" width="0.9386%" height="15" fill="rgb(235,212,8)" fg:x="5630" fg:w="658"/><text x="8.2809%" y="879.50"></text></g><g><title>ksys_pread64 (657 samples, 0.94%)</title><rect x="8.0324%" y="853" width="0.9372%" height="15" fill="rgb(223,33,50)" fg:x="5631" fg:w="657"/><text x="8.2824%" y="863.50"></text></g><g><title>vfs_read (634 samples, 0.90%)</title><rect x="8.0652%" y="837" width="0.9044%" height="15" fill="rgb(219,149,13)" fg:x="5654" fg:w="634"/><text x="8.3152%" y="847.50"></text></g><g><title>rw_verify_area (15 samples, 0.02%)</title><rect x="8.9481%" y="821" width="0.0214%" height="15" fill="rgb(250,156,29)" fg:x="6273" fg:w="15"/><text x="9.1981%" y="831.50"></text></g><g><title>security_file_permission (12 samples, 0.02%)</title><rect x="8.9524%" y="805" width="0.0171%" height="15" fill="rgb(216,193,19)" fg:x="6276" fg:w="12"/><text x="9.2024%" y="815.50"></text></g><g><title>[unknown] (6,289 samples, 8.97%)</title><rect x="0.0000%" y="1221" width="8.9710%" height="15" fill="rgb(216,135,14)" fg:x="0" fg:w="6289"/><text x="0.2500%" y="1231.50">[unknown]</text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (705 samples, 1.01%)</title><rect x="7.9653%" y="1205" width="1.0056%" height="15" fill="rgb(241,47,5)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1215.50"></text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get (705 samples, 1.01%)</title><rect x="7.9653%" y="1189" width="1.0056%" height="15" fill="rgb(233,42,35)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1199.50"></text></g><g><title>rocksdb_transaction_get_pinned (705 samples, 1.01%)</title><rect x="7.9653%" y="1173" width="1.0056%" height="15" fill="rgb(231,13,6)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1183.50"></text></g><g><title>rocksdb::TransactionBaseImpl::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1157" width="1.0056%" height="15" fill="rgb(207,181,40)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1167.50"></text></g><g><title>rocksdb::TransactionBaseImpl::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1141" width="1.0056%" height="15" fill="rgb(254,173,49)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1151.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (705 samples, 1.01%)</title><rect x="7.9653%" y="1125" width="1.0056%" height="15" fill="rgb(221,1,38)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1135.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (705 samples, 1.01%)</title><rect x="7.9653%" y="1109" width="1.0056%" height="15" fill="rgb(206,124,46)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1119.50"></text></g><g><title>rocksdb::DBImpl::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1093" width="1.0056%" height="15" fill="rgb(249,21,11)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1103.50"></text></g><g><title>rocksdb::DBImpl::GetImpl (705 samples, 1.01%)</title><rect x="7.9653%" y="1077" width="1.0056%" height="15" fill="rgb(222,201,40)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1087.50"></text></g><g><title>rocksdb::Version::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1061" width="1.0056%" height="15" fill="rgb(235,61,29)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1071.50"></text></g><g><title>rocksdb::TableCache::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1045" width="1.0056%" height="15" fill="rgb(219,207,3)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1055.50"></text></g><g><title>rocksdb::BlockBasedTable::Get (705 samples, 1.01%)</title><rect x="7.9653%" y="1029" width="1.0056%" height="15" fill="rgb(222,56,46)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1039.50"></text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (705 samples, 1.01%)</title><rect x="7.9653%" y="1013" width="1.0056%" height="15" fill="rgb(239,76,54)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1023.50"></text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (705 samples, 1.01%)</title><rect x="7.9653%" y="997" width="1.0056%" height="15" fill="rgb(231,124,27)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="1007.50"></text></g><g><title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (705 samples, 1.01%)</title><rect x="7.9653%" y="981" width="1.0056%" height="15" fill="rgb(249,195,6)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="991.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents (705 samples, 1.01%)</title><rect x="7.9653%" y="965" width="1.0056%" height="15" fill="rgb(237,174,47)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="975.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read (705 samples, 1.01%)</title><rect x="7.9653%" y="949" width="1.0056%" height="15" fill="rgb(206,201,31)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="959.50"></text></g><g><title>rocksdb::PosixRandomAccessFile::Read (705 samples, 1.01%)</title><rect x="7.9653%" y="933" width="1.0056%" height="15" fill="rgb(231,57,52)" fg:x="5584" fg:w="705"/><text x="8.2153%" y="943.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (341 samples, 0.49%)</title><rect x="9.0323%" y="1045" width="0.4864%" height="15" fill="rgb(248,177,22)" fg:x="6332" fg:w="341"/><text x="9.2823%" y="1055.50"></text></g><g><title>std::io::Write::write_all (335 samples, 0.48%)</title><rect x="9.0409%" y="1029" width="0.4779%" height="15" fill="rgb(215,211,37)" fg:x="6338" fg:w="335"/><text x="9.2909%" y="1039.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (321 samples, 0.46%)</title><rect x="9.0608%" y="1013" width="0.4579%" height="15" fill="rgb(241,128,51)" fg:x="6352" fg:w="321"/><text x="9.3108%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (318 samples, 0.45%)</title><rect x="9.0651%" y="997" width="0.4536%" height="15" fill="rgb(227,165,31)" fg:x="6355" fg:w="318"/><text x="9.3151%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (16 samples, 0.02%)</title><rect x="9.4959%" y="981" width="0.0228%" height="15" fill="rgb(228,167,24)" fg:x="6657" fg:w="16"/><text x="9.7459%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (554 samples, 0.79%)</title><rect x="9.0109%" y="1061" width="0.7903%" height="15" fill="rgb(228,143,12)" fg:x="6317" fg:w="554"/><text x="9.2609%" y="1071.50"></text></g><g><title>std::io::Write::write_all (198 samples, 0.28%)</title><rect x="9.5187%" y="1045" width="0.2824%" height="15" fill="rgb(249,149,8)" fg:x="6673" fg:w="198"/><text x="9.7687%" y="1055.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (182 samples, 0.26%)</title><rect x="9.5415%" y="1029" width="0.2596%" height="15" fill="rgb(243,35,44)" fg:x="6689" fg:w="182"/><text x="9.7915%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (176 samples, 0.25%)</title><rect x="9.5501%" y="1013" width="0.2511%" height="15" fill="rgb(246,89,9)" fg:x="6695" fg:w="176"/><text x="9.8001%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (29 samples, 0.04%)</title><rect x="9.7598%" y="997" width="0.0414%" height="15" fill="rgb(233,213,13)" fg:x="6842" fg:w="29"/><text x="10.0098%" y="1007.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (10 samples, 0.01%)</title><rect x="9.8012%" y="1061" width="0.0143%" height="15" fill="rgb(233,141,41)" fg:x="6871" fg:w="10"/><text x="10.0512%" y="1071.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.01%)</title><rect x="9.8040%" y="1045" width="0.0114%" height="15" fill="rgb(239,167,4)" fg:x="6873" fg:w="8"/><text x="10.0540%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (161 samples, 0.23%)</title><rect x="9.8283%" y="1045" width="0.2297%" height="15" fill="rgb(209,217,16)" fg:x="6890" fg:w="161"/><text x="10.0783%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (334 samples, 0.48%)</title><rect x="9.8154%" y="1061" width="0.4764%" height="15" fill="rgb(219,88,35)" fg:x="6881" fg:w="334"/><text x="10.0654%" y="1071.50"></text></g><g><title>bitcoin_hashes::Hash::hash (164 samples, 0.23%)</title><rect x="10.0579%" y="1045" width="0.2339%" height="15" fill="rgb(220,193,23)" fg:x="7051" fg:w="164"/><text x="10.3079%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (161 samples, 0.23%)</title><rect x="10.0622%" y="1029" width="0.2297%" height="15" fill="rgb(230,90,52)" fg:x="7054" fg:w="161"/><text x="10.3122%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (25 samples, 0.04%)</title><rect x="10.6456%" y="997" width="0.0357%" height="15" fill="rgb(252,106,19)" fg:x="7463" fg:w="25"/><text x="10.8956%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (274 samples, 0.39%)</title><rect x="10.2919%" y="1061" width="0.3908%" height="15" fill="rgb(206,74,20)" fg:x="7215" fg:w="274"/><text x="10.5419%" y="1071.50"></text></g><g><title>std::io::Write::write_all (269 samples, 0.38%)</title><rect x="10.2990%" y="1045" width="0.3837%" height="15" fill="rgb(230,138,44)" fg:x="7220" fg:w="269"/><text x="10.5490%" y="1055.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (254 samples, 0.36%)</title><rect x="10.3204%" y="1029" width="0.3623%" height="15" fill="rgb(235,182,43)" fg:x="7235" fg:w="254"/><text x="10.5704%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (249 samples, 0.36%)</title><rect x="10.3275%" y="1013" width="0.3552%" height="15" fill="rgb(242,16,51)" fg:x="7240" fg:w="249"/><text x="10.5775%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281 samples, 1.83%)</title><rect x="8.9724%" y="1093" width="1.8273%" height="15" fill="rgb(248,9,4)" fg:x="6290" fg:w="1281"/><text x="9.2224%" y="1103.50">&lt;..</text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (1,266 samples, 1.81%)</title><rect x="8.9938%" y="1077" width="1.8059%" height="15" fill="rgb(210,31,22)" fg:x="6305" fg:w="1266"/><text x="9.2438%" y="1087.50">b..</text></g><g><title>std::io::Write::write_all (82 samples, 0.12%)</title><rect x="10.6827%" y="1061" width="0.1170%" height="15" fill="rgb(239,54,39)" fg:x="7489" fg:w="82"/><text x="10.9327%" y="1071.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (74 samples, 0.11%)</title><rect x="10.6941%" y="1045" width="0.1056%" height="15" fill="rgb(230,99,41)" fg:x="7497" fg:w="74"/><text x="10.9441%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (73 samples, 0.10%)</title><rect x="10.6955%" y="1029" width="0.1041%" height="15" fill="rgb(253,106,12)" fg:x="7498" fg:w="73"/><text x="10.9455%" y="1039.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,282 samples, 1.83%)</title><rect x="8.9724%" y="1109" width="1.8287%" height="15" fill="rgb(213,46,41)" fg:x="6290" fg:w="1282"/><text x="9.2224%" y="1119.50">a..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.11%)</title><rect x="11.2019%" y="1077" width="0.1084%" height="15" fill="rgb(215,133,35)" fg:x="7853" fg:w="76"/><text x="11.4519%" y="1087.50"></text></g><g><title>cfree (67 samples, 0.10%)</title><rect x="11.2148%" y="1061" width="0.0956%" height="15" fill="rgb(213,28,5)" fg:x="7862" fg:w="67"/><text x="11.4648%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.02%)</title><rect x="11.3118%" y="1061" width="0.0214%" height="15" fill="rgb(215,77,49)" fg:x="7930" fg:w="15"/><text x="11.5618%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.01%)</title><rect x="11.3189%" y="1045" width="0.0143%" height="15" fill="rgb(248,100,22)" fg:x="7935" fg:w="10"/><text x="11.5689%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="11.3218%" y="1029" width="0.0114%" height="15" fill="rgb(208,67,9)" fg:x="7937" fg:w="8"/><text x="11.5718%" y="1039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (51 samples, 0.07%)</title><rect x="11.3103%" y="1077" width="0.0727%" height="15" fill="rgb(219,133,21)" fg:x="7929" fg:w="51"/><text x="11.5603%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (35 samples, 0.05%)</title><rect x="11.3332%" y="1061" width="0.0499%" height="15" fill="rgb(246,46,29)" fg:x="7945" fg:w="35"/><text x="11.5832%" y="1071.50"></text></g><g><title>__libc_malloc (35 samples, 0.05%)</title><rect x="11.3332%" y="1045" width="0.0499%" height="15" fill="rgb(246,185,52)" fg:x="7945" fg:w="35"/><text x="11.5832%" y="1055.50"></text></g><g><title>_IO_str_seekoff (35 samples, 0.05%)</title><rect x="11.3332%" y="1029" width="0.0499%" height="15" fill="rgb(252,136,11)" fg:x="7945" fg:w="35"/><text x="11.5832%" y="1039.50"></text></g><g><title>cfree (84 samples, 0.12%)</title><rect x="11.3859%" y="1077" width="0.1198%" height="15" fill="rgb(219,138,53)" fg:x="7982" fg:w="84"/><text x="11.6359%" y="1087.50"></text></g><g><title>_IO_str_seekoff (68 samples, 0.10%)</title><rect x="11.4088%" y="1061" width="0.0970%" height="15" fill="rgb(211,51,23)" fg:x="7998" fg:w="68"/><text x="11.6588%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.03%)</title><rect x="11.5058%" y="1077" width="0.0328%" height="15" fill="rgb(247,221,28)" fg:x="8066" fg:w="23"/><text x="11.7558%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="11.5215%" y="1061" width="0.0171%" height="15" fill="rgb(251,222,45)" fg:x="8077" fg:w="12"/><text x="11.7715%" y="1071.50"></text></g><g><title>cfree (10 samples, 0.01%)</title><rect x="11.5386%" y="1061" width="0.0143%" height="15" fill="rgb(217,162,53)" fg:x="8089" fg:w="10"/><text x="11.7886%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;ord::index::updater::BlockData&gt; (158 samples, 0.23%)</title><rect x="11.5386%" y="1077" width="0.2254%" height="15" fill="rgb(229,93,14)" fg:x="8089" fg:w="158"/><text x="11.7886%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (148 samples, 0.21%)</title><rect x="11.5528%" y="1061" width="0.2111%" height="15" fill="rgb(209,67,49)" fg:x="8099" fg:w="148"/><text x="11.8028%" y="1071.50"></text></g><g><title>cfree (138 samples, 0.20%)</title><rect x="11.5671%" y="1045" width="0.1969%" height="15" fill="rgb(213,87,29)" fg:x="8109" fg:w="138"/><text x="11.8171%" y="1055.50"></text></g><g><title>_IO_str_seekoff (20 samples, 0.03%)</title><rect x="11.7354%" y="1029" width="0.0285%" height="15" fill="rgb(205,151,52)" fg:x="8227" fg:w="20"/><text x="11.9854%" y="1039.50"></text></g><g><title>log::__private_api_log (13 samples, 0.02%)</title><rect x="11.7668%" y="1077" width="0.0185%" height="15" fill="rgb(253,215,39)" fg:x="8249" fg:w="13"/><text x="12.0168%" y="1087.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (13 samples, 0.02%)</title><rect x="11.7668%" y="1061" width="0.0185%" height="15" fill="rgb(221,220,41)" fg:x="8249" fg:w="13"/><text x="12.0168%" y="1071.50"></text></g><g><title>__libc_malloc (21 samples, 0.03%)</title><rect x="11.9052%" y="1029" width="0.0300%" height="15" fill="rgb(218,133,21)" fg:x="8346" fg:w="21"/><text x="12.1552%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.04%)</title><rect x="11.8980%" y="1061" width="0.0399%" height="15" fill="rgb(221,193,43)" fg:x="8341" fg:w="28"/><text x="12.1480%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.04%)</title><rect x="11.9023%" y="1045" width="0.0357%" height="15" fill="rgb(240,128,52)" fg:x="8344" fg:w="25"/><text x="12.1523%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (187 samples, 0.27%)</title><rect x="11.9465%" y="1045" width="0.2667%" height="15" fill="rgb(253,114,12)" fg:x="8375" fg:w="187"/><text x="12.1965%" y="1055.50"></text></g><g><title>_IO_str_seekoff (22 samples, 0.03%)</title><rect x="12.3545%" y="981" width="0.0314%" height="15" fill="rgb(215,223,47)" fg:x="8661" fg:w="22"/><text x="12.6045%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (316 samples, 0.45%)</title><rect x="11.9380%" y="1061" width="0.4508%" height="15" fill="rgb(248,225,23)" fg:x="8369" fg:w="316"/><text x="12.1880%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123 samples, 0.18%)</title><rect x="12.2133%" y="1045" width="0.1755%" height="15" fill="rgb(250,108,0)" fg:x="8562" fg:w="123"/><text x="12.4633%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 samples, 0.16%)</title><rect x="12.2290%" y="1029" width="0.1598%" height="15" fill="rgb(228,208,7)" fg:x="8573" fg:w="112"/><text x="12.4790%" y="1039.50"></text></g><g><title>realloc (105 samples, 0.15%)</title><rect x="12.2390%" y="1013" width="0.1498%" height="15" fill="rgb(244,45,10)" fg:x="8580" fg:w="105"/><text x="12.4890%" y="1023.50"></text></g><g><title>_IO_str_seekoff (34 samples, 0.05%)</title><rect x="12.3402%" y="997" width="0.0485%" height="15" fill="rgb(207,125,25)" fg:x="8651" fg:w="34"/><text x="12.5902%" y="1007.50"></text></g><g><title>cfree (27 samples, 0.04%)</title><rect x="12.3887%" y="1061" width="0.0385%" height="15" fill="rgb(210,195,18)" fg:x="8685" fg:w="27"/><text x="12.6387%" y="1071.50"></text></g><g><title>rocksdb::LockMap::GetStripe (10 samples, 0.01%)</title><rect x="12.5371%" y="965" width="0.0143%" height="15" fill="rgb(249,80,12)" fg:x="8789" fg:w="10"/><text x="12.7871%" y="975.50"></text></g><g><title>rocksdb::Hash64 (8 samples, 0.01%)</title><rect x="12.5399%" y="949" width="0.0114%" height="15" fill="rgb(221,65,9)" fg:x="8791" fg:w="8"/><text x="12.7899%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock (19 samples, 0.03%)</title><rect x="12.5913%" y="949" width="0.0271%" height="15" fill="rgb(235,49,36)" fg:x="8827" fg:w="19"/><text x="12.8413%" y="959.50"></text></g><g><title>gettimeofday (59 samples, 0.08%)</title><rect x="12.6198%" y="933" width="0.0842%" height="15" fill="rgb(225,32,20)" fg:x="8847" fg:w="59"/><text x="12.8698%" y="943.50"></text></g><g><title>rocksdb::(anonymous namespace)::PosixClock::NowMicros (61 samples, 0.09%)</title><rect x="12.6184%" y="949" width="0.0870%" height="15" fill="rgb(215,141,46)" fg:x="8846" fg:w="61"/><text x="12.8684%" y="959.50"></text></g><g><title>__libc_malloc (96 samples, 0.14%)</title><rect x="12.7953%" y="901" width="0.1369%" height="15" fill="rgb(250,160,47)" fg:x="8970" fg:w="96"/><text x="13.0453%" y="911.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.01%)</title><rect x="12.9180%" y="885" width="0.0143%" height="15" fill="rgb(216,222,40)" fg:x="9056" fg:w="10"/><text x="13.1680%" y="895.50"></text></g><g><title>operator new (99 samples, 0.14%)</title><rect x="12.7924%" y="917" width="0.1412%" height="15" fill="rgb(234,217,39)" fg:x="8968" fg:w="99"/><text x="13.0424%" y="927.50"></text></g><g><title>std::_Hash_bytes (27 samples, 0.04%)</title><rect x="12.9365%" y="917" width="0.0385%" height="15" fill="rgb(207,178,40)" fg:x="9069" fg:w="27"/><text x="13.1865%" y="927.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rocksdb::LockInfo const&amp;&gt; (162 samples, 0.23%)</title><rect x="12.7553%" y="933" width="0.2311%" height="15" fill="rgb(221,136,13)" fg:x="8942" fg:w="162"/><text x="13.0053%" y="943.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (583 samples, 0.83%)</title><rect x="12.9864%" y="933" width="0.8316%" height="15" fill="rgb(249,199,10)" fg:x="9104" fg:w="583"/><text x="13.2364%" y="943.50"></text></g><g><title>rocksdb::PointLockManager::AcquireLocked (776 samples, 1.11%)</title><rect x="12.7125%" y="949" width="1.1069%" height="15" fill="rgb(249,222,13)" fg:x="8912" fg:w="776"/><text x="12.9625%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="13.8266%" y="933" width="0.0242%" height="15" fill="rgb(244,185,38)" fg:x="9693" fg:w="17"/><text x="14.0766%" y="943.50"></text></g><g><title>rocksdb::PointLockManager::AcquireWithTimeout (912 samples, 1.30%)</title><rect x="12.5514%" y="965" width="1.3009%" height="15" fill="rgb(236,202,9)" fg:x="8799" fg:w="912"/><text x="12.8014%" y="975.50"></text></g><g><title>rocksdb::TransactionDBMutexImpl::TryLockFor (21 samples, 0.03%)</title><rect x="13.8223%" y="949" width="0.0300%" height="15" fill="rgb(250,229,37)" fg:x="9690" fg:w="21"/><text x="14.0723%" y="959.50"></text></g><g><title>rocksdb::ThreadLocalPtr::Get (12 samples, 0.02%)</title><rect x="13.8908%" y="949" width="0.0171%" height="15" fill="rgb(206,174,23)" fg:x="9738" fg:w="12"/><text x="14.1408%" y="959.50"></text></g><g><title>rocksdb::PointLockManager::GetLockMap (51 samples, 0.07%)</title><rect x="13.8523%" y="965" width="0.0727%" height="15" fill="rgb(211,33,43)" fg:x="9711" fg:w="51"/><text x="14.1023%" y="975.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::Get (12 samples, 0.02%)</title><rect x="13.9079%" y="949" width="0.0171%" height="15" fill="rgb(245,58,50)" fg:x="9750" fg:w="12"/><text x="14.1579%" y="959.50"></text></g><g><title>rocksdb::PessimisticTransactionDB::TryLock (1,005 samples, 1.43%)</title><rect x="12.5071%" y="997" width="1.4336%" height="15" fill="rgb(244,68,36)" fg:x="8768" fg:w="1005"/><text x="12.7571%" y="1007.50"></text></g><g><title>rocksdb::PointLockManager::TryLock (996 samples, 1.42%)</title><rect x="12.5200%" y="981" width="1.4207%" height="15" fill="rgb(232,229,15)" fg:x="8777" fg:w="996"/><text x="12.7700%" y="991.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (11 samples, 0.02%)</title><rect x="13.9250%" y="965" width="0.0157%" height="15" fill="rgb(254,30,23)" fg:x="9762" fg:w="11"/><text x="14.1750%" y="975.50"></text></g><g><title>rocksdb::PointLockTracker::GetPointLockStatus (713 samples, 1.02%)</title><rect x="13.9407%" y="997" width="1.0171%" height="15" fill="rgb(235,160,14)" fg:x="9773" fg:w="713"/><text x="14.1907%" y="1007.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (672 samples, 0.96%)</title><rect x="13.9992%" y="981" width="0.9586%" height="15" fill="rgb(212,155,44)" fg:x="9814" fg:w="672"/><text x="14.2492%" y="991.50"></text></g><g><title>operator new (22 samples, 0.03%)</title><rect x="14.9892%" y="965" width="0.0314%" height="15" fill="rgb(226,2,50)" fg:x="10508" fg:w="22"/><text x="15.2392%" y="975.50"></text></g><g><title>__libc_malloc (22 samples, 0.03%)</title><rect x="14.9892%" y="949" width="0.0314%" height="15" fill="rgb(234,177,6)" fg:x="10508" fg:w="22"/><text x="15.2392%" y="959.50"></text></g><g><title>rocksdb::Slice::ToString[abi:cxx11] (41 samples, 0.06%)</title><rect x="14.9635%" y="997" width="0.0585%" height="15" fill="rgb(217,24,9)" fg:x="10490" fg:w="41"/><text x="15.2135%" y="1007.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (32 samples, 0.05%)</title><rect x="14.9763%" y="981" width="0.0456%" height="15" fill="rgb(220,13,46)" fg:x="10499" fg:w="32"/><text x="15.2263%" y="991.50"></text></g><g><title>__libc_malloc (14 samples, 0.02%)</title><rect x="15.0419%" y="965" width="0.0200%" height="15" fill="rgb(239,221,27)" fg:x="10545" fg:w="14"/><text x="15.2919%" y="975.50"></text></g><g><title>operator new (17 samples, 0.02%)</title><rect x="15.0391%" y="981" width="0.0242%" height="15" fill="rgb(222,198,25)" fg:x="10543" fg:w="17"/><text x="15.2891%" y="991.50"></text></g><g><title>std::_Hash_bytes (18 samples, 0.03%)</title><rect x="15.1033%" y="965" width="0.0257%" height="15" fill="rgb(211,99,13)" fg:x="10588" fg:w="18"/><text x="15.3533%" y="975.50"></text></g><g><title>_IO_str_seekoff (27 samples, 0.04%)</title><rect x="15.4085%" y="917" width="0.0385%" height="15" fill="rgb(232,111,31)" fg:x="10802" fg:w="27"/><text x="15.6585%" y="927.50"></text></g><g><title>__libc_malloc (196 samples, 0.28%)</title><rect x="15.1689%" y="933" width="0.2796%" height="15" fill="rgb(245,82,37)" fg:x="10634" fg:w="196"/><text x="15.4189%" y="943.50"></text></g><g><title>operator new (200 samples, 0.29%)</title><rect x="15.1646%" y="949" width="0.2853%" height="15" fill="rgb(227,149,46)" fg:x="10631" fg:w="200"/><text x="15.4146%" y="959.50"></text></g><g><title>std::_Hash_bytes (35 samples, 0.05%)</title><rect x="15.4528%" y="949" width="0.0499%" height="15" fill="rgb(218,36,50)" fg:x="10833" fg:w="35"/><text x="15.7028%" y="959.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.02%)</title><rect x="15.5027%" y="949" width="0.0242%" height="15" fill="rgb(226,80,48)" fg:x="10868" fg:w="17"/><text x="15.7527%" y="959.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (214 samples, 0.31%)</title><rect x="15.5269%" y="949" width="0.3053%" height="15" fill="rgb(238,224,15)" fg:x="10885" fg:w="214"/><text x="15.7769%" y="959.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;unsigned long const&amp;&gt; &gt; (490 samples, 0.70%)</title><rect x="15.1347%" y="965" width="0.6990%" height="15" fill="rgb(241,136,10)" fg:x="10610" fg:w="490"/><text x="15.3847%" y="975.50"></text></g><g><title>rocksdb::PessimisticTransaction::TryLock (2,386 samples, 3.40%)</title><rect x="12.4629%" y="1013" width="3.4035%" height="15" fill="rgb(208,32,45)" fg:x="8737" fg:w="2386"/><text x="12.7129%" y="1023.50">roc..</text></g><g><title>rocksdb::TransactionBaseImpl::TrackKey (591 samples, 0.84%)</title><rect x="15.0234%" y="997" width="0.8430%" height="15" fill="rgb(207,135,9)" fg:x="10532" fg:w="591"/><text x="15.2734%" y="1007.50"></text></g><g><title>rocksdb::PointLockTracker::Track (562 samples, 0.80%)</title><rect x="15.0648%" y="981" width="0.8017%" height="15" fill="rgb(206,86,44)" fg:x="10561" fg:w="562"/><text x="15.3148%" y="991.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::TrackedKeyInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.03%)</title><rect x="15.8336%" y="965" width="0.0328%" height="15" fill="rgb(245,177,15)" fg:x="11100" fg:w="23"/><text x="16.0836%" y="975.50"></text></g><g><title>rocksdb::TransactionBaseImpl::GetBatchForWrite (11 samples, 0.02%)</title><rect x="15.8664%" y="1013" width="0.0157%" height="15" fill="rgb(206,64,50)" fg:x="11123" fg:w="11"/><text x="16.1164%" y="1023.50"></text></g><g><title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize (11 samples, 0.02%)</title><rect x="15.9135%" y="981" width="0.0157%" height="15" fill="rgb(234,36,40)" fg:x="11156" fg:w="11"/><text x="16.1635%" y="991.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.01%)</title><rect x="16.1389%" y="837" width="0.0128%" height="15" fill="rgb(213,64,8)" fg:x="11314" fg:w="9"/><text x="16.3889%" y="847.50"></text></g><g><title>alloc_pages_vma (21 samples, 0.03%)</title><rect x="16.1517%" y="837" width="0.0300%" height="15" fill="rgb(210,75,36)" fg:x="11323" fg:w="21"/><text x="16.4017%" y="847.50"></text></g><g><title>__alloc_pages_nodemask (21 samples, 0.03%)</title><rect x="16.1517%" y="821" width="0.0300%" height="15" fill="rgb(229,88,21)" fg:x="11323" fg:w="21"/><text x="16.4017%" y="831.50"></text></g><g><title>get_page_from_freelist (21 samples, 0.03%)</title><rect x="16.1517%" y="805" width="0.0300%" height="15" fill="rgb(252,204,47)" fg:x="11323" fg:w="21"/><text x="16.4017%" y="815.50"></text></g><g><title>prep_new_page (8 samples, 0.01%)</title><rect x="16.1703%" y="789" width="0.0114%" height="15" fill="rgb(208,77,27)" fg:x="11336" fg:w="8"/><text x="16.4203%" y="799.50"></text></g><g><title>clear_page_erms (8 samples, 0.01%)</title><rect x="16.1703%" y="773" width="0.0114%" height="15" fill="rgb(221,76,26)" fg:x="11336" fg:w="8"/><text x="16.4203%" y="783.50"></text></g><g><title>lru_cache_add_active_or_unevictable (16 samples, 0.02%)</title><rect x="16.1817%" y="837" width="0.0228%" height="15" fill="rgb(225,139,18)" fg:x="11344" fg:w="16"/><text x="16.4317%" y="847.50"></text></g><g><title>__lru_cache_add (15 samples, 0.02%)</title><rect x="16.1831%" y="821" width="0.0214%" height="15" fill="rgb(230,137,11)" fg:x="11345" fg:w="15"/><text x="16.4331%" y="831.50"></text></g><g><title>pagevec_lru_move_fn (14 samples, 0.02%)</title><rect x="16.1845%" y="805" width="0.0200%" height="15" fill="rgb(212,28,1)" fg:x="11346" fg:w="14"/><text x="16.4345%" y="815.50"></text></g><g><title>__lock_text_start (13 samples, 0.02%)</title><rect x="16.1860%" y="789" width="0.0185%" height="15" fill="rgb(248,164,17)" fg:x="11347" fg:w="13"/><text x="16.4360%" y="799.50"></text></g><g><title>mem_cgroup_try_charge_delay (35 samples, 0.05%)</title><rect x="16.2059%" y="837" width="0.0499%" height="15" fill="rgb(222,171,42)" fg:x="11361" fg:w="35"/><text x="16.4559%" y="847.50"></text></g><g><title>mem_cgroup_try_charge (30 samples, 0.04%)</title><rect x="16.2131%" y="821" width="0.0428%" height="15" fill="rgb(243,84,45)" fg:x="11366" fg:w="30"/><text x="16.4631%" y="831.50"></text></g><g><title>try_charge (8 samples, 0.01%)</title><rect x="16.2444%" y="805" width="0.0114%" height="15" fill="rgb(252,49,23)" fg:x="11388" fg:w="8"/><text x="16.4944%" y="815.50"></text></g><g><title>__handle_mm_fault (86 samples, 0.12%)</title><rect x="16.1346%" y="853" width="0.1227%" height="15" fill="rgb(215,19,7)" fg:x="11311" fg:w="86"/><text x="16.3846%" y="863.50"></text></g><g><title>handle_mm_fault (93 samples, 0.13%)</title><rect x="16.1303%" y="869" width="0.1327%" height="15" fill="rgb(238,81,41)" fg:x="11308" fg:w="93"/><text x="16.3803%" y="879.50"></text></g><g><title>__nss_passwd_lookup (185 samples, 0.26%)</title><rect x="16.0005%" y="949" width="0.2639%" height="15" fill="rgb(210,199,37)" fg:x="11217" fg:w="185"/><text x="16.2505%" y="959.50"></text></g><g><title>async_page_fault (139 samples, 0.20%)</title><rect x="16.0661%" y="933" width="0.1983%" height="15" fill="rgb(244,192,49)" fg:x="11263" fg:w="139"/><text x="16.3161%" y="943.50"></text></g><g><title>do_async_page_fault (139 samples, 0.20%)</title><rect x="16.0661%" y="917" width="0.1983%" height="15" fill="rgb(226,211,11)" fg:x="11263" fg:w="139"/><text x="16.3161%" y="927.50"></text></g><g><title>do_page_fault (139 samples, 0.20%)</title><rect x="16.0661%" y="901" width="0.1983%" height="15" fill="rgb(236,162,54)" fg:x="11263" fg:w="139"/><text x="16.3161%" y="911.50"></text></g><g><title>__do_page_fault (139 samples, 0.20%)</title><rect x="16.0661%" y="885" width="0.1983%" height="15" fill="rgb(220,229,9)" fg:x="11263" fg:w="139"/><text x="16.3161%" y="895.50"></text></g><g><title>rocksdb::PutLengthPrefixedSlice (229 samples, 0.33%)</title><rect x="15.9549%" y="965" width="0.3267%" height="15" fill="rgb(250,87,22)" fg:x="11185" fg:w="229"/><text x="16.2049%" y="975.50"></text></g><g><title>rocksdb::WriteBatchInternal::Count (16 samples, 0.02%)</title><rect x="16.2815%" y="965" width="0.0228%" height="15" fill="rgb(239,43,17)" fg:x="11414" fg:w="16"/><text x="16.5315%" y="975.50"></text></g><g><title>rocksdb::WriteBatch::Put (295 samples, 0.42%)</title><rect x="15.8964%" y="997" width="0.4208%" height="15" fill="rgb(231,177,25)" fg:x="11144" fg:w="295"/><text x="16.1464%" y="1007.50"></text></g><g><title>rocksdb::WriteBatchInternal::Put (272 samples, 0.39%)</title><rect x="15.9292%" y="981" width="0.3880%" height="15" fill="rgb(219,179,1)" fg:x="11167" fg:w="272"/><text x="16.1792%" y="991.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (8 samples, 0.01%)</title><rect x="16.3058%" y="965" width="0.0114%" height="15" fill="rgb(238,219,53)" fg:x="11431" fg:w="8"/><text x="16.5558%" y="975.50"></text></g><g><title>rocksdb::ReadKeyFromWriteBatchEntry (14 samples, 0.02%)</title><rect x="16.3500%" y="965" width="0.0200%" height="15" fill="rgb(232,167,36)" fg:x="11462" fg:w="14"/><text x="16.6000%" y="975.50"></text></g><g><title>rocksdb::Arena::AllocateAligned (16 samples, 0.02%)</title><rect x="16.8036%" y="949" width="0.0228%" height="15" fill="rgb(244,19,51)" fg:x="11780" fg:w="16"/><text x="17.0536%" y="959.50"></text></g><g><title>rocksdb::Random::GetTLSInstance (22 samples, 0.03%)</title><rect x="16.8264%" y="949" width="0.0314%" height="15" fill="rgb(224,6,22)" fg:x="11796" fg:w="22"/><text x="17.0764%" y="959.50"></text></g><g><title>[ord] (19 samples, 0.03%)</title><rect x="17.3713%" y="917" width="0.0271%" height="15" fill="rgb(224,145,5)" fg:x="12178" fg:w="19"/><text x="17.6213%" y="927.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (456 samples, 0.65%)</title><rect x="17.2800%" y="933" width="0.6505%" height="15" fill="rgb(234,130,49)" fg:x="12114" fg:w="456"/><text x="17.5300%" y="943.50"></text></g><g><title>__nss_passwd_lookup (373 samples, 0.53%)</title><rect x="17.3984%" y="917" width="0.5321%" height="15" fill="rgb(254,6,2)" fg:x="12197" fg:w="373"/><text x="17.6484%" y="927.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (74 samples, 0.11%)</title><rect x="17.9305%" y="933" width="0.1056%" height="15" fill="rgb(208,96,46)" fg:x="12570" fg:w="74"/><text x="18.1805%" y="943.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::Rep::AddNewEntry (1,204 samples, 1.72%)</title><rect x="16.3200%" y="981" width="1.7174%" height="15" fill="rgb(239,3,39)" fg:x="11441" fg:w="1204"/><text x="16.5700%" y="991.50"></text></g><g><title>rocksdb::SkipList&lt;rocksdb::WriteBatchIndexEntry*, rocksdb::WriteBatchEntryComparator const&amp;&gt;::Insert (1,169 samples, 1.67%)</title><rect x="16.3700%" y="965" width="1.6675%" height="15" fill="rgb(233,210,1)" fg:x="11476" fg:w="1169"/><text x="16.6200%" y="975.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (827 samples, 1.18%)</title><rect x="16.8578%" y="949" width="1.1797%" height="15" fill="rgb(244,137,37)" fg:x="11818" fg:w="827"/><text x="17.1078%" y="959.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (38 samples, 0.05%)</title><rect x="19.1929%" y="949" width="0.0542%" height="15" fill="rgb(240,136,2)" fg:x="13455" fg:w="38"/><text x="19.4429%" y="959.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (24 samples, 0.03%)</title><rect x="19.2129%" y="933" width="0.0342%" height="15" fill="rgb(239,18,37)" fg:x="13469" fg:w="24"/><text x="19.4629%" y="943.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (9 samples, 0.01%)</title><rect x="19.2343%" y="917" width="0.0128%" height="15" fill="rgb(218,185,22)" fg:x="13484" fg:w="9"/><text x="19.4843%" y="927.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::MatchesKey (64 samples, 0.09%)</title><rect x="19.1615%" y="965" width="0.0913%" height="15" fill="rgb(225,218,4)" fg:x="13433" fg:w="64"/><text x="19.4115%" y="975.50"></text></g><g><title>[ord] (21 samples, 0.03%)</title><rect x="20.6593%" y="933" width="0.0300%" height="15" fill="rgb(230,182,32)" fg:x="14483" fg:w="21"/><text x="20.9093%" y="943.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (2,119 samples, 3.02%)</title><rect x="20.5751%" y="949" width="3.0227%" height="15" fill="rgb(242,56,43)" fg:x="14424" fg:w="2119"/><text x="20.8251%" y="959.50">roc..</text></g><g><title>__nss_passwd_lookup (2,039 samples, 2.91%)</title><rect x="20.6893%" y="933" width="2.9085%" height="15" fill="rgb(233,99,24)" fg:x="14504" fg:w="2039"/><text x="20.9393%" y="943.50">__..</text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (74 samples, 0.11%)</title><rect x="23.5978%" y="949" width="0.1056%" height="15" fill="rgb(234,209,42)" fg:x="16543" fg:w="74"/><text x="23.8478%" y="959.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (8,347 samples, 11.91%)</title><rect x="11.7982%" y="1077" width="11.9066%" height="15" fill="rgb(227,7,12)" fg:x="8271" fg:w="8347"/><text x="12.0482%" y="1087.50">ord::index::update..</text></g><g><title>rocksdb_transaction_put (7,904 samples, 11.27%)</title><rect x="12.4301%" y="1061" width="11.2747%" height="15" fill="rgb(245,203,43)" fg:x="8714" fg:w="7904"/><text x="12.6801%" y="1071.50">rocksdb_transacti..</text></g><g><title>rocksdb::TransactionBaseImpl::Put (7,894 samples, 11.26%)</title><rect x="12.4444%" y="1045" width="11.2604%" height="15" fill="rgb(238,205,33)" fg:x="8724" fg:w="7894"/><text x="12.6944%" y="1055.50">rocksdb::Transact..</text></g><g><title>rocksdb::WriteCommittedTxn::Put (7,891 samples, 11.26%)</title><rect x="12.4486%" y="1029" width="11.2561%" height="15" fill="rgb(231,56,7)" fg:x="8727" fg:w="7891"/><text x="12.6986%" y="1039.50">rocksdb::WriteCom..</text></g><g><title>rocksdb::WriteBatchWithIndex::Put (5,484 samples, 7.82%)</title><rect x="15.8821%" y="1013" width="7.8227%" height="15" fill="rgb(244,186,29)" fg:x="11134" fg:w="5484"/><text x="16.1321%" y="1023.50">rocksdb::Wr..</text></g><g><title>rocksdb::WriteBatchWithIndex::Rep::AddOrUpdateIndex (5,179 samples, 7.39%)</title><rect x="16.3172%" y="997" width="7.3876%" height="15" fill="rgb(234,111,31)" fg:x="11439" fg:w="5179"/><text x="16.5672%" y="1007.50">rocksdb::W..</text></g><g><title>rocksdb::WriteBatchWithIndex::Rep::UpdateExistingEntryWithCfId (3,970 samples, 5.66%)</title><rect x="18.0418%" y="981" width="5.6630%" height="15" fill="rgb(241,149,10)" fg:x="12648" fg:w="3970"/><text x="18.2918%" y="991.50">rocksdb..</text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (3,121 samples, 4.45%)</title><rect x="19.2528%" y="965" width="4.4520%" height="15" fill="rgb(249,206,44)" fg:x="13497" fg:w="3121"/><text x="19.5028%" y="975.50">rocks..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="23.9273%" y="1061" width="0.0114%" height="15" fill="rgb(251,153,30)" fg:x="16774" fg:w="8"/><text x="24.1773%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="23.9544%" y="1061" width="0.0128%" height="15" fill="rgb(239,152,38)" fg:x="16793" fg:w="9"/><text x="24.2044%" y="1071.50"></text></g><g><title>&lt;redb::multimap_table::MultimapRange&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="23.9672%" y="1061" width="0.0128%" height="15" fill="rgb(249,139,47)" fg:x="16802" fg:w="9"/><text x="24.2172%" y="1071.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (36 samples, 0.05%)</title><rect x="24.0386%" y="1045" width="0.0514%" height="15" fill="rgb(244,64,35)" fg:x="16852" fg:w="36"/><text x="24.2886%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (30 samples, 0.04%)</title><rect x="24.1926%" y="1013" width="0.0428%" height="15" fill="rgb(216,46,15)" fg:x="16960" fg:w="30"/><text x="24.4426%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (13 samples, 0.02%)</title><rect x="24.2354%" y="1013" width="0.0185%" height="15" fill="rgb(250,74,19)" fg:x="16990" fg:w="13"/><text x="24.4854%" y="1023.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_left (76 samples, 0.11%)</title><rect x="24.1541%" y="1029" width="0.1084%" height="15" fill="rgb(249,42,33)" fg:x="16933" fg:w="76"/><text x="24.4041%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.01%)</title><rect x="24.2925%" y="1013" width="0.0143%" height="15" fill="rgb(242,149,17)" fg:x="17030" fg:w="10"/><text x="24.5425%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (13 samples, 0.02%)</title><rect x="24.3067%" y="1013" width="0.0185%" height="15" fill="rgb(244,29,21)" fg:x="17040" fg:w="13"/><text x="24.5567%" y="1023.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_right (50 samples, 0.07%)</title><rect x="24.2625%" y="1029" width="0.0713%" height="15" fill="rgb(220,130,37)" fg:x="17009" fg:w="50"/><text x="24.5125%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt;::new (308 samples, 0.44%)</title><rect x="24.0899%" y="1045" width="0.4393%" height="15" fill="rgb(211,67,2)" fg:x="16888" fg:w="308"/><text x="24.3399%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (137 samples, 0.20%)</title><rect x="24.3338%" y="1029" width="0.1954%" height="15" fill="rgb(235,68,52)" fg:x="17059" fg:w="137"/><text x="24.5838%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (129 samples, 0.18%)</title><rect x="24.3453%" y="1013" width="0.1840%" height="15" fill="rgb(246,142,3)" fg:x="17067" fg:w="129"/><text x="24.5953%" y="1023.50"></text></g><g><title>&lt;redb::multimap_table::MultimapTable&lt;K,V&gt; as redb::multimap_table::ReadableMultimapTable&lt;K,V&gt;&gt;::range (450 samples, 0.64%)</title><rect x="23.9801%" y="1061" width="0.6419%" height="15" fill="rgb(241,25,7)" fg:x="16811" fg:w="450"/><text x="24.2301%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (65 samples, 0.09%)</title><rect x="24.5293%" y="1045" width="0.0927%" height="15" fill="rgb(242,119,39)" fg:x="17196" fg:w="65"/><text x="24.7793%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (62 samples, 0.09%)</title><rect x="24.5336%" y="1029" width="0.0884%" height="15" fill="rgb(241,98,45)" fg:x="17199" fg:w="62"/><text x="24.7836%" y="1039.50"></text></g><g><title>__libc_malloc (176 samples, 0.25%)</title><rect x="24.6220%" y="1061" width="0.2511%" height="15" fill="rgb(254,28,30)" fg:x="17261" fg:w="176"/><text x="24.8720%" y="1071.50"></text></g><g><title>_IO_str_seekoff (64 samples, 0.09%)</title><rect x="24.7818%" y="1045" width="0.0913%" height="15" fill="rgb(241,142,54)" fg:x="17373" fg:w="64"/><text x="25.0318%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (92 samples, 0.13%)</title><rect x="24.8730%" y="1061" width="0.1312%" height="15" fill="rgb(222,85,15)" fg:x="17437" fg:w="92"/><text x="25.1230%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (62 samples, 0.09%)</title><rect x="25.0100%" y="1061" width="0.0884%" height="15" fill="rgb(210,85,47)" fg:x="17533" fg:w="62"/><text x="25.2600%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (53 samples, 0.08%)</title><rect x="25.0228%" y="1045" width="0.0756%" height="15" fill="rgb(224,206,25)" fg:x="17542" fg:w="53"/><text x="25.2728%" y="1055.50"></text></g><g><title>__libc_malloc (52 samples, 0.07%)</title><rect x="25.0242%" y="1029" width="0.0742%" height="15" fill="rgb(243,201,19)" fg:x="17543" fg:w="52"/><text x="25.2742%" y="1039.50"></text></g><g><title>_IO_str_seekoff (35 samples, 0.05%)</title><rect x="25.0485%" y="1013" width="0.0499%" height="15" fill="rgb(236,59,4)" fg:x="17560" fg:w="35"/><text x="25.2985%" y="1023.50"></text></g><g><title>cfree (24 samples, 0.03%)</title><rect x="25.1056%" y="1061" width="0.0342%" height="15" fill="rgb(254,179,45)" fg:x="17600" fg:w="24"/><text x="25.3556%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 0.04%)</title><rect x="25.1398%" y="1061" width="0.0357%" height="15" fill="rgb(226,14,10)" fg:x="17624" fg:w="25"/><text x="25.3898%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="25.1498%" y="1045" width="0.0257%" height="15" fill="rgb(244,27,41)" fg:x="17631" fg:w="18"/><text x="25.3998%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_iters::RangeIterState&gt; (20 samples, 0.03%)</title><rect x="25.1755%" y="1061" width="0.0285%" height="15" fill="rgb(235,35,32)" fg:x="17649" fg:w="20"/><text x="25.4255%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (52 samples, 0.07%)</title><rect x="25.3095%" y="1045" width="0.0742%" height="15" fill="rgb(218,68,31)" fg:x="17743" fg:w="52"/><text x="25.5595%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.04%)</title><rect x="25.3481%" y="1029" width="0.0357%" height="15" fill="rgb(207,120,37)" fg:x="17770" fg:w="25"/><text x="25.5981%" y="1039.50"></text></g><g><title>__libc_malloc (20 samples, 0.03%)</title><rect x="25.4336%" y="1029" width="0.0285%" height="15" fill="rgb(227,98,0)" fg:x="17830" fg:w="20"/><text x="25.6836%" y="1039.50"></text></g><g><title>_IO_str_seekoff (19 samples, 0.03%)</title><rect x="25.4351%" y="1013" width="0.0271%" height="15" fill="rgb(207,7,3)" fg:x="17831" fg:w="19"/><text x="25.6851%" y="1023.50"></text></g><g><title>_IO_str_seekoff (13 samples, 0.02%)</title><rect x="25.4436%" y="997" width="0.0185%" height="15" fill="rgb(206,98,19)" fg:x="17837" fg:w="13"/><text x="25.6936%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (264 samples, 0.38%)</title><rect x="25.2083%" y="1061" width="0.3766%" height="15" fill="rgb(217,5,26)" fg:x="17672" fg:w="264"/><text x="25.4583%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (141 samples, 0.20%)</title><rect x="25.3837%" y="1045" width="0.2011%" height="15" fill="rgb(235,190,38)" fg:x="17795" fg:w="141"/><text x="25.6337%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (85 samples, 0.12%)</title><rect x="25.4636%" y="1029" width="0.1212%" height="15" fill="rgb(247,86,24)" fg:x="17851" fg:w="85"/><text x="25.7136%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.08%)</title><rect x="25.5021%" y="1013" width="0.0827%" height="15" fill="rgb(205,101,16)" fg:x="17878" fg:w="58"/><text x="25.7521%" y="1023.50"></text></g><g><title>&lt;bitcoin::blockdata::script::instruction::Instructions as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.09%)</title><rect x="25.6662%" y="1045" width="0.0927%" height="15" fill="rgb(246,168,33)" fg:x="17993" fg:w="65"/><text x="25.9162%" y="1055.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (37 samples, 0.05%)</title><rect x="25.7061%" y="1029" width="0.0528%" height="15" fill="rgb(231,114,1)" fg:x="18021" fg:w="37"/><text x="25.9561%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.02%)</title><rect x="25.7603%" y="1045" width="0.0185%" height="15" fill="rgb(207,184,53)" fg:x="18059" fg:w="13"/><text x="26.0103%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="25.7646%" y="1029" width="0.0143%" height="15" fill="rgb(224,95,51)" fg:x="18062" fg:w="10"/><text x="26.0146%" y="1039.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::tapscript (146 samples, 0.21%)</title><rect x="25.7845%" y="1045" width="0.2083%" height="15" fill="rgb(212,188,45)" fg:x="18076" fg:w="146"/><text x="26.0345%" y="1055.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::nth (116 samples, 0.17%)</title><rect x="25.8273%" y="1029" width="0.1655%" height="15" fill="rgb(223,154,38)" fg:x="18106" fg:w="116"/><text x="26.0773%" y="1039.50"></text></g><g><title>ord::inscription::Inscription::from_transaction (309 samples, 0.44%)</title><rect x="25.5848%" y="1061" width="0.4408%" height="15" fill="rgb(251,22,52)" fg:x="17936" fg:w="309"/><text x="25.8348%" y="1071.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 0.03%)</title><rect x="25.9928%" y="1045" width="0.0328%" height="15" fill="rgb(229,209,22)" fg:x="18222" fg:w="23"/><text x="26.2428%" y="1055.50"></text></g><g><title>operator new (8 samples, 0.01%)</title><rect x="26.0641%" y="1013" width="0.0114%" height="15" fill="rgb(234,138,34)" fg:x="18272" fg:w="8"/><text x="26.3141%" y="1023.50"></text></g><g><title>&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (26 samples, 0.04%)</title><rect x="26.0541%" y="1045" width="0.0371%" height="15" fill="rgb(212,95,11)" fg:x="18265" fg:w="26"/><text x="26.3041%" y="1055.50"></text></g><g><title>rocksdb_readoptions_create (22 samples, 0.03%)</title><rect x="26.0599%" y="1029" width="0.0314%" height="15" fill="rgb(240,179,47)" fg:x="18269" fg:w="22"/><text x="26.3099%" y="1039.50"></text></g><g><title>rocksdb::ReadOptions::ReadOptions (9 samples, 0.01%)</title><rect x="26.0784%" y="1013" width="0.0128%" height="15" fill="rgb(240,163,11)" fg:x="18282" fg:w="9"/><text x="26.3284%" y="1023.50"></text></g><g><title>__libc_malloc (74 samples, 0.11%)</title><rect x="26.0998%" y="1045" width="0.1056%" height="15" fill="rgb(236,37,12)" fg:x="18297" fg:w="74"/><text x="26.3498%" y="1055.50"></text></g><g><title>_IO_str_seekoff (48 samples, 0.07%)</title><rect x="26.1369%" y="1029" width="0.0685%" height="15" fill="rgb(232,164,16)" fg:x="18323" fg:w="48"/><text x="26.3869%" y="1039.50"></text></g><g><title>cfree (20 samples, 0.03%)</title><rect x="26.2139%" y="1045" width="0.0285%" height="15" fill="rgb(244,205,15)" fg:x="18377" fg:w="20"/><text x="26.4639%" y="1055.50"></text></g><g><title>rocksdb_pinnableslice_destroy (13 samples, 0.02%)</title><rect x="26.2510%" y="1045" width="0.0185%" height="15" fill="rgb(223,117,47)" fg:x="18403" fg:w="13"/><text x="26.5010%" y="1055.50"></text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="26.2524%" y="1029" width="0.0171%" height="15" fill="rgb(244,107,35)" fg:x="18404" fg:w="12"/><text x="26.5024%" y="1039.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (8 samples, 0.01%)</title><rect x="26.3480%" y="997" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="18471" fg:w="8"/><text x="26.5980%" y="1007.50"></text></g><g><title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (14 samples, 0.02%)</title><rect x="26.4593%" y="933" width="0.0200%" height="15" fill="rgb(228,84,46)" fg:x="18549" fg:w="14"/><text x="26.7093%" y="943.50"></text></g><g><title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion (21 samples, 0.03%)</title><rect x="26.4906%" y="933" width="0.0300%" height="15" fill="rgb(254,188,9)" fg:x="18571" fg:w="21"/><text x="26.7406%" y="943.50"></text></g><g><title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (18 samples, 0.03%)</title><rect x="26.4949%" y="917" width="0.0257%" height="15" fill="rgb(206,112,54)" fg:x="18574" fg:w="18"/><text x="26.7449%" y="927.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (9 samples, 0.01%)</title><rect x="26.5078%" y="901" width="0.0128%" height="15" fill="rgb(216,84,49)" fg:x="18583" fg:w="9"/><text x="26.7578%" y="911.50"></text></g><g><title>[ord] (9 samples, 0.01%)</title><rect x="29.2023%" y="837" width="0.0128%" height="15" fill="rgb(214,194,35)" fg:x="20472" fg:w="9"/><text x="29.4523%" y="847.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual (1,944 samples, 2.77%)</title><rect x="26.5534%" y="885" width="2.7730%" height="15" fill="rgb(249,28,3)" fg:x="18615" fg:w="1944"/><text x="26.8034%" y="895.50">ro..</text></g><g><title>rocksdb::MemTable::KeyComparator::operator (198 samples, 0.28%)</title><rect x="29.0440%" y="869" width="0.2824%" height="15" fill="rgb(222,56,52)" fg:x="20361" fg:w="198"/><text x="29.2940%" y="879.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (115 samples, 0.16%)</title><rect x="29.1624%" y="853" width="0.1640%" height="15" fill="rgb(245,217,50)" fg:x="20444" fg:w="115"/><text x="29.4124%" y="863.50"></text></g><g><title>__nss_passwd_lookup (78 samples, 0.11%)</title><rect x="29.2152%" y="837" width="0.1113%" height="15" fill="rgb(213,201,24)" fg:x="20481" fg:w="78"/><text x="29.4652%" y="847.50"></text></g><g><title>operator new (12 samples, 0.02%)</title><rect x="29.3464%" y="853" width="0.0171%" height="15" fill="rgb(248,116,28)" fg:x="20573" fg:w="12"/><text x="29.5964%" y="863.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="29.3464%" y="837" width="0.0171%" height="15" fill="rgb(219,72,43)" fg:x="20573" fg:w="12"/><text x="29.5964%" y="847.50"></text></g><g><title>rocksdb::MemTable::GetFromTable (1,984 samples, 2.83%)</title><rect x="26.5349%" y="917" width="2.8301%" height="15" fill="rgb(209,138,14)" fg:x="18602" fg:w="1984"/><text x="26.7849%" y="927.50">ro..</text></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Get (1,980 samples, 2.82%)</title><rect x="26.5406%" y="901" width="2.8244%" height="15" fill="rgb(222,18,33)" fg:x="18606" fg:w="1980"/><text x="26.7906%" y="911.50">ro..</text></g><g><title>rocksdb::SaveValue (27 samples, 0.04%)</title><rect x="29.3264%" y="885" width="0.0385%" height="15" fill="rgb(213,199,7)" fg:x="20559" fg:w="27"/><text x="29.5764%" y="895.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (16 samples, 0.02%)</title><rect x="29.3421%" y="869" width="0.0228%" height="15" fill="rgb(250,110,10)" fg:x="20570" fg:w="16"/><text x="29.5921%" y="879.50"></text></g><g><title>rocksdb::MemTable::Get (1,992 samples, 2.84%)</title><rect x="26.5249%" y="933" width="2.8415%" height="15" fill="rgb(248,123,6)" fg:x="18595" fg:w="1992"/><text x="26.7749%" y="943.50">ro..</text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (9 samples, 0.01%)</title><rect x="29.4691%" y="901" width="0.0128%" height="15" fill="rgb(206,91,31)" fg:x="20659" fg:w="9"/><text x="29.7191%" y="911.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.01%)</title><rect x="29.4705%" y="885" width="0.0114%" height="15" fill="rgb(211,154,13)" fg:x="20660" fg:w="8"/><text x="29.7205%" y="895.50"></text></g><g><title>rocksdb::(anonymous namespace)::FilePicker::GetNextFile (36 samples, 0.05%)</title><rect x="29.4320%" y="917" width="0.0514%" height="15" fill="rgb(225,148,7)" fg:x="20633" fg:w="36"/><text x="29.6820%" y="927.50"></text></g><g><title>rocksdb::Block::NewIndexIterator (17 samples, 0.02%)</title><rect x="29.6203%" y="869" width="0.0242%" height="15" fill="rgb(220,160,43)" fg:x="20765" fg:w="17"/><text x="29.8703%" y="879.50"></text></g><g><title>operator new (11 samples, 0.02%)</title><rect x="29.6288%" y="853" width="0.0157%" height="15" fill="rgb(213,52,39)" fg:x="20771" fg:w="11"/><text x="29.8788%" y="863.50"></text></g><g><title>__libc_malloc (11 samples, 0.02%)</title><rect x="29.6288%" y="837" width="0.0157%" height="15" fill="rgb(243,137,7)" fg:x="20771" fg:w="11"/><text x="29.8788%" y="847.50"></text></g><g><title>rocksdb::BinarySearchIndexReader::NewIterator (31 samples, 0.04%)</title><rect x="29.6017%" y="885" width="0.0442%" height="15" fill="rgb(230,79,13)" fg:x="20752" fg:w="31"/><text x="29.8517%" y="895.50"></text></g><g><title>operator new (25 samples, 0.04%)</title><rect x="29.7059%" y="853" width="0.0357%" height="15" fill="rgb(247,105,23)" fg:x="20825" fg:w="25"/><text x="29.9559%" y="863.50"></text></g><g><title>__libc_malloc (25 samples, 0.04%)</title><rect x="29.7059%" y="837" width="0.0357%" height="15" fill="rgb(223,179,41)" fg:x="20825" fg:w="25"/><text x="29.9559%" y="847.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.02%)</title><rect x="29.7201%" y="821" width="0.0214%" height="15" fill="rgb(218,9,34)" fg:x="20835" fg:w="15"/><text x="29.9701%" y="831.50"></text></g><g><title>rocksdb::Block::NewDataIterator (59 samples, 0.08%)</title><rect x="29.6588%" y="869" width="0.0842%" height="15" fill="rgb(222,106,8)" fg:x="20792" fg:w="59"/><text x="29.9088%" y="879.50"></text></g><g><title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (23 samples, 0.03%)</title><rect x="29.7430%" y="869" width="0.0328%" height="15" fill="rgb(211,220,0)" fg:x="20851" fg:w="23"/><text x="29.9930%" y="879.50"></text></g><g><title>rocksdb::Status::operator= (8 samples, 0.01%)</title><rect x="29.7644%" y="853" width="0.0114%" height="15" fill="rgb(229,52,16)" fg:x="20866" fg:w="8"/><text x="30.0144%" y="863.50"></text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (100 samples, 0.14%)</title><rect x="29.6460%" y="885" width="0.1426%" height="15" fill="rgb(212,155,18)" fg:x="20783" fg:w="100"/><text x="29.8960%" y="895.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (77 samples, 0.11%)</title><rect x="30.3777%" y="853" width="0.1098%" height="15" fill="rgb(242,21,14)" fg:x="21296" fg:w="77"/><text x="30.6277%" y="863.50"></text></g><g><title>__nss_passwd_lookup (54 samples, 0.08%)</title><rect x="30.4105%" y="837" width="0.0770%" height="15" fill="rgb(222,19,48)" fg:x="21319" fg:w="54"/><text x="30.6605%" y="847.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Seek (516 samples, 0.74%)</title><rect x="29.8014%" y="885" width="0.7360%" height="15" fill="rgb(232,45,27)" fg:x="20892" fg:w="516"/><text x="30.0514%" y="895.50"></text></g><g><title>rocksdb::IndexBlockIter::SeekImpl (512 samples, 0.73%)</title><rect x="29.8071%" y="869" width="0.7303%" height="15" fill="rgb(249,103,42)" fg:x="20896" fg:w="512"/><text x="30.0571%" y="879.50"></text></g><g><title>rocksdb::IndexBlockIter::ParseNextIndexKey (35 samples, 0.05%)</title><rect x="30.4876%" y="853" width="0.0499%" height="15" fill="rgb(246,81,33)" fg:x="21373" fg:w="35"/><text x="30.7376%" y="863.50"></text></g><g><title>rocksdb::IndexValue::DecodeFrom (25 samples, 0.04%)</title><rect x="30.5018%" y="837" width="0.0357%" height="15" fill="rgb(252,33,42)" fg:x="21383" fg:w="25"/><text x="30.7518%" y="847.50"></text></g><g><title>rocksdb::BlockHandle::DecodeFrom (16 samples, 0.02%)</title><rect x="30.5147%" y="821" width="0.0228%" height="15" fill="rgb(209,212,41)" fg:x="21392" fg:w="16"/><text x="30.7647%" y="831.50"></text></g><g><title>rocksdb::GetVarint64Ptr (10 samples, 0.01%)</title><rect x="30.5232%" y="805" width="0.0143%" height="15" fill="rgb(207,154,6)" fg:x="21398" fg:w="10"/><text x="30.7732%" y="815.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Insert (18 samples, 0.03%)</title><rect x="30.5446%" y="853" width="0.0257%" height="15" fill="rgb(223,64,47)" fg:x="21413" fg:w="18"/><text x="30.7946%" y="863.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (32 samples, 0.05%)</title><rect x="30.5403%" y="885" width="0.0456%" height="15" fill="rgb(211,161,38)" fg:x="21410" fg:w="32"/><text x="30.7903%" y="895.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (30 samples, 0.04%)</title><rect x="30.5432%" y="869" width="0.0428%" height="15" fill="rgb(219,138,40)" fg:x="21412" fg:w="30"/><text x="30.7932%" y="879.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (96 samples, 0.14%)</title><rect x="30.5931%" y="869" width="0.1369%" height="15" fill="rgb(241,228,46)" fg:x="21447" fg:w="96"/><text x="30.8431%" y="879.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (13 samples, 0.02%)</title><rect x="30.7115%" y="853" width="0.0185%" height="15" fill="rgb(223,209,38)" fg:x="21530" fg:w="13"/><text x="30.9615%" y="863.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.01%)</title><rect x="30.7158%" y="837" width="0.0143%" height="15" fill="rgb(236,164,45)" fg:x="21533" fg:w="10"/><text x="30.9658%" y="847.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (34 samples, 0.05%)</title><rect x="30.7900%" y="853" width="0.0485%" height="15" fill="rgb(231,15,5)" fg:x="21585" fg:w="34"/><text x="31.0400%" y="863.50"></text></g><g><title>__nss_passwd_lookup (22 samples, 0.03%)</title><rect x="30.8071%" y="837" width="0.0314%" height="15" fill="rgb(252,35,15)" fg:x="21597" fg:w="22"/><text x="31.0571%" y="847.50"></text></g><g><title>__nss_passwd_lookup (35 samples, 0.05%)</title><rect x="30.9255%" y="837" width="0.0499%" height="15" fill="rgb(248,181,18)" fg:x="21680" fg:w="35"/><text x="31.1755%" y="847.50"></text></g><g><title>rocksdb::DataBlockIter::SeekImpl (279 samples, 0.40%)</title><rect x="30.5860%" y="885" width="0.3980%" height="15" fill="rgb(233,39,42)" fg:x="21442" fg:w="279"/><text x="30.8360%" y="895.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (178 samples, 0.25%)</title><rect x="30.7301%" y="869" width="0.2539%" height="15" fill="rgb(238,110,33)" fg:x="21543" fg:w="178"/><text x="30.9801%" y="879.50"></text></g><g><title>rocksdb::DataBlockIter::NextImpl (102 samples, 0.15%)</title><rect x="30.8385%" y="853" width="0.1455%" height="15" fill="rgb(233,195,10)" fg:x="21619" fg:w="102"/><text x="31.0885%" y="863.50"></text></g><g><title>rocksdb::DataBlockIter::~DataBlockIter (13 samples, 0.02%)</title><rect x="30.9854%" y="885" width="0.0185%" height="15" fill="rgb(254,105,3)" fg:x="21722" fg:w="13"/><text x="31.2354%" y="895.50"></text></g><g><title>cfree (11 samples, 0.02%)</title><rect x="30.9882%" y="869" width="0.0157%" height="15" fill="rgb(221,225,9)" fg:x="21724" fg:w="11"/><text x="31.2382%" y="879.50"></text></g><g><title>rocksdb::GetContext::SaveValue (17 samples, 0.02%)</title><rect x="31.0039%" y="885" width="0.0242%" height="15" fill="rgb(224,227,45)" fg:x="21735" fg:w="17"/><text x="31.2539%" y="895.50"></text></g><g><title>rocksdb::IndexBlockIter::IndexBlockIter (12 samples, 0.02%)</title><rect x="31.0282%" y="885" width="0.0171%" height="15" fill="rgb(229,198,43)" fg:x="21752" fg:w="12"/><text x="31.2782%" y="895.50"></text></g><g><title>rocksdb::IndexBlockIter::~IndexBlockIter (16 samples, 0.02%)</title><rect x="31.0467%" y="885" width="0.0228%" height="15" fill="rgb(206,209,35)" fg:x="21765" fg:w="16"/><text x="31.2967%" y="895.50"></text></g><g><title>cfree (11 samples, 0.02%)</title><rect x="31.0539%" y="869" width="0.0157%" height="15" fill="rgb(245,195,53)" fg:x="21770" fg:w="11"/><text x="31.3039%" y="879.50"></text></g><g><title>rocksdb::BlockBasedTable::Get (1,081 samples, 1.54%)</title><rect x="29.5433%" y="901" width="1.5420%" height="15" fill="rgb(240,92,26)" fg:x="20711" fg:w="1081"/><text x="29.7933%" y="911.50"></text></g><g><title>rocksdb::TableCache::Get (1,109 samples, 1.58%)</title><rect x="29.5062%" y="917" width="1.5819%" height="15" fill="rgb(207,40,23)" fg:x="20685" fg:w="1109"/><text x="29.7562%" y="927.50"></text></g><g><title>rocksdb::DBImpl::Get (3,281 samples, 4.68%)</title><rect x="26.4150%" y="965" width="4.6802%" height="15" fill="rgb(223,111,35)" fg:x="18518" fg:w="3281"/><text x="26.6650%" y="975.50">rocks..</text></g><g><title>rocksdb::DBImpl::GetImpl (3,270 samples, 4.66%)</title><rect x="26.4307%" y="949" width="4.6645%" height="15" fill="rgb(229,147,28)" fg:x="18529" fg:w="3270"/><text x="26.6807%" y="959.50">rocks..</text></g><g><title>rocksdb::Version::Get (1,200 samples, 1.71%)</title><rect x="29.3835%" y="933" width="1.7117%" height="15" fill="rgb(211,29,28)" fg:x="20599" fg:w="1200"/><text x="29.6335%" y="943.50"></text></g><g><title>cfree (9 samples, 0.01%)</title><rect x="32.6287%" y="949" width="0.0128%" height="15" fill="rgb(228,72,33)" fg:x="22874" fg:w="9"/><text x="32.8787%" y="959.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (19 samples, 0.03%)</title><rect x="32.6472%" y="949" width="0.0271%" height="15" fill="rgb(205,214,31)" fg:x="22887" fg:w="19"/><text x="32.8972%" y="959.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (17 samples, 0.02%)</title><rect x="32.6501%" y="933" width="0.0242%" height="15" fill="rgb(224,111,15)" fg:x="22889" fg:w="17"/><text x="32.9001%" y="943.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (8 samples, 0.01%)</title><rect x="32.6629%" y="917" width="0.0114%" height="15" fill="rgb(253,21,26)" fg:x="22898" fg:w="8"/><text x="32.9129%" y="927.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (57 samples, 0.08%)</title><rect x="32.8540%" y="933" width="0.0813%" height="15" fill="rgb(245,139,43)" fg:x="23032" fg:w="57"/><text x="33.1040%" y="943.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (45 samples, 0.06%)</title><rect x="32.8712%" y="917" width="0.0642%" height="15" fill="rgb(252,170,7)" fg:x="23044" fg:w="45"/><text x="33.1212%" y="927.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (17 samples, 0.02%)</title><rect x="32.9111%" y="901" width="0.0242%" height="15" fill="rgb(231,118,14)" fg:x="23072" fg:w="17"/><text x="33.1611%" y="911.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (26 samples, 0.04%)</title><rect x="32.9468%" y="917" width="0.0371%" height="15" fill="rgb(238,83,0)" fg:x="23097" fg:w="26"/><text x="33.1968%" y="927.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (23 samples, 0.03%)</title><rect x="32.9510%" y="901" width="0.0328%" height="15" fill="rgb(221,39,39)" fg:x="23100" fg:w="23"/><text x="33.2010%" y="911.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (14 samples, 0.02%)</title><rect x="32.9639%" y="885" width="0.0200%" height="15" fill="rgb(222,119,46)" fg:x="23109" fg:w="14"/><text x="33.2139%" y="895.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (8 samples, 0.01%)</title><rect x="33.0994%" y="901" width="0.0114%" height="15" fill="rgb(222,165,49)" fg:x="23204" fg:w="8"/><text x="33.3494%" y="911.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (84 samples, 0.12%)</title><rect x="33.1108%" y="901" width="0.1198%" height="15" fill="rgb(219,113,52)" fg:x="23212" fg:w="84"/><text x="33.3608%" y="911.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (83 samples, 0.12%)</title><rect x="33.1122%" y="885" width="0.1184%" height="15" fill="rgb(214,7,15)" fg:x="23213" fg:w="83"/><text x="33.3622%" y="895.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (13 samples, 0.02%)</title><rect x="33.2121%" y="869" width="0.0185%" height="15" fill="rgb(235,32,4)" fg:x="23283" fg:w="13"/><text x="33.4621%" y="879.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::MatchesKey (177 samples, 0.25%)</title><rect x="32.9839%" y="917" width="0.2525%" height="15" fill="rgb(238,90,54)" fg:x="23123" fg:w="177"/><text x="33.2339%" y="927.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::AdvanceKey (213 samples, 0.30%)</title><rect x="32.9354%" y="933" width="0.3038%" height="15" fill="rgb(213,208,19)" fg:x="23089" fg:w="213"/><text x="33.1854%" y="943.50"></text></g><g><title>[ord] (8 samples, 0.01%)</title><rect x="33.4731%" y="901" width="0.0114%" height="15" fill="rgb(233,156,4)" fg:x="23466" fg:w="8"/><text x="33.7231%" y="911.50"></text></g><g><title>__nss_passwd_lookup (198 samples, 0.28%)</title><rect x="33.4845%" y="901" width="0.2824%" height="15" fill="rgb(207,194,5)" fg:x="23474" fg:w="198"/><text x="33.7345%" y="911.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (249 samples, 0.36%)</title><rect x="33.4132%" y="917" width="0.3552%" height="15" fill="rgb(206,111,30)" fg:x="23424" fg:w="249"/><text x="33.6632%" y="927.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (394 samples, 0.56%)</title><rect x="33.2520%" y="933" width="0.5620%" height="15" fill="rgb(243,70,54)" fg:x="23311" fg:w="394"/><text x="33.5020%" y="943.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (32 samples, 0.05%)</title><rect x="33.7684%" y="917" width="0.0456%" height="15" fill="rgb(242,28,8)" fg:x="23673" fg:w="32"/><text x="34.0184%" y="927.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::FindLatestUpdate (800 samples, 1.14%)</title><rect x="32.6743%" y="949" width="1.1412%" height="15" fill="rgb(219,106,18)" fg:x="22906" fg:w="800"/><text x="32.9243%" y="959.50"></text></g><g><title>[ord] (20 samples, 0.03%)</title><rect x="35.7298%" y="917" width="0.0285%" height="15" fill="rgb(244,222,10)" fg:x="25048" fg:w="20"/><text x="35.9798%" y="927.50"></text></g><g><title>apic_timer_interrupt (8 samples, 0.01%)</title><rect x="39.6511%" y="901" width="0.0114%" height="15" fill="rgb(236,179,52)" fg:x="27797" fg:w="8"/><text x="39.9011%" y="911.50"></text></g><g><title>smp_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="39.6511%" y="885" width="0.0114%" height="15" fill="rgb(213,23,39)" fg:x="27797" fg:w="8"/><text x="39.9011%" y="895.50"></text></g><g><title>irq_exit (8 samples, 0.01%)</title><rect x="39.6511%" y="869" width="0.0114%" height="15" fill="rgb(238,48,10)" fg:x="27797" fg:w="8"/><text x="39.9011%" y="879.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.01%)</title><rect x="39.6511%" y="853" width="0.0114%" height="15" fill="rgb(251,196,23)" fg:x="27797" fg:w="8"/><text x="39.9011%" y="863.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (2,812 samples, 4.01%)</title><rect x="35.6556%" y="933" width="4.0112%" height="15" fill="rgb(250,152,24)" fg:x="24996" fg:w="2812"/><text x="35.9056%" y="943.50">rock..</text></g><g><title>__nss_passwd_lookup (2,740 samples, 3.91%)</title><rect x="35.7583%" y="917" width="3.9085%" height="15" fill="rgb(209,150,17)" fg:x="25068" fg:w="2740"/><text x="36.0083%" y="927.50">__ns..</text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (59 samples, 0.08%)</title><rect x="39.6668%" y="933" width="0.0842%" height="15" fill="rgb(234,202,34)" fg:x="27808" fg:w="59"/><text x="39.9168%" y="943.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (4,162 samples, 5.94%)</title><rect x="33.8169%" y="949" width="5.9369%" height="15" fill="rgb(253,148,53)" fg:x="23707" fg:w="4162"/><text x="34.0669%" y="959.50">rocksdb:..</text></g><g><title>operator new (10 samples, 0.01%)</title><rect x="39.7595%" y="933" width="0.0143%" height="15" fill="rgb(218,129,16)" fg:x="27873" fg:w="10"/><text x="40.0095%" y="943.50"></text></g><g><title>__libc_malloc (9 samples, 0.01%)</title><rect x="39.7609%" y="917" width="0.0128%" height="15" fill="rgb(216,85,19)" fg:x="27874" fg:w="9"/><text x="40.0109%" y="927.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::NewIterator (20 samples, 0.03%)</title><rect x="39.7538%" y="949" width="0.0285%" height="15" fill="rgb(235,228,7)" fg:x="27869" fg:w="20"/><text x="40.0038%" y="959.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.01%)</title><rect x="39.7866%" y="933" width="0.0128%" height="15" fill="rgb(245,175,0)" fg:x="27892" fg:w="9"/><text x="40.0366%" y="943.50"></text></g><g><title>operator new (71 samples, 0.10%)</title><rect x="39.7994%" y="933" width="0.1013%" height="15" fill="rgb(208,168,36)" fg:x="27901" fg:w="71"/><text x="40.0494%" y="943.50"></text></g><g><title>__libc_malloc (70 samples, 0.10%)</title><rect x="39.8009%" y="917" width="0.0999%" height="15" fill="rgb(246,171,24)" fg:x="27902" fg:w="70"/><text x="40.0509%" y="927.50"></text></g><g><title>_IO_str_seekoff (42 samples, 0.06%)</title><rect x="39.8408%" y="901" width="0.0599%" height="15" fill="rgb(215,142,24)" fg:x="27930" fg:w="42"/><text x="40.0908%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (85 samples, 0.12%)</title><rect x="39.7823%" y="949" width="0.1212%" height="15" fill="rgb(250,187,7)" fg:x="27889" fg:w="85"/><text x="40.0323%" y="959.50"></text></g><g><title>rocksdb::WriteBatchWithIndexInternal::GetFromBatch (6,174 samples, 8.81%)</title><rect x="31.0981%" y="965" width="8.8069%" height="15" fill="rgb(228,66,33)" fg:x="21801" fg:w="6174"/><text x="31.3481%" y="975.50">rocksdb::Wri..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (9,498 samples, 13.55%)</title><rect x="26.3594%" y="997" width="13.5484%" height="15" fill="rgb(234,215,21)" fg:x="18479" fg:w="9498"/><text x="26.6094%" y="1007.50">rocksdb::WriteBatchW..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (9,488 samples, 13.53%)</title><rect x="26.3737%" y="981" width="13.5342%" height="15" fill="rgb(222,191,20)" fg:x="18489" fg:w="9488"/><text x="26.6237%" y="991.50">rocksdb::WriteBatchW..</text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get (9,743 samples, 13.90%)</title><rect x="26.0256%" y="1061" width="13.8979%" height="15" fill="rgb(245,79,54)" fg:x="18245" fg:w="9743"/><text x="26.2756%" y="1071.50">rocksdb::transactions..</text></g><g><title>rocksdb_transaction_get_pinned (9,569 samples, 13.65%)</title><rect x="26.2738%" y="1045" width="13.6497%" height="15" fill="rgb(240,10,37)" fg:x="18419" fg:w="9569"/><text x="26.5238%" y="1055.50">rocksdb_transaction_g..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (9,534 samples, 13.60%)</title><rect x="26.3237%" y="1029" width="13.5998%" height="15" fill="rgb(214,192,32)" fg:x="18454" fg:w="9534"/><text x="26.5737%" y="1039.50">rocksdb::TransactionB..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (9,524 samples, 13.59%)</title><rect x="26.3380%" y="1013" width="13.5855%" height="15" fill="rgb(209,36,54)" fg:x="18464" fg:w="9524"/><text x="26.5880%" y="1023.50">rocksdb::TransactionB..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11 samples, 0.02%)</title><rect x="39.9079%" y="997" width="0.0157%" height="15" fill="rgb(220,10,11)" fg:x="27977" fg:w="11"/><text x="40.1579%" y="1007.50"></text></g><g><title>operator new (10 samples, 0.01%)</title><rect x="39.9093%" y="981" width="0.0143%" height="15" fill="rgb(221,106,17)" fg:x="27978" fg:w="10"/><text x="40.1593%" y="991.50"></text></g><g><title>__libc_malloc (10 samples, 0.01%)</title><rect x="39.9093%" y="965" width="0.0143%" height="15" fill="rgb(251,142,44)" fg:x="27978" fg:w="10"/><text x="40.1593%" y="975.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.01%)</title><rect x="39.9107%" y="949" width="0.0128%" height="15" fill="rgb(238,13,15)" fg:x="27979" fg:w="9"/><text x="40.1607%" y="959.50"></text></g><g><title>std::io::Read::read_exact (29 samples, 0.04%)</title><rect x="39.9235%" y="1061" width="0.0414%" height="15" fill="rgb(208,107,27)" fg:x="27988" fg:w="29"/><text x="40.1735%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (21 samples, 0.03%)</title><rect x="39.9763%" y="1029" width="0.0300%" height="15" fill="rgb(205,136,37)" fg:x="28025" fg:w="21"/><text x="40.2263%" y="1039.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (12 samples, 0.02%)</title><rect x="39.9892%" y="1013" width="0.0171%" height="15" fill="rgb(250,205,27)" fg:x="28034" fg:w="12"/><text x="40.2392%" y="1023.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (39 samples, 0.06%)</title><rect x="39.9720%" y="1045" width="0.0556%" height="15" fill="rgb(210,80,43)" fg:x="28022" fg:w="39"/><text x="40.2220%" y="1055.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (11,445 samples, 16.33%)</title><rect x="23.7048%" y="1077" width="16.3257%" height="15" fill="rgb(247,160,36)" fg:x="16618" fg:w="11445"/><text x="23.9548%" y="1087.50">ord::index::updater::insc..</text></g><g><title>tokio::future::block_on::block_on (45 samples, 0.06%)</title><rect x="39.9663%" y="1061" width="0.0642%" height="15" fill="rgb(234,13,49)" fg:x="28018" fg:w="45"/><text x="40.2163%" y="1071.50"></text></g><g><title>log::__private_api_log (15 samples, 0.02%)</title><rect x="40.0391%" y="1061" width="0.0214%" height="15" fill="rgb(234,122,0)" fg:x="28069" fg:w="15"/><text x="40.2891%" y="1071.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (15 samples, 0.02%)</title><rect x="40.0391%" y="1045" width="0.0214%" height="15" fill="rgb(207,146,38)" fg:x="28069" fg:w="15"/><text x="40.2891%" y="1055.50"></text></g><g><title>ord::okx::protocol::protocol_manager::ProtocolManager&lt;RW&gt;::index_block (21 samples, 0.03%)</title><rect x="40.0320%" y="1077" width="0.0300%" height="15" fill="rgb(207,177,25)" fg:x="28064" fg:w="21"/><text x="40.2820%" y="1087.50"></text></g><g><title>cfree (128 samples, 0.18%)</title><rect x="40.1076%" y="1013" width="0.1826%" height="15" fill="rgb(211,178,42)" fg:x="28117" fg:w="128"/><text x="40.3576%" y="1023.50"></text></g><g><title>_IO_str_seekoff (128 samples, 0.18%)</title><rect x="40.1076%" y="997" width="0.1826%" height="15" fill="rgb(230,69,54)" fg:x="28117" fg:w="128"/><text x="40.3576%" y="1007.50"></text></g><g><title>rocksdb::(anonymous namespace)::TrackedKeysIterator::Next (91 samples, 0.13%)</title><rect x="40.2916%" y="1013" width="0.1298%" height="15" fill="rgb(214,135,41)" fg:x="28246" fg:w="91"/><text x="40.5416%" y="1023.50"></text></g><g><title>rocksdb::LockMap::GetStripe (107 samples, 0.15%)</title><rect x="40.4214%" y="1013" width="0.1526%" height="15" fill="rgb(237,67,25)" fg:x="28337" fg:w="107"/><text x="40.6714%" y="1023.50"></text></g><g><title>rocksdb::Hash64 (102 samples, 0.15%)</title><rect x="40.4285%" y="997" width="0.1455%" height="15" fill="rgb(222,189,50)" fg:x="28342" fg:w="102"/><text x="40.6785%" y="1007.50"></text></g><g><title>cfree (259 samples, 0.37%)</title><rect x="40.6781%" y="981" width="0.3695%" height="15" fill="rgb(245,148,34)" fg:x="28517" fg:w="259"/><text x="40.9281%" y="991.50"></text></g><g><title>_IO_str_seekoff (107 samples, 0.15%)</title><rect x="40.8950%" y="965" width="0.1526%" height="15" fill="rgb(222,29,6)" fg:x="28669" fg:w="107"/><text x="41.1450%" y="975.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::erase (325 samples, 0.46%)</title><rect x="40.5868%" y="997" width="0.4636%" height="15" fill="rgb(221,189,43)" fg:x="28453" fg:w="325"/><text x="40.8368%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (177 samples, 0.25%)</title><rect x="41.8193%" y="981" width="0.2525%" height="15" fill="rgb(207,36,27)" fg:x="29317" fg:w="177"/><text x="42.0693%" y="991.50"></text></g><g><title>std::_Hash_bytes (93 samples, 0.13%)</title><rect x="42.0732%" y="981" width="0.1327%" height="15" fill="rgb(217,90,24)" fg:x="29495" fg:w="93"/><text x="42.3232%" y="991.50"></text></g><g><title>rocksdb::PointLockManager::UnLockKey (1,145 samples, 1.63%)</title><rect x="40.5740%" y="1013" width="1.6333%" height="15" fill="rgb(224,66,35)" fg:x="28444" fg:w="1145"/><text x="40.8240%" y="1023.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, rocksdb::LockInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (811 samples, 1.16%)</title><rect x="41.0504%" y="997" width="1.1569%" height="15" fill="rgb(221,13,50)" fg:x="28778" fg:w="811"/><text x="41.3004%" y="1007.50"></text></g><g><title>rocksdb::PointLockManager::UnLock (1,496 samples, 2.13%)</title><rect x="40.0762%" y="1029" width="2.1340%" height="15" fill="rgb(236,68,49)" fg:x="28095" fg:w="1496"/><text x="40.3262%" y="1039.50">r..</text></g><g><title>cfree (536 samples, 0.76%)</title><rect x="42.3328%" y="997" width="0.7646%" height="15" fill="rgb(229,146,28)" fg:x="29677" fg:w="536"/><text x="42.5828%" y="1007.50"></text></g><g><title>_IO_str_seekoff (392 samples, 0.56%)</title><rect x="42.5382%" y="981" width="0.5592%" height="15" fill="rgb(225,31,38)" fg:x="29821" fg:w="392"/><text x="42.7882%" y="991.50"></text></g><g><title>rocksdb::PointLockTracker::Clear (624 samples, 0.89%)</title><rect x="42.2101%" y="1013" width="0.8901%" height="15" fill="rgb(250,208,3)" fg:x="29591" fg:w="624"/><text x="42.4601%" y="1023.50"></text></g><g><title>rocksdb::TransactionBaseImpl::Clear (629 samples, 0.90%)</title><rect x="42.2101%" y="1029" width="0.8972%" height="15" fill="rgb(246,54,23)" fg:x="29591" fg:w="629"/><text x="42.4601%" y="1039.50"></text></g><g><title>__page_cache_alloc (8 samples, 0.01%)</title><rect x="43.1388%" y="645" width="0.0114%" height="15" fill="rgb(243,76,11)" fg:x="30242" fg:w="8"/><text x="43.3888%" y="655.50"></text></g><g><title>alloc_pages_current (8 samples, 0.01%)</title><rect x="43.1388%" y="629" width="0.0114%" height="15" fill="rgb(245,21,50)" fg:x="30242" fg:w="8"/><text x="43.3888%" y="639.50"></text></g><g><title>add_to_page_cache_lru (14 samples, 0.02%)</title><rect x="43.1502%" y="645" width="0.0200%" height="15" fill="rgb(228,9,43)" fg:x="30250" fg:w="14"/><text x="43.4002%" y="655.50"></text></g><g><title>__add_to_page_cache_locked (14 samples, 0.02%)</title><rect x="43.1502%" y="629" width="0.0200%" height="15" fill="rgb(208,100,47)" fg:x="30250" fg:w="14"/><text x="43.4002%" y="639.50"></text></g><g><title>grab_cache_page_write_begin (24 samples, 0.03%)</title><rect x="43.1373%" y="677" width="0.0342%" height="15" fill="rgb(232,26,8)" fg:x="30241" fg:w="24"/><text x="43.3873%" y="687.50"></text></g><g><title>pagecache_get_page (24 samples, 0.03%)</title><rect x="43.1373%" y="661" width="0.0342%" height="15" fill="rgb(216,166,38)" fg:x="30241" fg:w="24"/><text x="43.3873%" y="671.50"></text></g><g><title>ext4_da_write_begin (33 samples, 0.05%)</title><rect x="43.1259%" y="693" width="0.0471%" height="15" fill="rgb(251,202,51)" fg:x="30233" fg:w="33"/><text x="43.3759%" y="703.50"></text></g><g><title>__mark_inode_dirty (8 samples, 0.01%)</title><rect x="43.1744%" y="661" width="0.0114%" height="15" fill="rgb(254,216,34)" fg:x="30267" fg:w="8"/><text x="43.4244%" y="671.50"></text></g><g><title>ext4_da_write_end (16 samples, 0.02%)</title><rect x="43.1730%" y="693" width="0.0228%" height="15" fill="rgb(251,32,27)" fg:x="30266" fg:w="16"/><text x="43.4230%" y="703.50"></text></g><g><title>generic_write_end (15 samples, 0.02%)</title><rect x="43.1744%" y="677" width="0.0214%" height="15" fill="rgb(208,127,28)" fg:x="30267" fg:w="15"/><text x="43.4244%" y="687.50"></text></g><g><title>rocksdb::WritableFileWriter::Append (60 samples, 0.09%)</title><rect x="43.1174%" y="933" width="0.0856%" height="15" fill="rgb(224,137,22)" fg:x="30227" fg:w="60"/><text x="43.3674%" y="943.50"></text></g><g><title>rocksdb::WritableFileWriter::Flush (54 samples, 0.08%)</title><rect x="43.1259%" y="917" width="0.0770%" height="15" fill="rgb(254,70,32)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="927.50"></text></g><g><title>rocksdb::WritableFileWriter::WriteBuffered (54 samples, 0.08%)</title><rect x="43.1259%" y="901" width="0.0770%" height="15" fill="rgb(229,75,37)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="911.50"></text></g><g><title>rocksdb::PosixWritableFile::Append (54 samples, 0.08%)</title><rect x="43.1259%" y="885" width="0.0770%" height="15" fill="rgb(252,64,23)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="895.50"></text></g><g><title>__libc_write (54 samples, 0.08%)</title><rect x="43.1259%" y="869" width="0.0770%" height="15" fill="rgb(232,162,48)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (54 samples, 0.08%)</title><rect x="43.1259%" y="853" width="0.0770%" height="15" fill="rgb(246,160,12)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="863.50"></text></g><g><title>do_syscall_64 (54 samples, 0.08%)</title><rect x="43.1259%" y="837" width="0.0770%" height="15" fill="rgb(247,166,0)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="847.50"></text></g><g><title>__x64_sys_write (54 samples, 0.08%)</title><rect x="43.1259%" y="821" width="0.0770%" height="15" fill="rgb(249,219,21)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="831.50"></text></g><g><title>ksys_write (54 samples, 0.08%)</title><rect x="43.1259%" y="805" width="0.0770%" height="15" fill="rgb(205,209,3)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="815.50"></text></g><g><title>vfs_write (54 samples, 0.08%)</title><rect x="43.1259%" y="789" width="0.0770%" height="15" fill="rgb(243,44,1)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="799.50"></text></g><g><title>__vfs_write (54 samples, 0.08%)</title><rect x="43.1259%" y="773" width="0.0770%" height="15" fill="rgb(206,159,16)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="783.50"></text></g><g><title>new_sync_write (54 samples, 0.08%)</title><rect x="43.1259%" y="757" width="0.0770%" height="15" fill="rgb(244,77,30)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="767.50"></text></g><g><title>ext4_file_write_iter (54 samples, 0.08%)</title><rect x="43.1259%" y="741" width="0.0770%" height="15" fill="rgb(218,69,12)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="751.50"></text></g><g><title>__generic_file_write_iter (54 samples, 0.08%)</title><rect x="43.1259%" y="725" width="0.0770%" height="15" fill="rgb(212,87,7)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="735.50"></text></g><g><title>generic_perform_write (54 samples, 0.08%)</title><rect x="43.1259%" y="709" width="0.0770%" height="15" fill="rgb(245,114,25)" fg:x="30233" fg:w="54"/><text x="43.3759%" y="719.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL (156 samples, 0.22%)</title><rect x="43.1159%" y="997" width="0.2225%" height="15" fill="rgb(210,61,42)" fg:x="30226" fg:w="156"/><text x="43.3659%" y="1007.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL (156 samples, 0.22%)</title><rect x="43.1159%" y="981" width="0.2225%" height="15" fill="rgb(211,52,33)" fg:x="30226" fg:w="156"/><text x="43.3659%" y="991.50"></text></g><g><title>rocksdb::log::Writer::AddRecord (156 samples, 0.22%)</title><rect x="43.1159%" y="965" width="0.2225%" height="15" fill="rgb(234,58,33)" fg:x="30226" fg:w="156"/><text x="43.3659%" y="975.50"></text></g><g><title>rocksdb::log::Writer::EmitPhysicalRecord (155 samples, 0.22%)</title><rect x="43.1174%" y="949" width="0.2211%" height="15" fill="rgb(220,115,36)" fg:x="30227" fg:w="155"/><text x="43.3674%" y="959.50"></text></g><g><title>rocksdb::crc32c::ExtendImpl&lt;&amp;rocksdb::crc32c::Slow_CRC32&gt; (95 samples, 0.14%)</title><rect x="43.2030%" y="933" width="0.1355%" height="15" fill="rgb(243,153,54)" fg:x="30287" fg:w="95"/><text x="43.4530%" y="943.50"></text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::CheckMemtableFull (34 samples, 0.05%)</title><rect x="43.3770%" y="917" width="0.0485%" height="15" fill="rgb(251,47,18)" fg:x="30409" fg:w="34"/><text x="43.6270%" y="927.50"></text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::SeekToColumnFamily (13 samples, 0.02%)</title><rect x="43.4255%" y="917" width="0.0185%" height="15" fill="rgb(242,102,42)" fg:x="30443" fg:w="13"/><text x="43.6755%" y="927.50"></text></g><g><title>rocksdb::ColumnFamilyMemTablesImpl::Seek (9 samples, 0.01%)</title><rect x="43.4312%" y="901" width="0.0128%" height="15" fill="rgb(234,31,38)" fg:x="30447" fg:w="9"/><text x="43.6812%" y="911.50"></text></g><g><title>__nss_passwd_lookup (74 samples, 0.11%)</title><rect x="43.4840%" y="901" width="0.1056%" height="15" fill="rgb(221,117,51)" fg:x="30484" fg:w="74"/><text x="43.7340%" y="911.50"></text></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Allocate (47 samples, 0.07%)</title><rect x="43.5910%" y="901" width="0.0670%" height="15" fill="rgb(212,20,18)" fg:x="30559" fg:w="47"/><text x="43.8410%" y="911.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned (32 samples, 0.05%)</title><rect x="43.6123%" y="885" width="0.0456%" height="15" fill="rgb(245,133,36)" fg:x="30574" fg:w="32"/><text x="43.8623%" y="895.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt; (30 samples, 0.04%)</title><rect x="43.6152%" y="869" width="0.0428%" height="15" fill="rgb(212,6,19)" fg:x="30576" fg:w="30"/><text x="43.8652%" y="879.50"></text></g><g><title>net_tx_action (9 samples, 0.01%)</title><rect x="45.6393%" y="805" width="0.0128%" height="15" fill="rgb(218,1,36)" fg:x="31995" fg:w="9"/><text x="45.8893%" y="815.50"></text></g><g><title>__qdisc_run (9 samples, 0.01%)</title><rect x="45.6393%" y="789" width="0.0128%" height="15" fill="rgb(246,84,54)" fg:x="31995" fg:w="9"/><text x="45.8893%" y="799.50"></text></g><g><title>sch_direct_xmit (9 samples, 0.01%)</title><rect x="45.6393%" y="773" width="0.0128%" height="15" fill="rgb(242,110,6)" fg:x="31995" fg:w="9"/><text x="45.8893%" y="783.50"></text></g><g><title>ret_from_intr (15 samples, 0.02%)</title><rect x="45.6336%" y="869" width="0.0214%" height="15" fill="rgb(214,47,5)" fg:x="31991" fg:w="15"/><text x="45.8836%" y="879.50"></text></g><g><title>do_IRQ (15 samples, 0.02%)</title><rect x="45.6336%" y="853" width="0.0214%" height="15" fill="rgb(218,159,25)" fg:x="31991" fg:w="15"/><text x="45.8836%" y="863.50"></text></g><g><title>irq_exit (15 samples, 0.02%)</title><rect x="45.6336%" y="837" width="0.0214%" height="15" fill="rgb(215,211,28)" fg:x="31991" fg:w="15"/><text x="45.8836%" y="847.50"></text></g><g><title>__softirqentry_text_start (15 samples, 0.02%)</title><rect x="45.6336%" y="821" width="0.0214%" height="15" fill="rgb(238,59,32)" fg:x="31991" fg:w="15"/><text x="45.8836%" y="831.50"></text></g><g><title>__tls_init (17 samples, 0.02%)</title><rect x="45.9517%" y="853" width="0.0242%" height="15" fill="rgb(226,82,3)" fg:x="32214" fg:w="17"/><text x="46.2017%" y="863.50"></text></g><g><title>[ord] (41 samples, 0.06%)</title><rect x="46.0402%" y="837" width="0.0585%" height="15" fill="rgb(240,164,32)" fg:x="32276" fg:w="41"/><text x="46.2902%" y="847.50"></text></g><g><title>__nss_passwd_lookup (156 samples, 0.22%)</title><rect x="46.0987%" y="837" width="0.2225%" height="15" fill="rgb(232,46,7)" fg:x="32317" fg:w="156"/><text x="46.3487%" y="847.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels (1,836 samples, 2.62%)</title><rect x="43.7036%" y="885" width="2.6190%" height="15" fill="rgb(229,129,53)" fg:x="30638" fg:w="1836"/><text x="43.9536%" y="895.50">ro..</text></g><g><title>rocksdb::MemTable::KeyComparator::operator (468 samples, 0.67%)</title><rect x="45.6550%" y="869" width="0.6676%" height="15" fill="rgb(234,188,29)" fg:x="32006" fg:w="468"/><text x="45.9050%" y="879.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (242 samples, 0.35%)</title><rect x="45.9774%" y="853" width="0.3452%" height="15" fill="rgb(246,141,4)" fg:x="32232" fg:w="242"/><text x="46.2274%" y="863.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (98 samples, 0.14%)</title><rect x="46.3625%" y="869" width="0.1398%" height="15" fill="rgb(229,23,39)" fg:x="32502" fg:w="98"/><text x="46.6125%" y="879.50"></text></g><g><title>__nss_passwd_lookup (81 samples, 0.12%)</title><rect x="46.3868%" y="853" width="0.1155%" height="15" fill="rgb(206,12,3)" fg:x="32519" fg:w="81"/><text x="46.6368%" y="863.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt; (1,995 samples, 2.85%)</title><rect x="43.6594%" y="901" width="2.8458%" height="15" fill="rgb(252,226,20)" fg:x="30607" fg:w="1995"/><text x="43.9094%" y="911.50">ro..</text></g><g><title>rocksdb::MemTable::KeyComparator::operator (128 samples, 0.18%)</title><rect x="46.3226%" y="885" width="0.1826%" height="15" fill="rgb(216,123,35)" fg:x="32474" fg:w="128"/><text x="46.5726%" y="895.50"></text></g><g><title>rocksdb::MemTable::Add (2,153 samples, 3.07%)</title><rect x="43.4483%" y="917" width="3.0712%" height="15" fill="rgb(212,68,40)" fg:x="30459" fg:w="2153"/><text x="43.6983%" y="927.50">roc..</text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl (2,225 samples, 3.17%)</title><rect x="43.3542%" y="933" width="3.1739%" height="15" fill="rgb(254,125,32)" fg:x="30393" fg:w="2225"/><text x="43.6042%" y="943.50">roc..</text></g><g><title>rocksdb::(anonymous namespace)::MemTableInserter::PutCF (2,231 samples, 3.18%)</title><rect x="43.3470%" y="949" width="3.1824%" height="15" fill="rgb(253,97,22)" fg:x="30388" fg:w="2231"/><text x="43.5970%" y="959.50">roc..</text></g><g><title>rocksdb::ReadRecordFromWriteBatch (77 samples, 0.11%)</title><rect x="46.5294%" y="949" width="0.1098%" height="15" fill="rgb(241,101,14)" fg:x="32619" fg:w="77"/><text x="46.7794%" y="959.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (71 samples, 0.10%)</title><rect x="46.5380%" y="933" width="0.1013%" height="15" fill="rgb(238,103,29)" fg:x="32625" fg:w="71"/><text x="46.7880%" y="943.50"></text></g><g><title>rocksdb_transaction_commit (4,606 samples, 6.57%)</title><rect x="40.0762%" y="1061" width="6.5702%" height="15" fill="rgb(233,195,47)" fg:x="28095" fg:w="4606"/><text x="40.3262%" y="1071.50">rocksdb_t..</text></g><g><title>rocksdb::PessimisticTransaction::Commit (4,606 samples, 6.57%)</title><rect x="40.0762%" y="1045" width="6.5702%" height="15" fill="rgb(246,218,30)" fg:x="28095" fg:w="4606"/><text x="40.3262%" y="1055.50">rocksdb::..</text></g><g><title>rocksdb::WriteCommittedTxn::CommitWithoutPrepareInternal (2,481 samples, 3.54%)</title><rect x="43.1074%" y="1029" width="3.5390%" height="15" fill="rgb(219,145,47)" fg:x="30220" fg:w="2481"/><text x="43.3574%" y="1039.50">roc..</text></g><g><title>rocksdb::DBImpl::WriteImpl (2,481 samples, 3.54%)</title><rect x="43.1074%" y="1013" width="3.5390%" height="15" fill="rgb(243,12,26)" fg:x="30220" fg:w="2481"/><text x="43.3574%" y="1023.50">roc..</text></g><g><title>rocksdb::WriteBatchInternal::InsertInto (2,319 samples, 3.31%)</title><rect x="43.3385%" y="997" width="3.3079%" height="15" fill="rgb(214,87,16)" fg:x="30382" fg:w="2319"/><text x="43.5885%" y="1007.50">roc..</text></g><g><title>rocksdb::WriteBatch::Iterate (2,319 samples, 3.31%)</title><rect x="43.3385%" y="981" width="3.3079%" height="15" fill="rgb(208,99,42)" fg:x="30382" fg:w="2319"/><text x="43.5885%" y="991.50">roc..</text></g><g><title>rocksdb::WriteBatchInternal::Iterate (2,319 samples, 3.31%)</title><rect x="43.3385%" y="965" width="3.3079%" height="15" fill="rgb(253,99,2)" fg:x="30382" fg:w="2319"/><text x="43.5885%" y="975.50">roc..</text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::commit (4,612 samples, 6.58%)</title><rect x="40.0762%" y="1077" width="6.5788%" height="15" fill="rgb(220,168,23)" fg:x="28095" fg:w="4612"/><text x="40.3262%" y="1087.50">rocksdb::..</text></g><g><title>&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (16 samples, 0.02%)</title><rect x="46.6764%" y="1061" width="0.0228%" height="15" fill="rgb(242,38,24)" fg:x="32722" fg:w="16"/><text x="46.9264%" y="1071.50"></text></g><g><title>rocksdb_readoptions_create (12 samples, 0.02%)</title><rect x="46.6821%" y="1045" width="0.0171%" height="15" fill="rgb(225,182,9)" fg:x="32726" fg:w="12"/><text x="46.9321%" y="1055.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="46.7035%" y="1061" width="0.0185%" height="15" fill="rgb(243,178,37)" fg:x="32741" fg:w="13"/><text x="46.9535%" y="1071.50"></text></g><g><title>operator new (9 samples, 0.01%)</title><rect x="46.7705%" y="1045" width="0.0128%" height="15" fill="rgb(232,139,19)" fg:x="32788" fg:w="9"/><text x="47.0205%" y="1055.50"></text></g><g><title>__libc_malloc (9 samples, 0.01%)</title><rect x="46.7705%" y="1029" width="0.0128%" height="15" fill="rgb(225,201,24)" fg:x="32788" fg:w="9"/><text x="47.0205%" y="1039.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Insert (8 samples, 0.01%)</title><rect x="46.8447%" y="981" width="0.0114%" height="15" fill="rgb(221,47,46)" fg:x="32840" fg:w="8"/><text x="47.0947%" y="991.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (13 samples, 0.02%)</title><rect x="46.8404%" y="1013" width="0.0185%" height="15" fill="rgb(249,23,13)" fg:x="32837" fg:w="13"/><text x="47.0904%" y="1023.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (10 samples, 0.01%)</title><rect x="46.8447%" y="997" width="0.0143%" height="15" fill="rgb(219,9,5)" fg:x="32840" fg:w="10"/><text x="47.0947%" y="1007.50"></text></g><g><title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (13 samples, 0.02%)</title><rect x="46.9645%" y="949" width="0.0185%" height="15" fill="rgb(254,171,16)" fg:x="32924" fg:w="13"/><text x="47.2145%" y="959.50"></text></g><g><title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion (19 samples, 0.03%)</title><rect x="46.9945%" y="949" width="0.0271%" height="15" fill="rgb(230,171,20)" fg:x="32945" fg:w="19"/><text x="47.2445%" y="959.50"></text></g><g><title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (19 samples, 0.03%)</title><rect x="46.9945%" y="933" width="0.0271%" height="15" fill="rgb(210,71,41)" fg:x="32945" fg:w="19"/><text x="47.2445%" y="943.50"></text></g><g><title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (12 samples, 0.02%)</title><rect x="47.0045%" y="917" width="0.0171%" height="15" fill="rgb(206,173,20)" fg:x="32952" fg:w="12"/><text x="47.2545%" y="927.50"></text></g><g><title>__tls_init (12 samples, 0.02%)</title><rect x="49.6405%" y="869" width="0.0171%" height="15" fill="rgb(233,88,34)" fg:x="34800" fg:w="12"/><text x="49.8905%" y="879.50"></text></g><g><title>[ord] (8 samples, 0.01%)</title><rect x="49.6933%" y="853" width="0.0114%" height="15" fill="rgb(223,209,46)" fg:x="34837" fg:w="8"/><text x="49.9433%" y="863.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator (213 samples, 0.30%)</title><rect x="49.4893%" y="885" width="0.3038%" height="15" fill="rgb(250,43,18)" fg:x="34694" fg:w="213"/><text x="49.7393%" y="895.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (94 samples, 0.13%)</title><rect x="49.6591%" y="869" width="0.1341%" height="15" fill="rgb(208,13,10)" fg:x="34813" fg:w="94"/><text x="49.9091%" y="879.50"></text></g><g><title>__nss_passwd_lookup (62 samples, 0.09%)</title><rect x="49.7047%" y="853" width="0.0884%" height="15" fill="rgb(212,200,36)" fg:x="34845" fg:w="62"/><text x="49.9547%" y="863.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual (1,923 samples, 2.74%)</title><rect x="47.0529%" y="901" width="2.7431%" height="15" fill="rgb(225,90,30)" fg:x="32986" fg:w="1923"/><text x="47.3029%" y="911.50">ro..</text></g><g><title>rocksdb::MemTable::Get (1,968 samples, 2.81%)</title><rect x="47.0258%" y="949" width="2.8073%" height="15" fill="rgb(236,182,39)" fg:x="32967" fg:w="1968"/><text x="47.2758%" y="959.50">ro..</text></g><g><title>rocksdb::MemTable::GetFromTable (1,962 samples, 2.80%)</title><rect x="47.0344%" y="933" width="2.7987%" height="15" fill="rgb(212,144,35)" fg:x="32973" fg:w="1962"/><text x="47.2844%" y="943.50">ro..</text></g><g><title>rocksdb::(anonymous namespace)::SkipListRep::Get (1,954 samples, 2.79%)</title><rect x="47.0458%" y="917" width="2.7873%" height="15" fill="rgb(228,63,44)" fg:x="32981" fg:w="1954"/><text x="47.2958%" y="927.50">ro..</text></g><g><title>rocksdb::SaveValue (26 samples, 0.04%)</title><rect x="49.7960%" y="901" width="0.0371%" height="15" fill="rgb(228,109,6)" fg:x="34909" fg:w="26"/><text x="50.0460%" y="911.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10 samples, 0.01%)</title><rect x="49.8188%" y="885" width="0.0143%" height="15" fill="rgb(238,117,24)" fg:x="34925" fg:w="10"/><text x="50.0688%" y="895.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.01%)</title><rect x="49.9401%" y="917" width="0.0114%" height="15" fill="rgb(242,26,26)" fg:x="35010" fg:w="8"/><text x="50.1901%" y="927.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.01%)</title><rect x="49.9401%" y="901" width="0.0114%" height="15" fill="rgb(221,92,48)" fg:x="35010" fg:w="8"/><text x="50.1901%" y="911.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (8 samples, 0.01%)</title><rect x="49.9515%" y="917" width="0.0114%" height="15" fill="rgb(209,209,32)" fg:x="35018" fg:w="8"/><text x="50.2015%" y="927.50"></text></g><g><title>rocksdb::(anonymous namespace)::FilePicker::GetNextFile (43 samples, 0.06%)</title><rect x="49.9044%" y="933" width="0.0613%" height="15" fill="rgb(221,70,22)" fg:x="34985" fg:w="43"/><text x="50.1544%" y="943.50"></text></g><g><title>rocksdb::GetContext::GetContext (10 samples, 0.01%)</title><rect x="49.9686%" y="933" width="0.0143%" height="15" fill="rgb(248,145,5)" fg:x="35030" fg:w="10"/><text x="50.2186%" y="943.50"></text></g><g><title>rocksdb::Block::NewIndexIterator (12 samples, 0.02%)</title><rect x="50.1355%" y="885" width="0.0171%" height="15" fill="rgb(226,116,26)" fg:x="35147" fg:w="12"/><text x="50.3855%" y="895.50"></text></g><g><title>rocksdb::BinarySearchIndexReader::NewIterator (19 samples, 0.03%)</title><rect x="50.1298%" y="901" width="0.0271%" height="15" fill="rgb(244,5,17)" fg:x="35143" fg:w="19"/><text x="50.3798%" y="911.50"></text></g><g><title>rocksdb::Block::NewDataIterator (11 samples, 0.02%)</title><rect x="50.1869%" y="885" width="0.0157%" height="15" fill="rgb(252,159,33)" fg:x="35183" fg:w="11"/><text x="50.4369%" y="895.50"></text></g><g><title>operator new (8 samples, 0.01%)</title><rect x="50.1911%" y="869" width="0.0114%" height="15" fill="rgb(206,71,0)" fg:x="35186" fg:w="8"/><text x="50.4411%" y="879.50"></text></g><g><title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (48 samples, 0.07%)</title><rect x="50.1583%" y="901" width="0.0685%" height="15" fill="rgb(233,118,54)" fg:x="35163" fg:w="48"/><text x="50.4083%" y="911.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (82 samples, 0.12%)</title><rect x="50.8288%" y="869" width="0.1170%" height="15" fill="rgb(234,83,48)" fg:x="35633" fg:w="82"/><text x="51.0788%" y="879.50"></text></g><g><title>__nss_passwd_lookup (61 samples, 0.09%)</title><rect x="50.8587%" y="853" width="0.0870%" height="15" fill="rgb(228,3,54)" fg:x="35654" fg:w="61"/><text x="51.1087%" y="863.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Seek (531 samples, 0.76%)</title><rect x="50.2425%" y="901" width="0.7574%" height="15" fill="rgb(226,155,13)" fg:x="35222" fg:w="531"/><text x="50.4925%" y="911.50"></text></g><g><title>rocksdb::IndexBlockIter::SeekImpl (525 samples, 0.75%)</title><rect x="50.2511%" y="885" width="0.7489%" height="15" fill="rgb(241,28,37)" fg:x="35228" fg:w="525"/><text x="50.5011%" y="895.50"></text></g><g><title>rocksdb::IndexBlockIter::ParseNextIndexKey (38 samples, 0.05%)</title><rect x="50.9457%" y="869" width="0.0542%" height="15" fill="rgb(233,93,10)" fg:x="35715" fg:w="38"/><text x="51.1957%" y="879.50"></text></g><g><title>rocksdb::IndexValue::DecodeFrom (20 samples, 0.03%)</title><rect x="50.9714%" y="853" width="0.0285%" height="15" fill="rgb(225,113,19)" fg:x="35733" fg:w="20"/><text x="51.2214%" y="863.50"></text></g><g><title>rocksdb::BlockHandle::DecodeFrom (11 samples, 0.02%)</title><rect x="50.9843%" y="837" width="0.0157%" height="15" fill="rgb(241,2,18)" fg:x="35742" fg:w="11"/><text x="51.2343%" y="847.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::LRU_Insert (21 samples, 0.03%)</title><rect x="51.0128%" y="869" width="0.0300%" height="15" fill="rgb(228,207,21)" fg:x="35762" fg:w="21"/><text x="51.2628%" y="879.50"></text></g><g><title>rocksdb::Cleanable::~Cleanable (43 samples, 0.06%)</title><rect x="51.0028%" y="901" width="0.0613%" height="15" fill="rgb(213,211,35)" fg:x="35755" fg:w="43"/><text x="51.2528%" y="911.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release (39 samples, 0.06%)</title><rect x="51.0085%" y="885" width="0.0556%" height="15" fill="rgb(209,83,10)" fg:x="35759" fg:w="39"/><text x="51.2585%" y="895.50"></text></g><g><title>rocksdb::port::Mutex::Unlock (8 samples, 0.01%)</title><rect x="51.0527%" y="869" width="0.0114%" height="15" fill="rgb(209,164,1)" fg:x="35790" fg:w="8"/><text x="51.3027%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock (8 samples, 0.01%)</title><rect x="51.0527%" y="853" width="0.0114%" height="15" fill="rgb(213,184,43)" fg:x="35790" fg:w="8"/><text x="51.3027%" y="863.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (39 samples, 0.06%)</title><rect x="51.0755%" y="885" width="0.0556%" height="15" fill="rgb(231,61,34)" fg:x="35806" fg:w="39"/><text x="51.3255%" y="895.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (11 samples, 0.02%)</title><rect x="51.1155%" y="869" width="0.0157%" height="15" fill="rgb(235,75,3)" fg:x="35834" fg:w="11"/><text x="51.3655%" y="879.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.01%)</title><rect x="51.1183%" y="853" width="0.0128%" height="15" fill="rgb(220,106,47)" fg:x="35836" fg:w="9"/><text x="51.3683%" y="863.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (23 samples, 0.03%)</title><rect x="51.1897%" y="869" width="0.0328%" height="15" fill="rgb(210,196,33)" fg:x="35886" fg:w="23"/><text x="51.4397%" y="879.50"></text></g><g><title>__nss_passwd_lookup (15 samples, 0.02%)</title><rect x="51.2011%" y="853" width="0.0214%" height="15" fill="rgb(229,154,42)" fg:x="35894" fg:w="15"/><text x="51.4511%" y="863.50"></text></g><g><title>__nss_passwd_lookup (15 samples, 0.02%)</title><rect x="51.2852%" y="853" width="0.0214%" height="15" fill="rgb(228,114,26)" fg:x="35953" fg:w="15"/><text x="51.5352%" y="863.50"></text></g><g><title>rocksdb::DataBlockIter::SeekImpl (179 samples, 0.26%)</title><rect x="51.0641%" y="901" width="0.2553%" height="15" fill="rgb(208,144,1)" fg:x="35798" fg:w="179"/><text x="51.3141%" y="911.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek (132 samples, 0.19%)</title><rect x="51.1312%" y="885" width="0.1883%" height="15" fill="rgb(239,112,37)" fg:x="35845" fg:w="132"/><text x="51.3812%" y="895.50"></text></g><g><title>rocksdb::DataBlockIter::NextImpl (68 samples, 0.10%)</title><rect x="51.2225%" y="869" width="0.0970%" height="15" fill="rgb(210,96,50)" fg:x="35909" fg:w="68"/><text x="51.4725%" y="879.50"></text></g><g><title>rocksdb::IterKey::EnlargeBuffer (9 samples, 0.01%)</title><rect x="51.3066%" y="853" width="0.0128%" height="15" fill="rgb(222,178,2)" fg:x="35968" fg:w="9"/><text x="51.5566%" y="863.50"></text></g><g><title>rocksdb::DataBlockIter::~DataBlockIter (15 samples, 0.02%)</title><rect x="51.3195%" y="901" width="0.0214%" height="15" fill="rgb(226,74,18)" fg:x="35977" fg:w="15"/><text x="51.5695%" y="911.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="51.3223%" y="885" width="0.0185%" height="15" fill="rgb(225,67,54)" fg:x="35979" fg:w="13"/><text x="51.5723%" y="895.50"></text></g><g><title>rocksdb::GetContext::SaveValue (17 samples, 0.02%)</title><rect x="51.3409%" y="901" width="0.0242%" height="15" fill="rgb(251,92,32)" fg:x="35992" fg:w="17"/><text x="51.5909%" y="911.50"></text></g><g><title>rocksdb::IndexBlockIter::IndexBlockIter (9 samples, 0.01%)</title><rect x="51.3651%" y="901" width="0.0128%" height="15" fill="rgb(228,149,22)" fg:x="36009" fg:w="9"/><text x="51.6151%" y="911.50"></text></g><g><title>rocksdb::IndexBlockIter::~IndexBlockIter (8 samples, 0.01%)</title><rect x="51.3822%" y="901" width="0.0114%" height="15" fill="rgb(243,54,13)" fg:x="36021" fg:w="8"/><text x="51.6322%" y="911.50"></text></g><g><title>rocksdb::Status::Status (10 samples, 0.01%)</title><rect x="51.3965%" y="901" width="0.0143%" height="15" fill="rgb(243,180,28)" fg:x="36031" fg:w="10"/><text x="51.6465%" y="911.50"></text></g><g><title>rocksdb::BlockBasedTable::Get (956 samples, 1.36%)</title><rect x="50.0585%" y="917" width="1.3637%" height="15" fill="rgb(208,167,24)" fg:x="35093" fg:w="956"/><text x="50.3085%" y="927.50"></text></g><g><title>rocksdb::Status::operator= (8 samples, 0.01%)</title><rect x="51.4108%" y="901" width="0.0114%" height="15" fill="rgb(245,73,45)" fg:x="36041" fg:w="8"/><text x="51.6608%" y="911.50"></text></g><g><title>rocksdb::TableCache::Get (999 samples, 1.43%)</title><rect x="50.0000%" y="933" width="1.4250%" height="15" fill="rgb(237,203,48)" fg:x="35052" fg:w="999"/><text x="50.2500%" y="943.50"></text></g><g><title>rocksdb::DBImpl::Get (3,162 samples, 4.51%)</title><rect x="46.9189%" y="981" width="4.5104%" height="15" fill="rgb(211,197,16)" fg:x="32892" fg:w="3162"/><text x="47.1689%" y="991.50">rocks..</text></g><g><title>rocksdb::DBImpl::GetImpl (3,156 samples, 4.50%)</title><rect x="46.9274%" y="965" width="4.5019%" height="15" fill="rgb(243,99,51)" fg:x="32898" fg:w="3156"/><text x="47.1774%" y="975.50">rocks..</text></g><g><title>rocksdb::Version::Get (1,108 samples, 1.58%)</title><rect x="49.8488%" y="949" width="1.5805%" height="15" fill="rgb(215,123,29)" fg:x="34946" fg:w="1108"/><text x="50.0988%" y="959.50"></text></g><g><title>cfree (11 samples, 0.02%)</title><rect x="52.8757%" y="965" width="0.0157%" height="15" fill="rgb(239,186,37)" fg:x="37068" fg:w="11"/><text x="53.1257%" y="975.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (22 samples, 0.03%)</title><rect x="52.8971%" y="965" width="0.0314%" height="15" fill="rgb(252,136,39)" fg:x="37083" fg:w="22"/><text x="53.1471%" y="975.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (16 samples, 0.02%)</title><rect x="52.9057%" y="949" width="0.0228%" height="15" fill="rgb(223,213,32)" fg:x="37089" fg:w="16"/><text x="53.1557%" y="959.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (61 samples, 0.09%)</title><rect x="53.1239%" y="949" width="0.0870%" height="15" fill="rgb(233,115,5)" fg:x="37242" fg:w="61"/><text x="53.3739%" y="959.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (43 samples, 0.06%)</title><rect x="53.1496%" y="933" width="0.0613%" height="15" fill="rgb(207,226,44)" fg:x="37260" fg:w="43"/><text x="53.3996%" y="943.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (18 samples, 0.03%)</title><rect x="53.1853%" y="917" width="0.0257%" height="15" fill="rgb(208,126,0)" fg:x="37285" fg:w="18"/><text x="53.4353%" y="927.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (20 samples, 0.03%)</title><rect x="53.2266%" y="933" width="0.0285%" height="15" fill="rgb(244,66,21)" fg:x="37314" fg:w="20"/><text x="53.4766%" y="943.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (12 samples, 0.02%)</title><rect x="53.2380%" y="917" width="0.0171%" height="15" fill="rgb(222,97,12)" fg:x="37322" fg:w="12"/><text x="53.4880%" y="927.50"></text></g><g><title>rocksdb::ReadableWriteBatch::GetEntryFromDataOffset (90 samples, 0.13%)</title><rect x="53.3365%" y="917" width="0.1284%" height="15" fill="rgb(219,213,19)" fg:x="37391" fg:w="90"/><text x="53.5865%" y="927.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch (87 samples, 0.12%)</title><rect x="53.3408%" y="901" width="0.1241%" height="15" fill="rgb(252,169,30)" fg:x="37394" fg:w="87"/><text x="53.5908%" y="911.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (16 samples, 0.02%)</title><rect x="53.4420%" y="885" width="0.0228%" height="15" fill="rgb(206,32,51)" fg:x="37465" fg:w="16"/><text x="53.6920%" y="895.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::MatchesKey (148 samples, 0.21%)</title><rect x="53.2552%" y="933" width="0.2111%" height="15" fill="rgb(250,172,42)" fg:x="37334" fg:w="148"/><text x="53.5052%" y="943.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::AdvanceKey (183 samples, 0.26%)</title><rect x="53.2109%" y="949" width="0.2610%" height="15" fill="rgb(209,34,43)" fg:x="37303" fg:w="183"/><text x="53.4609%" y="959.50"></text></g><g><title>[ord] (9 samples, 0.01%)</title><rect x="53.7558%" y="917" width="0.0128%" height="15" fill="rgb(223,11,35)" fg:x="37685" fg:w="9"/><text x="54.0058%" y="927.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (262 samples, 0.37%)</title><rect x="53.7073%" y="933" width="0.3737%" height="15" fill="rgb(251,219,26)" fg:x="37651" fg:w="262"/><text x="53.9573%" y="943.50"></text></g><g><title>__nss_passwd_lookup (219 samples, 0.31%)</title><rect x="53.7687%" y="917" width="0.3124%" height="15" fill="rgb(231,119,3)" fg:x="37694" fg:w="219"/><text x="54.0187%" y="927.50"></text></g><g><title>rocksdb::WBWIIteratorImpl::FindLatestUpdate (861 samples, 1.23%)</title><rect x="52.9285%" y="965" width="1.2282%" height="15" fill="rgb(216,97,11)" fg:x="37105" fg:w="861"/><text x="53.1785%" y="975.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (472 samples, 0.67%)</title><rect x="53.4834%" y="949" width="0.6733%" height="15" fill="rgb(223,59,9)" fg:x="37494" fg:w="472"/><text x="53.7334%" y="959.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (53 samples, 0.08%)</title><rect x="54.0811%" y="933" width="0.0756%" height="15" fill="rgb(233,93,31)" fg:x="37913" fg:w="53"/><text x="54.3311%" y="943.50"></text></g><g><title>[ord] (18 samples, 0.03%)</title><rect x="56.1366%" y="933" width="0.0257%" height="15" fill="rgb(239,81,33)" fg:x="39354" fg:w="18"/><text x="56.3866%" y="943.50"></text></g><g><title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (2,675 samples, 3.82%)</title><rect x="56.0211%" y="949" width="3.8158%" height="15" fill="rgb(213,120,34)" fg:x="39273" fg:w="2675"/><text x="56.2711%" y="959.50">rock..</text></g><g><title>__nss_passwd_lookup (2,576 samples, 3.67%)</title><rect x="56.1623%" y="933" width="3.6745%" height="15" fill="rgb(243,49,53)" fg:x="39372" fg:w="2576"/><text x="56.4123%" y="943.50">__ns..</text></g><g><title>rocksdb::WriteBatchEntryComparator::CompareKey (56 samples, 0.08%)</title><rect x="59.8368%" y="949" width="0.0799%" height="15" fill="rgb(247,216,33)" fg:x="41948" fg:w="56"/><text x="60.0868%" y="959.50"></text></g><g><title>rocksdb::WriteBatchEntryComparator::operator (4,038 samples, 5.76%)</title><rect x="54.1581%" y="965" width="5.7600%" height="15" fill="rgb(226,26,14)" fg:x="37967" fg:w="4038"/><text x="54.4081%" y="975.50">rocksdb..</text></g><g><title>operator new (11 samples, 0.02%)</title><rect x="59.9267%" y="949" width="0.0157%" height="15" fill="rgb(215,49,53)" fg:x="42011" fg:w="11"/><text x="60.1767%" y="959.50"></text></g><g><title>__libc_malloc (11 samples, 0.02%)</title><rect x="59.9267%" y="933" width="0.0157%" height="15" fill="rgb(245,162,40)" fg:x="42011" fg:w="11"/><text x="60.1767%" y="943.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::NewIterator (25 samples, 0.04%)</title><rect x="59.9181%" y="965" width="0.0357%" height="15" fill="rgb(229,68,17)" fg:x="42005" fg:w="25"/><text x="60.1681%" y="975.50"></text></g><g><title>rocksdb::GetColumnFamilyID (8 samples, 0.01%)</title><rect x="59.9424%" y="949" width="0.0114%" height="15" fill="rgb(213,182,10)" fg:x="42022" fg:w="8"/><text x="60.1924%" y="959.50"></text></g><g><title>__nss_passwd_lookup (15 samples, 0.02%)</title><rect x="59.9595%" y="949" width="0.0214%" height="15" fill="rgb(245,125,30)" fg:x="42034" fg:w="15"/><text x="60.2095%" y="959.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="59.9837%" y="933" width="0.0171%" height="15" fill="rgb(232,202,2)" fg:x="42051" fg:w="12"/><text x="60.2337%" y="943.50"></text></g><g><title>operator new (15 samples, 0.02%)</title><rect x="59.9809%" y="949" width="0.0214%" height="15" fill="rgb(237,140,51)" fg:x="42049" fg:w="15"/><text x="60.2309%" y="959.50"></text></g><g><title>rocksdb::WriteBatchWithIndexInternal::GetFromBatch (6,009 samples, 8.57%)</title><rect x="51.4322%" y="981" width="8.5716%" height="15" fill="rgb(236,157,25)" fg:x="36056" fg:w="6009"/><text x="51.6822%" y="991.50">rocksdb::Wri..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (35 samples, 0.05%)</title><rect x="59.9538%" y="965" width="0.0499%" height="15" fill="rgb(219,209,0)" fg:x="42030" fg:w="35"/><text x="60.2038%" y="975.50"></text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (9,216 samples, 13.15%)</title><rect x="46.8590%" y="1013" width="13.1462%" height="15" fill="rgb(240,116,54)" fg:x="32850" fg:w="9216"/><text x="47.1090%" y="1023.50">rocksdb::WriteBatchW..</text></g><g><title>rocksdb::WriteBatchWithIndex::GetFromBatchAndDB (9,208 samples, 13.13%)</title><rect x="46.8704%" y="997" width="13.1348%" height="15" fill="rgb(216,10,36)" fg:x="32858" fg:w="9208"/><text x="47.1204%" y="1007.50">rocksdb::WriteBatchW..</text></g><g><title>rocksdb::transactions::transaction::Transaction&lt;DB&gt;::get_pinned (9,364 samples, 13.36%)</title><rect x="46.6550%" y="1077" width="13.3573%" height="15" fill="rgb(222,72,44)" fg:x="32707" fg:w="9364"/><text x="46.9050%" y="1087.50">rocksdb::transaction..</text></g><g><title>rocksdb_transaction_get_pinned (9,305 samples, 13.27%)</title><rect x="46.7391%" y="1061" width="13.2731%" height="15" fill="rgb(232,159,9)" fg:x="32766" fg:w="9305"/><text x="46.9891%" y="1071.50">rocksdb_transaction_..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (9,271 samples, 13.22%)</title><rect x="46.7876%" y="1045" width="13.2246%" height="15" fill="rgb(210,39,32)" fg:x="32800" fg:w="9271"/><text x="47.0376%" y="1055.50">rocksdb::Transaction..</text></g><g><title>rocksdb::TransactionBaseImpl::Get (9,252 samples, 13.20%)</title><rect x="46.8147%" y="1029" width="13.1975%" height="15" fill="rgb(216,194,45)" fg:x="32819" fg:w="9252"/><text x="47.0647%" y="1039.50">rocksdb::Transaction..</text></g><g><title>cfree (12 samples, 0.02%)</title><rect x="60.0180%" y="1061" width="0.0171%" height="15" fill="rgb(218,18,35)" fg:x="42075" fg:w="12"/><text x="60.2680%" y="1071.50"></text></g><g><title>rocksdb_pinnableslice_destroy (21 samples, 0.03%)</title><rect x="60.0123%" y="1077" width="0.0300%" height="15" fill="rgb(207,83,51)" fg:x="42071" fg:w="21"/><text x="60.2623%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (16 samples, 0.02%)</title><rect x="60.0793%" y="1045" width="0.0228%" height="15" fill="rgb(225,63,43)" fg:x="42118" fg:w="16"/><text x="60.3293%" y="1055.50"></text></g><g><title>ord::index::Index::update (34,565 samples, 49.31%)</title><rect x="10.8011%" y="1109" width="49.3053%" height="15" fill="rgb(207,57,36)" fg:x="7572" fg:w="34565"/><text x="11.0511%" y="1119.50">ord::index::Index::update</text></g><g><title>ord::index::updater::Updater::update_index (34,565 samples, 49.31%)</title><rect x="10.8011%" y="1093" width="49.3053%" height="15" fill="rgb(216,99,33)" fg:x="7572" fg:w="34565"/><text x="11.0511%" y="1103.50">ord::index::updater::Updater::update_index</text></g><g><title>tokio::future::block_on::block_on (42 samples, 0.06%)</title><rect x="60.0465%" y="1077" width="0.0599%" height="15" fill="rgb(225,42,16)" fg:x="42095" fg:w="42"/><text x="60.2965%" y="1087.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (39 samples, 0.06%)</title><rect x="60.0508%" y="1061" width="0.0556%" height="15" fill="rgb(220,201,45)" fg:x="42098" fg:w="39"/><text x="60.3008%" y="1071.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (415 samples, 0.59%)</title><rect x="60.1093%" y="1013" width="0.5920%" height="15" fill="rgb(225,33,4)" fg:x="42139" fg:w="415"/><text x="60.3593%" y="1023.50"></text></g><g><title>jsonrpc::Response::result (486 samples, 0.69%)</title><rect x="60.1078%" y="1061" width="0.6933%" height="15" fill="rgb(224,33,50)" fg:x="42138" fg:w="486"/><text x="60.3578%" y="1071.50"></text></g><g><title>serde_json::de::from_trait (485 samples, 0.69%)</title><rect x="60.1093%" y="1045" width="0.6918%" height="15" fill="rgb(246,198,51)" fg:x="42139" fg:w="485"/><text x="60.3593%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (485 samples, 0.69%)</title><rect x="60.1093%" y="1029" width="0.6918%" height="15" fill="rgb(205,22,4)" fg:x="42139" fg:w="485"/><text x="60.3593%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (69 samples, 0.10%)</title><rect x="60.7027%" y="1013" width="0.0984%" height="15" fill="rgb(206,3,8)" fg:x="42555" fg:w="69"/><text x="60.9527%" y="1023.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::end_raw_buffering (51 samples, 0.07%)</title><rect x="60.8082%" y="965" width="0.0727%" height="15" fill="rgb(251,23,15)" fg:x="42629" fg:w="51"/><text x="61.0582%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (51 samples, 0.07%)</title><rect x="60.8082%" y="949" width="0.0727%" height="15" fill="rgb(252,88,28)" fg:x="42629" fg:w="51"/><text x="61.0582%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (51 samples, 0.07%)</title><rect x="60.8082%" y="933" width="0.0727%" height="15" fill="rgb(212,127,14)" fg:x="42629" fg:w="51"/><text x="61.0582%" y="943.50"></text></g><g><title>skb_copy_datagram_iter (51 samples, 0.07%)</title><rect x="68.0746%" y="709" width="0.0727%" height="15" fill="rgb(247,145,37)" fg:x="47723" fg:w="51"/><text x="68.3246%" y="719.50"></text></g><g><title>__skb_datagram_iter (50 samples, 0.07%)</title><rect x="68.0760%" y="693" width="0.0713%" height="15" fill="rgb(209,117,53)" fg:x="47724" fg:w="50"/><text x="68.3260%" y="703.50"></text></g><g><title>simple_copy_to_iter (50 samples, 0.07%)</title><rect x="68.0760%" y="677" width="0.0713%" height="15" fill="rgb(212,90,42)" fg:x="47724" fg:w="50"/><text x="68.3260%" y="687.50"></text></g><g><title>_copy_to_iter (46 samples, 0.07%)</title><rect x="68.0817%" y="661" width="0.0656%" height="15" fill="rgb(218,164,37)" fg:x="47728" fg:w="46"/><text x="68.3317%" y="671.50"></text></g><g><title>copy_user_enhanced_fast_string (45 samples, 0.06%)</title><rect x="68.0831%" y="645" width="0.0642%" height="15" fill="rgb(246,65,34)" fg:x="47729" fg:w="45"/><text x="68.3331%" y="655.50"></text></g><g><title>ip_queue_xmit (9 samples, 0.01%)</title><rect x="68.1502%" y="645" width="0.0128%" height="15" fill="rgb(231,100,33)" fg:x="47776" fg:w="9"/><text x="68.4002%" y="655.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.01%)</title><rect x="68.1502%" y="629" width="0.0128%" height="15" fill="rgb(228,126,14)" fg:x="47776" fg:w="9"/><text x="68.4002%" y="639.50"></text></g><g><title>ip_local_out (9 samples, 0.01%)</title><rect x="68.1502%" y="613" width="0.0128%" height="15" fill="rgb(215,173,21)" fg:x="47776" fg:w="9"/><text x="68.4002%" y="623.50"></text></g><g><title>tcp_cleanup_rbuf (12 samples, 0.02%)</title><rect x="68.1473%" y="709" width="0.0171%" height="15" fill="rgb(210,6,40)" fg:x="47774" fg:w="12"/><text x="68.3973%" y="719.50"></text></g><g><title>tcp_send_ack (11 samples, 0.02%)</title><rect x="68.1488%" y="693" width="0.0157%" height="15" fill="rgb(212,48,18)" fg:x="47775" fg:w="11"/><text x="68.3988%" y="703.50"></text></g><g><title>__tcp_send_ack.part.45 (11 samples, 0.02%)</title><rect x="68.1488%" y="677" width="0.0157%" height="15" fill="rgb(230,214,11)" fg:x="47775" fg:w="11"/><text x="68.3988%" y="687.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.02%)</title><rect x="68.1488%" y="661" width="0.0157%" height="15" fill="rgb(254,105,39)" fg:x="47775" fg:w="11"/><text x="68.3988%" y="671.50"></text></g><g><title>inet_recvmsg (77 samples, 0.11%)</title><rect x="68.0560%" y="741" width="0.1098%" height="15" fill="rgb(245,158,5)" fg:x="47710" fg:w="77"/><text x="68.3060%" y="751.50"></text></g><g><title>tcp_recvmsg (77 samples, 0.11%)</title><rect x="68.0560%" y="725" width="0.1098%" height="15" fill="rgb(249,208,11)" fg:x="47710" fg:w="77"/><text x="68.3060%" y="735.50"></text></g><g><title>sock_recvmsg (78 samples, 0.11%)</title><rect x="68.0560%" y="757" width="0.1113%" height="15" fill="rgb(210,39,28)" fg:x="47710" fg:w="78"/><text x="68.3060%" y="767.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (91 samples, 0.13%)</title><rect x="68.0432%" y="901" width="0.1298%" height="15" fill="rgb(211,56,53)" fg:x="47701" fg:w="91"/><text x="68.2932%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (91 samples, 0.13%)</title><rect x="68.0432%" y="885" width="0.1298%" height="15" fill="rgb(226,201,30)" fg:x="47701" fg:w="91"/><text x="68.2932%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (91 samples, 0.13%)</title><rect x="68.0432%" y="869" width="0.1298%" height="15" fill="rgb(239,101,34)" fg:x="47701" fg:w="91"/><text x="68.2932%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (91 samples, 0.13%)</title><rect x="68.0432%" y="853" width="0.1298%" height="15" fill="rgb(226,209,5)" fg:x="47701" fg:w="91"/><text x="68.2932%" y="863.50"></text></g><g><title>__libc_recv (91 samples, 0.13%)</title><rect x="68.0432%" y="837" width="0.1298%" height="15" fill="rgb(250,105,47)" fg:x="47701" fg:w="91"/><text x="68.2932%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (88 samples, 0.13%)</title><rect x="68.0475%" y="821" width="0.1255%" height="15" fill="rgb(230,72,3)" fg:x="47704" fg:w="88"/><text x="68.2975%" y="831.50"></text></g><g><title>do_syscall_64 (88 samples, 0.13%)</title><rect x="68.0475%" y="805" width="0.1255%" height="15" fill="rgb(232,218,39)" fg:x="47704" fg:w="88"/><text x="68.2975%" y="815.50"></text></g><g><title>__x64_sys_recvfrom (84 samples, 0.12%)</title><rect x="68.0532%" y="789" width="0.1198%" height="15" fill="rgb(248,166,6)" fg:x="47708" fg:w="84"/><text x="68.3032%" y="799.50"></text></g><g><title>__sys_recvfrom (84 samples, 0.12%)</title><rect x="68.0532%" y="773" width="0.1198%" height="15" fill="rgb(247,89,20)" fg:x="47708" fg:w="84"/><text x="68.3032%" y="783.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,737 samples, 3.90%)</title><rect x="64.2802%" y="917" width="3.9042%" height="15" fill="rgb(248,130,54)" fg:x="45063" fg:w="2737"/><text x="64.5302%" y="927.50">&lt;std..</text></g><g><title>_IO_str_seekoff (13 samples, 0.02%)</title><rect x="68.1858%" y="853" width="0.0185%" height="15" fill="rgb(234,196,4)" fg:x="47801" fg:w="13"/><text x="68.4358%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (107 samples, 0.15%)</title><rect x="68.1844%" y="917" width="0.1526%" height="15" fill="rgb(250,143,31)" fg:x="47800" fg:w="107"/><text x="68.4344%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (107 samples, 0.15%)</title><rect x="68.1844%" y="901" width="0.1526%" height="15" fill="rgb(211,110,34)" fg:x="47800" fg:w="107"/><text x="68.4344%" y="911.50"></text></g><g><title>realloc (107 samples, 0.15%)</title><rect x="68.1844%" y="885" width="0.1526%" height="15" fill="rgb(215,124,48)" fg:x="47800" fg:w="107"/><text x="68.4344%" y="895.50"></text></g><g><title>_IO_str_seekoff (106 samples, 0.15%)</title><rect x="68.1858%" y="869" width="0.1512%" height="15" fill="rgb(216,46,13)" fg:x="47801" fg:w="106"/><text x="68.4358%" y="879.50"></text></g><g><title>__nss_passwd_lookup (93 samples, 0.13%)</title><rect x="68.2044%" y="853" width="0.1327%" height="15" fill="rgb(205,184,25)" fg:x="47814" fg:w="93"/><text x="68.4544%" y="863.50"></text></g><g><title>serde_json::de::from_reader (5,285 samples, 7.54%)</title><rect x="60.8068%" y="1029" width="7.5388%" height="15" fill="rgb(228,1,10)" fg:x="42628" fg:w="5285"/><text x="61.0568%" y="1039.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (5,285 samples, 7.54%)</title><rect x="60.8068%" y="1013" width="7.5388%" height="15" fill="rgb(213,116,27)" fg:x="42628" fg:w="5285"/><text x="61.0568%" y="1023.50">&lt;&amp;mut serd..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (5,284 samples, 7.54%)</title><rect x="60.8082%" y="997" width="7.5374%" height="15" fill="rgb(241,95,50)" fg:x="42629" fg:w="5284"/><text x="61.0582%" y="1007.50">serde::de:..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (5,284 samples, 7.54%)</title><rect x="60.8082%" y="981" width="7.5374%" height="15" fill="rgb(238,48,32)" fg:x="42629" fg:w="5284"/><text x="61.0582%" y="991.50">serde_json..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (5,233 samples, 7.46%)</title><rect x="60.8810%" y="965" width="7.4646%" height="15" fill="rgb(235,113,49)" fg:x="42680" fg:w="5233"/><text x="61.1310%" y="975.50">serde_json..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::ignore_str (5,233 samples, 7.46%)</title><rect x="60.8810%" y="949" width="7.4646%" height="15" fill="rgb(205,127,43)" fg:x="42680" fg:w="5233"/><text x="61.1310%" y="959.50">&lt;serde_jso..</text></g><g><title>serde_json::read::next_or_eof (4,262 samples, 6.08%)</title><rect x="62.2661%" y="933" width="6.0795%" height="15" fill="rgb(250,162,2)" fg:x="43651" fg:w="4262"/><text x="62.5161%" y="943.50">serde_js..</text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (5,781 samples, 8.25%)</title><rect x="60.1064%" y="1077" width="8.2463%" height="15" fill="rgb(220,13,41)" fg:x="42137" fg:w="5781"/><text x="60.3564%" y="1087.50">&lt;bitcoincor..</text></g><g><title>jsonrpc::client::Client::send_request (5,294 samples, 7.55%)</title><rect x="60.8011%" y="1061" width="7.5516%" height="15" fill="rgb(249,221,25)" fg:x="42624" fg:w="5294"/><text x="61.0511%" y="1071.50">jsonrpc::c..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (5,294 samples, 7.55%)</title><rect x="60.8011%" y="1045" width="7.5516%" height="15" fill="rgb(215,208,19)" fg:x="42624" fg:w="5294"/><text x="61.0511%" y="1055.50">&lt;jsonrpc::..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (8 samples, 0.01%)</title><rect x="68.4982%" y="1045" width="0.0114%" height="15" fill="rgb(236,175,2)" fg:x="48020" fg:w="8"/><text x="68.7482%" y="1055.50"></text></g><g><title>__libc_malloc (42 samples, 0.06%)</title><rect x="68.5111%" y="1045" width="0.0599%" height="15" fill="rgb(241,52,2)" fg:x="48029" fg:w="42"/><text x="68.7611%" y="1055.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.02%)</title><rect x="68.5496%" y="1029" width="0.0214%" height="15" fill="rgb(248,140,14)" fg:x="48056" fg:w="15"/><text x="68.7996%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (10 samples, 0.01%)</title><rect x="68.6038%" y="1029" width="0.0143%" height="15" fill="rgb(253,22,42)" fg:x="48094" fg:w="10"/><text x="68.8538%" y="1039.50"></text></g><g><title>std::io::Read::read_exact (9 samples, 0.01%)</title><rect x="68.6052%" y="1013" width="0.0128%" height="15" fill="rgb(234,61,47)" fg:x="48095" fg:w="9"/><text x="68.8552%" y="1023.50"></text></g><g><title>__libc_malloc (44 samples, 0.06%)</title><rect x="68.6295%" y="997" width="0.0628%" height="15" fill="rgb(208,226,15)" fg:x="48112" fg:w="44"/><text x="68.8795%" y="1007.50"></text></g><g><title>_IO_str_seekoff (13 samples, 0.02%)</title><rect x="68.6737%" y="981" width="0.0185%" height="15" fill="rgb(217,221,4)" fg:x="48143" fg:w="13"/><text x="68.9237%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.07%)</title><rect x="68.6223%" y="1029" width="0.0713%" height="15" fill="rgb(212,174,34)" fg:x="48107" fg:w="50"/><text x="68.8723%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (48 samples, 0.07%)</title><rect x="68.6252%" y="1013" width="0.0685%" height="15" fill="rgb(253,83,4)" fg:x="48109" fg:w="48"/><text x="68.8752%" y="1023.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (387 samples, 0.55%)</title><rect x="68.5710%" y="1045" width="0.5520%" height="15" fill="rgb(250,195,49)" fg:x="48071" fg:w="387"/><text x="68.8210%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (301 samples, 0.43%)</title><rect x="68.6937%" y="1029" width="0.4294%" height="15" fill="rgb(241,192,25)" fg:x="48157" fg:w="301"/><text x="68.9437%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (297 samples, 0.42%)</title><rect x="68.6994%" y="1013" width="0.4237%" height="15" fill="rgb(208,124,10)" fg:x="48161" fg:w="297"/><text x="68.9494%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (826 samples, 1.18%)</title><rect x="68.4269%" y="1061" width="1.1782%" height="15" fill="rgb(222,33,0)" fg:x="47970" fg:w="826"/><text x="68.6769%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (338 samples, 0.48%)</title><rect x="69.1230%" y="1045" width="0.4821%" height="15" fill="rgb(234,209,28)" fg:x="48458" fg:w="338"/><text x="69.3730%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (315 samples, 0.45%)</title><rect x="69.1558%" y="1029" width="0.4493%" height="15" fill="rgb(224,11,23)" fg:x="48481" fg:w="315"/><text x="69.4058%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (10 samples, 0.01%)</title><rect x="69.6280%" y="1045" width="0.0143%" height="15" fill="rgb(232,99,1)" fg:x="48812" fg:w="10"/><text x="69.8780%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (9 samples, 0.01%)</title><rect x="69.6294%" y="1029" width="0.0128%" height="15" fill="rgb(237,95,45)" fg:x="48813" fg:w="9"/><text x="69.8794%" y="1039.50"></text></g><g><title>__libc_malloc (31 samples, 0.04%)</title><rect x="69.6422%" y="1045" width="0.0442%" height="15" fill="rgb(208,109,11)" fg:x="48822" fg:w="31"/><text x="69.8922%" y="1055.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (13 samples, 0.02%)</title><rect x="69.7236%" y="1029" width="0.0185%" height="15" fill="rgb(216,190,48)" fg:x="48879" fg:w="13"/><text x="69.9736%" y="1039.50"></text></g><g><title>std::io::Read::read_exact (10 samples, 0.01%)</title><rect x="69.7278%" y="1013" width="0.0143%" height="15" fill="rgb(251,171,36)" fg:x="48882" fg:w="10"/><text x="69.9778%" y="1023.50"></text></g><g><title>__libc_malloc (48 samples, 0.07%)</title><rect x="69.7578%" y="997" width="0.0685%" height="15" fill="rgb(230,62,22)" fg:x="48903" fg:w="48"/><text x="70.0078%" y="1007.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.02%)</title><rect x="69.8049%" y="981" width="0.0214%" height="15" fill="rgb(225,114,35)" fg:x="48936" fg:w="15"/><text x="70.0549%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.08%)</title><rect x="69.7464%" y="1029" width="0.0813%" height="15" fill="rgb(215,118,42)" fg:x="48895" fg:w="57"/><text x="69.9964%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.07%)</title><rect x="69.7535%" y="1013" width="0.0742%" height="15" fill="rgb(243,119,21)" fg:x="48900" fg:w="52"/><text x="70.0035%" y="1023.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (363 samples, 0.52%)</title><rect x="69.6865%" y="1045" width="0.5178%" height="15" fill="rgb(252,177,53)" fg:x="48853" fg:w="363"/><text x="69.9365%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (263 samples, 0.38%)</title><rect x="69.8291%" y="1029" width="0.3752%" height="15" fill="rgb(237,209,29)" fg:x="48953" fg:w="263"/><text x="70.0791%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (255 samples, 0.36%)</title><rect x="69.8405%" y="1013" width="0.3637%" height="15" fill="rgb(212,65,23)" fg:x="48961" fg:w="255"/><text x="70.0905%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (468 samples, 0.67%)</title><rect x="69.6052%" y="1061" width="0.6676%" height="15" fill="rgb(230,222,46)" fg:x="48796" fg:w="468"/><text x="69.8552%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (48 samples, 0.07%)</title><rect x="70.2043%" y="1045" width="0.0685%" height="15" fill="rgb(215,135,32)" fg:x="49216" fg:w="48"/><text x="70.4543%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (40 samples, 0.06%)</title><rect x="70.2157%" y="1029" width="0.0571%" height="15" fill="rgb(246,101,22)" fg:x="49224" fg:w="40"/><text x="70.4657%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (11 samples, 0.02%)</title><rect x="70.3070%" y="1029" width="0.0157%" height="15" fill="rgb(206,107,13)" fg:x="49288" fg:w="11"/><text x="70.5570%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (36 samples, 0.05%)</title><rect x="70.2727%" y="1061" width="0.0514%" height="15" fill="rgb(250,100,44)" fg:x="49264" fg:w="36"/><text x="70.5227%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (26 samples, 0.04%)</title><rect x="70.2870%" y="1045" width="0.0371%" height="15" fill="rgb(231,147,38)" fg:x="49274" fg:w="26"/><text x="70.5370%" y="1055.50"></text></g><g><title>_IO_str_seekoff (25 samples, 0.04%)</title><rect x="70.4025%" y="1029" width="0.0357%" height="15" fill="rgb(229,8,40)" fg:x="49355" fg:w="25"/><text x="70.6525%" y="1039.50"></text></g><g><title>__libc_calloc (79 samples, 0.11%)</title><rect x="70.3326%" y="1045" width="0.1127%" height="15" fill="rgb(221,135,30)" fg:x="49306" fg:w="79"/><text x="70.5826%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.12%)</title><rect x="70.3312%" y="1061" width="0.1170%" height="15" fill="rgb(249,193,18)" fg:x="49305" fg:w="82"/><text x="70.5812%" y="1071.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (13 samples, 0.02%)</title><rect x="70.4482%" y="1061" width="0.0185%" height="15" fill="rgb(209,133,39)" fg:x="49387" fg:w="13"/><text x="70.6982%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="70.4510%" y="1045" width="0.0157%" height="15" fill="rgb(232,100,14)" fg:x="49389" fg:w="11"/><text x="70.7010%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="70.4525%" y="1029" width="0.0143%" height="15" fill="rgb(224,185,1)" fg:x="49390" fg:w="10"/><text x="70.7025%" y="1039.50"></text></g><g><title>realloc (9 samples, 0.01%)</title><rect x="70.4539%" y="1013" width="0.0128%" height="15" fill="rgb(223,139,8)" fg:x="49391" fg:w="9"/><text x="70.7039%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (14 samples, 0.02%)</title><rect x="70.4696%" y="1061" width="0.0200%" height="15" fill="rgb(232,213,38)" fg:x="49402" fg:w="14"/><text x="70.7196%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (13 samples, 0.02%)</title><rect x="70.4710%" y="1045" width="0.0185%" height="15" fill="rgb(207,94,22)" fg:x="49403" fg:w="13"/><text x="70.7210%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1,002 samples, 1.43%)</title><rect x="70.4896%" y="1061" width="1.4293%" height="15" fill="rgb(219,183,54)" fg:x="49416" fg:w="1002"/><text x="70.7396%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (980 samples, 1.40%)</title><rect x="70.5209%" y="1045" width="1.3979%" height="15" fill="rgb(216,185,54)" fg:x="49438" fg:w="980"/><text x="70.7709%" y="1055.50"></text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (8,282 samples, 11.81%)</title><rect x="60.1064%" y="1093" width="11.8139%" height="15" fill="rgb(254,217,39)" fg:x="42137" fg:w="8282"/><text x="60.3564%" y="1103.50">bitcoincore_rpc::c..</text></g><g><title>bitcoincore_rpc::deserialize_hex (2,501 samples, 3.57%)</title><rect x="68.3527%" y="1077" width="3.5676%" height="15" fill="rgb(240,178,23)" fg:x="47918" fg:w="2501"/><text x="68.6027%" y="1087.50">bitc..</text></g><g><title>__tcp_transmit_skb (9 samples, 0.01%)</title><rect x="71.9460%" y="821" width="0.0128%" height="15" fill="rgb(218,11,47)" fg:x="50437" fg:w="9"/><text x="72.1960%" y="831.50"></text></g><g><title>ip_queue_xmit (9 samples, 0.01%)</title><rect x="71.9460%" y="805" width="0.0128%" height="15" fill="rgb(218,51,51)" fg:x="50437" fg:w="9"/><text x="72.1960%" y="815.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.01%)</title><rect x="71.9460%" y="789" width="0.0128%" height="15" fill="rgb(238,126,27)" fg:x="50437" fg:w="9"/><text x="72.1960%" y="799.50"></text></g><g><title>ip_local_out (9 samples, 0.01%)</title><rect x="71.9460%" y="773" width="0.0128%" height="15" fill="rgb(249,202,22)" fg:x="50437" fg:w="9"/><text x="72.1960%" y="783.50"></text></g><g><title>ip_output (8 samples, 0.01%)</title><rect x="71.9474%" y="757" width="0.0114%" height="15" fill="rgb(254,195,49)" fg:x="50438" fg:w="8"/><text x="72.1974%" y="767.50"></text></g><g><title>ord::index::updater::Updater::get_block_with_retries (8,310 samples, 11.85%)</title><rect x="60.1064%" y="1109" width="11.8538%" height="15" fill="rgb(208,123,14)" fg:x="42137" fg:w="8310"/><text x="60.3564%" y="1119.50">ord::index::update..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (28 samples, 0.04%)</title><rect x="71.9203%" y="1093" width="0.0399%" height="15" fill="rgb(224,200,8)" fg:x="50419" fg:w="28"/><text x="72.1703%" y="1103.50"></text></g><g><title>jsonrpc::client::Client::send_request (21 samples, 0.03%)</title><rect x="71.9303%" y="1077" width="0.0300%" height="15" fill="rgb(217,61,36)" fg:x="50426" fg:w="21"/><text x="72.1803%" y="1087.50"></text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (21 samples, 0.03%)</title><rect x="71.9303%" y="1061" width="0.0300%" height="15" fill="rgb(206,35,45)" fg:x="50426" fg:w="21"/><text x="72.1803%" y="1071.50"></text></g><g><title>std::net::udp::UdpSocket::send (12 samples, 0.02%)</title><rect x="71.9431%" y="1045" width="0.0171%" height="15" fill="rgb(217,65,33)" fg:x="50435" fg:w="12"/><text x="72.1931%" y="1055.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (12 samples, 0.02%)</title><rect x="71.9431%" y="1029" width="0.0171%" height="15" fill="rgb(222,158,48)" fg:x="50435" fg:w="12"/><text x="72.1931%" y="1039.50"></text></g><g><title>__libc_send (12 samples, 0.02%)</title><rect x="71.9431%" y="1013" width="0.0171%" height="15" fill="rgb(254,2,54)" fg:x="50435" fg:w="12"/><text x="72.1931%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="71.9431%" y="997" width="0.0171%" height="15" fill="rgb(250,143,38)" fg:x="50435" fg:w="12"/><text x="72.1931%" y="1007.50"></text></g><g><title>do_syscall_64 (12 samples, 0.02%)</title><rect x="71.9431%" y="981" width="0.0171%" height="15" fill="rgb(248,25,0)" fg:x="50435" fg:w="12"/><text x="72.1931%" y="991.50"></text></g><g><title>__x64_sys_sendto (11 samples, 0.02%)</title><rect x="71.9445%" y="965" width="0.0157%" height="15" fill="rgb(206,152,27)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="975.50"></text></g><g><title>__sys_sendto (11 samples, 0.02%)</title><rect x="71.9445%" y="949" width="0.0157%" height="15" fill="rgb(240,77,30)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="959.50"></text></g><g><title>sock_sendmsg (11 samples, 0.02%)</title><rect x="71.9445%" y="933" width="0.0157%" height="15" fill="rgb(231,5,3)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="943.50"></text></g><g><title>inet_sendmsg (11 samples, 0.02%)</title><rect x="71.9445%" y="917" width="0.0157%" height="15" fill="rgb(207,226,32)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="927.50"></text></g><g><title>tcp_sendmsg (11 samples, 0.02%)</title><rect x="71.9445%" y="901" width="0.0157%" height="15" fill="rgb(222,207,47)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="911.50"></text></g><g><title>tcp_sendmsg_locked (11 samples, 0.02%)</title><rect x="71.9445%" y="885" width="0.0157%" height="15" fill="rgb(229,115,45)" fg:x="50436" fg:w="11"/><text x="72.1945%" y="895.50"></text></g><g><title>tcp_push (10 samples, 0.01%)</title><rect x="71.9460%" y="869" width="0.0143%" height="15" fill="rgb(224,191,6)" fg:x="50437" fg:w="10"/><text x="72.1960%" y="879.50"></text></g><g><title>__tcp_push_pending_frames (10 samples, 0.01%)</title><rect x="71.9460%" y="853" width="0.0143%" height="15" fill="rgb(230,227,24)" fg:x="50437" fg:w="10"/><text x="72.1960%" y="863.50"></text></g><g><title>tcp_write_xmit (10 samples, 0.01%)</title><rect x="71.9460%" y="837" width="0.0143%" height="15" fill="rgb(228,80,19)" fg:x="50437" fg:w="10"/><text x="72.1960%" y="847.50"></text></g><g><title>__rust_dealloc (16 samples, 0.02%)</title><rect x="72.0287%" y="1061" width="0.0228%" height="15" fill="rgb(247,229,0)" fg:x="50495" fg:w="16"/><text x="72.2787%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (605 samples, 0.86%)</title><rect x="71.9916%" y="1077" width="0.8630%" height="15" fill="rgb(237,194,15)" fg:x="50469" fg:w="605"/><text x="72.2416%" y="1087.50"></text></g><g><title>cfree (563 samples, 0.80%)</title><rect x="72.0515%" y="1061" width="0.8031%" height="15" fill="rgb(219,203,20)" fg:x="50511" fg:w="563"/><text x="72.3015%" y="1071.50"></text></g><g><title>_IO_str_seekoff (210 samples, 0.30%)</title><rect x="72.5551%" y="1045" width="0.2996%" height="15" fill="rgb(234,128,8)" fg:x="50864" fg:w="210"/><text x="72.8051%" y="1055.50"></text></g><g><title>_IO_str_seekoff (16 samples, 0.02%)</title><rect x="72.8874%" y="853" width="0.0228%" height="15" fill="rgb(248,202,8)" fg:x="51097" fg:w="16"/><text x="73.1374%" y="863.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.02%)</title><rect x="72.8946%" y="837" width="0.0157%" height="15" fill="rgb(206,104,37)" fg:x="51102" fg:w="11"/><text x="73.1446%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.03%)</title><rect x="72.8860%" y="1045" width="0.0257%" height="15" fill="rgb(223,8,27)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.03%)</title><rect x="72.8860%" y="1029" width="0.0257%" height="15" fill="rgb(216,217,28)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.03%)</title><rect x="72.8860%" y="1013" width="0.0257%" height="15" fill="rgb(249,199,1)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.03%)</title><rect x="72.8860%" y="997" width="0.0257%" height="15" fill="rgb(240,85,17)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.03%)</title><rect x="72.8860%" y="981" width="0.0257%" height="15" fill="rgb(206,108,45)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.03%)</title><rect x="72.8860%" y="965" width="0.0257%" height="15" fill="rgb(245,210,41)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.03%)</title><rect x="72.8860%" y="949" width="0.0257%" height="15" fill="rgb(206,13,37)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.03%)</title><rect x="72.8860%" y="933" width="0.0257%" height="15" fill="rgb(250,61,18)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.03%)</title><rect x="72.8860%" y="917" width="0.0257%" height="15" fill="rgb(235,172,48)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.03%)</title><rect x="72.8860%" y="901" width="0.0257%" height="15" fill="rgb(249,201,17)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="911.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.03%)</title><rect x="72.8860%" y="885" width="0.0257%" height="15" fill="rgb(219,208,6)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="895.50"></text></g><g><title>__libc_malloc (18 samples, 0.03%)</title><rect x="72.8860%" y="869" width="0.0257%" height="15" fill="rgb(248,31,23)" fg:x="51096" fg:w="18"/><text x="73.1360%" y="879.50"></text></g><g><title>__nss_passwd_lookup (225 samples, 0.32%)</title><rect x="72.9117%" y="1029" width="0.3210%" height="15" fill="rgb(245,15,42)" fg:x="51114" fg:w="225"/><text x="73.1617%" y="1039.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.01%)</title><rect x="73.2369%" y="965" width="0.0143%" height="15" fill="rgb(222,217,39)" fg:x="51342" fg:w="10"/><text x="73.4869%" y="975.50"></text></g><g><title>_IO_str_seekoff (232 samples, 0.33%)</title><rect x="73.2369%" y="981" width="0.3309%" height="15" fill="rgb(210,219,27)" fg:x="51342" fg:w="232"/><text x="73.4869%" y="991.50"></text></g><g><title>__nss_passwd_lookup (222 samples, 0.32%)</title><rect x="73.2512%" y="965" width="0.3167%" height="15" fill="rgb(252,166,36)" fg:x="51352" fg:w="222"/><text x="73.5012%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (464 samples, 0.66%)</title><rect x="72.9117%" y="1045" width="0.6619%" height="15" fill="rgb(245,132,34)" fg:x="51114" fg:w="464"/><text x="73.1617%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 samples, 0.34%)</title><rect x="73.2326%" y="1029" width="0.3409%" height="15" fill="rgb(236,54,3)" fg:x="51339" fg:w="239"/><text x="73.4826%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (239 samples, 0.34%)</title><rect x="73.2326%" y="1013" width="0.3409%" height="15" fill="rgb(241,173,43)" fg:x="51339" fg:w="239"/><text x="73.4826%" y="1023.50"></text></g><g><title>realloc (239 samples, 0.34%)</title><rect x="73.2326%" y="997" width="0.3409%" height="15" fill="rgb(215,190,9)" fg:x="51339" fg:w="239"/><text x="73.4826%" y="1007.50"></text></g><g><title>syscall (28 samples, 0.04%)</title><rect x="73.6121%" y="949" width="0.0399%" height="15" fill="rgb(242,101,16)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.04%)</title><rect x="73.6121%" y="933" width="0.0399%" height="15" fill="rgb(223,190,21)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="943.50"></text></g><g><title>do_syscall_64 (28 samples, 0.04%)</title><rect x="73.6121%" y="917" width="0.0399%" height="15" fill="rgb(215,228,25)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="927.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.04%)</title><rect x="73.6121%" y="901" width="0.0399%" height="15" fill="rgb(225,36,22)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="911.50"></text></g><g><title>do_futex (28 samples, 0.04%)</title><rect x="73.6121%" y="885" width="0.0399%" height="15" fill="rgb(251,106,46)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="895.50"></text></g><g><title>futex_wake (28 samples, 0.04%)</title><rect x="73.6121%" y="869" width="0.0399%" height="15" fill="rgb(208,90,1)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="879.50"></text></g><g><title>wake_up_q (28 samples, 0.04%)</title><rect x="73.6121%" y="853" width="0.0399%" height="15" fill="rgb(243,10,4)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="863.50"></text></g><g><title>try_to_wake_up (28 samples, 0.04%)</title><rect x="73.6121%" y="837" width="0.0399%" height="15" fill="rgb(212,137,27)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="847.50"></text></g><g><title>__lock_text_start (28 samples, 0.04%)</title><rect x="73.6121%" y="821" width="0.0399%" height="15" fill="rgb(231,220,49)" fg:x="51605" fg:w="28"/><text x="73.8621%" y="831.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (54 samples, 0.08%)</title><rect x="73.5835%" y="997" width="0.0770%" height="15" fill="rgb(237,96,20)" fg:x="51585" fg:w="54"/><text x="73.8335%" y="1007.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (36 samples, 0.05%)</title><rect x="73.6092%" y="981" width="0.0514%" height="15" fill="rgb(239,229,30)" fg:x="51603" fg:w="36"/><text x="73.8592%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (35 samples, 0.05%)</title><rect x="73.6106%" y="965" width="0.0499%" height="15" fill="rgb(219,65,33)" fg:x="51604" fg:w="35"/><text x="73.8606%" y="975.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (63 samples, 0.09%)</title><rect x="73.5750%" y="1045" width="0.0899%" height="15" fill="rgb(243,134,7)" fg:x="51579" fg:w="63"/><text x="73.8250%" y="1055.50"></text></g><g><title>hyper::body::body::Body::poll_inner (60 samples, 0.09%)</title><rect x="73.5793%" y="1029" width="0.0856%" height="15" fill="rgb(216,177,54)" fg:x="51582" fg:w="60"/><text x="73.8293%" y="1039.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (57 samples, 0.08%)</title><rect x="73.5835%" y="1013" width="0.0813%" height="15" fill="rgb(211,160,20)" fg:x="51585" fg:w="57"/><text x="73.8335%" y="1023.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.03%)</title><rect x="73.7019%" y="965" width="0.0314%" height="15" fill="rgb(239,85,39)" fg:x="51668" fg:w="22"/><text x="73.9519%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (23 samples, 0.03%)</title><rect x="73.7019%" y="981" width="0.0328%" height="15" fill="rgb(232,125,22)" fg:x="51668" fg:w="23"/><text x="73.9519%" y="991.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (27 samples, 0.04%)</title><rect x="73.6976%" y="1013" width="0.0385%" height="15" fill="rgb(244,57,34)" fg:x="51665" fg:w="27"/><text x="73.9476%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (24 samples, 0.03%)</title><rect x="73.7019%" y="997" width="0.0342%" height="15" fill="rgb(214,203,32)" fg:x="51668" fg:w="24"/><text x="73.9519%" y="1007.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (9 samples, 0.01%)</title><rect x="73.7390%" y="1013" width="0.0128%" height="15" fill="rgb(207,58,43)" fg:x="51694" fg:w="9"/><text x="73.9890%" y="1023.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.01%)</title><rect x="73.7519%" y="1013" width="0.0143%" height="15" fill="rgb(215,193,15)" fg:x="51703" fg:w="10"/><text x="74.0019%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="73.7804%" y="1013" width="0.0143%" height="15" fill="rgb(232,15,44)" fg:x="51723" fg:w="10"/><text x="74.0304%" y="1023.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="73.7804%" y="997" width="0.0143%" height="15" fill="rgb(212,3,48)" fg:x="51723" fg:w="10"/><text x="74.0304%" y="1007.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (14 samples, 0.02%)</title><rect x="73.7946%" y="1013" width="0.0200%" height="15" fill="rgb(218,128,7)" fg:x="51733" fg:w="14"/><text x="74.0446%" y="1023.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.02%)</title><rect x="73.8260%" y="901" width="0.0242%" height="15" fill="rgb(226,216,39)" fg:x="51755" fg:w="17"/><text x="74.0760%" y="911.50"></text></g><g><title>do_futex (17 samples, 0.02%)</title><rect x="73.8260%" y="885" width="0.0242%" height="15" fill="rgb(243,47,51)" fg:x="51755" fg:w="17"/><text x="74.0760%" y="895.50"></text></g><g><title>futex_wake (17 samples, 0.02%)</title><rect x="73.8260%" y="869" width="0.0242%" height="15" fill="rgb(241,183,40)" fg:x="51755" fg:w="17"/><text x="74.0760%" y="879.50"></text></g><g><title>wake_up_q (16 samples, 0.02%)</title><rect x="73.8275%" y="853" width="0.0228%" height="15" fill="rgb(231,217,32)" fg:x="51756" fg:w="16"/><text x="74.0775%" y="863.50"></text></g><g><title>try_to_wake_up (16 samples, 0.02%)</title><rect x="73.8275%" y="837" width="0.0228%" height="15" fill="rgb(229,61,38)" fg:x="51756" fg:w="16"/><text x="74.0775%" y="847.50"></text></g><g><title>__lock_text_start (16 samples, 0.02%)</title><rect x="73.8275%" y="821" width="0.0228%" height="15" fill="rgb(225,210,5)" fg:x="51756" fg:w="16"/><text x="74.0775%" y="831.50"></text></g><g><title>syscall (21 samples, 0.03%)</title><rect x="73.8246%" y="949" width="0.0300%" height="15" fill="rgb(231,79,45)" fg:x="51754" fg:w="21"/><text x="74.0746%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.03%)</title><rect x="73.8260%" y="933" width="0.0285%" height="15" fill="rgb(224,100,7)" fg:x="51755" fg:w="20"/><text x="74.0760%" y="943.50"></text></g><g><title>do_syscall_64 (20 samples, 0.03%)</title><rect x="73.8260%" y="917" width="0.0285%" height="15" fill="rgb(241,198,18)" fg:x="51755" fg:w="20"/><text x="74.0760%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (35 samples, 0.05%)</title><rect x="73.8246%" y="965" width="0.0499%" height="15" fill="rgb(252,97,53)" fg:x="51754" fg:w="35"/><text x="74.0746%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.02%)</title><rect x="73.8574%" y="949" width="0.0171%" height="15" fill="rgb(220,88,7)" fg:x="51777" fg:w="12"/><text x="74.1074%" y="959.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (10 samples, 0.01%)</title><rect x="73.8603%" y="933" width="0.0143%" height="15" fill="rgb(213,176,14)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="943.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (10 samples, 0.01%)</title><rect x="73.8603%" y="917" width="0.0143%" height="15" fill="rgb(246,73,7)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::write (10 samples, 0.01%)</title><rect x="73.8603%" y="901" width="0.0143%" height="15" fill="rgb(245,64,36)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (10 samples, 0.01%)</title><rect x="73.8603%" y="885" width="0.0143%" height="15" fill="rgb(245,80,10)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="895.50"></text></g><g><title>__libc_write (10 samples, 0.01%)</title><rect x="73.8603%" y="869" width="0.0143%" height="15" fill="rgb(232,107,50)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.01%)</title><rect x="73.8603%" y="853" width="0.0143%" height="15" fill="rgb(253,3,0)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="863.50"></text></g><g><title>do_syscall_64 (10 samples, 0.01%)</title><rect x="73.8603%" y="837" width="0.0143%" height="15" fill="rgb(212,99,53)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="847.50"></text></g><g><title>__x64_sys_write (10 samples, 0.01%)</title><rect x="73.8603%" y="821" width="0.0143%" height="15" fill="rgb(249,111,54)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="831.50"></text></g><g><title>ksys_write (10 samples, 0.01%)</title><rect x="73.8603%" y="805" width="0.0143%" height="15" fill="rgb(249,55,30)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="815.50"></text></g><g><title>vfs_write (10 samples, 0.01%)</title><rect x="73.8603%" y="789" width="0.0143%" height="15" fill="rgb(237,47,42)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="799.50"></text></g><g><title>__vfs_write (10 samples, 0.01%)</title><rect x="73.8603%" y="773" width="0.0143%" height="15" fill="rgb(211,20,18)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="783.50"></text></g><g><title>eventfd_write (10 samples, 0.01%)</title><rect x="73.8603%" y="757" width="0.0143%" height="15" fill="rgb(231,203,46)" fg:x="51779" fg:w="10"/><text x="74.1103%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (36 samples, 0.05%)</title><rect x="73.8246%" y="981" width="0.0514%" height="15" fill="rgb(237,142,3)" fg:x="51754" fg:w="36"/><text x="74.0746%" y="991.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (41 samples, 0.06%)</title><rect x="73.8232%" y="1013" width="0.0585%" height="15" fill="rgb(241,107,1)" fg:x="51753" fg:w="41"/><text x="74.0732%" y="1023.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (41 samples, 0.06%)</title><rect x="73.8232%" y="997" width="0.0585%" height="15" fill="rgb(229,83,13)" fg:x="51753" fg:w="41"/><text x="74.0732%" y="1007.50"></text></g><g><title>__vfs_write (23 samples, 0.03%)</title><rect x="73.8916%" y="789" width="0.0328%" height="15" fill="rgb(241,91,40)" fg:x="51801" fg:w="23"/><text x="74.1416%" y="799.50"></text></g><g><title>eventfd_write (23 samples, 0.03%)</title><rect x="73.8916%" y="773" width="0.0328%" height="15" fill="rgb(225,3,45)" fg:x="51801" fg:w="23"/><text x="74.1416%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (29 samples, 0.04%)</title><rect x="73.8845%" y="981" width="0.0414%" height="15" fill="rgb(244,223,14)" fg:x="51796" fg:w="29"/><text x="74.1345%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (27 samples, 0.04%)</title><rect x="73.8874%" y="965" width="0.0385%" height="15" fill="rgb(224,124,37)" fg:x="51798" fg:w="27"/><text x="74.1374%" y="975.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (25 samples, 0.04%)</title><rect x="73.8902%" y="949" width="0.0357%" height="15" fill="rgb(251,171,30)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="959.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (25 samples, 0.04%)</title><rect x="73.8902%" y="933" width="0.0357%" height="15" fill="rgb(236,46,54)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::write (25 samples, 0.04%)</title><rect x="73.8902%" y="917" width="0.0357%" height="15" fill="rgb(245,213,5)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (25 samples, 0.04%)</title><rect x="73.8902%" y="901" width="0.0357%" height="15" fill="rgb(230,144,27)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="911.50"></text></g><g><title>__libc_write (25 samples, 0.04%)</title><rect x="73.8902%" y="885" width="0.0357%" height="15" fill="rgb(220,86,6)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.04%)</title><rect x="73.8902%" y="869" width="0.0357%" height="15" fill="rgb(240,20,13)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="879.50"></text></g><g><title>do_syscall_64 (25 samples, 0.04%)</title><rect x="73.8902%" y="853" width="0.0357%" height="15" fill="rgb(217,89,34)" fg:x="51800" fg:w="25"/><text x="74.1402%" y="863.50"></text></g><g><title>__x64_sys_write (24 samples, 0.03%)</title><rect x="73.8916%" y="837" width="0.0342%" height="15" fill="rgb(229,13,5)" fg:x="51801" fg:w="24"/><text x="74.1416%" y="847.50"></text></g><g><title>ksys_write (24 samples, 0.03%)</title><rect x="73.8916%" y="821" width="0.0342%" height="15" fill="rgb(244,67,35)" fg:x="51801" fg:w="24"/><text x="74.1416%" y="831.50"></text></g><g><title>vfs_write (24 samples, 0.03%)</title><rect x="73.8916%" y="805" width="0.0342%" height="15" fill="rgb(221,40,2)" fg:x="51801" fg:w="24"/><text x="74.1416%" y="815.50"></text></g><g><title>tokio::runtime::context::current::with_current (41 samples, 0.06%)</title><rect x="73.8817%" y="1013" width="0.0585%" height="15" fill="rgb(237,157,21)" fg:x="51794" fg:w="41"/><text x="74.1317%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (41 samples, 0.06%)</title><rect x="73.8817%" y="997" width="0.0585%" height="15" fill="rgb(222,94,11)" fg:x="51794" fg:w="41"/><text x="74.1317%" y="1007.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (10 samples, 0.01%)</title><rect x="73.9259%" y="981" width="0.0143%" height="15" fill="rgb(249,113,6)" fg:x="51825" fg:w="10"/><text x="74.1759%" y="991.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (195 samples, 0.28%)</title><rect x="73.6648%" y="1045" width="0.2782%" height="15" fill="rgb(238,137,36)" fg:x="51642" fg:w="195"/><text x="73.9148%" y="1055.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (192 samples, 0.27%)</title><rect x="73.6691%" y="1029" width="0.2739%" height="15" fill="rgb(210,102,26)" fg:x="51645" fg:w="192"/><text x="73.9191%" y="1039.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.02%)</title><rect x="73.9886%" y="869" width="0.0157%" height="15" fill="rgb(218,30,30)" fg:x="51869" fg:w="11"/><text x="74.2386%" y="879.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 0.05%)</title><rect x="73.9573%" y="981" width="0.0499%" height="15" fill="rgb(214,67,26)" fg:x="51847" fg:w="35"/><text x="74.2073%" y="991.50"></text></g><g><title>serde_json::ser::format_escaped_str (34 samples, 0.05%)</title><rect x="73.9587%" y="965" width="0.0485%" height="15" fill="rgb(251,9,53)" fg:x="51848" fg:w="34"/><text x="74.2087%" y="975.50"></text></g><g><title>std::io::Write::write_all (18 samples, 0.03%)</title><rect x="73.9815%" y="949" width="0.0257%" height="15" fill="rgb(228,204,25)" fg:x="51864" fg:w="18"/><text x="74.2315%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="73.9829%" y="933" width="0.0242%" height="15" fill="rgb(207,153,8)" fg:x="51865" fg:w="17"/><text x="74.2329%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="73.9829%" y="917" width="0.0242%" height="15" fill="rgb(242,9,16)" fg:x="51865" fg:w="17"/><text x="74.2329%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="73.9844%" y="901" width="0.0228%" height="15" fill="rgb(217,211,10)" fg:x="51866" fg:w="16"/><text x="74.2344%" y="911.50"></text></g><g><title>realloc (16 samples, 0.02%)</title><rect x="73.9844%" y="885" width="0.0228%" height="15" fill="rgb(219,228,52)" fg:x="51866" fg:w="16"/><text x="74.2344%" y="895.50"></text></g><g><title>serde::ser::Serializer::collect_seq (36 samples, 0.05%)</title><rect x="73.9573%" y="997" width="0.0514%" height="15" fill="rgb(231,92,29)" fg:x="51847" fg:w="36"/><text x="74.2073%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.01%)</title><rect x="74.0229%" y="965" width="0.0128%" height="15" fill="rgb(232,8,23)" fg:x="51893" fg:w="9"/><text x="74.2729%" y="975.50"></text></g><g><title>serde_json::ser::format_escaped_str (23 samples, 0.03%)</title><rect x="74.0086%" y="997" width="0.0328%" height="15" fill="rgb(216,211,34)" fg:x="51883" fg:w="23"/><text x="74.2586%" y="1007.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.02%)</title><rect x="74.0215%" y="981" width="0.0200%" height="15" fill="rgb(236,151,0)" fg:x="51892" fg:w="14"/><text x="74.2715%" y="991.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.01%)</title><rect x="74.0429%" y="981" width="0.0128%" height="15" fill="rgb(209,168,3)" fg:x="51907" fg:w="9"/><text x="74.2929%" y="991.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.02%)</title><rect x="74.0414%" y="997" width="0.0171%" height="15" fill="rgb(208,129,28)" fg:x="51906" fg:w="12"/><text x="74.2914%" y="1007.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (94 samples, 0.13%)</title><rect x="73.9430%" y="1013" width="0.1341%" height="15" fill="rgb(229,78,22)" fg:x="51837" fg:w="94"/><text x="74.1930%" y="1023.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.02%)</title><rect x="74.0585%" y="997" width="0.0185%" height="15" fill="rgb(228,187,13)" fg:x="51918" fg:w="13"/><text x="74.3085%" y="1007.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (96 samples, 0.14%)</title><rect x="73.9430%" y="1045" width="0.1369%" height="15" fill="rgb(240,119,24)" fg:x="51837" fg:w="96"/><text x="74.1930%" y="1055.50"></text></g><g><title>serde::ser::Serializer::collect_seq (96 samples, 0.14%)</title><rect x="73.9430%" y="1029" width="0.1369%" height="15" fill="rgb(209,194,42)" fg:x="51837" fg:w="96"/><text x="74.1930%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (30 samples, 0.04%)</title><rect x="74.1042%" y="1013" width="0.0428%" height="15" fill="rgb(247,200,46)" fg:x="51950" fg:w="30"/><text x="74.3542%" y="1023.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::collect_str (56 samples, 0.08%)</title><rect x="74.0799%" y="1045" width="0.0799%" height="15" fill="rgb(218,76,16)" fg:x="51933" fg:w="56"/><text x="74.3299%" y="1055.50"></text></g><g><title>bitcoin_private::hex::display::DisplayArray&lt;A,B&gt;::display (55 samples, 0.08%)</title><rect x="74.0814%" y="1029" width="0.0785%" height="15" fill="rgb(225,21,48)" fg:x="51934" fg:w="55"/><text x="74.3314%" y="1039.50"></text></g><g><title>_IO_str_seekoff (30 samples, 0.04%)</title><rect x="74.1926%" y="1029" width="0.0428%" height="15" fill="rgb(239,223,50)" fg:x="52012" fg:w="30"/><text x="74.4426%" y="1039.50"></text></g><g><title>__libc_malloc (55 samples, 0.08%)</title><rect x="74.1598%" y="1045" width="0.0785%" height="15" fill="rgb(244,45,21)" fg:x="51989" fg:w="55"/><text x="74.4098%" y="1055.50"></text></g><g><title>__libc_malloc (10 samples, 0.01%)</title><rect x="74.2697%" y="1029" width="0.0143%" height="15" fill="rgb(232,33,43)" fg:x="52066" fg:w="10"/><text x="74.5197%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (30 samples, 0.04%)</title><rect x="74.2468%" y="1045" width="0.0428%" height="15" fill="rgb(209,8,3)" fg:x="52050" fg:w="30"/><text x="74.4968%" y="1055.50"></text></g><g><title>apic_timer_interrupt (8 samples, 0.01%)</title><rect x="83.6400%" y="981" width="0.0114%" height="15" fill="rgb(214,25,53)" fg:x="58635" fg:w="8"/><text x="83.8900%" y="991.50"></text></g><g><title>smp_apic_timer_interrupt (8 samples, 0.01%)</title><rect x="83.6400%" y="965" width="0.0114%" height="15" fill="rgb(254,186,54)" fg:x="58635" fg:w="8"/><text x="83.8900%" y="975.50"></text></g><g><title>irq_exit (8 samples, 0.01%)</title><rect x="83.6400%" y="949" width="0.0114%" height="15" fill="rgb(208,174,49)" fg:x="58635" fg:w="8"/><text x="83.8900%" y="959.50"></text></g><g><title>__softirqentry_text_start (8 samples, 0.01%)</title><rect x="83.6400%" y="933" width="0.0114%" height="15" fill="rgb(233,191,51)" fg:x="58635" fg:w="8"/><text x="83.8900%" y="943.50"></text></g><g><title>ret_from_intr (9 samples, 0.01%)</title><rect x="91.0134%" y="965" width="0.0128%" height="15" fill="rgb(222,134,10)" fg:x="63804" fg:w="9"/><text x="91.2634%" y="975.50"></text></g><g><title>do_IRQ (9 samples, 0.01%)</title><rect x="91.0134%" y="949" width="0.0128%" height="15" fill="rgb(230,226,20)" fg:x="63804" fg:w="9"/><text x="91.2634%" y="959.50"></text></g><g><title>irq_exit (9 samples, 0.01%)</title><rect x="91.0134%" y="933" width="0.0128%" height="15" fill="rgb(251,111,25)" fg:x="63804" fg:w="9"/><text x="91.2634%" y="943.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.01%)</title><rect x="91.0134%" y="917" width="0.0128%" height="15" fill="rgb(224,40,46)" fg:x="63804" fg:w="9"/><text x="91.2634%" y="927.50"></text></g><g><title>hex::val (5,174 samples, 7.38%)</title><rect x="83.6514%" y="981" width="7.3805%" height="15" fill="rgb(236,108,47)" fg:x="58643" fg:w="5174"/><text x="83.9014%" y="991.50">hex::val</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,389 samples, 14.82%)</title><rect x="76.2182%" y="997" width="14.8194%" height="15" fill="rgb(234,93,0)" fg:x="53432" fg:w="10389"/><text x="76.4682%" y="1007.50">&lt;core::iter::adapters::..</text></g><g><title>__libc_malloc (11 samples, 0.02%)</title><rect x="91.0376%" y="997" width="0.0157%" height="15" fill="rgb(224,213,32)" fg:x="63821" fg:w="11"/><text x="91.2876%" y="1007.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.01%)</title><rect x="91.0405%" y="981" width="0.0128%" height="15" fill="rgb(251,11,48)" fg:x="63823" fg:w="9"/><text x="91.2905%" y="991.50"></text></g><g><title>_IO_str_seekoff (67 samples, 0.10%)</title><rect x="91.1460%" y="933" width="0.0956%" height="15" fill="rgb(236,173,5)" fg:x="63897" fg:w="67"/><text x="91.3960%" y="943.50"></text></g><g><title>_IO_str_seekoff (108 samples, 0.15%)</title><rect x="91.1303%" y="949" width="0.1541%" height="15" fill="rgb(230,95,12)" fg:x="63886" fg:w="108"/><text x="91.3803%" y="959.50"></text></g><g><title>__nss_passwd_lookup (30 samples, 0.04%)</title><rect x="91.2416%" y="933" width="0.0428%" height="15" fill="rgb(232,209,1)" fg:x="63964" fg:w="30"/><text x="91.4916%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (162 samples, 0.23%)</title><rect x="91.0547%" y="997" width="0.2311%" height="15" fill="rgb(232,6,1)" fg:x="63833" fg:w="162"/><text x="91.3047%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 samples, 0.22%)</title><rect x="91.0647%" y="981" width="0.2211%" height="15" fill="rgb(210,224,50)" fg:x="63840" fg:w="155"/><text x="91.3147%" y="991.50"></text></g><g><title>realloc (148 samples, 0.21%)</title><rect x="91.0747%" y="965" width="0.2111%" height="15" fill="rgb(228,127,35)" fg:x="63847" fg:w="148"/><text x="91.3247%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (11,906 samples, 16.98%)</title><rect x="74.3153%" y="1013" width="16.9833%" height="15" fill="rgb(245,102,45)" fg:x="52098" fg:w="11906"/><text x="74.5653%" y="1023.50">&lt;alloc::vec::Vec&lt;u8&gt; as he..</text></g><g><title>__libc_malloc (19 samples, 0.03%)</title><rect x="91.3999%" y="981" width="0.0271%" height="15" fill="rgb(214,1,49)" fg:x="64075" fg:w="19"/><text x="91.6499%" y="991.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.02%)</title><rect x="91.4056%" y="965" width="0.0214%" height="15" fill="rgb(226,163,40)" fg:x="64079" fg:w="15"/><text x="91.6556%" y="975.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (16 samples, 0.02%)</title><rect x="91.4270%" y="981" width="0.0228%" height="15" fill="rgb(239,212,28)" fg:x="64094" fg:w="16"/><text x="91.6770%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="91.4342%" y="965" width="0.0157%" height="15" fill="rgb(220,20,13)" fg:x="64099" fg:w="11"/><text x="91.6842%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="91.4342%" y="949" width="0.0157%" height="15" fill="rgb(210,164,35)" fg:x="64099" fg:w="11"/><text x="91.6842%" y="959.50"></text></g><g><title>__libc_malloc (11 samples, 0.02%)</title><rect x="91.4342%" y="933" width="0.0157%" height="15" fill="rgb(248,109,41)" fg:x="64099" fg:w="11"/><text x="91.6842%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (82 samples, 0.12%)</title><rect x="91.3343%" y="997" width="0.1170%" height="15" fill="rgb(238,23,50)" fg:x="64029" fg:w="82"/><text x="91.5843%" y="1007.50"></text></g><g><title>__libc_malloc (28 samples, 0.04%)</title><rect x="91.6767%" y="981" width="0.0399%" height="15" fill="rgb(211,48,49)" fg:x="64269" fg:w="28"/><text x="91.9267%" y="991.50"></text></g><g><title>_IO_str_seekoff (21 samples, 0.03%)</title><rect x="91.6866%" y="965" width="0.0300%" height="15" fill="rgb(223,36,21)" fg:x="64276" fg:w="21"/><text x="91.9366%" y="975.50"></text></g><g><title>__nss_passwd_lookup (52 samples, 0.07%)</title><rect x="91.9933%" y="965" width="0.0742%" height="15" fill="rgb(207,123,46)" fg:x="64491" fg:w="52"/><text x="92.2433%" y="975.50"></text></g><g><title>_IO_str_seekoff (256 samples, 0.37%)</title><rect x="93.0246%" y="917" width="0.3652%" height="15" fill="rgb(240,218,32)" fg:x="65214" fg:w="256"/><text x="93.2746%" y="927.50"></text></g><g><title>__libc_malloc (851 samples, 1.21%)</title><rect x="92.1773%" y="933" width="1.2139%" height="15" fill="rgb(252,5,43)" fg:x="64620" fg:w="851"/><text x="92.4273%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (887 samples, 1.27%)</title><rect x="92.1388%" y="949" width="1.2653%" height="15" fill="rgb(252,84,19)" fg:x="64593" fg:w="887"/><text x="92.3888%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,371 samples, 1.96%)</title><rect x="91.4513%" y="997" width="1.9557%" height="15" fill="rgb(243,152,39)" fg:x="64111" fg:w="1371"/><text x="91.7013%" y="1007.50">&lt;..</text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (1,185 samples, 1.69%)</title><rect x="91.7166%" y="981" width="1.6903%" height="15" fill="rgb(234,160,15)" fg:x="64297" fg:w="1185"/><text x="91.9666%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (939 samples, 1.34%)</title><rect x="92.0675%" y="965" width="1.3394%" height="15" fill="rgb(237,34,20)" fg:x="64543" fg:w="939"/><text x="92.3175%" y="975.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (8 samples, 0.01%)</title><rect x="93.4141%" y="997" width="0.0114%" height="15" fill="rgb(229,97,13)" fg:x="65487" fg:w="8"/><text x="93.6641%" y="1007.50"></text></g><g><title>_IO_str_seekoff (13 samples, 0.02%)</title><rect x="93.4611%" y="965" width="0.0185%" height="15" fill="rgb(234,71,50)" fg:x="65520" fg:w="13"/><text x="93.7111%" y="975.50"></text></g><g><title>__libc_calloc (38 samples, 0.05%)</title><rect x="93.4269%" y="981" width="0.0542%" height="15" fill="rgb(253,155,4)" fg:x="65496" fg:w="38"/><text x="93.6769%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.06%)</title><rect x="93.4255%" y="997" width="0.0571%" height="15" fill="rgb(222,185,37)" fg:x="65495" fg:w="40"/><text x="93.6755%" y="1007.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (14 samples, 0.02%)</title><rect x="93.4825%" y="997" width="0.0200%" height="15" fill="rgb(251,177,13)" fg:x="65535" fg:w="14"/><text x="93.7325%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="93.4911%" y="981" width="0.0114%" height="15" fill="rgb(250,179,40)" fg:x="65541" fg:w="8"/><text x="93.7411%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="93.4911%" y="965" width="0.0114%" height="15" fill="rgb(242,44,2)" fg:x="65541" fg:w="8"/><text x="93.7411%" y="975.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,553 samples, 2.22%)</title><rect x="91.2986%" y="1013" width="2.2153%" height="15" fill="rgb(216,177,13)" fg:x="64004" fg:w="1553"/><text x="91.5486%" y="1023.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (8 samples, 0.01%)</title><rect x="93.5025%" y="997" width="0.0114%" height="15" fill="rgb(216,106,43)" fg:x="65549" fg:w="8"/><text x="93.7525%" y="1007.50"></text></g><g><title>core::iter::adapters::try_process (13,471 samples, 19.22%)</title><rect x="74.3096%" y="1045" width="19.2157%" height="15" fill="rgb(216,183,2)" fg:x="52094" fg:w="13471"/><text x="74.5596%" y="1055.50">core::iter::adapters::try_proc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,470 samples, 19.21%)</title><rect x="74.3110%" y="1029" width="19.2143%" height="15" fill="rgb(249,75,3)" fg:x="52095" fg:w="13470"/><text x="74.5610%" y="1039.50">&lt;core::iter::adapters::map::Ma..</text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="93.5139%" y="1013" width="0.0114%" height="15" fill="rgb(219,67,39)" fg:x="65557" fg:w="8"/><text x="93.7639%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt; (8 samples, 0.01%)</title><rect x="93.5253%" y="1045" width="0.0114%" height="15" fill="rgb(253,228,2)" fg:x="65565" fg:w="8"/><text x="93.7753%" y="1055.50"></text></g><g><title>syscall (17 samples, 0.02%)</title><rect x="93.5410%" y="997" width="0.0242%" height="15" fill="rgb(235,138,27)" fg:x="65576" fg:w="17"/><text x="93.7910%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.02%)</title><rect x="93.5410%" y="981" width="0.0242%" height="15" fill="rgb(236,97,51)" fg:x="65576" fg:w="17"/><text x="93.7910%" y="991.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="93.5410%" y="965" width="0.0242%" height="15" fill="rgb(240,80,30)" fg:x="65576" fg:w="17"/><text x="93.7910%" y="975.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.02%)</title><rect x="93.5425%" y="949" width="0.0228%" height="15" fill="rgb(230,178,19)" fg:x="65577" fg:w="16"/><text x="93.7925%" y="959.50"></text></g><g><title>do_futex (16 samples, 0.02%)</title><rect x="93.5425%" y="933" width="0.0228%" height="15" fill="rgb(210,190,27)" fg:x="65577" fg:w="16"/><text x="93.7925%" y="943.50"></text></g><g><title>futex_wake (16 samples, 0.02%)</title><rect x="93.5425%" y="917" width="0.0228%" height="15" fill="rgb(222,107,31)" fg:x="65577" fg:w="16"/><text x="93.7925%" y="927.50"></text></g><g><title>wake_up_q (15 samples, 0.02%)</title><rect x="93.5439%" y="901" width="0.0214%" height="15" fill="rgb(216,127,34)" fg:x="65578" fg:w="15"/><text x="93.7939%" y="911.50"></text></g><g><title>try_to_wake_up (15 samples, 0.02%)</title><rect x="93.5439%" y="885" width="0.0214%" height="15" fill="rgb(234,116,52)" fg:x="65578" fg:w="15"/><text x="93.7939%" y="895.50"></text></g><g><title>__lock_text_start (15 samples, 0.02%)</title><rect x="93.5439%" y="869" width="0.0214%" height="15" fill="rgb(222,124,15)" fg:x="65578" fg:w="15"/><text x="93.7939%" y="879.50"></text></g><g><title>__vfs_write (18 samples, 0.03%)</title><rect x="93.5795%" y="821" width="0.0257%" height="15" fill="rgb(231,179,28)" fg:x="65603" fg:w="18"/><text x="93.8295%" y="831.50"></text></g><g><title>eventfd_write (18 samples, 0.03%)</title><rect x="93.5795%" y="805" width="0.0257%" height="15" fill="rgb(226,93,45)" fg:x="65603" fg:w="18"/><text x="93.8295%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (50 samples, 0.07%)</title><rect x="93.5367%" y="1045" width="0.0713%" height="15" fill="rgb(215,8,51)" fg:x="65573" fg:w="50"/><text x="93.7867%" y="1055.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (47 samples, 0.07%)</title><rect x="93.5410%" y="1029" width="0.0670%" height="15" fill="rgb(223,106,5)" fg:x="65576" fg:w="47"/><text x="93.7910%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (47 samples, 0.07%)</title><rect x="93.5410%" y="1013" width="0.0670%" height="15" fill="rgb(250,191,5)" fg:x="65576" fg:w="47"/><text x="93.7910%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (29 samples, 0.04%)</title><rect x="93.5667%" y="997" width="0.0414%" height="15" fill="rgb(242,132,44)" fg:x="65594" fg:w="29"/><text x="93.8167%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (26 samples, 0.04%)</title><rect x="93.5710%" y="981" width="0.0371%" height="15" fill="rgb(251,152,29)" fg:x="65597" fg:w="26"/><text x="93.8210%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (25 samples, 0.04%)</title><rect x="93.5724%" y="965" width="0.0357%" height="15" fill="rgb(218,179,5)" fg:x="65598" fg:w="25"/><text x="93.8224%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (24 samples, 0.03%)</title><rect x="93.5738%" y="949" width="0.0342%" height="15" fill="rgb(227,67,19)" fg:x="65599" fg:w="24"/><text x="93.8238%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (24 samples, 0.03%)</title><rect x="93.5738%" y="933" width="0.0342%" height="15" fill="rgb(233,119,31)" fg:x="65599" fg:w="24"/><text x="93.8238%" y="943.50"></text></g><g><title>__libc_write (24 samples, 0.03%)</title><rect x="93.5738%" y="917" width="0.0342%" height="15" fill="rgb(241,120,22)" fg:x="65599" fg:w="24"/><text x="93.8238%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.03%)</title><rect x="93.5753%" y="901" width="0.0328%" height="15" fill="rgb(224,102,30)" fg:x="65600" fg:w="23"/><text x="93.8253%" y="911.50"></text></g><g><title>do_syscall_64 (23 samples, 0.03%)</title><rect x="93.5753%" y="885" width="0.0328%" height="15" fill="rgb(210,164,37)" fg:x="65600" fg:w="23"/><text x="93.8253%" y="895.50"></text></g><g><title>__x64_sys_write (23 samples, 0.03%)</title><rect x="93.5753%" y="869" width="0.0328%" height="15" fill="rgb(226,191,16)" fg:x="65600" fg:w="23"/><text x="93.8253%" y="879.50"></text></g><g><title>ksys_write (22 samples, 0.03%)</title><rect x="93.5767%" y="853" width="0.0314%" height="15" fill="rgb(214,40,45)" fg:x="65601" fg:w="22"/><text x="93.8267%" y="863.50"></text></g><g><title>vfs_write (21 samples, 0.03%)</title><rect x="93.5781%" y="837" width="0.0300%" height="15" fill="rgb(244,29,26)" fg:x="65602" fg:w="21"/><text x="93.8281%" y="847.50"></text></g><g><title>cfree (14 samples, 0.02%)</title><rect x="93.6280%" y="997" width="0.0200%" height="15" fill="rgb(216,16,5)" fg:x="65637" fg:w="14"/><text x="93.8780%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (30 samples, 0.04%)</title><rect x="93.6109%" y="1045" width="0.0428%" height="15" fill="rgb(249,76,35)" fg:x="65625" fg:w="30"/><text x="93.8609%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (29 samples, 0.04%)</title><rect x="93.6123%" y="1029" width="0.0414%" height="15" fill="rgb(207,11,44)" fg:x="65626" fg:w="29"/><text x="93.8623%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (28 samples, 0.04%)</title><rect x="93.6138%" y="1013" width="0.0399%" height="15" fill="rgb(228,190,49)" fg:x="65627" fg:w="28"/><text x="93.8638%" y="1023.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="93.6708%" y="1029" width="0.0171%" height="15" fill="rgb(214,173,12)" fg:x="65667" fg:w="12"/><text x="93.9208%" y="1039.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::request (21 samples, 0.03%)</title><rect x="93.6694%" y="1045" width="0.0300%" height="15" fill="rgb(218,26,35)" fg:x="65666" fg:w="21"/><text x="93.9194%" y="1055.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (16 samples, 0.02%)</title><rect x="93.7322%" y="965" width="0.0228%" height="15" fill="rgb(220,200,19)" fg:x="65710" fg:w="16"/><text x="93.9822%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (95 samples, 0.14%)</title><rect x="96.0402%" y="917" width="0.1355%" height="15" fill="rgb(239,95,49)" fg:x="67328" fg:w="95"/><text x="96.2902%" y="927.50"></text></g><g><title>core::str::validations::run_utf8_validation (94 samples, 0.13%)</title><rect x="96.0416%" y="901" width="0.1341%" height="15" fill="rgb(235,85,53)" fg:x="67329" fg:w="94"/><text x="96.2916%" y="911.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1,675 samples, 2.39%)</title><rect x="93.7892%" y="933" width="2.3893%" height="15" fill="rgb(233,133,31)" fg:x="65750" fg:w="1675"/><text x="94.0392%" y="943.50">&lt;s..</text></g><g><title>__libc_malloc (53 samples, 0.08%)</title><rect x="96.1785%" y="933" width="0.0756%" height="15" fill="rgb(218,25,20)" fg:x="67425" fg:w="53"/><text x="96.4285%" y="943.50"></text></g><g><title>_IO_str_seekoff (37 samples, 0.05%)</title><rect x="96.2014%" y="917" width="0.0528%" height="15" fill="rgb(252,210,38)" fg:x="67441" fg:w="37"/><text x="96.4514%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,865 samples, 2.66%)</title><rect x="93.7849%" y="949" width="2.6603%" height="15" fill="rgb(242,134,21)" fg:x="65747" fg:w="1865"/><text x="94.0349%" y="959.50">&lt;&amp;..</text></g><g><title>__nss_passwd_lookup (134 samples, 0.19%)</title><rect x="96.2541%" y="933" width="0.1911%" height="15" fill="rgb(213,28,48)" fg:x="67478" fg:w="134"/><text x="96.5041%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,922 samples, 2.74%)</title><rect x="93.7051%" y="997" width="2.7416%" height="15" fill="rgb(250,196,2)" fg:x="65691" fg:w="1922"/><text x="93.9551%" y="1007.50">&lt;s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,920 samples, 2.74%)</title><rect x="93.7079%" y="981" width="2.7388%" height="15" fill="rgb(227,5,17)" fg:x="65693" fg:w="1920"/><text x="93.9579%" y="991.50">&lt;&amp;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1,887 samples, 2.69%)</title><rect x="93.7550%" y="965" width="2.6917%" height="15" fill="rgb(221,226,24)" fg:x="65726" fg:w="1887"/><text x="94.0050%" y="975.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,930 samples, 2.75%)</title><rect x="93.7008%" y="1029" width="2.7531%" height="15" fill="rgb(211,5,48)" fg:x="65688" fg:w="1930"/><text x="93.9508%" y="1039.50">&lt;&amp;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,930 samples, 2.75%)</title><rect x="93.7008%" y="1013" width="2.7531%" height="15" fill="rgb(219,150,6)" fg:x="65688" fg:w="1930"/><text x="93.9508%" y="1023.50">&lt;s..</text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (16,545 samples, 23.60%)</title><rect x="72.8546%" y="1077" width="23.6007%" height="15" fill="rgb(251,46,16)" fg:x="51074" fg:w="16545"/><text x="73.1046%" y="1087.50">&lt;futures_util::future::try_join_all::T..</text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (16,540 samples, 23.59%)</title><rect x="72.8617%" y="1061" width="23.5935%" height="15" fill="rgb(220,204,40)" fg:x="51079" fg:w="16540"/><text x="73.1117%" y="1071.50">&lt;futures_util::future::try_maybe_done..</text></g><g><title>serde_json::de::from_slice (1,932 samples, 2.76%)</title><rect x="93.6994%" y="1045" width="2.7559%" height="15" fill="rgb(211,85,2)" fg:x="65687" fg:w="1932"/><text x="93.9494%" y="1055.50">se..</text></g><g><title>__libc_malloc (38 samples, 0.05%)</title><rect x="96.4567%" y="1077" width="0.0542%" height="15" fill="rgb(229,17,7)" fg:x="67620" fg:w="38"/><text x="96.7067%" y="1087.50"></text></g><g><title>_IO_str_seekoff (37 samples, 0.05%)</title><rect x="96.4581%" y="1061" width="0.0528%" height="15" fill="rgb(239,72,28)" fg:x="67621" fg:w="37"/><text x="96.7081%" y="1071.50"></text></g><g><title>_IO_str_seekoff (22 samples, 0.03%)</title><rect x="96.4795%" y="1045" width="0.0314%" height="15" fill="rgb(230,47,54)" fg:x="67636" fg:w="22"/><text x="96.7295%" y="1055.50"></text></g><g><title>_IO_str_seekoff (13 samples, 0.02%)</title><rect x="96.5209%" y="1013" width="0.0185%" height="15" fill="rgb(214,50,8)" fg:x="67665" fg:w="13"/><text x="96.7709%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.02%)</title><rect x="96.5195%" y="1077" width="0.0214%" height="15" fill="rgb(216,198,43)" fg:x="67664" fg:w="15"/><text x="96.7695%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="96.5195%" y="1061" width="0.0214%" height="15" fill="rgb(234,20,35)" fg:x="67664" fg:w="15"/><text x="96.7695%" y="1071.50"></text></g><g><title>realloc (15 samples, 0.02%)</title><rect x="96.5195%" y="1045" width="0.0214%" height="15" fill="rgb(254,45,19)" fg:x="67664" fg:w="15"/><text x="96.7695%" y="1055.50"></text></g><g><title>_IO_str_seekoff (14 samples, 0.02%)</title><rect x="96.5209%" y="1029" width="0.0200%" height="15" fill="rgb(219,14,44)" fg:x="67665" fg:w="14"/><text x="96.7709%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.01%)</title><rect x="96.5480%" y="1077" width="0.0128%" height="15" fill="rgb(217,220,26)" fg:x="67684" fg:w="9"/><text x="96.7980%" y="1087.50"></text></g><g><title>futex_wait_queue_me (56 samples, 0.08%)</title><rect x="96.5751%" y="917" width="0.0799%" height="15" fill="rgb(213,158,28)" fg:x="67703" fg:w="56"/><text x="96.8251%" y="927.50"></text></g><g><title>schedule (55 samples, 0.08%)</title><rect x="96.5765%" y="901" width="0.0785%" height="15" fill="rgb(252,51,52)" fg:x="67704" fg:w="55"/><text x="96.8265%" y="911.50"></text></g><g><title>__sched_text_start (54 samples, 0.08%)</title><rect x="96.5779%" y="885" width="0.0770%" height="15" fill="rgb(246,89,16)" fg:x="67705" fg:w="54"/><text x="96.8279%" y="895.50"></text></g><g><title>finish_task_switch (54 samples, 0.08%)</title><rect x="96.5779%" y="869" width="0.0770%" height="15" fill="rgb(216,158,49)" fg:x="67705" fg:w="54"/><text x="96.8279%" y="879.50"></text></g><g><title>std::sys::unix::futex::futex_wait (62 samples, 0.09%)</title><rect x="96.5680%" y="1029" width="0.0884%" height="15" fill="rgb(236,107,19)" fg:x="67698" fg:w="62"/><text x="96.8180%" y="1039.50"></text></g><g><title>syscall (62 samples, 0.09%)</title><rect x="96.5680%" y="1013" width="0.0884%" height="15" fill="rgb(228,185,30)" fg:x="67698" fg:w="62"/><text x="96.8180%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (58 samples, 0.08%)</title><rect x="96.5737%" y="997" width="0.0827%" height="15" fill="rgb(246,134,8)" fg:x="67702" fg:w="58"/><text x="96.8237%" y="1007.50"></text></g><g><title>do_syscall_64 (58 samples, 0.08%)</title><rect x="96.5737%" y="981" width="0.0827%" height="15" fill="rgb(214,143,50)" fg:x="67702" fg:w="58"/><text x="96.8237%" y="991.50"></text></g><g><title>__x64_sys_futex (58 samples, 0.08%)</title><rect x="96.5737%" y="965" width="0.0827%" height="15" fill="rgb(228,75,8)" fg:x="67702" fg:w="58"/><text x="96.8237%" y="975.50"></text></g><g><title>do_futex (58 samples, 0.08%)</title><rect x="96.5737%" y="949" width="0.0827%" height="15" fill="rgb(207,175,4)" fg:x="67702" fg:w="58"/><text x="96.8237%" y="959.50"></text></g><g><title>futex_wait (58 samples, 0.08%)</title><rect x="96.5737%" y="933" width="0.0827%" height="15" fill="rgb(205,108,24)" fg:x="67702" fg:w="58"/><text x="96.8237%" y="943.50"></text></g><g><title>tokio::runtime::park::Inner::park (66 samples, 0.09%)</title><rect x="96.5637%" y="1077" width="0.0941%" height="15" fill="rgb(244,120,49)" fg:x="67695" fg:w="66"/><text x="96.8137%" y="1087.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (64 samples, 0.09%)</title><rect x="96.5665%" y="1061" width="0.0913%" height="15" fill="rgb(223,47,38)" fg:x="67697" fg:w="64"/><text x="96.8165%" y="1071.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (64 samples, 0.09%)</title><rect x="96.5665%" y="1045" width="0.0913%" height="15" fill="rgb(229,179,11)" fg:x="67697" fg:w="64"/><text x="96.8165%" y="1055.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (8 samples, 0.01%)</title><rect x="96.6607%" y="1077" width="0.0114%" height="15" fill="rgb(231,122,1)" fg:x="67763" fg:w="8"/><text x="96.9107%" y="1087.50"></text></g><g><title>clone (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1221" width="87.7054%" height="15" fill="rgb(245,119,9)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1231.50">clone</text></g><g><title>start_thread (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1205" width="87.7054%" height="15" fill="rgb(241,163,25)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1215.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1189" width="87.7054%" height="15" fill="rgb(217,214,3)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1199.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1173" width="87.7054%" height="15" fill="rgb(240,86,28)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1157" width="87.7054%" height="15" fill="rgb(215,47,9)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1167.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1141" width="87.7054%" height="15" fill="rgb(252,25,45)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1151.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61,485 samples, 87.71%)</title><rect x="8.9724%" y="1125" width="87.7054%" height="15" fill="rgb(251,164,9)" fg:x="6290" fg:w="61485"/><text x="9.2224%" y="1135.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (17,326 samples, 24.71%)</title><rect x="71.9631%" y="1109" width="24.7147%" height="15" fill="rgb(233,194,0)" fg:x="50449" fg:w="17326"/><text x="72.2131%" y="1119.50">tokio::runtime::runtime::Runtime::block..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (17,326 samples, 24.71%)</title><rect x="71.9631%" y="1093" width="24.7147%" height="15" fill="rgb(249,111,24)" fg:x="50449" fg:w="17326"/><text x="72.2131%" y="1103.50">tokio::runtime::park::CachedParkThread:..</text></g><g><title>ord (67,804 samples, 96.72%)</title><rect x="0.0000%" y="1237" width="96.7192%" height="15" fill="rgb(250,223,3)" fg:x="0" fg:w="67804"/><text x="0.2500%" y="1247.50">ord</text></g><g><title>snappy::internal::CompressFragment (172 samples, 0.25%)</title><rect x="96.7534%" y="949" width="0.2453%" height="15" fill="rgb(236,178,37)" fg:x="67828" fg:w="172"/><text x="97.0034%" y="959.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock (176 samples, 0.25%)</title><rect x="96.7505%" y="1029" width="0.2511%" height="15" fill="rgb(241,158,50)" fg:x="67826" fg:w="176"/><text x="97.0005%" y="1039.50"></text></g><g><title>rocksdb::CompressBlock (176 samples, 0.25%)</title><rect x="96.7505%" y="1013" width="0.2511%" height="15" fill="rgb(213,121,41)" fg:x="67826" fg:w="176"/><text x="97.0005%" y="1023.50"></text></g><g><title>rocksdb::CompressData (176 samples, 0.25%)</title><rect x="96.7505%" y="997" width="0.2511%" height="15" fill="rgb(240,92,3)" fg:x="67826" fg:w="176"/><text x="97.0005%" y="1007.50"></text></g><g><title>snappy::RawCompress (175 samples, 0.25%)</title><rect x="96.7520%" y="981" width="0.2496%" height="15" fill="rgb(205,123,3)" fg:x="67827" fg:w="175"/><text x="97.0020%" y="991.50"></text></g><g><title>snappy::Compress (175 samples, 0.25%)</title><rect x="96.7520%" y="965" width="0.2496%" height="15" fill="rgb(205,97,47)" fg:x="67827" fg:w="175"/><text x="97.0020%" y="975.50"></text></g><g><title>__alloc_pages_nodemask (10 samples, 0.01%)</title><rect x="97.0159%" y="693" width="0.0143%" height="15" fill="rgb(247,152,14)" fg:x="68012" fg:w="10"/><text x="97.2659%" y="703.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.01%)</title><rect x="97.0159%" y="677" width="0.0143%" height="15" fill="rgb(248,195,53)" fg:x="68012" fg:w="10"/><text x="97.2659%" y="687.50"></text></g><g><title>__page_cache_alloc (11 samples, 0.02%)</title><rect x="97.0159%" y="725" width="0.0157%" height="15" fill="rgb(226,201,16)" fg:x="68012" fg:w="11"/><text x="97.2659%" y="735.50"></text></g><g><title>alloc_pages_current (11 samples, 0.02%)</title><rect x="97.0159%" y="709" width="0.0157%" height="15" fill="rgb(205,98,0)" fg:x="68012" fg:w="11"/><text x="97.2659%" y="719.50"></text></g><g><title>__add_to_page_cache_locked (8 samples, 0.01%)</title><rect x="97.0330%" y="709" width="0.0114%" height="15" fill="rgb(214,191,48)" fg:x="68024" fg:w="8"/><text x="97.2830%" y="719.50"></text></g><g><title>grab_cache_page_write_begin (21 samples, 0.03%)</title><rect x="97.0159%" y="757" width="0.0300%" height="15" fill="rgb(237,112,39)" fg:x="68012" fg:w="21"/><text x="97.2659%" y="767.50"></text></g><g><title>pagecache_get_page (21 samples, 0.03%)</title><rect x="97.0159%" y="741" width="0.0300%" height="15" fill="rgb(247,203,27)" fg:x="68012" fg:w="21"/><text x="97.2659%" y="751.50"></text></g><g><title>add_to_page_cache_lru (10 samples, 0.01%)</title><rect x="97.0316%" y="725" width="0.0143%" height="15" fill="rgb(235,124,28)" fg:x="68023" fg:w="10"/><text x="97.2816%" y="735.50"></text></g><g><title>ext4_da_write_begin (27 samples, 0.04%)</title><rect x="97.0116%" y="773" width="0.0385%" height="15" fill="rgb(208,207,46)" fg:x="68009" fg:w="27"/><text x="97.2616%" y="783.50"></text></g><g><title>ext4_da_write_end (8 samples, 0.01%)</title><rect x="97.0501%" y="773" width="0.0114%" height="15" fill="rgb(234,176,4)" fg:x="68036" fg:w="8"/><text x="97.3001%" y="783.50"></text></g><g><title>generic_write_end (8 samples, 0.01%)</title><rect x="97.0501%" y="757" width="0.0114%" height="15" fill="rgb(230,133,28)" fg:x="68036" fg:w="8"/><text x="97.3001%" y="767.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock (223 samples, 0.32%)</title><rect x="96.7505%" y="1045" width="0.3181%" height="15" fill="rgb(211,137,40)" fg:x="67826" fg:w="223"/><text x="97.0005%" y="1055.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteMaybeCompressedBlock (47 samples, 0.07%)</title><rect x="97.0016%" y="1029" width="0.0670%" height="15" fill="rgb(254,35,13)" fg:x="68002" fg:w="47"/><text x="97.2516%" y="1039.50"></text></g><g><title>rocksdb::WritableFileWriter::Append (41 samples, 0.06%)</title><rect x="97.0102%" y="1013" width="0.0585%" height="15" fill="rgb(225,49,51)" fg:x="68008" fg:w="41"/><text x="97.2602%" y="1023.50"></text></g><g><title>rocksdb::WritableFileWriter::Flush (40 samples, 0.06%)</title><rect x="97.0116%" y="997" width="0.0571%" height="15" fill="rgb(251,10,15)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="1007.50"></text></g><g><title>rocksdb::WritableFileWriter::WriteBuffered (40 samples, 0.06%)</title><rect x="97.0116%" y="981" width="0.0571%" height="15" fill="rgb(228,207,15)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="991.50"></text></g><g><title>rocksdb::PosixWritableFile::Append (40 samples, 0.06%)</title><rect x="97.0116%" y="965" width="0.0571%" height="15" fill="rgb(241,99,19)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="975.50"></text></g><g><title>__libc_write (40 samples, 0.06%)</title><rect x="97.0116%" y="949" width="0.0571%" height="15" fill="rgb(207,104,49)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.06%)</title><rect x="97.0116%" y="933" width="0.0571%" height="15" fill="rgb(234,99,18)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="943.50"></text></g><g><title>do_syscall_64 (40 samples, 0.06%)</title><rect x="97.0116%" y="917" width="0.0571%" height="15" fill="rgb(213,191,49)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="927.50"></text></g><g><title>__x64_sys_write (40 samples, 0.06%)</title><rect x="97.0116%" y="901" width="0.0571%" height="15" fill="rgb(210,226,19)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="911.50"></text></g><g><title>ksys_write (40 samples, 0.06%)</title><rect x="97.0116%" y="885" width="0.0571%" height="15" fill="rgb(229,97,18)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="895.50"></text></g><g><title>vfs_write (40 samples, 0.06%)</title><rect x="97.0116%" y="869" width="0.0571%" height="15" fill="rgb(211,167,15)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="879.50"></text></g><g><title>__vfs_write (40 samples, 0.06%)</title><rect x="97.0116%" y="853" width="0.0571%" height="15" fill="rgb(210,169,34)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="863.50"></text></g><g><title>new_sync_write (40 samples, 0.06%)</title><rect x="97.0116%" y="837" width="0.0571%" height="15" fill="rgb(241,121,31)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="847.50"></text></g><g><title>ext4_file_write_iter (40 samples, 0.06%)</title><rect x="97.0116%" y="821" width="0.0571%" height="15" fill="rgb(232,40,11)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="831.50"></text></g><g><title>__generic_file_write_iter (40 samples, 0.06%)</title><rect x="97.0116%" y="805" width="0.0571%" height="15" fill="rgb(205,86,26)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="815.50"></text></g><g><title>generic_perform_write (40 samples, 0.06%)</title><rect x="97.0116%" y="789" width="0.0571%" height="15" fill="rgb(231,126,28)" fg:x="68009" fg:w="40"/><text x="97.2616%" y="799.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Flush (225 samples, 0.32%)</title><rect x="96.7491%" y="1077" width="0.3210%" height="15" fill="rgb(219,221,18)" fg:x="67825" fg:w="225"/><text x="96.9991%" y="1087.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock (225 samples, 0.32%)</title><rect x="96.7491%" y="1061" width="0.3210%" height="15" fill="rgb(211,40,0)" fg:x="67825" fg:w="225"/><text x="96.9991%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (20 samples, 0.03%)</title><rect x="97.1000%" y="1061" width="0.0285%" height="15" fill="rgb(239,85,43)" fg:x="68071" fg:w="20"/><text x="97.3500%" y="1071.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey (42 samples, 0.06%)</title><rect x="97.0715%" y="1077" width="0.0599%" height="15" fill="rgb(231,55,21)" fg:x="68051" fg:w="42"/><text x="97.3215%" y="1087.50"></text></g><g><title>rocksdb::FlushBlockBySizePolicy::Update (8 samples, 0.01%)</title><rect x="97.1314%" y="1077" width="0.0114%" height="15" fill="rgb(225,184,43)" fg:x="68093" fg:w="8"/><text x="97.3814%" y="1087.50"></text></g><g><title>rocksdb::NotifyCollectTableCollectorsOnAdd (9 samples, 0.01%)</title><rect x="97.1428%" y="1077" width="0.0128%" height="15" fill="rgb(251,158,41)" fg:x="68101" fg:w="9"/><text x="97.3928%" y="1087.50"></text></g><g><title>rocksdb::ShortenedIndexBuilder::AddIndexEntry (9 samples, 0.01%)</title><rect x="97.1557%" y="1077" width="0.0128%" height="15" fill="rgb(234,159,37)" fg:x="68110" fg:w="9"/><text x="97.4057%" y="1087.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add (323 samples, 0.46%)</title><rect x="96.7291%" y="1093" width="0.4607%" height="15" fill="rgb(216,204,22)" fg:x="67811" fg:w="323"/><text x="96.9791%" y="1103.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (12 samples, 0.02%)</title><rect x="97.1728%" y="1077" width="0.0171%" height="15" fill="rgb(214,17,3)" fg:x="68122" fg:w="12"/><text x="97.4228%" y="1087.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice (182 samples, 0.26%)</title><rect x="97.2541%" y="1061" width="0.2596%" height="15" fill="rgb(212,111,17)" fg:x="68179" fg:w="182"/><text x="97.5041%" y="1071.50"></text></g><g><title>rocksdb::CompactionIterator::NextFromInput (231 samples, 0.33%)</title><rect x="97.2013%" y="1077" width="0.3295%" height="15" fill="rgb(221,157,24)" fg:x="68142" fg:w="231"/><text x="97.4513%" y="1087.50"></text></g><g><title>rocksdb::CompactionIterator::Next (258 samples, 0.37%)</title><rect x="97.1913%" y="1093" width="0.3680%" height="15" fill="rgb(252,16,13)" fg:x="68135" fg:w="258"/><text x="97.4413%" y="1103.50"></text></g><g><title>rocksdb::MemTableIterator::Next (14 samples, 0.02%)</title><rect x="97.5394%" y="1077" width="0.0200%" height="15" fill="rgb(221,62,2)" fg:x="68379" fg:w="14"/><text x="97.7894%" y="1087.50"></text></g><g><title>rocksdb::FileMetaData::UpdateBoundaries (9 samples, 0.01%)</title><rect x="97.5593%" y="1093" width="0.0128%" height="15" fill="rgb(247,87,22)" fg:x="68393" fg:w="9"/><text x="97.8093%" y="1103.50"></text></g><g><title>rocksdb::OutputValidator::Add (16 samples, 0.02%)</title><rect x="97.5722%" y="1093" width="0.0228%" height="15" fill="rgb(215,73,9)" fg:x="68402" fg:w="16"/><text x="97.8222%" y="1103.50"></text></g><g><title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.01%)</title><rect x="97.5836%" y="1077" width="0.0114%" height="15" fill="rgb(207,175,33)" fg:x="68410" fg:w="8"/><text x="97.8336%" y="1087.50"></text></g><g><title>rocksdb::ThreadStatusUpdater::SetThreadOperationProperty (10 samples, 0.01%)</title><rect x="97.5950%" y="1093" width="0.0143%" height="15" fill="rgb(243,129,54)" fg:x="68418" fg:w="10"/><text x="97.8450%" y="1103.50"></text></g><g><title>rocksdb::ThreadStatusUpdater::GetLocalThreadStatus (10 samples, 0.01%)</title><rect x="97.5950%" y="1077" width="0.0143%" height="15" fill="rgb(227,119,45)" fg:x="68418" fg:w="10"/><text x="97.8450%" y="1087.50"></text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush (633 samples, 0.90%)</title><rect x="96.7192%" y="1205" width="0.9029%" height="15" fill="rgb(205,109,36)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1215.50"></text></g><g><title>rocksdb::DBImpl::BackgroundFlush (633 samples, 0.90%)</title><rect x="96.7192%" y="1189" width="0.9029%" height="15" fill="rgb(205,6,39)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1199.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTablesToOutputFiles (633 samples, 0.90%)</title><rect x="96.7192%" y="1173" width="0.9029%" height="15" fill="rgb(221,32,16)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1183.50"></text></g><g><title>rocksdb::DBImpl::FlushMemTableToOutputFile (633 samples, 0.90%)</title><rect x="96.7192%" y="1157" width="0.9029%" height="15" fill="rgb(228,144,50)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1167.50"></text></g><g><title>rocksdb::FlushJob::Run (633 samples, 0.90%)</title><rect x="96.7192%" y="1141" width="0.9029%" height="15" fill="rgb(229,201,53)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1151.50"></text></g><g><title>rocksdb::FlushJob::WriteLevel0Table (633 samples, 0.90%)</title><rect x="96.7192%" y="1125" width="0.9029%" height="15" fill="rgb(249,153,27)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1135.50"></text></g><g><title>rocksdb::BuildTable (633 samples, 0.90%)</title><rect x="96.7192%" y="1109" width="0.9029%" height="15" fill="rgb(227,106,25)" fg:x="67804" fg:w="633"/><text x="96.9692%" y="1119.50"></text></g><g><title>rocksdb::WritableFileWriter::Sync (8 samples, 0.01%)</title><rect x="97.6107%" y="1093" width="0.0114%" height="15" fill="rgb(230,65,29)" fg:x="68429" fg:w="8"/><text x="97.8607%" y="1103.50"></text></g><g><title>[unknown] (634 samples, 0.90%)</title><rect x="96.7192%" y="1221" width="0.9044%" height="15" fill="rgb(221,57,46)" fg:x="67804" fg:w="634"/><text x="96.9692%" y="1231.50"></text></g><g><title>rocksdb:high (643 samples, 0.92%)</title><rect x="96.7192%" y="1237" width="0.9172%" height="15" fill="rgb(229,161,17)" fg:x="67804" fg:w="643"/><text x="96.9692%" y="1247.50"></text></g><g><title>clone (9 samples, 0.01%)</title><rect x="97.6235%" y="1221" width="0.0128%" height="15" fill="rgb(222,213,11)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1231.50"></text></g><g><title>start_thread (9 samples, 0.01%)</title><rect x="97.6235%" y="1205" width="0.0128%" height="15" fill="rgb(235,35,13)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1215.50"></text></g><g><title>std::error_code::default_error_condition (9 samples, 0.01%)</title><rect x="97.6235%" y="1189" width="0.0128%" height="15" fill="rgb(233,158,34)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1199.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (9 samples, 0.01%)</title><rect x="97.6235%" y="1173" width="0.0128%" height="15" fill="rgb(215,151,48)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1183.50"></text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread (9 samples, 0.01%)</title><rect x="97.6235%" y="1157" width="0.0128%" height="15" fill="rgb(229,84,14)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1167.50"></text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush (9 samples, 0.01%)</title><rect x="97.6235%" y="1141" width="0.0128%" height="15" fill="rgb(229,68,14)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1151.50"></text></g><g><title>rocksdb::DBImpl::PurgeObsoleteFiles (9 samples, 0.01%)</title><rect x="97.6235%" y="1125" width="0.0128%" height="15" fill="rgb(243,106,26)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1135.50"></text></g><g><title>rocksdb::DBImpl::DeleteObsoleteFileImpl (9 samples, 0.01%)</title><rect x="97.6235%" y="1109" width="0.0128%" height="15" fill="rgb(206,45,38)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1119.50"></text></g><g><title>rocksdb::DeleteDBFile (9 samples, 0.01%)</title><rect x="97.6235%" y="1093" width="0.0128%" height="15" fill="rgb(226,6,15)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1103.50"></text></g><g><title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion (9 samples, 0.01%)</title><rect x="97.6235%" y="1077" width="0.0128%" height="15" fill="rgb(232,22,54)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1087.50"></text></g><g><title>rocksdb::DeleteScheduler::DeleteFile (9 samples, 0.01%)</title><rect x="97.6235%" y="1061" width="0.0128%" height="15" fill="rgb(229,222,32)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1071.50"></text></g><g><title>rocksdb::(anonymous namespace)::PosixFileSystem::DeleteFile (9 samples, 0.01%)</title><rect x="97.6235%" y="1045" width="0.0128%" height="15" fill="rgb(228,62,29)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1055.50"></text></g><g><title>unlink (9 samples, 0.01%)</title><rect x="97.6235%" y="1029" width="0.0128%" height="15" fill="rgb(251,103,34)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.01%)</title><rect x="97.6235%" y="1013" width="0.0128%" height="15" fill="rgb(233,12,30)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1023.50"></text></g><g><title>do_syscall_64 (9 samples, 0.01%)</title><rect x="97.6235%" y="997" width="0.0128%" height="15" fill="rgb(238,52,0)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="1007.50"></text></g><g><title>__x64_sys_unlink (9 samples, 0.01%)</title><rect x="97.6235%" y="981" width="0.0128%" height="15" fill="rgb(223,98,5)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="991.50"></text></g><g><title>do_unlinkat (9 samples, 0.01%)</title><rect x="97.6235%" y="965" width="0.0128%" height="15" fill="rgb(228,75,37)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="975.50"></text></g><g><title>iput (9 samples, 0.01%)</title><rect x="97.6235%" y="949" width="0.0128%" height="15" fill="rgb(205,115,49)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="959.50"></text></g><g><title>evict (9 samples, 0.01%)</title><rect x="97.6235%" y="933" width="0.0128%" height="15" fill="rgb(250,154,43)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="943.50"></text></g><g><title>ext4_evict_inode (9 samples, 0.01%)</title><rect x="97.6235%" y="917" width="0.0128%" height="15" fill="rgb(226,43,29)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="927.50"></text></g><g><title>truncate_inode_pages_final (9 samples, 0.01%)</title><rect x="97.6235%" y="901" width="0.0128%" height="15" fill="rgb(249,228,39)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="911.50"></text></g><g><title>truncate_inode_pages_range (9 samples, 0.01%)</title><rect x="97.6235%" y="885" width="0.0128%" height="15" fill="rgb(216,79,43)" fg:x="68438" fg:w="9"/><text x="97.8735%" y="895.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (8 samples, 0.01%)</title><rect x="97.6706%" y="1029" width="0.0114%" height="15" fill="rgb(228,95,12)" fg:x="68471" fg:w="8"/><text x="97.9206%" y="1039.50"></text></g><g><title>[unknown] (35 samples, 0.05%)</title><rect x="97.6364%" y="1221" width="0.0499%" height="15" fill="rgb(249,221,15)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35 samples, 0.05%)</title><rect x="97.6364%" y="1205" width="0.0499%" height="15" fill="rgb(233,34,13)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (35 samples, 0.05%)</title><rect x="97.6364%" y="1189" width="0.0499%" height="15" fill="rgb(214,103,39)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (35 samples, 0.05%)</title><rect x="97.6364%" y="1173" width="0.0499%" height="15" fill="rgb(251,126,39)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.05%)</title><rect x="97.6364%" y="1157" width="0.0499%" height="15" fill="rgb(214,216,36)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.05%)</title><rect x="97.6364%" y="1141" width="0.0499%" height="15" fill="rgb(220,221,8)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1151.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (35 samples, 0.05%)</title><rect x="97.6364%" y="1125" width="0.0499%" height="15" fill="rgb(240,216,3)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1135.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (35 samples, 0.05%)</title><rect x="97.6364%" y="1109" width="0.0499%" height="15" fill="rgb(232,218,17)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1119.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (35 samples, 0.05%)</title><rect x="97.6364%" y="1093" width="0.0499%" height="15" fill="rgb(229,163,45)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1103.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (35 samples, 0.05%)</title><rect x="97.6364%" y="1077" width="0.0499%" height="15" fill="rgb(231,110,42)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1087.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (35 samples, 0.05%)</title><rect x="97.6364%" y="1061" width="0.0499%" height="15" fill="rgb(208,170,48)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1071.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (35 samples, 0.05%)</title><rect x="97.6364%" y="1045" width="0.0499%" height="15" fill="rgb(239,116,25)" fg:x="68447" fg:w="35"/><text x="97.8864%" y="1055.50"></text></g><g><title>pow (25 samples, 0.04%)</title><rect x="97.7376%" y="1013" width="0.0357%" height="15" fill="rgb(219,200,50)" fg:x="68518" fg:w="25"/><text x="97.9876%" y="1023.50"></text></g><g><title>__iscanonicall (22 samples, 0.03%)</title><rect x="97.7419%" y="997" width="0.0314%" height="15" fill="rgb(245,200,0)" fg:x="68521" fg:w="22"/><text x="97.9919%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.01%)</title><rect x="97.7733%" y="1013" width="0.0114%" height="15" fill="rgb(245,119,33)" fg:x="68543" fg:w="8"/><text x="98.0233%" y="1023.50"></text></g><g><title>futex_wait_queue_me (131 samples, 0.19%)</title><rect x="97.8446%" y="837" width="0.1869%" height="15" fill="rgb(231,125,12)" fg:x="68593" fg:w="131"/><text x="98.0946%" y="847.50"></text></g><g><title>schedule (127 samples, 0.18%)</title><rect x="97.8503%" y="821" width="0.1812%" height="15" fill="rgb(216,96,41)" fg:x="68597" fg:w="127"/><text x="98.1003%" y="831.50"></text></g><g><title>__sched_text_start (127 samples, 0.18%)</title><rect x="97.8503%" y="805" width="0.1812%" height="15" fill="rgb(248,43,45)" fg:x="68597" fg:w="127"/><text x="98.1003%" y="815.50"></text></g><g><title>finish_task_switch (124 samples, 0.18%)</title><rect x="97.8546%" y="789" width="0.1769%" height="15" fill="rgb(217,222,7)" fg:x="68600" fg:w="124"/><text x="98.1046%" y="799.50"></text></g><g><title>do_futex (143 samples, 0.20%)</title><rect x="97.8361%" y="869" width="0.2040%" height="15" fill="rgb(233,28,6)" fg:x="68587" fg:w="143"/><text x="98.0861%" y="879.50"></text></g><g><title>futex_wait (140 samples, 0.20%)</title><rect x="97.8404%" y="853" width="0.1997%" height="15" fill="rgb(231,218,15)" fg:x="68590" fg:w="140"/><text x="98.0904%" y="863.50"></text></g><g><title>std::sys::unix::futex::futex_wait (153 samples, 0.22%)</title><rect x="97.8232%" y="949" width="0.2182%" height="15" fill="rgb(226,171,48)" fg:x="68578" fg:w="153"/><text x="98.0732%" y="959.50"></text></g><g><title>syscall (151 samples, 0.22%)</title><rect x="97.8261%" y="933" width="0.2154%" height="15" fill="rgb(235,201,9)" fg:x="68580" fg:w="151"/><text x="98.0761%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (147 samples, 0.21%)</title><rect x="97.8318%" y="917" width="0.2097%" height="15" fill="rgb(217,80,15)" fg:x="68584" fg:w="147"/><text x="98.0818%" y="927.50"></text></g><g><title>do_syscall_64 (147 samples, 0.21%)</title><rect x="97.8318%" y="901" width="0.2097%" height="15" fill="rgb(219,152,8)" fg:x="68584" fg:w="147"/><text x="98.0818%" y="911.50"></text></g><g><title>__x64_sys_futex (145 samples, 0.21%)</title><rect x="97.8346%" y="885" width="0.2068%" height="15" fill="rgb(243,107,38)" fg:x="68586" fg:w="145"/><text x="98.0846%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (156 samples, 0.22%)</title><rect x="97.8218%" y="981" width="0.2225%" height="15" fill="rgb(231,17,5)" fg:x="68577" fg:w="156"/><text x="98.0718%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (156 samples, 0.22%)</title><rect x="97.8218%" y="965" width="0.2225%" height="15" fill="rgb(209,25,54)" fg:x="68577" fg:w="156"/><text x="98.0718%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (14 samples, 0.02%)</title><rect x="98.0443%" y="981" width="0.0200%" height="15" fill="rgb(219,0,2)" fg:x="68733" fg:w="14"/><text x="98.2943%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.01%)</title><rect x="98.0657%" y="965" width="0.0114%" height="15" fill="rgb(246,9,5)" fg:x="68748" fg:w="8"/><text x="98.3157%" y="975.50"></text></g><g><title>ep_item_poll.isra.16 (19 samples, 0.03%)</title><rect x="98.1741%" y="805" width="0.0271%" height="15" fill="rgb(226,159,4)" fg:x="68824" fg:w="19"/><text x="98.4241%" y="815.50"></text></g><g><title>sock_poll (11 samples, 0.02%)</title><rect x="98.1856%" y="789" width="0.0157%" height="15" fill="rgb(219,175,34)" fg:x="68832" fg:w="11"/><text x="98.4356%" y="799.50"></text></g><g><title>ep_scan_ready_list.constprop.20 (34 samples, 0.05%)</title><rect x="98.1542%" y="837" width="0.0485%" height="15" fill="rgb(236,10,46)" fg:x="68810" fg:w="34"/><text x="98.4042%" y="847.50"></text></g><g><title>ep_send_events_proc (28 samples, 0.04%)</title><rect x="98.1627%" y="821" width="0.0399%" height="15" fill="rgb(240,211,16)" fg:x="68816" fg:w="28"/><text x="98.4127%" y="831.50"></text></g><g><title>schedule_hrtimeout_range (182 samples, 0.26%)</title><rect x="98.2041%" y="837" width="0.2596%" height="15" fill="rgb(205,3,43)" fg:x="68845" fg:w="182"/><text x="98.4541%" y="847.50"></text></g><g><title>schedule_hrtimeout_range_clock (182 samples, 0.26%)</title><rect x="98.2041%" y="821" width="0.2596%" height="15" fill="rgb(245,7,22)" fg:x="68845" fg:w="182"/><text x="98.4541%" y="831.50"></text></g><g><title>schedule (172 samples, 0.25%)</title><rect x="98.2184%" y="805" width="0.2453%" height="15" fill="rgb(239,132,32)" fg:x="68855" fg:w="172"/><text x="98.4684%" y="815.50"></text></g><g><title>__sched_text_start (169 samples, 0.24%)</title><rect x="98.2226%" y="789" width="0.2411%" height="15" fill="rgb(228,202,34)" fg:x="68858" fg:w="169"/><text x="98.4726%" y="799.50"></text></g><g><title>finish_task_switch (167 samples, 0.24%)</title><rect x="98.2255%" y="773" width="0.2382%" height="15" fill="rgb(254,200,22)" fg:x="68860" fg:w="167"/><text x="98.4755%" y="783.50"></text></g><g><title>ep_poll (225 samples, 0.32%)</title><rect x="98.1442%" y="853" width="0.3210%" height="15" fill="rgb(219,10,39)" fg:x="68803" fg:w="225"/><text x="98.3942%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (237 samples, 0.34%)</title><rect x="98.1342%" y="917" width="0.3381%" height="15" fill="rgb(226,210,39)" fg:x="68796" fg:w="237"/><text x="98.3842%" y="927.50"></text></g><g><title>do_syscall_64 (237 samples, 0.34%)</title><rect x="98.1342%" y="901" width="0.3381%" height="15" fill="rgb(208,219,16)" fg:x="68796" fg:w="237"/><text x="98.3842%" y="911.50"></text></g><g><title>__x64_sys_epoll_wait (234 samples, 0.33%)</title><rect x="98.1385%" y="885" width="0.3338%" height="15" fill="rgb(216,158,51)" fg:x="68799" fg:w="234"/><text x="98.3885%" y="895.50"></text></g><g><title>do_epoll_wait (234 samples, 0.33%)</title><rect x="98.1385%" y="869" width="0.3338%" height="15" fill="rgb(233,14,44)" fg:x="68799" fg:w="234"/><text x="98.3885%" y="879.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (258 samples, 0.37%)</title><rect x="98.1057%" y="949" width="0.3680%" height="15" fill="rgb(237,97,39)" fg:x="68776" fg:w="258"/><text x="98.3557%" y="959.50"></text></g><g><title>epoll_wait (250 samples, 0.36%)</title><rect x="98.1171%" y="933" width="0.3566%" height="15" fill="rgb(218,198,43)" fg:x="68784" fg:w="250"/><text x="98.3671%" y="943.50"></text></g><g><title>tokio::runtime::io::Driver::turn (277 samples, 0.40%)</title><rect x="98.0843%" y="965" width="0.3951%" height="15" fill="rgb(231,104,20)" fg:x="68761" fg:w="277"/><text x="98.3343%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (473 samples, 0.67%)</title><rect x="97.8075%" y="997" width="0.6747%" height="15" fill="rgb(254,36,13)" fg:x="68567" fg:w="473"/><text x="98.0575%" y="1007.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (293 samples, 0.42%)</title><rect x="98.0643%" y="981" width="0.4180%" height="15" fill="rgb(248,14,50)" fg:x="68747" fg:w="293"/><text x="98.3143%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (484 samples, 0.69%)</title><rect x="97.7933%" y="1013" width="0.6904%" height="15" fill="rgb(217,107,29)" fg:x="68557" fg:w="484"/><text x="98.0433%" y="1023.50"></text></g><g><title>__x64_sys_futex (102 samples, 0.15%)</title><rect x="98.4908%" y="949" width="0.1455%" height="15" fill="rgb(251,169,33)" fg:x="69046" fg:w="102"/><text x="98.7408%" y="959.50"></text></g><g><title>do_futex (102 samples, 0.15%)</title><rect x="98.4908%" y="933" width="0.1455%" height="15" fill="rgb(217,108,32)" fg:x="69046" fg:w="102"/><text x="98.7408%" y="943.50"></text></g><g><title>futex_wake (101 samples, 0.14%)</title><rect x="98.4922%" y="917" width="0.1441%" height="15" fill="rgb(219,66,42)" fg:x="69047" fg:w="101"/><text x="98.7422%" y="927.50"></text></g><g><title>wake_up_q (97 samples, 0.14%)</title><rect x="98.4979%" y="901" width="0.1384%" height="15" fill="rgb(206,180,7)" fg:x="69051" fg:w="97"/><text x="98.7479%" y="911.50"></text></g><g><title>try_to_wake_up (96 samples, 0.14%)</title><rect x="98.4994%" y="885" width="0.1369%" height="15" fill="rgb(208,226,31)" fg:x="69052" fg:w="96"/><text x="98.7494%" y="895.50"></text></g><g><title>__lock_text_start (96 samples, 0.14%)</title><rect x="98.4994%" y="869" width="0.1369%" height="15" fill="rgb(218,26,49)" fg:x="69052" fg:w="96"/><text x="98.7494%" y="879.50"></text></g><g><title>syscall (105 samples, 0.15%)</title><rect x="98.4880%" y="997" width="0.1498%" height="15" fill="rgb(233,197,48)" fg:x="69044" fg:w="105"/><text x="98.7380%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (103 samples, 0.15%)</title><rect x="98.4908%" y="981" width="0.1469%" height="15" fill="rgb(252,181,51)" fg:x="69046" fg:w="103"/><text x="98.7408%" y="991.50"></text></g><g><title>do_syscall_64 (103 samples, 0.15%)</title><rect x="98.4908%" y="965" width="0.1469%" height="15" fill="rgb(253,90,19)" fg:x="69046" fg:w="103"/><text x="98.7408%" y="975.50"></text></g><g><title>__vfs_write (40 samples, 0.06%)</title><rect x="98.6549%" y="821" width="0.0571%" height="15" fill="rgb(215,171,30)" fg:x="69161" fg:w="40"/><text x="98.9049%" y="831.50"></text></g><g><title>eventfd_write (40 samples, 0.06%)</title><rect x="98.6549%" y="805" width="0.0571%" height="15" fill="rgb(214,222,9)" fg:x="69161" fg:w="40"/><text x="98.9049%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (52 samples, 0.07%)</title><rect x="98.6406%" y="997" width="0.0742%" height="15" fill="rgb(223,3,22)" fg:x="69151" fg:w="52"/><text x="98.8906%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (48 samples, 0.07%)</title><rect x="98.6463%" y="981" width="0.0685%" height="15" fill="rgb(225,196,46)" fg:x="69155" fg:w="48"/><text x="98.8963%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (48 samples, 0.07%)</title><rect x="98.6463%" y="965" width="0.0685%" height="15" fill="rgb(209,110,37)" fg:x="69155" fg:w="48"/><text x="98.8963%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (48 samples, 0.07%)</title><rect x="98.6463%" y="949" width="0.0685%" height="15" fill="rgb(249,89,12)" fg:x="69155" fg:w="48"/><text x="98.8963%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (48 samples, 0.07%)</title><rect x="98.6463%" y="933" width="0.0685%" height="15" fill="rgb(226,27,33)" fg:x="69155" fg:w="48"/><text x="98.8963%" y="943.50"></text></g><g><title>__libc_write (48 samples, 0.07%)</title><rect x="98.6463%" y="917" width="0.0685%" height="15" fill="rgb(213,82,22)" fg:x="69155" fg:w="48"/><text x="98.8963%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.07%)</title><rect x="98.6477%" y="901" width="0.0670%" height="15" fill="rgb(248,140,0)" fg:x="69156" fg:w="47"/><text x="98.8977%" y="911.50"></text></g><g><title>do_syscall_64 (47 samples, 0.07%)</title><rect x="98.6477%" y="885" width="0.0670%" height="15" fill="rgb(228,106,3)" fg:x="69156" fg:w="47"/><text x="98.8977%" y="895.50"></text></g><g><title>__x64_sys_write (47 samples, 0.07%)</title><rect x="98.6477%" y="869" width="0.0670%" height="15" fill="rgb(209,23,37)" fg:x="69156" fg:w="47"/><text x="98.8977%" y="879.50"></text></g><g><title>ksys_write (47 samples, 0.07%)</title><rect x="98.6477%" y="853" width="0.0670%" height="15" fill="rgb(241,93,50)" fg:x="69156" fg:w="47"/><text x="98.8977%" y="863.50"></text></g><g><title>vfs_write (42 samples, 0.06%)</title><rect x="98.6549%" y="837" width="0.0599%" height="15" fill="rgb(253,46,43)" fg:x="69161" fg:w="42"/><text x="98.9049%" y="847.50"></text></g><g><title>futex_wake (32 samples, 0.05%)</title><rect x="98.7961%" y="741" width="0.0456%" height="15" fill="rgb(226,206,43)" fg:x="69260" fg:w="32"/><text x="99.0461%" y="751.50"></text></g><g><title>wake_up_q (28 samples, 0.04%)</title><rect x="98.8018%" y="725" width="0.0399%" height="15" fill="rgb(217,54,7)" fg:x="69264" fg:w="28"/><text x="99.0518%" y="735.50"></text></g><g><title>try_to_wake_up (28 samples, 0.04%)</title><rect x="98.8018%" y="709" width="0.0399%" height="15" fill="rgb(223,5,52)" fg:x="69264" fg:w="28"/><text x="99.0518%" y="719.50"></text></g><g><title>__lock_text_start (28 samples, 0.04%)</title><rect x="98.8018%" y="693" width="0.0399%" height="15" fill="rgb(206,52,46)" fg:x="69264" fg:w="28"/><text x="99.0518%" y="703.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (43 samples, 0.06%)</title><rect x="98.7818%" y="869" width="0.0613%" height="15" fill="rgb(253,136,11)" fg:x="69250" fg:w="43"/><text x="99.0318%" y="879.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (35 samples, 0.05%)</title><rect x="98.7932%" y="853" width="0.0499%" height="15" fill="rgb(208,106,33)" fg:x="69258" fg:w="35"/><text x="99.0432%" y="863.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (35 samples, 0.05%)</title><rect x="98.7932%" y="837" width="0.0499%" height="15" fill="rgb(206,54,4)" fg:x="69258" fg:w="35"/><text x="99.0432%" y="847.50"></text></g><g><title>syscall (34 samples, 0.05%)</title><rect x="98.7946%" y="821" width="0.0485%" height="15" fill="rgb(213,3,15)" fg:x="69259" fg:w="34"/><text x="99.0446%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.05%)</title><rect x="98.7946%" y="805" width="0.0485%" height="15" fill="rgb(252,211,39)" fg:x="69259" fg:w="34"/><text x="99.0446%" y="815.50"></text></g><g><title>do_syscall_64 (34 samples, 0.05%)</title><rect x="98.7946%" y="789" width="0.0485%" height="15" fill="rgb(223,6,36)" fg:x="69259" fg:w="34"/><text x="99.0446%" y="799.50"></text></g><g><title>__x64_sys_futex (34 samples, 0.05%)</title><rect x="98.7946%" y="773" width="0.0485%" height="15" fill="rgb(252,169,45)" fg:x="69259" fg:w="34"/><text x="99.0446%" y="783.50"></text></g><g><title>do_futex (34 samples, 0.05%)</title><rect x="98.7946%" y="757" width="0.0485%" height="15" fill="rgb(212,48,26)" fg:x="69259" fg:w="34"/><text x="99.0446%" y="767.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (44 samples, 0.06%)</title><rect x="98.7818%" y="885" width="0.0628%" height="15" fill="rgb(251,102,48)" fg:x="69250" fg:w="44"/><text x="99.0318%" y="895.50"></text></g><g><title>futures_channel::mpsc::channel (8 samples, 0.01%)</title><rect x="98.8588%" y="869" width="0.0114%" height="15" fill="rgb(243,208,16)" fg:x="69304" fg:w="8"/><text x="99.1088%" y="879.50"></text></g><g><title>__libc_malloc (8 samples, 0.01%)</title><rect x="98.8588%" y="853" width="0.0114%" height="15" fill="rgb(219,96,24)" fg:x="69304" fg:w="8"/><text x="99.1088%" y="863.50"></text></g><g><title>hyper::body::body::Body::new_channel (13 samples, 0.02%)</title><rect x="98.8531%" y="885" width="0.0185%" height="15" fill="rgb(219,33,29)" fg:x="69300" fg:w="13"/><text x="99.1031%" y="895.50"></text></g><g><title>futex_wake (23 samples, 0.03%)</title><rect x="98.8931%" y="757" width="0.0328%" height="15" fill="rgb(223,176,5)" fg:x="69328" fg:w="23"/><text x="99.1431%" y="767.50"></text></g><g><title>wake_up_q (21 samples, 0.03%)</title><rect x="98.8959%" y="741" width="0.0300%" height="15" fill="rgb(228,140,14)" fg:x="69330" fg:w="21"/><text x="99.1459%" y="751.50"></text></g><g><title>try_to_wake_up (21 samples, 0.03%)</title><rect x="98.8959%" y="725" width="0.0300%" height="15" fill="rgb(217,179,31)" fg:x="69330" fg:w="21"/><text x="99.1459%" y="735.50"></text></g><g><title>__lock_text_start (21 samples, 0.03%)</title><rect x="98.8959%" y="709" width="0.0300%" height="15" fill="rgb(230,9,30)" fg:x="69330" fg:w="21"/><text x="99.1459%" y="719.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (34 samples, 0.05%)</title><rect x="98.8788%" y="885" width="0.0485%" height="15" fill="rgb(230,136,20)" fg:x="69318" fg:w="34"/><text x="99.1288%" y="895.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (34 samples, 0.05%)</title><rect x="98.8788%" y="869" width="0.0485%" height="15" fill="rgb(215,210,22)" fg:x="69318" fg:w="34"/><text x="99.1288%" y="879.50"></text></g><g><title>tokio::runtime::park::wake (26 samples, 0.04%)</title><rect x="98.8902%" y="853" width="0.0371%" height="15" fill="rgb(218,43,5)" fg:x="69326" fg:w="26"/><text x="99.1402%" y="863.50"></text></g><g><title>syscall (26 samples, 0.04%)</title><rect x="98.8902%" y="837" width="0.0371%" height="15" fill="rgb(216,11,5)" fg:x="69326" fg:w="26"/><text x="99.1402%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.04%)</title><rect x="98.8902%" y="821" width="0.0371%" height="15" fill="rgb(209,82,29)" fg:x="69326" fg:w="26"/><text x="99.1402%" y="831.50"></text></g><g><title>do_syscall_64 (26 samples, 0.04%)</title><rect x="98.8902%" y="805" width="0.0371%" height="15" fill="rgb(244,115,12)" fg:x="69326" fg:w="26"/><text x="99.1402%" y="815.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.04%)</title><rect x="98.8916%" y="789" width="0.0357%" height="15" fill="rgb(222,82,18)" fg:x="69327" fg:w="25"/><text x="99.1416%" y="799.50"></text></g><g><title>do_futex (25 samples, 0.04%)</title><rect x="98.8916%" y="773" width="0.0357%" height="15" fill="rgb(249,227,8)" fg:x="69327" fg:w="25"/><text x="99.1416%" y="783.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (8 samples, 0.01%)</title><rect x="98.9430%" y="853" width="0.0114%" height="15" fill="rgb(253,141,45)" fg:x="69363" fg:w="8"/><text x="99.1930%" y="863.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.02%)</title><rect x="98.9387%" y="869" width="0.0185%" height="15" fill="rgb(234,184,4)" fg:x="69360" fg:w="13"/><text x="99.1887%" y="879.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (24 samples, 0.03%)</title><rect x="98.9273%" y="885" width="0.0342%" height="15" fill="rgb(218,194,23)" fg:x="69352" fg:w="24"/><text x="99.1773%" y="895.50"></text></g><g><title>__ip_local_out (8 samples, 0.01%)</title><rect x="99.0400%" y="421" width="0.0114%" height="15" fill="rgb(235,66,41)" fg:x="69431" fg:w="8"/><text x="99.2900%" y="431.50"></text></g><g><title>tcp_data_queue (9 samples, 0.01%)</title><rect x="99.0742%" y="101" width="0.0128%" height="15" fill="rgb(245,217,1)" fg:x="69455" fg:w="9"/><text x="99.3242%" y="111.50"></text></g><g><title>tcp_data_ready (9 samples, 0.01%)</title><rect x="99.0742%" y="85" width="0.0128%" height="15" fill="rgb(229,91,1)" fg:x="69455" fg:w="9"/><text x="99.3242%" y="95.50"></text></g><g><title>sock_def_readable (9 samples, 0.01%)</title><rect x="99.0742%" y="69" width="0.0128%" height="15" fill="rgb(207,101,30)" fg:x="69455" fg:w="9"/><text x="99.3242%" y="79.50"></text></g><g><title>tcp_data_ready (13 samples, 0.02%)</title><rect x="99.0871%" y="101" width="0.0185%" height="15" fill="rgb(223,82,49)" fg:x="69464" fg:w="13"/><text x="99.3371%" y="111.50"></text></g><g><title>sock_def_readable (13 samples, 0.02%)</title><rect x="99.0871%" y="85" width="0.0185%" height="15" fill="rgb(218,167,17)" fg:x="69464" fg:w="13"/><text x="99.3371%" y="95.50"></text></g><g><title>__wake_up_sync_key (11 samples, 0.02%)</title><rect x="99.0899%" y="69" width="0.0157%" height="15" fill="rgb(208,103,14)" fg:x="69466" fg:w="11"/><text x="99.3399%" y="79.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.02%)</title><rect x="99.0899%" y="53" width="0.0157%" height="15" fill="rgb(238,20,8)" fg:x="69466" fg:w="11"/><text x="99.3399%" y="63.50"></text></g><g><title>__lock_text_start (11 samples, 0.02%)</title><rect x="99.0899%" y="37" width="0.0157%" height="15" fill="rgb(218,80,54)" fg:x="69466" fg:w="11"/><text x="99.3399%" y="47.50"></text></g><g><title>ip_local_deliver_finish (32 samples, 0.05%)</title><rect x="99.0614%" y="181" width="0.0456%" height="15" fill="rgb(240,144,17)" fg:x="69446" fg:w="32"/><text x="99.3114%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (32 samples, 0.05%)</title><rect x="99.0614%" y="165" width="0.0456%" height="15" fill="rgb(245,27,50)" fg:x="69446" fg:w="32"/><text x="99.3114%" y="175.50"></text></g><g><title>tcp_v4_rcv (31 samples, 0.04%)</title><rect x="99.0628%" y="149" width="0.0442%" height="15" fill="rgb(251,51,7)" fg:x="69447" fg:w="31"/><text x="99.3128%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (26 samples, 0.04%)</title><rect x="99.0700%" y="133" width="0.0371%" height="15" fill="rgb(245,217,29)" fg:x="69452" fg:w="26"/><text x="99.3200%" y="143.50"></text></g><g><title>tcp_rcv_established (26 samples, 0.04%)</title><rect x="99.0700%" y="117" width="0.0371%" height="15" fill="rgb(221,176,29)" fg:x="69452" fg:w="26"/><text x="99.3200%" y="127.50"></text></g><g><title>ip_rcv_finish (34 samples, 0.05%)</title><rect x="99.0614%" y="213" width="0.0485%" height="15" fill="rgb(212,180,24)" fg:x="69446" fg:w="34"/><text x="99.3114%" y="223.50"></text></g><g><title>ip_local_deliver (34 samples, 0.05%)</title><rect x="99.0614%" y="197" width="0.0485%" height="15" fill="rgb(254,24,2)" fg:x="69446" fg:w="34"/><text x="99.3114%" y="207.50"></text></g><g><title>__netif_receive_skb (37 samples, 0.05%)</title><rect x="99.0585%" y="261" width="0.0528%" height="15" fill="rgb(230,100,2)" fg:x="69444" fg:w="37"/><text x="99.3085%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (37 samples, 0.05%)</title><rect x="99.0585%" y="245" width="0.0528%" height="15" fill="rgb(219,142,25)" fg:x="69444" fg:w="37"/><text x="99.3085%" y="255.50"></text></g><g><title>ip_rcv (35 samples, 0.05%)</title><rect x="99.0614%" y="229" width="0.0499%" height="15" fill="rgb(240,73,43)" fg:x="69446" fg:w="35"/><text x="99.3114%" y="239.50"></text></g><g><title>__softirqentry_text_start (42 samples, 0.06%)</title><rect x="99.0528%" y="309" width="0.0599%" height="15" fill="rgb(214,114,15)" fg:x="69440" fg:w="42"/><text x="99.3028%" y="319.50"></text></g><g><title>net_rx_action (39 samples, 0.06%)</title><rect x="99.0571%" y="293" width="0.0556%" height="15" fill="rgb(207,130,4)" fg:x="69443" fg:w="39"/><text x="99.3071%" y="303.50"></text></g><g><title>process_backlog (38 samples, 0.05%)</title><rect x="99.0585%" y="277" width="0.0542%" height="15" fill="rgb(221,25,40)" fg:x="69444" fg:w="38"/><text x="99.3085%" y="287.50"></text></g><g><title>__local_bh_enable_ip (43 samples, 0.06%)</title><rect x="99.0528%" y="357" width="0.0613%" height="15" fill="rgb(241,184,7)" fg:x="69440" fg:w="43"/><text x="99.3028%" y="367.50"></text></g><g><title>do_softirq.part.20 (43 samples, 0.06%)</title><rect x="99.0528%" y="341" width="0.0613%" height="15" fill="rgb(235,159,4)" fg:x="69440" fg:w="43"/><text x="99.3028%" y="351.50"></text></g><g><title>do_softirq_own_stack (43 samples, 0.06%)</title><rect x="99.0528%" y="325" width="0.0613%" height="15" fill="rgb(214,87,48)" fg:x="69440" fg:w="43"/><text x="99.3028%" y="335.50"></text></g><g><title>ip_finish_output (47 samples, 0.07%)</title><rect x="99.0528%" y="405" width="0.0670%" height="15" fill="rgb(246,198,24)" fg:x="69440" fg:w="47"/><text x="99.3028%" y="415.50"></text></g><g><title>__ip_finish_output (47 samples, 0.07%)</title><rect x="99.0528%" y="389" width="0.0670%" height="15" fill="rgb(209,66,40)" fg:x="69440" fg:w="47"/><text x="99.3028%" y="399.50"></text></g><g><title>ip_finish_output2 (47 samples, 0.07%)</title><rect x="99.0528%" y="373" width="0.0670%" height="15" fill="rgb(233,147,39)" fg:x="69440" fg:w="47"/><text x="99.3028%" y="383.50"></text></g><g><title>ip_output (49 samples, 0.07%)</title><rect x="99.0528%" y="421" width="0.0699%" height="15" fill="rgb(231,145,52)" fg:x="69440" fg:w="49"/><text x="99.3028%" y="431.50"></text></g><g><title>__tcp_transmit_skb (59 samples, 0.08%)</title><rect x="99.0400%" y="485" width="0.0842%" height="15" fill="rgb(206,20,26)" fg:x="69431" fg:w="59"/><text x="99.2900%" y="495.50"></text></g><g><title>ip_queue_xmit (59 samples, 0.08%)</title><rect x="99.0400%" y="469" width="0.0842%" height="15" fill="rgb(238,220,4)" fg:x="69431" fg:w="59"/><text x="99.2900%" y="479.50"></text></g><g><title>__ip_queue_xmit (59 samples, 0.08%)</title><rect x="99.0400%" y="453" width="0.0842%" height="15" fill="rgb(252,195,42)" fg:x="69431" fg:w="59"/><text x="99.2900%" y="463.50"></text></g><g><title>ip_local_out (59 samples, 0.08%)</title><rect x="99.0400%" y="437" width="0.0842%" height="15" fill="rgb(209,10,6)" fg:x="69431" fg:w="59"/><text x="99.2900%" y="447.50"></text></g><g><title>tcp_push (66 samples, 0.09%)</title><rect x="99.0357%" y="533" width="0.0941%" height="15" fill="rgb(229,3,52)" fg:x="69428" fg:w="66"/><text x="99.2857%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (66 samples, 0.09%)</title><rect x="99.0357%" y="517" width="0.0941%" height="15" fill="rgb(253,49,37)" fg:x="69428" fg:w="66"/><text x="99.2857%" y="527.50"></text></g><g><title>tcp_write_xmit (66 samples, 0.09%)</title><rect x="99.0357%" y="501" width="0.0941%" height="15" fill="rgb(240,103,49)" fg:x="69428" fg:w="66"/><text x="99.2857%" y="511.50"></text></g><g><title>do_iter_readv_writev (94 samples, 0.13%)</title><rect x="99.0001%" y="629" width="0.1341%" height="15" fill="rgb(250,182,30)" fg:x="69403" fg:w="94"/><text x="99.2501%" y="639.50"></text></g><g><title>sock_write_iter (93 samples, 0.13%)</title><rect x="99.0015%" y="613" width="0.1327%" height="15" fill="rgb(248,8,30)" fg:x="69404" fg:w="93"/><text x="99.2515%" y="623.50"></text></g><g><title>sock_sendmsg (91 samples, 0.13%)</title><rect x="99.0043%" y="597" width="0.1298%" height="15" fill="rgb(237,120,30)" fg:x="69406" fg:w="91"/><text x="99.2543%" y="607.50"></text></g><g><title>inet_sendmsg (91 samples, 0.13%)</title><rect x="99.0043%" y="581" width="0.1298%" height="15" fill="rgb(221,146,34)" fg:x="69406" fg:w="91"/><text x="99.2543%" y="591.50"></text></g><g><title>tcp_sendmsg (90 samples, 0.13%)</title><rect x="99.0058%" y="565" width="0.1284%" height="15" fill="rgb(242,55,13)" fg:x="69407" fg:w="90"/><text x="99.2558%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (83 samples, 0.12%)</title><rect x="99.0157%" y="549" width="0.1184%" height="15" fill="rgb(242,112,31)" fg:x="69414" fg:w="83"/><text x="99.2657%" y="559.50"></text></g><g><title>do_iter_write (98 samples, 0.14%)</title><rect x="98.9986%" y="645" width="0.1398%" height="15" fill="rgb(249,192,27)" fg:x="69402" fg:w="98"/><text x="99.2486%" y="655.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (123 samples, 0.18%)</title><rect x="98.9644%" y="885" width="0.1755%" height="15" fill="rgb(208,204,44)" fg:x="69378" fg:w="123"/><text x="99.2144%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (118 samples, 0.17%)</title><rect x="98.9715%" y="869" width="0.1683%" height="15" fill="rgb(208,93,54)" fg:x="69383" fg:w="118"/><text x="99.2215%" y="879.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (107 samples, 0.15%)</title><rect x="98.9872%" y="853" width="0.1526%" height="15" fill="rgb(242,1,31)" fg:x="69394" fg:w="107"/><text x="99.2372%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (107 samples, 0.15%)</title><rect x="98.9872%" y="837" width="0.1526%" height="15" fill="rgb(241,83,25)" fg:x="69394" fg:w="107"/><text x="99.2372%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (106 samples, 0.15%)</title><rect x="98.9886%" y="821" width="0.1512%" height="15" fill="rgb(205,169,50)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (106 samples, 0.15%)</title><rect x="98.9886%" y="805" width="0.1512%" height="15" fill="rgb(239,186,37)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::write_vectored (106 samples, 0.15%)</title><rect x="98.9886%" y="789" width="0.1512%" height="15" fill="rgb(205,221,10)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::write_vectored (106 samples, 0.15%)</title><rect x="98.9886%" y="773" width="0.1512%" height="15" fill="rgb(218,196,15)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="783.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (106 samples, 0.15%)</title><rect x="98.9886%" y="757" width="0.1512%" height="15" fill="rgb(218,196,35)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="767.50"></text></g><g><title>writev (106 samples, 0.15%)</title><rect x="98.9886%" y="741" width="0.1512%" height="15" fill="rgb(233,63,24)" fg:x="69395" fg:w="106"/><text x="99.2386%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (105 samples, 0.15%)</title><rect x="98.9901%" y="725" width="0.1498%" height="15" fill="rgb(225,8,4)" fg:x="69396" fg:w="105"/><text x="99.2401%" y="735.50"></text></g><g><title>do_syscall_64 (105 samples, 0.15%)</title><rect x="98.9901%" y="709" width="0.1498%" height="15" fill="rgb(234,105,35)" fg:x="69396" fg:w="105"/><text x="99.2401%" y="719.50"></text></g><g><title>__x64_sys_writev (104 samples, 0.15%)</title><rect x="98.9915%" y="693" width="0.1484%" height="15" fill="rgb(236,21,32)" fg:x="69397" fg:w="104"/><text x="99.2415%" y="703.50"></text></g><g><title>do_writev (104 samples, 0.15%)</title><rect x="98.9915%" y="677" width="0.1484%" height="15" fill="rgb(228,109,6)" fg:x="69397" fg:w="104"/><text x="99.2415%" y="687.50"></text></g><g><title>vfs_writev (100 samples, 0.14%)</title><rect x="98.9972%" y="661" width="0.1426%" height="15" fill="rgb(229,215,31)" fg:x="69401" fg:w="100"/><text x="99.2472%" y="671.50"></text></g><g><title>__libc_malloc (8 samples, 0.01%)</title><rect x="99.1627%" y="805" width="0.0114%" height="15" fill="rgb(221,52,54)" fg:x="69517" fg:w="8"/><text x="99.4127%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (10 samples, 0.01%)</title><rect x="99.1612%" y="821" width="0.0143%" height="15" fill="rgb(252,129,43)" fg:x="69516" fg:w="10"/><text x="99.4112%" y="831.50"></text></g><g><title>__put_page (9 samples, 0.01%)</title><rect x="99.1941%" y="549" width="0.0128%" height="15" fill="rgb(248,183,27)" fg:x="69539" fg:w="9"/><text x="99.4441%" y="559.50"></text></g><g><title>__put_compound_page (9 samples, 0.01%)</title><rect x="99.1941%" y="533" width="0.0128%" height="15" fill="rgb(250,0,22)" fg:x="69539" fg:w="9"/><text x="99.4441%" y="543.50"></text></g><g><title>free_compound_page (9 samples, 0.01%)</title><rect x="99.1941%" y="517" width="0.0128%" height="15" fill="rgb(213,166,10)" fg:x="69539" fg:w="9"/><text x="99.4441%" y="527.50"></text></g><g><title>__free_pages_ok (9 samples, 0.01%)</title><rect x="99.1941%" y="501" width="0.0128%" height="15" fill="rgb(207,163,36)" fg:x="69539" fg:w="9"/><text x="99.4441%" y="511.50"></text></g><g><title>skb_release_data (14 samples, 0.02%)</title><rect x="99.1941%" y="565" width="0.0200%" height="15" fill="rgb(208,122,22)" fg:x="69539" fg:w="14"/><text x="99.4441%" y="575.50"></text></g><g><title>skb_release_all (17 samples, 0.02%)</title><rect x="99.1941%" y="581" width="0.0242%" height="15" fill="rgb(207,104,49)" fg:x="69539" fg:w="17"/><text x="99.4441%" y="591.50"></text></g><g><title>__kfree_skb (19 samples, 0.03%)</title><rect x="99.1926%" y="597" width="0.0271%" height="15" fill="rgb(248,211,50)" fg:x="69538" fg:w="19"/><text x="99.4426%" y="607.50"></text></g><g><title>tcp_data_ready (14 samples, 0.02%)</title><rect x="99.2269%" y="533" width="0.0200%" height="15" fill="rgb(217,13,45)" fg:x="69562" fg:w="14"/><text x="99.4769%" y="543.50"></text></g><g><title>sock_def_readable (14 samples, 0.02%)</title><rect x="99.2269%" y="517" width="0.0200%" height="15" fill="rgb(211,216,49)" fg:x="69562" fg:w="14"/><text x="99.4769%" y="527.50"></text></g><g><title>__wake_up_sync_key (14 samples, 0.02%)</title><rect x="99.2269%" y="501" width="0.0200%" height="15" fill="rgb(221,58,53)" fg:x="69562" fg:w="14"/><text x="99.4769%" y="511.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.02%)</title><rect x="99.2269%" y="485" width="0.0200%" height="15" fill="rgb(220,112,41)" fg:x="69562" fg:w="14"/><text x="99.4769%" y="495.50"></text></g><g><title>__lock_text_start (14 samples, 0.02%)</title><rect x="99.2269%" y="469" width="0.0200%" height="15" fill="rgb(236,38,28)" fg:x="69562" fg:w="14"/><text x="99.4769%" y="479.50"></text></g><g><title>__release_sock (19 samples, 0.03%)</title><rect x="99.2212%" y="581" width="0.0271%" height="15" fill="rgb(227,195,22)" fg:x="69558" fg:w="19"/><text x="99.4712%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (19 samples, 0.03%)</title><rect x="99.2212%" y="565" width="0.0271%" height="15" fill="rgb(214,55,33)" fg:x="69558" fg:w="19"/><text x="99.4712%" y="575.50"></text></g><g><title>tcp_rcv_established (19 samples, 0.03%)</title><rect x="99.2212%" y="549" width="0.0271%" height="15" fill="rgb(248,80,13)" fg:x="69558" fg:w="19"/><text x="99.4712%" y="559.50"></text></g><g><title>release_sock (21 samples, 0.03%)</title><rect x="99.2212%" y="597" width="0.0300%" height="15" fill="rgb(238,52,6)" fg:x="69558" fg:w="21"/><text x="99.4712%" y="607.50"></text></g><g><title>copy_user_enhanced_fast_string (203 samples, 0.29%)</title><rect x="99.2682%" y="533" width="0.2896%" height="15" fill="rgb(224,198,47)" fg:x="69591" fg:w="203"/><text x="99.5182%" y="543.50"></text></g><g><title>_copy_to_iter (206 samples, 0.29%)</title><rect x="99.2654%" y="549" width="0.2938%" height="15" fill="rgb(233,171,20)" fg:x="69589" fg:w="206"/><text x="99.5154%" y="559.50"></text></g><g><title>__skb_datagram_iter (217 samples, 0.31%)</title><rect x="99.2511%" y="581" width="0.3095%" height="15" fill="rgb(241,30,25)" fg:x="69579" fg:w="217"/><text x="99.5011%" y="591.50"></text></g><g><title>simple_copy_to_iter (215 samples, 0.31%)</title><rect x="99.2540%" y="565" width="0.3067%" height="15" fill="rgb(207,171,38)" fg:x="69581" fg:w="215"/><text x="99.5040%" y="575.50"></text></g><g><title>skb_copy_datagram_iter (218 samples, 0.31%)</title><rect x="99.2511%" y="597" width="0.3110%" height="15" fill="rgb(234,70,1)" fg:x="69579" fg:w="218"/><text x="99.5011%" y="607.50"></text></g><g><title>__tcp_push_pending_frames (8 samples, 0.01%)</title><rect x="99.5949%" y="165" width="0.0114%" height="15" fill="rgb(232,178,18)" fg:x="69820" fg:w="8"/><text x="99.8449%" y="175.50"></text></g><g><title>__kfree_skb (9 samples, 0.01%)</title><rect x="99.6120%" y="133" width="0.0128%" height="15" fill="rgb(241,78,40)" fg:x="69832" fg:w="9"/><text x="99.8620%" y="143.50"></text></g><g><title>tcp_ack (15 samples, 0.02%)</title><rect x="99.6063%" y="165" width="0.0214%" height="15" fill="rgb(222,35,25)" fg:x="69828" fg:w="15"/><text x="99.8563%" y="175.50"></text></g><g><title>tcp_clean_rtx_queue (13 samples, 0.02%)</title><rect x="99.6092%" y="149" width="0.0185%" height="15" fill="rgb(207,92,16)" fg:x="69830" fg:w="13"/><text x="99.8592%" y="159.50"></text></g><g><title>ip_protocol_deliver_rcu (31 samples, 0.04%)</title><rect x="99.5849%" y="229" width="0.0442%" height="15" fill="rgb(216,59,51)" fg:x="69813" fg:w="31"/><text x="99.8349%" y="239.50"></text></g><g><title>tcp_v4_rcv (31 samples, 0.04%)</title><rect x="99.5849%" y="213" width="0.0442%" height="15" fill="rgb(213,80,28)" fg:x="69813" fg:w="31"/><text x="99.8349%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (26 samples, 0.04%)</title><rect x="99.5920%" y="197" width="0.0371%" height="15" fill="rgb(220,93,7)" fg:x="69818" fg:w="26"/><text x="99.8420%" y="207.50"></text></g><g><title>tcp_rcv_established (25 samples, 0.04%)</title><rect x="99.5935%" y="181" width="0.0357%" height="15" fill="rgb(225,24,44)" fg:x="69819" fg:w="25"/><text x="99.8435%" y="191.50"></text></g><g><title>ip_local_deliver_finish (32 samples, 0.05%)</title><rect x="99.5849%" y="245" width="0.0456%" height="15" fill="rgb(243,74,40)" fg:x="69813" fg:w="32"/><text x="99.8349%" y="255.50"></text></g><g><title>ip_rcv_finish (34 samples, 0.05%)</title><rect x="99.5849%" y="277" width="0.0485%" height="15" fill="rgb(228,39,7)" fg:x="69813" fg:w="34"/><text x="99.8349%" y="287.50"></text></g><g><title>ip_local_deliver (34 samples, 0.05%)</title><rect x="99.5849%" y="261" width="0.0485%" height="15" fill="rgb(227,79,8)" fg:x="69813" fg:w="34"/><text x="99.8349%" y="271.50"></text></g><g><title>__local_bh_enable_ip (36 samples, 0.05%)</title><rect x="99.5849%" y="421" width="0.0514%" height="15" fill="rgb(236,58,11)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="431.50"></text></g><g><title>do_softirq.part.20 (36 samples, 0.05%)</title><rect x="99.5849%" y="405" width="0.0514%" height="15" fill="rgb(249,63,35)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="415.50"></text></g><g><title>do_softirq_own_stack (36 samples, 0.05%)</title><rect x="99.5849%" y="389" width="0.0514%" height="15" fill="rgb(252,114,16)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="399.50"></text></g><g><title>__softirqentry_text_start (36 samples, 0.05%)</title><rect x="99.5849%" y="373" width="0.0514%" height="15" fill="rgb(254,151,24)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="383.50"></text></g><g><title>net_rx_action (36 samples, 0.05%)</title><rect x="99.5849%" y="357" width="0.0514%" height="15" fill="rgb(253,54,39)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="367.50"></text></g><g><title>process_backlog (36 samples, 0.05%)</title><rect x="99.5849%" y="341" width="0.0514%" height="15" fill="rgb(243,25,45)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="351.50"></text></g><g><title>__netif_receive_skb (36 samples, 0.05%)</title><rect x="99.5849%" y="325" width="0.0514%" height="15" fill="rgb(234,134,9)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (36 samples, 0.05%)</title><rect x="99.5849%" y="309" width="0.0514%" height="15" fill="rgb(227,166,31)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="319.50"></text></g><g><title>ip_rcv (36 samples, 0.05%)</title><rect x="99.5849%" y="293" width="0.0514%" height="15" fill="rgb(245,143,41)" fg:x="69813" fg:w="36"/><text x="99.8349%" y="303.50"></text></g><g><title>ip_finish_output (41 samples, 0.06%)</title><rect x="99.5835%" y="469" width="0.0585%" height="15" fill="rgb(238,181,32)" fg:x="69812" fg:w="41"/><text x="99.8335%" y="479.50"></text></g><g><title>__ip_finish_output (41 samples, 0.06%)</title><rect x="99.5835%" y="453" width="0.0585%" height="15" fill="rgb(224,113,18)" fg:x="69812" fg:w="41"/><text x="99.8335%" y="463.50"></text></g><g><title>ip_finish_output2 (41 samples, 0.06%)</title><rect x="99.5835%" y="437" width="0.0585%" height="15" fill="rgb(240,229,28)" fg:x="69812" fg:w="41"/><text x="99.8335%" y="447.50"></text></g><g><title>ip_local_out (48 samples, 0.07%)</title><rect x="99.5749%" y="501" width="0.0685%" height="15" fill="rgb(250,185,3)" fg:x="69806" fg:w="48"/><text x="99.8249%" y="511.50"></text></g><g><title>ip_output (42 samples, 0.06%)</title><rect x="99.5835%" y="485" width="0.0599%" height="15" fill="rgb(212,59,25)" fg:x="69812" fg:w="42"/><text x="99.8335%" y="495.50"></text></g><g><title>inet_recvmsg (318 samples, 0.45%)</title><rect x="99.1912%" y="629" width="0.4536%" height="15" fill="rgb(221,87,20)" fg:x="69537" fg:w="318"/><text x="99.4412%" y="639.50"></text></g><g><title>tcp_recvmsg (318 samples, 0.45%)</title><rect x="99.1912%" y="613" width="0.4536%" height="15" fill="rgb(213,74,28)" fg:x="69537" fg:w="318"/><text x="99.4412%" y="623.50"></text></g><g><title>tcp_cleanup_rbuf (58 samples, 0.08%)</title><rect x="99.5621%" y="597" width="0.0827%" height="15" fill="rgb(224,132,34)" fg:x="69797" fg:w="58"/><text x="99.8121%" y="607.50"></text></g><g><title>tcp_send_ack (58 samples, 0.08%)</title><rect x="99.5621%" y="581" width="0.0827%" height="15" fill="rgb(222,101,24)" fg:x="69797" fg:w="58"/><text x="99.8121%" y="591.50"></text></g><g><title>__tcp_send_ack.part.45 (58 samples, 0.08%)</title><rect x="99.5621%" y="565" width="0.0827%" height="15" fill="rgb(254,142,4)" fg:x="69797" fg:w="58"/><text x="99.8121%" y="575.50"></text></g><g><title>__tcp_transmit_skb (52 samples, 0.07%)</title><rect x="99.5706%" y="549" width="0.0742%" height="15" fill="rgb(230,229,49)" fg:x="69803" fg:w="52"/><text x="99.8206%" y="559.50"></text></g><g><title>ip_queue_xmit (50 samples, 0.07%)</title><rect x="99.5735%" y="533" width="0.0713%" height="15" fill="rgb(238,70,47)" fg:x="69805" fg:w="50"/><text x="99.8235%" y="543.50"></text></g><g><title>__ip_queue_xmit (50 samples, 0.07%)</title><rect x="99.5735%" y="517" width="0.0713%" height="15" fill="rgb(231,160,17)" fg:x="69805" fg:w="50"/><text x="99.8235%" y="527.50"></text></g><g><title>sock_recvmsg (321 samples, 0.46%)</title><rect x="99.1898%" y="645" width="0.4579%" height="15" fill="rgb(218,68,53)" fg:x="69536" fg:w="321"/><text x="99.4398%" y="655.50"></text></g><g><title>__x64_sys_recvfrom (326 samples, 0.47%)</title><rect x="99.1841%" y="677" width="0.4650%" height="15" fill="rgb(236,111,10)" fg:x="69532" fg:w="326"/><text x="99.4341%" y="687.50"></text></g><g><title>__sys_recvfrom (326 samples, 0.47%)</title><rect x="99.1841%" y="661" width="0.4650%" height="15" fill="rgb(224,34,41)" fg:x="69532" fg:w="326"/><text x="99.4341%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (330 samples, 0.47%)</title><rect x="99.1798%" y="805" width="0.4707%" height="15" fill="rgb(241,118,19)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (330 samples, 0.47%)</title><rect x="99.1798%" y="789" width="0.4707%" height="15" fill="rgb(238,129,25)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (330 samples, 0.47%)</title><rect x="99.1798%" y="773" width="0.4707%" height="15" fill="rgb(238,22,31)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (330 samples, 0.47%)</title><rect x="99.1798%" y="757" width="0.4707%" height="15" fill="rgb(222,174,48)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (330 samples, 0.47%)</title><rect x="99.1798%" y="741" width="0.4707%" height="15" fill="rgb(206,152,40)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="751.50"></text></g><g><title>__libc_recv (330 samples, 0.47%)</title><rect x="99.1798%" y="725" width="0.4707%" height="15" fill="rgb(218,99,54)" fg:x="69529" fg:w="330"/><text x="99.4298%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (327 samples, 0.47%)</title><rect x="99.1841%" y="709" width="0.4664%" height="15" fill="rgb(220,174,26)" fg:x="69532" fg:w="327"/><text x="99.4341%" y="719.50"></text></g><g><title>do_syscall_64 (327 samples, 0.47%)</title><rect x="99.1841%" y="693" width="0.4664%" height="15" fill="rgb(245,116,9)" fg:x="69532" fg:w="327"/><text x="99.4341%" y="703.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (351 samples, 0.50%)</title><rect x="99.1513%" y="869" width="0.5007%" height="15" fill="rgb(209,72,35)" fg:x="69509" fg:w="351"/><text x="99.4013%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (349 samples, 0.50%)</title><rect x="99.1541%" y="853" width="0.4978%" height="15" fill="rgb(226,126,21)" fg:x="69511" fg:w="349"/><text x="99.4041%" y="863.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (345 samples, 0.49%)</title><rect x="99.1598%" y="837" width="0.4921%" height="15" fill="rgb(227,192,1)" fg:x="69515" fg:w="345"/><text x="99.4098%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (332 samples, 0.47%)</title><rect x="99.1784%" y="821" width="0.4736%" height="15" fill="rgb(237,180,29)" fg:x="69528" fg:w="332"/><text x="99.4284%" y="831.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (360 samples, 0.51%)</title><rect x="99.1398%" y="885" width="0.5135%" height="15" fill="rgb(230,197,35)" fg:x="69501" fg:w="360"/><text x="99.3898%" y="895.50"></text></g><g><title>__tcp_ack_snd_check (15 samples, 0.02%)</title><rect x="99.6833%" y="549" width="0.0214%" height="15" fill="rgb(246,193,31)" fg:x="69882" fg:w="15"/><text x="99.9333%" y="559.50"></text></g><g><title>tcp_send_ack (15 samples, 0.02%)</title><rect x="99.6833%" y="533" width="0.0214%" height="15" fill="rgb(241,36,4)" fg:x="69882" fg:w="15"/><text x="99.9333%" y="543.50"></text></g><g><title>__tcp_send_ack.part.45 (15 samples, 0.02%)</title><rect x="99.6833%" y="517" width="0.0214%" height="15" fill="rgb(241,130,17)" fg:x="69882" fg:w="15"/><text x="99.9333%" y="527.50"></text></g><g><title>__tcp_transmit_skb (14 samples, 0.02%)</title><rect x="99.6848%" y="501" width="0.0200%" height="15" fill="rgb(206,137,32)" fg:x="69883" fg:w="14"/><text x="99.9348%" y="511.50"></text></g><g><title>ip_queue_xmit (13 samples, 0.02%)</title><rect x="99.6862%" y="485" width="0.0185%" height="15" fill="rgb(237,228,51)" fg:x="69884" fg:w="13"/><text x="99.9362%" y="495.50"></text></g><g><title>__ip_queue_xmit (13 samples, 0.02%)</title><rect x="99.6862%" y="469" width="0.0185%" height="15" fill="rgb(243,6,42)" fg:x="69884" fg:w="13"/><text x="99.9362%" y="479.50"></text></g><g><title>ip_local_out (13 samples, 0.02%)</title><rect x="99.6862%" y="453" width="0.0185%" height="15" fill="rgb(251,74,28)" fg:x="69884" fg:w="13"/><text x="99.9362%" y="463.50"></text></g><g><title>ip_output (9 samples, 0.01%)</title><rect x="99.6919%" y="437" width="0.0128%" height="15" fill="rgb(218,20,49)" fg:x="69888" fg:w="9"/><text x="99.9419%" y="447.50"></text></g><g><title>ip_finish_output (9 samples, 0.01%)</title><rect x="99.6919%" y="421" width="0.0128%" height="15" fill="rgb(238,28,14)" fg:x="69888" fg:w="9"/><text x="99.9419%" y="431.50"></text></g><g><title>__ip_finish_output (9 samples, 0.01%)</title><rect x="99.6919%" y="405" width="0.0128%" height="15" fill="rgb(229,40,46)" fg:x="69888" fg:w="9"/><text x="99.9419%" y="415.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.01%)</title><rect x="99.6919%" y="389" width="0.0128%" height="15" fill="rgb(244,195,20)" fg:x="69888" fg:w="9"/><text x="99.9419%" y="399.50"></text></g><g><title>__release_sock (17 samples, 0.02%)</title><rect x="99.6819%" y="597" width="0.0242%" height="15" fill="rgb(253,56,35)" fg:x="69881" fg:w="17"/><text x="99.9319%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (17 samples, 0.02%)</title><rect x="99.6819%" y="581" width="0.0242%" height="15" fill="rgb(210,149,44)" fg:x="69881" fg:w="17"/><text x="99.9319%" y="591.50"></text></g><g><title>tcp_rcv_established (17 samples, 0.02%)</title><rect x="99.6819%" y="565" width="0.0242%" height="15" fill="rgb(240,135,12)" fg:x="69881" fg:w="17"/><text x="99.9319%" y="575.50"></text></g><g><title>release_sock (19 samples, 0.03%)</title><rect x="99.6819%" y="613" width="0.0271%" height="15" fill="rgb(251,24,50)" fg:x="69881" fg:w="19"/><text x="99.9319%" y="623.50"></text></g><g><title>skb_copy_datagram_iter (30 samples, 0.04%)</title><rect x="99.7090%" y="613" width="0.0428%" height="15" fill="rgb(243,200,47)" fg:x="69900" fg:w="30"/><text x="99.9590%" y="623.50"></text></g><g><title>__skb_datagram_iter (30 samples, 0.04%)</title><rect x="99.7090%" y="597" width="0.0428%" height="15" fill="rgb(224,166,26)" fg:x="69900" fg:w="30"/><text x="99.9590%" y="607.50"></text></g><g><title>simple_copy_to_iter (30 samples, 0.04%)</title><rect x="99.7090%" y="581" width="0.0428%" height="15" fill="rgb(233,0,47)" fg:x="69900" fg:w="30"/><text x="99.9590%" y="591.50"></text></g><g><title>_copy_to_iter (26 samples, 0.04%)</title><rect x="99.7147%" y="565" width="0.0371%" height="15" fill="rgb(253,80,5)" fg:x="69904" fg:w="26"/><text x="99.9647%" y="575.50"></text></g><g><title>copy_user_enhanced_fast_string (26 samples, 0.04%)</title><rect x="99.7147%" y="549" width="0.0371%" height="15" fill="rgb(214,133,25)" fg:x="69904" fg:w="26"/><text x="99.9647%" y="559.50"></text></g><g><title>nf_hook_slow (9 samples, 0.01%)</title><rect x="99.7675%" y="485" width="0.0128%" height="15" fill="rgb(209,27,14)" fg:x="69941" fg:w="9"/><text x="100.0175%" y="495.50"></text></g><g><title>__ip_local_out (12 samples, 0.02%)</title><rect x="99.7646%" y="501" width="0.0171%" height="15" fill="rgb(219,102,51)" fg:x="69939" fg:w="12"/><text x="100.0146%" y="511.50"></text></g><g><title>ip_rcv_finish (13 samples, 0.02%)</title><rect x="99.7932%" y="293" width="0.0185%" height="15" fill="rgb(237,18,16)" fg:x="69959" fg:w="13"/><text x="100.0432%" y="303.50"></text></g><g><title>ip_local_deliver (13 samples, 0.02%)</title><rect x="99.7932%" y="277" width="0.0185%" height="15" fill="rgb(241,85,17)" fg:x="69959" fg:w="13"/><text x="100.0432%" y="287.50"></text></g><g><title>ip_local_deliver_finish (13 samples, 0.02%)</title><rect x="99.7932%" y="261" width="0.0185%" height="15" fill="rgb(236,90,42)" fg:x="69959" fg:w="13"/><text x="100.0432%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (13 samples, 0.02%)</title><rect x="99.7932%" y="245" width="0.0185%" height="15" fill="rgb(249,57,21)" fg:x="69959" fg:w="13"/><text x="100.0432%" y="255.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.01%)</title><rect x="99.7974%" y="229" width="0.0143%" height="15" fill="rgb(243,12,36)" fg:x="69962" fg:w="10"/><text x="100.0474%" y="239.50"></text></g><g><title>tcp_v4_do_rcv (8 samples, 0.01%)</title><rect x="99.8003%" y="213" width="0.0114%" height="15" fill="rgb(253,128,47)" fg:x="69964" fg:w="8"/><text x="100.0503%" y="223.50"></text></g><g><title>tcp_rcv_established (8 samples, 0.01%)</title><rect x="99.8003%" y="197" width="0.0114%" height="15" fill="rgb(207,33,20)" fg:x="69964" fg:w="8"/><text x="100.0503%" y="207.50"></text></g><g><title>__local_bh_enable_ip (19 samples, 0.03%)</title><rect x="99.7875%" y="437" width="0.0271%" height="15" fill="rgb(233,215,35)" fg:x="69955" fg:w="19"/><text x="100.0375%" y="447.50"></text></g><g><title>do_softirq.part.20 (19 samples, 0.03%)</title><rect x="99.7875%" y="421" width="0.0271%" height="15" fill="rgb(249,188,52)" fg:x="69955" fg:w="19"/><text x="100.0375%" y="431.50"></text></g><g><title>do_softirq_own_stack (19 samples, 0.03%)</title><rect x="99.7875%" y="405" width="0.0271%" height="15" fill="rgb(225,12,32)" fg:x="69955" fg:w="19"/><text x="100.0375%" y="415.50"></text></g><g><title>__softirqentry_text_start (19 samples, 0.03%)</title><rect x="99.7875%" y="389" width="0.0271%" height="15" fill="rgb(247,98,14)" fg:x="69955" fg:w="19"/><text x="100.0375%" y="399.50"></text></g><g><title>net_rx_action (19 samples, 0.03%)</title><rect x="99.7875%" y="373" width="0.0271%" height="15" fill="rgb(247,219,48)" fg:x="69955" fg:w="19"/><text x="100.0375%" y="383.50"></text></g><g><title>process_backlog (18 samples, 0.03%)</title><rect x="99.7889%" y="357" width="0.0257%" height="15" fill="rgb(253,60,48)" fg:x="69956" fg:w="18"/><text x="100.0389%" y="367.50"></text></g><g><title>__netif_receive_skb (18 samples, 0.03%)</title><rect x="99.7889%" y="341" width="0.0257%" height="15" fill="rgb(245,15,52)" fg:x="69956" fg:w="18"/><text x="100.0389%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (18 samples, 0.03%)</title><rect x="99.7889%" y="325" width="0.0257%" height="15" fill="rgb(220,133,28)" fg:x="69956" fg:w="18"/><text x="100.0389%" y="335.50"></text></g><g><title>ip_rcv (17 samples, 0.02%)</title><rect x="99.7903%" y="309" width="0.0242%" height="15" fill="rgb(217,180,4)" fg:x="69957" fg:w="17"/><text x="100.0403%" y="319.50"></text></g><g><title>__ip_finish_output (25 samples, 0.04%)</title><rect x="99.7846%" y="469" width="0.0357%" height="15" fill="rgb(251,24,1)" fg:x="69953" fg:w="25"/><text x="100.0346%" y="479.50"></text></g><g><title>ip_finish_output2 (25 samples, 0.04%)</title><rect x="99.7846%" y="453" width="0.0357%" height="15" fill="rgb(212,185,49)" fg:x="69953" fg:w="25"/><text x="100.0346%" y="463.50"></text></g><g><title>ip_finish_output (26 samples, 0.04%)</title><rect x="99.7846%" y="485" width="0.0371%" height="15" fill="rgb(215,175,22)" fg:x="69953" fg:w="26"/><text x="100.0346%" y="495.50"></text></g><g><title>tcp_cleanup_rbuf (53 samples, 0.08%)</title><rect x="99.7518%" y="613" width="0.0756%" height="15" fill="rgb(250,205,14)" fg:x="69930" fg:w="53"/><text x="100.0018%" y="623.50"></text></g><g><title>tcp_send_ack (53 samples, 0.08%)</title><rect x="99.7518%" y="597" width="0.0756%" height="15" fill="rgb(225,211,22)" fg:x="69930" fg:w="53"/><text x="100.0018%" y="607.50"></text></g><g><title>__tcp_send_ack.part.45 (53 samples, 0.08%)</title><rect x="99.7518%" y="581" width="0.0756%" height="15" fill="rgb(251,179,42)" fg:x="69930" fg:w="53"/><text x="100.0018%" y="591.50"></text></g><g><title>__tcp_transmit_skb (47 samples, 0.07%)</title><rect x="99.7604%" y="565" width="0.0670%" height="15" fill="rgb(208,216,51)" fg:x="69936" fg:w="47"/><text x="100.0104%" y="575.50"></text></g><g><title>ip_queue_xmit (45 samples, 0.06%)</title><rect x="99.7632%" y="549" width="0.0642%" height="15" fill="rgb(235,36,11)" fg:x="69938" fg:w="45"/><text x="100.0132%" y="559.50"></text></g><g><title>__ip_queue_xmit (45 samples, 0.06%)</title><rect x="99.7632%" y="533" width="0.0642%" height="15" fill="rgb(213,189,28)" fg:x="69938" fg:w="45"/><text x="100.0132%" y="543.50"></text></g><g><title>ip_local_out (44 samples, 0.06%)</title><rect x="99.7646%" y="517" width="0.0628%" height="15" fill="rgb(227,203,42)" fg:x="69939" fg:w="44"/><text x="100.0146%" y="527.50"></text></g><g><title>ip_output (32 samples, 0.05%)</title><rect x="99.7818%" y="501" width="0.0456%" height="15" fill="rgb(244,72,36)" fg:x="69951" fg:w="32"/><text x="100.0318%" y="511.50"></text></g><g><title>inet_recvmsg (113 samples, 0.16%)</title><rect x="99.6748%" y="645" width="0.1612%" height="15" fill="rgb(213,53,17)" fg:x="69876" fg:w="113"/><text x="99.9248%" y="655.50"></text></g><g><title>tcp_recvmsg (113 samples, 0.16%)</title><rect x="99.6748%" y="629" width="0.1612%" height="15" fill="rgb(207,167,3)" fg:x="69876" fg:w="113"/><text x="99.9248%" y="639.50"></text></g><g><title>sock_recvmsg (116 samples, 0.17%)</title><rect x="99.6733%" y="661" width="0.1655%" height="15" fill="rgb(216,98,30)" fg:x="69875" fg:w="116"/><text x="99.9233%" y="671.50"></text></g><g><title>__sys_recvfrom (122 samples, 0.17%)</title><rect x="99.6705%" y="677" width="0.1740%" height="15" fill="rgb(236,123,15)" fg:x="69873" fg:w="122"/><text x="99.9205%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (128 samples, 0.18%)</title><rect x="99.6634%" y="837" width="0.1826%" height="15" fill="rgb(248,81,50)" fg:x="69868" fg:w="128"/><text x="99.9134%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (128 samples, 0.18%)</title><rect x="99.6634%" y="821" width="0.1826%" height="15" fill="rgb(214,120,4)" fg:x="69868" fg:w="128"/><text x="99.9134%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (127 samples, 0.18%)</title><rect x="99.6648%" y="805" width="0.1812%" height="15" fill="rgb(208,179,34)" fg:x="69869" fg:w="127"/><text x="99.9148%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (125 samples, 0.18%)</title><rect x="99.6676%" y="789" width="0.1783%" height="15" fill="rgb(227,140,7)" fg:x="69871" fg:w="125"/><text x="99.9176%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::read (125 samples, 0.18%)</title><rect x="99.6676%" y="773" width="0.1783%" height="15" fill="rgb(214,22,6)" fg:x="69871" fg:w="125"/><text x="99.9176%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (125 samples, 0.18%)</title><rect x="99.6676%" y="757" width="0.1783%" height="15" fill="rgb(207,137,27)" fg:x="69871" fg:w="125"/><text x="99.9176%" y="767.50"></text></g><g><title>__libc_recv (125 samples, 0.18%)</title><rect x="99.6676%" y="741" width="0.1783%" height="15" fill="rgb(210,8,46)" fg:x="69871" fg:w="125"/><text x="99.9176%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (124 samples, 0.18%)</title><rect x="99.6691%" y="725" width="0.1769%" height="15" fill="rgb(240,16,54)" fg:x="69872" fg:w="124"/><text x="99.9191%" y="735.50"></text></g><g><title>do_syscall_64 (124 samples, 0.18%)</title><rect x="99.6691%" y="709" width="0.1769%" height="15" fill="rgb(211,209,29)" fg:x="69872" fg:w="124"/><text x="99.9191%" y="719.50"></text></g><g><title>__x64_sys_recvfrom (123 samples, 0.18%)</title><rect x="99.6705%" y="693" width="0.1755%" height="15" fill="rgb(226,228,24)" fg:x="69873" fg:w="123"/><text x="99.9205%" y="703.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (131 samples, 0.19%)</title><rect x="99.6605%" y="853" width="0.1869%" height="15" fill="rgb(222,84,9)" fg:x="69866" fg:w="131"/><text x="99.9105%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (151 samples, 0.22%)</title><rect x="99.6534%" y="885" width="0.2154%" height="15" fill="rgb(234,203,30)" fg:x="69861" fg:w="151"/><text x="99.9034%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (151 samples, 0.22%)</title><rect x="99.6534%" y="869" width="0.2154%" height="15" fill="rgb(238,109,14)" fg:x="69861" fg:w="151"/><text x="99.9034%" y="879.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (15 samples, 0.02%)</title><rect x="99.8474%" y="853" width="0.0214%" height="15" fill="rgb(233,206,34)" fg:x="69997" fg:w="15"/><text x="100.0974%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (8 samples, 0.01%)</title><rect x="99.8716%" y="869" width="0.0114%" height="15" fill="rgb(220,167,47)" fg:x="70014" fg:w="8"/><text x="100.1216%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (11 samples, 0.02%)</title><rect x="99.8688%" y="885" width="0.0157%" height="15" fill="rgb(238,105,10)" fg:x="70012" fg:w="11"/><text x="100.1188%" y="895.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (23 samples, 0.03%)</title><rect x="99.8959%" y="837" width="0.0328%" height="15" fill="rgb(213,227,17)" fg:x="70031" fg:w="23"/><text x="100.1459%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (31 samples, 0.04%)</title><rect x="99.8873%" y="869" width="0.0442%" height="15" fill="rgb(217,132,38)" fg:x="70025" fg:w="31"/><text x="100.1373%" y="879.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (28 samples, 0.04%)</title><rect x="99.8916%" y="853" width="0.0399%" height="15" fill="rgb(242,146,4)" fg:x="70028" fg:w="28"/><text x="100.1416%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (36 samples, 0.05%)</title><rect x="99.8845%" y="885" width="0.0514%" height="15" fill="rgb(212,61,9)" fg:x="70023" fg:w="36"/><text x="100.1345%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (848 samples, 1.21%)</title><rect x="98.7376%" y="933" width="1.2096%" height="15" fill="rgb(247,126,22)" fg:x="69219" fg:w="848"/><text x="98.9876%" y="943.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (846 samples, 1.21%)</title><rect x="98.7404%" y="917" width="1.2068%" height="15" fill="rgb(220,196,2)" fg:x="69221" fg:w="846"/><text x="98.9904%" y="927.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (840 samples, 1.20%)</title><rect x="98.7490%" y="901" width="1.1982%" height="15" fill="rgb(208,46,4)" fg:x="69227" fg:w="840"/><text x="98.9990%" y="911.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (8 samples, 0.01%)</title><rect x="99.9358%" y="885" width="0.0114%" height="15" fill="rgb(252,104,46)" fg:x="70059" fg:w="8"/><text x="100.1858%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="99.9472%" y="933" width="0.0143%" height="15" fill="rgb(237,152,48)" fg:x="70067" fg:w="10"/><text x="100.1972%" y="943.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="99.9472%" y="917" width="0.0143%" height="15" fill="rgb(221,59,37)" fg:x="70067" fg:w="10"/><text x="100.1972%" y="927.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (8 samples, 0.01%)</title><rect x="99.9501%" y="901" width="0.0114%" height="15" fill="rgb(209,202,51)" fg:x="70069" fg:w="8"/><text x="100.2001%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (864 samples, 1.23%)</title><rect x="98.7362%" y="949" width="1.2325%" height="15" fill="rgb(228,81,30)" fg:x="69218" fg:w="864"/><text x="98.9862%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (873 samples, 1.25%)</title><rect x="98.7248%" y="981" width="1.2453%" height="15" fill="rgb(227,42,39)" fg:x="69210" fg:w="873"/><text x="98.9748%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (870 samples, 1.24%)</title><rect x="98.7290%" y="965" width="1.2410%" height="15" fill="rgb(221,26,2)" fg:x="69213" fg:w="870"/><text x="98.9790%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (9 samples, 0.01%)</title><rect x="99.9700%" y="981" width="0.0128%" height="15" fill="rgb(254,61,31)" fg:x="70083" fg:w="9"/><text x="100.2200%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (894 samples, 1.28%)</title><rect x="98.7148%" y="997" width="1.2752%" height="15" fill="rgb(222,173,38)" fg:x="69203" fg:w="894"/><text x="98.9648%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,058 samples, 1.51%)</title><rect x="98.4837%" y="1013" width="1.5092%" height="15" fill="rgb(218,50,12)" fg:x="69041" fg:w="1058"/><text x="98.7337%" y="1023.50"></text></g><g><title>all (70,104 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(223,88,40)" fg:x="0" fg:w="70104"/><text x="0.2500%" y="1263.50"></text></g><g><title>tokio-runtime-w (1,657 samples, 2.36%)</title><rect x="97.6364%" y="1237" width="2.3636%" height="15" fill="rgb(237,54,19)" fg:x="68447" fg:w="1657"/><text x="97.8864%" y="1247.50">to..</text></g><g><title>clone (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1221" width="2.3137%" height="15" fill="rgb(251,129,25)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1231.50">c..</text></g><g><title>start_thread (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1205" width="2.3137%" height="15" fill="rgb(238,97,19)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1215.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1189" width="2.3137%" height="15" fill="rgb(240,169,18)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1199.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1173" width="2.3137%" height="15" fill="rgb(230,187,49)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1157" width="2.3137%" height="15" fill="rgb(209,44,26)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1167.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1141" width="2.3137%" height="15" fill="rgb(244,0,6)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1151.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1125" width="2.3137%" height="15" fill="rgb(248,18,21)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1135.50">s..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1109" width="2.3137%" height="15" fill="rgb(245,180,19)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1119.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1093" width="2.3137%" height="15" fill="rgb(252,118,36)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1103.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1077" width="2.3137%" height="15" fill="rgb(210,224,19)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1087.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1061" width="2.3137%" height="15" fill="rgb(218,30,24)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1071.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1045" width="2.3137%" height="15" fill="rgb(219,75,50)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1055.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,622 samples, 2.31%)</title><rect x="97.6863%" y="1029" width="2.3137%" height="15" fill="rgb(234,72,50)" fg:x="68482" fg:w="1622"/><text x="97.9363%" y="1039.50">t..</text></g></svg></svg>