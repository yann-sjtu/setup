<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1285.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="12169"><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="0.0329%" y="805" width="0.0164%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="2"/><text x="0.2829%" y="815.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="0.0329%" y="789" width="0.0164%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.2829%" y="799.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="0.0329%" y="821" width="0.0247%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="3"/><text x="0.2829%" y="831.50"></text></g><g><title>async_page_fault (8 samples, 0.07%)</title><rect x="0.0000%" y="917" width="0.0657%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="927.50"></text></g><g><title>do_async_page_fault (8 samples, 0.07%)</title><rect x="0.0000%" y="901" width="0.0657%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="911.50"></text></g><g><title>do_page_fault (8 samples, 0.07%)</title><rect x="0.0000%" y="885" width="0.0657%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="895.50"></text></g><g><title>__do_page_fault (8 samples, 0.07%)</title><rect x="0.0000%" y="869" width="0.0657%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="879.50"></text></g><g><title>handle_mm_fault (4 samples, 0.03%)</title><rect x="0.0329%" y="853" width="0.0329%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="4"/><text x="0.2829%" y="863.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.03%)</title><rect x="0.0329%" y="837" width="0.0329%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="4"/><text x="0.2829%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.08%)</title><rect x="0.0000%" y="981" width="0.0822%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="10"/><text x="0.2500%" y="991.50"></text></g><g><title>__libc_calloc (10 samples, 0.08%)</title><rect x="0.0000%" y="965" width="0.0822%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="10"/><text x="0.2500%" y="975.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.08%)</title><rect x="0.0000%" y="949" width="0.0822%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="10"/><text x="0.2500%" y="959.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.08%)</title><rect x="0.0000%" y="933" width="0.0822%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="10"/><text x="0.2500%" y="943.50"></text></g><g><title>mprotect (2 samples, 0.02%)</title><rect x="0.0657%" y="917" width="0.0164%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="2"/><text x="0.3157%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="0.0657%" y="901" width="0.0164%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.3157%" y="911.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="0.0657%" y="885" width="0.0164%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="2"/><text x="0.3157%" y="895.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.02%)</title><rect x="0.0657%" y="869" width="0.0164%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="2"/><text x="0.3157%" y="879.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.02%)</title><rect x="0.0657%" y="853" width="0.0164%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="2"/><text x="0.3157%" y="863.50"></text></g><g><title>mprotect_fixup (2 samples, 0.02%)</title><rect x="0.0657%" y="837" width="0.0164%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="2"/><text x="0.3157%" y="847.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (14 samples, 0.12%)</title><rect x="0.0000%" y="997" width="0.1150%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="14"/><text x="0.2500%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (4 samples, 0.03%)</title><rect x="0.0822%" y="981" width="0.0329%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="4"/><text x="0.3322%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.03%)</title><rect x="0.0822%" y="965" width="0.0329%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="4"/><text x="0.3322%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.03%)</title><rect x="0.0822%" y="949" width="0.0329%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="4"/><text x="0.3322%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (15 samples, 0.12%)</title><rect x="0.0000%" y="1029" width="0.1233%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (15 samples, 0.12%)</title><rect x="0.0000%" y="1013" width="0.1233%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="15"/><text x="0.2500%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (20 samples, 0.16%)</title><rect x="0.0000%" y="1205" width="0.1644%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1215.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.16%)</title><rect x="0.0000%" y="1189" width="0.1644%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1199.50"></text></g><g><title>ord::index::Index::update (20 samples, 0.16%)</title><rect x="0.0000%" y="1173" width="0.1644%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1183.50"></text></g><g><title>ord::index::updater::Updater::update_index (20 samples, 0.16%)</title><rect x="0.0000%" y="1157" width="0.1644%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1167.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (20 samples, 0.16%)</title><rect x="0.0000%" y="1141" width="0.1644%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1151.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (20 samples, 0.16%)</title><rect x="0.0000%" y="1125" width="0.1644%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.16%)</title><rect x="0.0000%" y="1109" width="0.1644%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.16%)</title><rect x="0.0000%" y="1093" width="0.1644%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.16%)</title><rect x="0.0000%" y="1077" width="0.1644%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.16%)</title><rect x="0.0000%" y="1061" width="0.1644%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (20 samples, 0.16%)</title><rect x="0.0000%" y="1045" width="0.1644%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="20"/><text x="0.2500%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (5 samples, 0.04%)</title><rect x="0.1233%" y="1029" width="0.0411%" height="15" fill="rgb(226,3,54)" fg:x="15" fg:w="5"/><text x="0.3733%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (5 samples, 0.04%)</title><rect x="0.1233%" y="1013" width="0.0411%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="5"/><text x="0.3733%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (5 samples, 0.04%)</title><rect x="0.1233%" y="997" width="0.0411%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="5"/><text x="0.3733%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (5 samples, 0.04%)</title><rect x="0.1233%" y="981" width="0.0411%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="5"/><text x="0.3733%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.04%)</title><rect x="0.1233%" y="965" width="0.0411%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="5"/><text x="0.3733%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (3 samples, 0.02%)</title><rect x="0.1644%" y="1061" width="0.0247%" height="15" fill="rgb(208,69,12)" fg:x="20" fg:w="3"/><text x="0.4144%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (3 samples, 0.02%)</title><rect x="0.1644%" y="1045" width="0.0247%" height="15" fill="rgb(235,93,37)" fg:x="20" fg:w="3"/><text x="0.4144%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (3 samples, 0.02%)</title><rect x="0.1644%" y="1029" width="0.0247%" height="15" fill="rgb(213,116,39)" fg:x="20" fg:w="3"/><text x="0.4144%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (3 samples, 0.02%)</title><rect x="0.1644%" y="1013" width="0.0247%" height="15" fill="rgb(222,207,29)" fg:x="20" fg:w="3"/><text x="0.4144%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.02%)</title><rect x="0.1644%" y="997" width="0.0247%" height="15" fill="rgb(206,96,30)" fg:x="20" fg:w="3"/><text x="0.4144%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.02%)</title><rect x="0.1644%" y="981" width="0.0247%" height="15" fill="rgb(218,138,4)" fg:x="20" fg:w="3"/><text x="0.4144%" y="991.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="0.1644%" y="965" width="0.0247%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="3"/><text x="0.4144%" y="975.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="0.1644%" y="949" width="0.0247%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="3"/><text x="0.4144%" y="959.50"></text></g><g><title>async_page_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="949" width="0.0164%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="2"/><text x="0.4390%" y="959.50"></text></g><g><title>do_async_page_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="933" width="0.0164%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="2"/><text x="0.4390%" y="943.50"></text></g><g><title>do_page_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="917" width="0.0164%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="2"/><text x="0.4390%" y="927.50"></text></g><g><title>__do_page_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="901" width="0.0164%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="2"/><text x="0.4390%" y="911.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="885" width="0.0164%" height="15" fill="rgb(231,138,38)" fg:x="23" fg:w="2"/><text x="0.4390%" y="895.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="0.1890%" y="869" width="0.0164%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="2"/><text x="0.4390%" y="879.50"></text></g><g><title>ord::index::Index::update (6 samples, 0.05%)</title><rect x="0.1644%" y="1205" width="0.0493%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1215.50"></text></g><g><title>ord::index::updater::Updater::update_index (6 samples, 0.05%)</title><rect x="0.1644%" y="1189" width="0.0493%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1199.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (6 samples, 0.05%)</title><rect x="0.1644%" y="1173" width="0.0493%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1183.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (6 samples, 0.05%)</title><rect x="0.1644%" y="1157" width="0.0493%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (6 samples, 0.05%)</title><rect x="0.1644%" y="1141" width="0.0493%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (6 samples, 0.05%)</title><rect x="0.1644%" y="1125" width="0.0493%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (6 samples, 0.05%)</title><rect x="0.1644%" y="1109" width="0.0493%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (6 samples, 0.05%)</title><rect x="0.1644%" y="1093" width="0.0493%" height="15" fill="rgb(210,229,1)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (6 samples, 0.05%)</title><rect x="0.1644%" y="1077" width="0.0493%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="6"/><text x="0.4144%" y="1087.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (3 samples, 0.02%)</title><rect x="0.1890%" y="1061" width="0.0247%" height="15" fill="rgb(234,67,33)" fg:x="23" fg:w="3"/><text x="0.4390%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (3 samples, 0.02%)</title><rect x="0.1890%" y="1045" width="0.0247%" height="15" fill="rgb(247,98,35)" fg:x="23" fg:w="3"/><text x="0.4390%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (3 samples, 0.02%)</title><rect x="0.1890%" y="1029" width="0.0247%" height="15" fill="rgb(247,138,52)" fg:x="23" fg:w="3"/><text x="0.4390%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="0.1890%" y="1013" width="0.0247%" height="15" fill="rgb(213,79,30)" fg:x="23" fg:w="3"/><text x="0.4390%" y="1023.50"></text></g><g><title>__libc_calloc (3 samples, 0.02%)</title><rect x="0.1890%" y="997" width="0.0247%" height="15" fill="rgb(246,177,23)" fg:x="23" fg:w="3"/><text x="0.4390%" y="1007.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="0.1890%" y="981" width="0.0247%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="3"/><text x="0.4390%" y="991.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="0.1890%" y="965" width="0.0247%" height="15" fill="rgb(216,154,8)" fg:x="23" fg:w="3"/><text x="0.4390%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.07%)</title><rect x="0.2137%" y="917" width="0.0657%" height="15" fill="rgb(244,35,45)" fg:x="26" fg:w="8"/><text x="0.4637%" y="927.50"></text></g><g><title>__libc_calloc (8 samples, 0.07%)</title><rect x="0.2137%" y="901" width="0.0657%" height="15" fill="rgb(251,115,12)" fg:x="26" fg:w="8"/><text x="0.4637%" y="911.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.07%)</title><rect x="0.2137%" y="885" width="0.0657%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="8"/><text x="0.4637%" y="895.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (22 samples, 0.18%)</title><rect x="0.2137%" y="933" width="0.1808%" height="15" fill="rgb(233,84,52)" fg:x="26" fg:w="22"/><text x="0.4637%" y="943.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (14 samples, 0.12%)</title><rect x="0.2794%" y="917" width="0.1150%" height="15" fill="rgb(207,117,47)" fg:x="34" fg:w="14"/><text x="0.5294%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.07%)</title><rect x="0.3205%" y="901" width="0.0740%" height="15" fill="rgb(249,43,39)" fg:x="39" fg:w="9"/><text x="0.5705%" y="911.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (23 samples, 0.19%)</title><rect x="0.2137%" y="965" width="0.1890%" height="15" fill="rgb(209,38,44)" fg:x="26" fg:w="23"/><text x="0.4637%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (23 samples, 0.19%)</title><rect x="0.2137%" y="949" width="0.1890%" height="15" fill="rgb(236,212,23)" fg:x="26" fg:w="23"/><text x="0.4637%" y="959.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (14 samples, 0.12%)</title><rect x="0.4027%" y="933" width="0.1150%" height="15" fill="rgb(242,79,21)" fg:x="49" fg:w="14"/><text x="0.6527%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="0.5013%" y="917" width="0.0164%" height="15" fill="rgb(211,96,35)" fg:x="61" fg:w="2"/><text x="0.7513%" y="927.50"></text></g><g><title>redb::tree_store::page_store::bitmap::BtreeBitmap::find_first_unset (2 samples, 0.02%)</title><rect x="0.5177%" y="901" width="0.0164%" height="15" fill="rgb(253,215,40)" fg:x="63" fg:w="2"/><text x="0.7677%" y="911.50"></text></g><g><title>start_thread (40 samples, 0.33%)</title><rect x="0.2137%" y="1205" width="0.3287%" height="15" fill="rgb(211,81,21)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1215.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (40 samples, 0.33%)</title><rect x="0.2137%" y="1189" width="0.3287%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.33%)</title><rect x="0.2137%" y="1173" width="0.3287%" height="15" fill="rgb(235,213,38)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.33%)</title><rect x="0.2137%" y="1157" width="0.3287%" height="15" fill="rgb(237,122,38)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (40 samples, 0.33%)</title><rect x="0.2137%" y="1141" width="0.3287%" height="15" fill="rgb(244,218,35)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1151.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 0.33%)</title><rect x="0.2137%" y="1125" width="0.3287%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1135.50"></text></g><g><title>ord::index::Index::update (40 samples, 0.33%)</title><rect x="0.2137%" y="1109" width="0.3287%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1119.50"></text></g><g><title>ord::index::updater::Updater::update_index (40 samples, 0.33%)</title><rect x="0.2137%" y="1093" width="0.3287%" height="15" fill="rgb(235,124,12)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1103.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (40 samples, 0.33%)</title><rect x="0.2137%" y="1077" width="0.3287%" height="15" fill="rgb(224,169,11)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1087.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (40 samples, 0.33%)</title><rect x="0.2137%" y="1061" width="0.3287%" height="15" fill="rgb(250,166,2)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (40 samples, 0.33%)</title><rect x="0.2137%" y="1045" width="0.3287%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1055.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (40 samples, 0.33%)</title><rect x="0.2137%" y="1029" width="0.3287%" height="15" fill="rgb(230,116,27)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1039.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (40 samples, 0.33%)</title><rect x="0.2137%" y="1013" width="0.3287%" height="15" fill="rgb(228,99,48)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (40 samples, 0.33%)</title><rect x="0.2137%" y="997" width="0.3287%" height="15" fill="rgb(253,11,6)" fg:x="26" fg:w="40"/><text x="0.4637%" y="1007.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (40 samples, 0.33%)</title><rect x="0.2137%" y="981" width="0.3287%" height="15" fill="rgb(247,143,39)" fg:x="26" fg:w="40"/><text x="0.4637%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (17 samples, 0.14%)</title><rect x="0.4027%" y="965" width="0.1397%" height="15" fill="rgb(236,97,10)" fg:x="49" fg:w="17"/><text x="0.6527%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (17 samples, 0.14%)</title><rect x="0.4027%" y="949" width="0.1397%" height="15" fill="rgb(233,208,19)" fg:x="49" fg:w="17"/><text x="0.6527%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (3 samples, 0.02%)</title><rect x="0.5177%" y="933" width="0.0247%" height="15" fill="rgb(216,164,2)" fg:x="63" fg:w="3"/><text x="0.7677%" y="943.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (3 samples, 0.02%)</title><rect x="0.5177%" y="917" width="0.0247%" height="15" fill="rgb(220,129,5)" fg:x="63" fg:w="3"/><text x="0.7677%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.02%)</title><rect x="0.5424%" y="1205" width="0.0247%" height="15" fill="rgb(242,17,10)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="0.5424%" y="1189" width="0.0247%" height="15" fill="rgb(242,107,0)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="0.5424%" y="1173" width="0.0247%" height="15" fill="rgb(251,28,31)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.02%)</title><rect x="0.5424%" y="1157" width="0.0247%" height="15" fill="rgb(233,223,10)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.02%)</title><rect x="0.5424%" y="1141" width="0.0247%" height="15" fill="rgb(215,21,27)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1151.50"></text></g><g><title>ord::index::Index::update (3 samples, 0.02%)</title><rect x="0.5424%" y="1125" width="0.0247%" height="15" fill="rgb(232,23,21)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1135.50"></text></g><g><title>ord::index::updater::Updater::update_index (3 samples, 0.02%)</title><rect x="0.5424%" y="1109" width="0.0247%" height="15" fill="rgb(244,5,23)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1119.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (3 samples, 0.02%)</title><rect x="0.5424%" y="1093" width="0.0247%" height="15" fill="rgb(226,81,46)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1103.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (3 samples, 0.02%)</title><rect x="0.5424%" y="1077" width="0.0247%" height="15" fill="rgb(247,70,30)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3 samples, 0.02%)</title><rect x="0.5424%" y="1061" width="0.0247%" height="15" fill="rgb(212,68,19)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3 samples, 0.02%)</title><rect x="0.5424%" y="1045" width="0.0247%" height="15" fill="rgb(240,187,13)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1055.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3 samples, 0.02%)</title><rect x="0.5424%" y="1029" width="0.0247%" height="15" fill="rgb(223,113,26)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1039.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3 samples, 0.02%)</title><rect x="0.5424%" y="1013" width="0.0247%" height="15" fill="rgb(206,192,2)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (3 samples, 0.02%)</title><rect x="0.5424%" y="997" width="0.0247%" height="15" fill="rgb(241,108,4)" fg:x="66" fg:w="3"/><text x="0.7924%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (2 samples, 0.02%)</title><rect x="0.5506%" y="981" width="0.0164%" height="15" fill="rgb(247,173,49)" fg:x="67" fg:w="2"/><text x="0.8006%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (2 samples, 0.02%)</title><rect x="0.5506%" y="965" width="0.0164%" height="15" fill="rgb(224,114,35)" fg:x="67" fg:w="2"/><text x="0.8006%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (2 samples, 0.02%)</title><rect x="0.5506%" y="949" width="0.0164%" height="15" fill="rgb(245,159,27)" fg:x="67" fg:w="2"/><text x="0.8006%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="0.5506%" y="933" width="0.0164%" height="15" fill="rgb(245,172,44)" fg:x="67" fg:w="2"/><text x="0.8006%" y="943.50"></text></g><g><title>__libc_calloc (2 samples, 0.02%)</title><rect x="0.5506%" y="917" width="0.0164%" height="15" fill="rgb(236,23,11)" fg:x="67" fg:w="2"/><text x="0.8006%" y="927.50"></text></g><g><title>[unknown] (71 samples, 0.58%)</title><rect x="0.0000%" y="1221" width="0.5834%" height="15" fill="rgb(205,117,38)" fg:x="0" fg:w="71"/><text x="0.2500%" y="1231.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="0.5670%" y="1205" width="0.0164%" height="15" fill="rgb(237,72,25)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1215.50"></text></g><g><title>ord::index::Index::update (2 samples, 0.02%)</title><rect x="0.5670%" y="1189" width="0.0164%" height="15" fill="rgb(244,70,9)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1199.50"></text></g><g><title>ord::index::updater::Updater::update_index (2 samples, 0.02%)</title><rect x="0.5670%" y="1173" width="0.0164%" height="15" fill="rgb(217,125,39)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1183.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (2 samples, 0.02%)</title><rect x="0.5670%" y="1157" width="0.0164%" height="15" fill="rgb(235,36,10)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1167.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="0.5670%" y="1141" width="0.0164%" height="15" fill="rgb(251,123,47)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1125" width="0.0164%" height="15" fill="rgb(221,13,13)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1109" width="0.0164%" height="15" fill="rgb(238,131,9)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1093" width="0.0164%" height="15" fill="rgb(211,50,8)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1077" width="0.0164%" height="15" fill="rgb(245,182,24)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1061" width="0.0164%" height="15" fill="rgb(242,14,37)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (2 samples, 0.02%)</title><rect x="0.5670%" y="1045" width="0.0164%" height="15" fill="rgb(246,228,12)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (2 samples, 0.02%)</title><rect x="0.5670%" y="1029" width="0.0164%" height="15" fill="rgb(213,55,15)" fg:x="69" fg:w="2"/><text x="0.8170%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.02%)</title><rect x="0.6492%" y="1045" width="0.0164%" height="15" fill="rgb(209,9,3)" fg:x="79" fg:w="2"/><text x="0.8992%" y="1055.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (70 samples, 0.58%)</title><rect x="0.6656%" y="1045" width="0.5752%" height="15" fill="rgb(230,59,30)" fg:x="81" fg:w="70"/><text x="0.9156%" y="1055.50"></text></g><g><title>std::io::Write::write_all (69 samples, 0.57%)</title><rect x="0.6738%" y="1029" width="0.5670%" height="15" fill="rgb(209,121,21)" fg:x="82" fg:w="69"/><text x="0.9238%" y="1039.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (67 samples, 0.55%)</title><rect x="0.6903%" y="1013" width="0.5506%" height="15" fill="rgb(220,109,13)" fg:x="84" fg:w="67"/><text x="0.9403%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (67 samples, 0.55%)</title><rect x="0.6903%" y="997" width="0.5506%" height="15" fill="rgb(232,18,1)" fg:x="84" fg:w="67"/><text x="0.9403%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (5 samples, 0.04%)</title><rect x="1.1998%" y="981" width="0.0411%" height="15" fill="rgb(215,41,42)" fg:x="146" fg:w="5"/><text x="1.4498%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (131 samples, 1.08%)</title><rect x="0.6410%" y="1061" width="1.0765%" height="15" fill="rgb(224,123,36)" fg:x="78" fg:w="131"/><text x="0.8910%" y="1071.50"></text></g><g><title>std::io::Write::write_all (58 samples, 0.48%)</title><rect x="1.2409%" y="1045" width="0.4766%" height="15" fill="rgb(240,125,3)" fg:x="151" fg:w="58"/><text x="1.4909%" y="1055.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (55 samples, 0.45%)</title><rect x="1.2655%" y="1029" width="0.4520%" height="15" fill="rgb(205,98,50)" fg:x="154" fg:w="55"/><text x="1.5155%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.44%)</title><rect x="1.2737%" y="1013" width="0.4438%" height="15" fill="rgb(205,185,37)" fg:x="155" fg:w="54"/><text x="1.5237%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (6 samples, 0.05%)</title><rect x="1.6682%" y="997" width="0.0493%" height="15" fill="rgb(238,207,15)" fg:x="203" fg:w="6"/><text x="1.9182%" y="1007.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.02%)</title><rect x="1.7175%" y="1061" width="0.0164%" height="15" fill="rgb(213,199,42)" fg:x="209" fg:w="2"/><text x="1.9675%" y="1071.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="1.7175%" y="1045" width="0.0164%" height="15" fill="rgb(235,201,11)" fg:x="209" fg:w="2"/><text x="1.9675%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (42 samples, 0.35%)</title><rect x="1.7421%" y="1045" width="0.3451%" height="15" fill="rgb(207,46,11)" fg:x="212" fg:w="42"/><text x="1.9921%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (76 samples, 0.62%)</title><rect x="1.7339%" y="1061" width="0.6245%" height="15" fill="rgb(241,35,35)" fg:x="211" fg:w="76"/><text x="1.9839%" y="1071.50"></text></g><g><title>bitcoin_hashes::Hash::hash (33 samples, 0.27%)</title><rect x="2.0873%" y="1045" width="0.2712%" height="15" fill="rgb(243,32,47)" fg:x="254" fg:w="33"/><text x="2.3373%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.27%)</title><rect x="2.0873%" y="1029" width="0.2712%" height="15" fill="rgb(247,202,23)" fg:x="254" fg:w="33"/><text x="2.3373%" y="1039.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (55 samples, 0.45%)</title><rect x="2.3585%" y="1061" width="0.4520%" height="15" fill="rgb(219,102,11)" fg:x="287" fg:w="55"/><text x="2.6085%" y="1071.50"></text></g><g><title>std::io::Write::write_all (54 samples, 0.44%)</title><rect x="2.3667%" y="1045" width="0.4438%" height="15" fill="rgb(243,110,44)" fg:x="288" fg:w="54"/><text x="2.6167%" y="1055.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (50 samples, 0.41%)</title><rect x="2.3995%" y="1029" width="0.4109%" height="15" fill="rgb(222,74,54)" fg:x="292" fg:w="50"/><text x="2.6495%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (49 samples, 0.40%)</title><rect x="2.4078%" y="1013" width="0.4027%" height="15" fill="rgb(216,99,12)" fg:x="293" fg:w="49"/><text x="2.6578%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.06%)</title><rect x="2.7529%" y="997" width="0.0575%" height="15" fill="rgb(226,22,26)" fg:x="335" fg:w="7"/><text x="3.0029%" y="1007.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (289 samples, 2.37%)</title><rect x="0.5834%" y="1109" width="2.3749%" height="15" fill="rgb(217,163,10)" fg:x="71" fg:w="289"/><text x="0.8334%" y="1119.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (289 samples, 2.37%)</title><rect x="0.5834%" y="1093" width="2.3749%" height="15" fill="rgb(213,25,53)" fg:x="71" fg:w="289"/><text x="0.8334%" y="1103.50">&lt;c..</text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (285 samples, 2.34%)</title><rect x="0.6163%" y="1077" width="2.3420%" height="15" fill="rgb(252,105,26)" fg:x="75" fg:w="285"/><text x="0.8663%" y="1087.50">b..</text></g><g><title>std::io::Write::write_all (18 samples, 0.15%)</title><rect x="2.8104%" y="1061" width="0.1479%" height="15" fill="rgb(220,39,43)" fg:x="342" fg:w="18"/><text x="3.0604%" y="1071.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (16 samples, 0.13%)</title><rect x="2.8269%" y="1045" width="0.1315%" height="15" fill="rgb(229,68,48)" fg:x="344" fg:w="16"/><text x="3.0769%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (16 samples, 0.13%)</title><rect x="2.8269%" y="1029" width="0.1315%" height="15" fill="rgb(252,8,32)" fg:x="344" fg:w="16"/><text x="3.0769%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.20%)</title><rect x="3.3528%" y="1077" width="0.1972%" height="15" fill="rgb(223,20,43)" fg:x="408" fg:w="24"/><text x="3.6028%" y="1087.50"></text></g><g><title>cfree (24 samples, 0.20%)</title><rect x="3.3528%" y="1061" width="0.1972%" height="15" fill="rgb(229,81,49)" fg:x="408" fg:w="24"/><text x="3.6028%" y="1071.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (27 samples, 0.22%)</title><rect x="3.5500%" y="1077" width="0.2219%" height="15" fill="rgb(236,28,36)" fg:x="432" fg:w="27"/><text x="3.8000%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.21%)</title><rect x="3.5582%" y="1061" width="0.2137%" height="15" fill="rgb(249,185,26)" fg:x="433" fg:w="26"/><text x="3.8082%" y="1071.50"></text></g><g><title>__libc_malloc (26 samples, 0.21%)</title><rect x="3.5582%" y="1045" width="0.2137%" height="15" fill="rgb(249,174,33)" fg:x="433" fg:w="26"/><text x="3.8082%" y="1055.50"></text></g><g><title>_IO_str_seekoff (26 samples, 0.21%)</title><rect x="3.5582%" y="1029" width="0.2137%" height="15" fill="rgb(233,201,37)" fg:x="433" fg:w="26"/><text x="3.8082%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (6 samples, 0.05%)</title><rect x="4.0759%" y="1013" width="0.0493%" height="15" fill="rgb(221,78,26)" fg:x="496" fg:w="6"/><text x="4.3259%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (15 samples, 0.12%)</title><rect x="4.7087%" y="997" width="0.1233%" height="15" fill="rgb(250,127,30)" fg:x="573" fg:w="15"/><text x="4.9587%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (13 samples, 0.11%)</title><rect x="5.5304%" y="981" width="0.1068%" height="15" fill="rgb(230,49,44)" fg:x="673" fg:w="13"/><text x="5.7804%" y="991.50"></text></g><g><title>__nss_passwd_lookup (86 samples, 0.71%)</title><rect x="5.6373%" y="981" width="0.7067%" height="15" fill="rgb(229,67,23)" fg:x="686" fg:w="86"/><text x="5.8873%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (6 samples, 0.05%)</title><rect x="6.3440%" y="981" width="0.0493%" height="15" fill="rgb(249,83,47)" fg:x="772" fg:w="6"/><text x="6.5940%" y="991.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (201 samples, 1.65%)</title><rect x="4.8320%" y="997" width="1.6517%" height="15" fill="rgb(215,43,3)" fg:x="588" fg:w="201"/><text x="5.0820%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_range (11 samples, 0.09%)</title><rect x="6.3933%" y="981" width="0.0904%" height="15" fill="rgb(238,154,13)" fg:x="778" fg:w="11"/><text x="6.6433%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (10 samples, 0.08%)</title><rect x="6.4015%" y="965" width="0.0822%" height="15" fill="rgb(219,56,2)" fg:x="779" fg:w="10"/><text x="6.6515%" y="975.50"></text></g><g><title>__nss_passwd_lookup (116 samples, 0.95%)</title><rect x="6.6563%" y="981" width="0.9532%" height="15" fill="rgb(233,0,4)" fg:x="810" fg:w="116"/><text x="6.9063%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (15 samples, 0.12%)</title><rect x="7.6095%" y="981" width="0.1233%" height="15" fill="rgb(235,30,7)" fg:x="926" fg:w="15"/><text x="7.8595%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (168 samples, 1.38%)</title><rect x="6.4837%" y="997" width="1.3806%" height="15" fill="rgb(250,79,13)" fg:x="789" fg:w="168"/><text x="6.7337%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (16 samples, 0.13%)</title><rect x="7.7328%" y="981" width="0.1315%" height="15" fill="rgb(211,146,34)" fg:x="941" fg:w="16"/><text x="7.9828%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (10 samples, 0.08%)</title><rect x="7.7821%" y="965" width="0.0822%" height="15" fill="rgb(228,22,38)" fg:x="947" fg:w="10"/><text x="8.0321%" y="975.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="11.0362%" y="965" width="0.0164%" height="15" fill="rgb(235,168,5)" fg:x="1343" fg:w="2"/><text x="11.2862%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="11.0527%" y="965" width="0.0164%" height="15" fill="rgb(221,155,16)" fg:x="1345" fg:w="2"/><text x="11.3027%" y="975.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.02%)</title><rect x="11.1349%" y="805" width="0.0164%" height="15" fill="rgb(215,215,53)" fg:x="1355" fg:w="2"/><text x="11.3849%" y="815.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="11.1349%" y="789" width="0.0164%" height="15" fill="rgb(223,4,10)" fg:x="1355" fg:w="2"/><text x="11.3849%" y="799.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="11.1349%" y="773" width="0.0164%" height="15" fill="rgb(234,103,6)" fg:x="1355" fg:w="2"/><text x="11.3849%" y="783.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="11.1349%" y="821" width="0.0247%" height="15" fill="rgb(227,97,0)" fg:x="1355" fg:w="3"/><text x="11.3849%" y="831.50"></text></g><g><title>async_page_fault (7 samples, 0.06%)</title><rect x="11.1184%" y="901" width="0.0575%" height="15" fill="rgb(234,150,53)" fg:x="1353" fg:w="7"/><text x="11.3684%" y="911.50"></text></g><g><title>do_async_page_fault (7 samples, 0.06%)</title><rect x="11.1184%" y="885" width="0.0575%" height="15" fill="rgb(228,201,54)" fg:x="1353" fg:w="7"/><text x="11.3684%" y="895.50"></text></g><g><title>do_page_fault (7 samples, 0.06%)</title><rect x="11.1184%" y="869" width="0.0575%" height="15" fill="rgb(222,22,37)" fg:x="1353" fg:w="7"/><text x="11.3684%" y="879.50"></text></g><g><title>__do_page_fault (7 samples, 0.06%)</title><rect x="11.1184%" y="853" width="0.0575%" height="15" fill="rgb(237,53,32)" fg:x="1353" fg:w="7"/><text x="11.3684%" y="863.50"></text></g><g><title>handle_mm_fault (5 samples, 0.04%)</title><rect x="11.1349%" y="837" width="0.0411%" height="15" fill="rgb(233,25,53)" fg:x="1355" fg:w="5"/><text x="11.3849%" y="847.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.08%)</title><rect x="11.1102%" y="933" width="0.0822%" height="15" fill="rgb(210,40,34)" fg:x="1352" fg:w="10"/><text x="11.3602%" y="943.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.08%)</title><rect x="11.1102%" y="917" width="0.0822%" height="15" fill="rgb(241,220,44)" fg:x="1352" fg:w="10"/><text x="11.3602%" y="927.50"></text></g><g><title>mprotect (2 samples, 0.02%)</title><rect x="11.1759%" y="901" width="0.0164%" height="15" fill="rgb(235,28,35)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="11.1759%" y="885" width="0.0164%" height="15" fill="rgb(210,56,17)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="895.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="11.1759%" y="869" width="0.0164%" height="15" fill="rgb(224,130,29)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="879.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.02%)</title><rect x="11.1759%" y="853" width="0.0164%" height="15" fill="rgb(235,212,8)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="863.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.02%)</title><rect x="11.1759%" y="837" width="0.0164%" height="15" fill="rgb(223,33,50)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="847.50"></text></g><g><title>mprotect_fixup (2 samples, 0.02%)</title><rect x="11.1759%" y="821" width="0.0164%" height="15" fill="rgb(219,149,13)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="831.50"></text></g><g><title>perf_event_mmap (2 samples, 0.02%)</title><rect x="11.1759%" y="805" width="0.0164%" height="15" fill="rgb(250,156,29)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="815.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.02%)</title><rect x="11.1759%" y="789" width="0.0164%" height="15" fill="rgb(216,193,19)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="799.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.02%)</title><rect x="11.1759%" y="773" width="0.0164%" height="15" fill="rgb(216,135,14)" fg:x="1360" fg:w="2"/><text x="11.4259%" y="783.50"></text></g><g><title>__libc_calloc (16 samples, 0.13%)</title><rect x="11.0773%" y="949" width="0.1315%" height="15" fill="rgb(241,47,5)" fg:x="1348" fg:w="16"/><text x="11.3273%" y="959.50"></text></g><g><title>__nss_passwd_lookup (2 samples, 0.02%)</title><rect x="11.1924%" y="933" width="0.0164%" height="15" fill="rgb(233,42,35)" fg:x="1362" fg:w="2"/><text x="11.4424%" y="943.50"></text></g><g><title>__pthread_enable_asynccancel (3 samples, 0.02%)</title><rect x="11.2417%" y="869" width="0.0247%" height="15" fill="rgb(231,13,6)" fg:x="1368" fg:w="3"/><text x="11.4917%" y="879.50"></text></g><g><title>copy_page_to_iter (7 samples, 0.06%)</title><rect x="11.3321%" y="725" width="0.0575%" height="15" fill="rgb(207,181,40)" fg:x="1379" fg:w="7"/><text x="11.5821%" y="735.50"></text></g><g><title>copy_user_enhanced_fast_string (7 samples, 0.06%)</title><rect x="11.3321%" y="709" width="0.0575%" height="15" fill="rgb(254,173,49)" fg:x="1379" fg:w="7"/><text x="11.5821%" y="719.50"></text></g><g><title>io_schedule (14 samples, 0.12%)</title><rect x="11.3896%" y="725" width="0.1150%" height="15" fill="rgb(221,1,38)" fg:x="1386" fg:w="14"/><text x="11.6396%" y="735.50"></text></g><g><title>schedule (13 samples, 0.11%)</title><rect x="11.3978%" y="709" width="0.1068%" height="15" fill="rgb(206,124,46)" fg:x="1387" fg:w="13"/><text x="11.6478%" y="719.50"></text></g><g><title>__sched_text_start (13 samples, 0.11%)</title><rect x="11.3978%" y="693" width="0.1068%" height="15" fill="rgb(249,21,11)" fg:x="1387" fg:w="13"/><text x="11.6478%" y="703.50"></text></g><g><title>finish_task_switch (13 samples, 0.11%)</title><rect x="11.3978%" y="677" width="0.1068%" height="15" fill="rgb(222,201,40)" fg:x="1387" fg:w="13"/><text x="11.6478%" y="687.50"></text></g><g><title>__page_cache_alloc (4 samples, 0.03%)</title><rect x="11.5129%" y="677" width="0.0329%" height="15" fill="rgb(235,61,29)" fg:x="1401" fg:w="4"/><text x="11.7629%" y="687.50"></text></g><g><title>alloc_pages_current (4 samples, 0.03%)</title><rect x="11.5129%" y="661" width="0.0329%" height="15" fill="rgb(219,207,3)" fg:x="1401" fg:w="4"/><text x="11.7629%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.03%)</title><rect x="11.5129%" y="645" width="0.0329%" height="15" fill="rgb(222,56,46)" fg:x="1401" fg:w="4"/><text x="11.7629%" y="655.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.03%)</title><rect x="11.5129%" y="629" width="0.0329%" height="15" fill="rgb(239,76,54)" fg:x="1401" fg:w="4"/><text x="11.7629%" y="639.50"></text></g><g><title>prep_new_page (3 samples, 0.02%)</title><rect x="11.5211%" y="613" width="0.0247%" height="15" fill="rgb(231,124,27)" fg:x="1402" fg:w="3"/><text x="11.7711%" y="623.50"></text></g><g><title>clear_page_erms (3 samples, 0.02%)</title><rect x="11.5211%" y="597" width="0.0247%" height="15" fill="rgb(249,195,6)" fg:x="1402" fg:w="3"/><text x="11.7711%" y="607.50"></text></g><g><title>blk_finish_plug (4 samples, 0.03%)</title><rect x="11.5539%" y="661" width="0.0329%" height="15" fill="rgb(237,174,47)" fg:x="1406" fg:w="4"/><text x="11.8039%" y="671.50"></text></g><g><title>blk_flush_plug_list (4 samples, 0.03%)</title><rect x="11.5539%" y="645" width="0.0329%" height="15" fill="rgb(206,201,31)" fg:x="1406" fg:w="4"/><text x="11.8039%" y="655.50"></text></g><g><title>blk_mq_flush_plug_list (4 samples, 0.03%)</title><rect x="11.5539%" y="629" width="0.0329%" height="15" fill="rgb(231,57,52)" fg:x="1406" fg:w="4"/><text x="11.8039%" y="639.50"></text></g><g><title>blk_mq_sched_insert_requests (3 samples, 0.02%)</title><rect x="11.5622%" y="613" width="0.0247%" height="15" fill="rgb(248,177,22)" fg:x="1407" fg:w="3"/><text x="11.8122%" y="623.50"></text></g><g><title>blk_mq_try_issue_list_directly (3 samples, 0.02%)</title><rect x="11.5622%" y="597" width="0.0247%" height="15" fill="rgb(215,211,37)" fg:x="1407" fg:w="3"/><text x="11.8122%" y="607.50"></text></g><g><title>blk_mq_request_issue_directly (3 samples, 0.02%)</title><rect x="11.5622%" y="581" width="0.0247%" height="15" fill="rgb(241,128,51)" fg:x="1407" fg:w="3"/><text x="11.8122%" y="591.50"></text></g><g><title>__blk_mq_try_issue_directly (3 samples, 0.02%)</title><rect x="11.5622%" y="565" width="0.0247%" height="15" fill="rgb(227,165,31)" fg:x="1407" fg:w="3"/><text x="11.8122%" y="575.50"></text></g><g><title>nvme_queue_rq (3 samples, 0.02%)</title><rect x="11.5622%" y="549" width="0.0247%" height="15" fill="rgb(228,167,24)" fg:x="1407" fg:w="3"/><text x="11.8122%" y="559.50"></text></g><g><title>add_to_page_cache_lru (4 samples, 0.03%)</title><rect x="11.5950%" y="629" width="0.0329%" height="15" fill="rgb(228,143,12)" fg:x="1411" fg:w="4"/><text x="11.8450%" y="639.50"></text></g><g><title>__add_to_page_cache_locked (4 samples, 0.03%)</title><rect x="11.5950%" y="613" width="0.0329%" height="15" fill="rgb(249,149,8)" fg:x="1411" fg:w="4"/><text x="11.8450%" y="623.50"></text></g><g><title>ext4_map_blocks (2 samples, 0.02%)</title><rect x="11.6361%" y="629" width="0.0164%" height="15" fill="rgb(243,35,44)" fg:x="1416" fg:w="2"/><text x="11.8861%" y="639.50"></text></g><g><title>ext4_es_lookup_extent (2 samples, 0.02%)</title><rect x="11.6361%" y="613" width="0.0164%" height="15" fill="rgb(246,89,9)" fg:x="1416" fg:w="2"/><text x="11.8861%" y="623.50"></text></g><g><title>blk_mq_make_request (2 samples, 0.02%)</title><rect x="11.6526%" y="597" width="0.0164%" height="15" fill="rgb(233,213,13)" fg:x="1418" fg:w="2"/><text x="11.9026%" y="607.50"></text></g><g><title>submit_bio (5 samples, 0.04%)</title><rect x="11.6526%" y="629" width="0.0411%" height="15" fill="rgb(233,141,41)" fg:x="1418" fg:w="5"/><text x="11.9026%" y="639.50"></text></g><g><title>generic_make_request (5 samples, 0.04%)</title><rect x="11.6526%" y="613" width="0.0411%" height="15" fill="rgb(239,167,4)" fg:x="1418" fg:w="5"/><text x="11.9026%" y="623.50"></text></g><g><title>generic_make_request_checks (3 samples, 0.02%)</title><rect x="11.6690%" y="597" width="0.0247%" height="15" fill="rgb(209,217,16)" fg:x="1420" fg:w="3"/><text x="11.9190%" y="607.50"></text></g><g><title>__do_page_cache_readahead (23 samples, 0.19%)</title><rect x="11.5129%" y="693" width="0.1890%" height="15" fill="rgb(219,88,35)" fg:x="1401" fg:w="23"/><text x="11.7629%" y="703.50"></text></g><g><title>read_pages (18 samples, 0.15%)</title><rect x="11.5539%" y="677" width="0.1479%" height="15" fill="rgb(220,193,23)" fg:x="1406" fg:w="18"/><text x="11.8039%" y="687.50"></text></g><g><title>ext4_readpages (14 samples, 0.12%)</title><rect x="11.5868%" y="661" width="0.1150%" height="15" fill="rgb(230,90,52)" fg:x="1410" fg:w="14"/><text x="11.8368%" y="671.50"></text></g><g><title>ext4_mpage_readpages (14 samples, 0.12%)</title><rect x="11.5868%" y="645" width="0.1150%" height="15" fill="rgb(252,106,19)" fg:x="1410" fg:w="14"/><text x="11.8368%" y="655.50"></text></g><g><title>page_cache_sync_readahead (24 samples, 0.20%)</title><rect x="11.5129%" y="725" width="0.1972%" height="15" fill="rgb(206,74,20)" fg:x="1401" fg:w="24"/><text x="11.7629%" y="735.50"></text></g><g><title>ondemand_readahead (24 samples, 0.20%)</title><rect x="11.5129%" y="709" width="0.1972%" height="15" fill="rgb(230,138,44)" fg:x="1401" fg:w="24"/><text x="11.7629%" y="719.50"></text></g><g><title>pagecache_get_page (14 samples, 0.12%)</title><rect x="11.7101%" y="725" width="0.1150%" height="15" fill="rgb(235,182,43)" fg:x="1425" fg:w="14"/><text x="11.9601%" y="735.50"></text></g><g><title>find_get_entry (14 samples, 0.12%)</title><rect x="11.7101%" y="709" width="0.1150%" height="15" fill="rgb(242,16,51)" fg:x="1425" fg:w="14"/><text x="11.9601%" y="719.50"></text></g><g><title>xas_load (12 samples, 0.10%)</title><rect x="11.7265%" y="693" width="0.0986%" height="15" fill="rgb(248,9,4)" fg:x="1427" fg:w="12"/><text x="11.9765%" y="703.50"></text></g><g><title>ext4_file_read_iter (63 samples, 0.52%)</title><rect x="11.3156%" y="757" width="0.5177%" height="15" fill="rgb(210,31,22)" fg:x="1377" fg:w="63"/><text x="11.5656%" y="767.50"></text></g><g><title>generic_file_read_iter (63 samples, 0.52%)</title><rect x="11.3156%" y="741" width="0.5177%" height="15" fill="rgb(239,54,39)" fg:x="1377" fg:w="63"/><text x="11.5656%" y="751.50"></text></g><g><title>__vfs_read (64 samples, 0.53%)</title><rect x="11.3156%" y="789" width="0.5259%" height="15" fill="rgb(230,99,41)" fg:x="1377" fg:w="64"/><text x="11.5656%" y="799.50"></text></g><g><title>new_sync_read (64 samples, 0.53%)</title><rect x="11.3156%" y="773" width="0.5259%" height="15" fill="rgb(253,106,12)" fg:x="1377" fg:w="64"/><text x="11.5656%" y="783.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (940 samples, 7.72%)</title><rect x="4.1252%" y="1013" width="7.7245%" height="15" fill="rgb(213,46,41)" fg:x="502" fg:w="940"/><text x="4.3752%" y="1023.50">redb::tree_..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (485 samples, 3.99%)</title><rect x="7.8642%" y="997" width="3.9855%" height="15" fill="rgb(215,133,35)" fg:x="957" fg:w="485"/><text x="8.1142%" y="1007.50">redb..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (483 samples, 3.97%)</title><rect x="7.8807%" y="981" width="3.9691%" height="15" fill="rgb(213,28,5)" fg:x="959" fg:w="483"/><text x="8.1307%" y="991.50">redb..</text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (94 samples, 0.77%)</title><rect x="11.0773%" y="965" width="0.7725%" height="15" fill="rgb(215,77,49)" fg:x="1348" fg:w="94"/><text x="11.3273%" y="975.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (78 samples, 0.64%)</title><rect x="11.2088%" y="949" width="0.6410%" height="15" fill="rgb(248,100,22)" fg:x="1364" fg:w="78"/><text x="11.4588%" y="959.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (78 samples, 0.64%)</title><rect x="11.2088%" y="933" width="0.6410%" height="15" fill="rgb(208,67,9)" fg:x="1364" fg:w="78"/><text x="11.4588%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::read_at (77 samples, 0.63%)</title><rect x="11.2170%" y="917" width="0.6328%" height="15" fill="rgb(219,133,21)" fg:x="1365" fg:w="77"/><text x="11.4670%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (77 samples, 0.63%)</title><rect x="11.2170%" y="901" width="0.6328%" height="15" fill="rgb(246,46,29)" fg:x="1365" fg:w="77"/><text x="11.4670%" y="911.50"></text></g><g><title>__libc_pread (77 samples, 0.63%)</title><rect x="11.2170%" y="885" width="0.6328%" height="15" fill="rgb(246,185,52)" fg:x="1365" fg:w="77"/><text x="11.4670%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (71 samples, 0.58%)</title><rect x="11.2663%" y="869" width="0.5834%" height="15" fill="rgb(252,136,11)" fg:x="1371" fg:w="71"/><text x="11.5163%" y="879.50"></text></g><g><title>do_syscall_64 (69 samples, 0.57%)</title><rect x="11.2828%" y="853" width="0.5670%" height="15" fill="rgb(219,138,53)" fg:x="1373" fg:w="69"/><text x="11.5328%" y="863.50"></text></g><g><title>__x64_sys_pread64 (66 samples, 0.54%)</title><rect x="11.3074%" y="837" width="0.5424%" height="15" fill="rgb(211,51,23)" fg:x="1376" fg:w="66"/><text x="11.5574%" y="847.50"></text></g><g><title>ksys_pread64 (66 samples, 0.54%)</title><rect x="11.3074%" y="821" width="0.5424%" height="15" fill="rgb(247,221,28)" fg:x="1376" fg:w="66"/><text x="11.5574%" y="831.50"></text></g><g><title>vfs_read (65 samples, 0.53%)</title><rect x="11.3156%" y="805" width="0.5341%" height="15" fill="rgb(251,222,45)" fg:x="1377" fg:w="65"/><text x="11.5656%" y="815.50"></text></g><g><title>__nss_passwd_lookup (55 samples, 0.45%)</title><rect x="11.9402%" y="997" width="0.4520%" height="15" fill="rgb(217,162,53)" fg:x="1453" fg:w="55"/><text x="12.1902%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (10 samples, 0.08%)</title><rect x="12.3921%" y="997" width="0.0822%" height="15" fill="rgb(229,93,14)" fg:x="1508" fg:w="10"/><text x="12.6421%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (2 samples, 0.02%)</title><rect x="12.4579%" y="981" width="0.0164%" height="15" fill="rgb(209,67,49)" fg:x="1516" fg:w="2"/><text x="12.7079%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.03%)</title><rect x="12.4990%" y="981" width="0.0329%" height="15" fill="rgb(213,87,29)" fg:x="1521" fg:w="4"/><text x="12.7490%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (95 samples, 0.78%)</title><rect x="11.8498%" y="1013" width="0.7807%" height="15" fill="rgb(205,151,52)" fg:x="1442" fg:w="95"/><text x="12.0998%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (19 samples, 0.16%)</title><rect x="12.4743%" y="997" width="0.1561%" height="15" fill="rgb(253,215,39)" fg:x="1518" fg:w="19"/><text x="12.7243%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (12 samples, 0.10%)</title><rect x="12.5318%" y="981" width="0.0986%" height="15" fill="rgb(221,220,41)" fg:x="1525" fg:w="12"/><text x="12.7818%" y="991.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,185 samples, 9.74%)</title><rect x="3.8541%" y="1029" width="9.7379%" height="15" fill="rgb(218,133,21)" fg:x="469" fg:w="1185"/><text x="4.1041%" y="1039.50">redb::tree_sto..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (117 samples, 0.96%)</title><rect x="12.6305%" y="1013" width="0.9615%" height="15" fill="rgb(221,193,43)" fg:x="1537" fg:w="117"/><text x="12.8805%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (116 samples, 0.95%)</title><rect x="12.6387%" y="997" width="0.9532%" height="15" fill="rgb(240,128,52)" fg:x="1538" fg:w="116"/><text x="12.8887%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (18 samples, 0.15%)</title><rect x="13.6823%" y="1013" width="0.1479%" height="15" fill="rgb(253,114,12)" fg:x="1665" fg:w="18"/><text x="13.9323%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (6 samples, 0.05%)</title><rect x="13.8302%" y="1013" width="0.0493%" height="15" fill="rgb(215,223,47)" fg:x="1683" fg:w="6"/><text x="14.0802%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="13.8960%" y="997" width="0.0247%" height="15" fill="rgb(248,225,23)" fg:x="1691" fg:w="3"/><text x="14.1460%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (52 samples, 0.43%)</title><rect x="13.5919%" y="1029" width="0.4273%" height="15" fill="rgb(250,108,0)" fg:x="1654" fg:w="52"/><text x="13.8419%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (17 samples, 0.14%)</title><rect x="13.8795%" y="1013" width="0.1397%" height="15" fill="rgb(228,208,7)" fg:x="1689" fg:w="17"/><text x="14.1295%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (12 samples, 0.10%)</title><rect x="13.9206%" y="997" width="0.0986%" height="15" fill="rgb(244,45,10)" fg:x="1694" fg:w="12"/><text x="14.1706%" y="1007.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,316 samples, 10.81%)</title><rect x="3.8130%" y="1045" width="10.8144%" height="15" fill="rgb(207,125,25)" fg:x="464" fg:w="1316"/><text x="4.0630%" y="1055.50">redb::tree_store..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (74 samples, 0.61%)</title><rect x="14.0192%" y="1029" width="0.6081%" height="15" fill="rgb(210,195,18)" fg:x="1706" fg:w="74"/><text x="14.2692%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (73 samples, 0.60%)</title><rect x="14.0274%" y="1013" width="0.5999%" height="15" fill="rgb(249,80,12)" fg:x="1707" fg:w="73"/><text x="14.2774%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.06%)</title><rect x="14.6849%" y="1029" width="0.0575%" height="15" fill="rgb(221,65,9)" fg:x="1787" fg:w="7"/><text x="14.9349%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (3 samples, 0.02%)</title><rect x="14.7424%" y="1029" width="0.0247%" height="15" fill="rgb(235,49,36)" fg:x="1794" fg:w="3"/><text x="14.9924%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (20 samples, 0.16%)</title><rect x="14.6273%" y="1045" width="0.1644%" height="15" fill="rgb(225,32,20)" fg:x="1780" fg:w="20"/><text x="14.8773%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (3 samples, 0.02%)</title><rect x="14.7670%" y="1029" width="0.0247%" height="15" fill="rgb(215,141,46)" fg:x="1797" fg:w="3"/><text x="15.0170%" y="1039.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,365 samples, 11.22%)</title><rect x="3.7883%" y="1061" width="11.2170%" height="15" fill="rgb(250,160,47)" fg:x="461" fg:w="1365"/><text x="4.0383%" y="1071.50">redb::tree_store:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (26 samples, 0.21%)</title><rect x="14.7917%" y="1045" width="0.2137%" height="15" fill="rgb(216,222,40)" fg:x="1800" fg:w="26"/><text x="15.0417%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (24 samples, 0.20%)</title><rect x="14.8081%" y="1029" width="0.1972%" height="15" fill="rgb(234,217,39)" fg:x="1802" fg:w="24"/><text x="15.0581%" y="1039.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (14 samples, 0.12%)</title><rect x="15.0053%" y="1061" width="0.1150%" height="15" fill="rgb(207,178,40)" fg:x="1826" fg:w="14"/><text x="15.2553%" y="1071.50"></text></g><g><title>&lt;redb::table::Table&lt;K,V&gt; as redb::table::ReadableTable&lt;K,V&gt;&gt;::get (1,395 samples, 11.46%)</title><rect x="3.7719%" y="1077" width="11.4636%" height="15" fill="rgb(221,136,13)" fg:x="459" fg:w="1395"/><text x="4.0219%" y="1087.50">&lt;redb::table::Tab..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (14 samples, 0.12%)</title><rect x="15.1204%" y="1061" width="0.1150%" height="15" fill="rgb(249,199,10)" fg:x="1840" fg:w="14"/><text x="15.3704%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (14 samples, 0.12%)</title><rect x="15.1204%" y="1045" width="0.1150%" height="15" fill="rgb(249,222,13)" fg:x="1840" fg:w="14"/><text x="15.3704%" y="1055.50"></text></g><g><title>cfree (38 samples, 0.31%)</title><rect x="15.2354%" y="1077" width="0.3123%" height="15" fill="rgb(244,185,38)" fg:x="1854" fg:w="38"/><text x="15.4854%" y="1087.50"></text></g><g><title>_IO_str_seekoff (37 samples, 0.30%)</title><rect x="15.2437%" y="1061" width="0.3041%" height="15" fill="rgb(236,202,9)" fg:x="1855" fg:w="37"/><text x="15.4937%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.10%)</title><rect x="15.5477%" y="1077" width="0.0986%" height="15" fill="rgb(250,229,37)" fg:x="1892" fg:w="12"/><text x="15.7977%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.07%)</title><rect x="15.5724%" y="1061" width="0.0740%" height="15" fill="rgb(206,174,23)" fg:x="1895" fg:w="9"/><text x="15.8224%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;ord::index::updater::BlockData&gt; (33 samples, 0.27%)</title><rect x="15.6463%" y="1077" width="0.2712%" height="15" fill="rgb(211,33,43)" fg:x="1904" fg:w="33"/><text x="15.8963%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (32 samples, 0.26%)</title><rect x="15.6545%" y="1061" width="0.2630%" height="15" fill="rgb(245,58,50)" fg:x="1905" fg:w="32"/><text x="15.9045%" y="1071.50"></text></g><g><title>cfree (31 samples, 0.25%)</title><rect x="15.6627%" y="1045" width="0.2547%" height="15" fill="rgb(244,68,36)" fg:x="1906" fg:w="31"/><text x="15.9127%" y="1055.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.06%)</title><rect x="15.8600%" y="1029" width="0.0575%" height="15" fill="rgb(232,229,15)" fg:x="1930" fg:w="7"/><text x="16.1100%" y="1039.50"></text></g><g><title>log::__private_api_log (4 samples, 0.03%)</title><rect x="15.9175%" y="1077" width="0.0329%" height="15" fill="rgb(254,30,23)" fg:x="1937" fg:w="4"/><text x="16.1675%" y="1087.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (4 samples, 0.03%)</title><rect x="15.9175%" y="1061" width="0.0329%" height="15" fill="rgb(235,160,14)" fg:x="1937" fg:w="4"/><text x="16.1675%" y="1071.50"></text></g><g><title>&lt;log4rs::append::rolling_file::RollingFileAppender as log4rs::append::Append&gt;::append (3 samples, 0.02%)</title><rect x="15.9257%" y="1045" width="0.0247%" height="15" fill="rgb(212,155,44)" fg:x="1938" fg:w="3"/><text x="16.1757%" y="1055.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.02%)</title><rect x="15.9339%" y="1029" width="0.0164%" height="15" fill="rgb(226,2,50)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="15.9339%" y="1013" width="0.0164%" height="15" fill="rgb(234,177,6)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="15.9339%" y="997" width="0.0164%" height="15" fill="rgb(217,24,9)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.02%)</title><rect x="15.9339%" y="981" width="0.0164%" height="15" fill="rgb(220,13,46)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.02%)</title><rect x="15.9339%" y="965" width="0.0164%" height="15" fill="rgb(239,221,27)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="975.50"></text></g><g><title>__libc_write (2 samples, 0.02%)</title><rect x="15.9339%" y="949" width="0.0164%" height="15" fill="rgb(222,198,25)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="15.9339%" y="933" width="0.0164%" height="15" fill="rgb(211,99,13)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="943.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="15.9339%" y="917" width="0.0164%" height="15" fill="rgb(232,111,31)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="927.50"></text></g><g><title>__x64_sys_write (2 samples, 0.02%)</title><rect x="15.9339%" y="901" width="0.0164%" height="15" fill="rgb(245,82,37)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="911.50"></text></g><g><title>ksys_write (2 samples, 0.02%)</title><rect x="15.9339%" y="885" width="0.0164%" height="15" fill="rgb(227,149,46)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="895.50"></text></g><g><title>vfs_write (2 samples, 0.02%)</title><rect x="15.9339%" y="869" width="0.0164%" height="15" fill="rgb(218,36,50)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="879.50"></text></g><g><title>__vfs_write (2 samples, 0.02%)</title><rect x="15.9339%" y="853" width="0.0164%" height="15" fill="rgb(226,80,48)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="863.50"></text></g><g><title>new_sync_write (2 samples, 0.02%)</title><rect x="15.9339%" y="837" width="0.0164%" height="15" fill="rgb(238,224,15)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="847.50"></text></g><g><title>ext4_file_write_iter (2 samples, 0.02%)</title><rect x="15.9339%" y="821" width="0.0164%" height="15" fill="rgb(241,136,10)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="831.50"></text></g><g><title>__generic_file_write_iter (2 samples, 0.02%)</title><rect x="15.9339%" y="805" width="0.0164%" height="15" fill="rgb(208,32,45)" fg:x="1939" fg:w="2"/><text x="16.1839%" y="815.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="15.9668%" y="949" width="0.0164%" height="15" fill="rgb(207,135,9)" fg:x="1943" fg:w="2"/><text x="16.2168%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="15.9832%" y="949" width="0.0247%" height="15" fill="rgb(206,86,44)" fg:x="1945" fg:w="3"/><text x="16.2332%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="15.9832%" y="933" width="0.0247%" height="15" fill="rgb(245,177,15)" fg:x="1945" fg:w="3"/><text x="16.2332%" y="943.50"></text></g><g><title>realloc (3 samples, 0.02%)</title><rect x="15.9832%" y="917" width="0.0247%" height="15" fill="rgb(206,64,50)" fg:x="1945" fg:w="3"/><text x="16.2332%" y="927.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="15.9915%" y="901" width="0.0164%" height="15" fill="rgb(234,36,40)" fg:x="1946" fg:w="2"/><text x="16.2415%" y="911.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (20 samples, 0.16%)</title><rect x="16.0325%" y="933" width="0.1644%" height="15" fill="rgb(213,64,8)" fg:x="1951" fg:w="20"/><text x="16.2825%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (24 samples, 0.20%)</title><rect x="16.1969%" y="917" width="0.1972%" height="15" fill="rgb(210,75,36)" fg:x="1971" fg:w="24"/><text x="16.4469%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::leaf_checksum (65 samples, 0.53%)</title><rect x="16.1969%" y="933" width="0.5341%" height="15" fill="rgb(229,88,21)" fg:x="1971" fg:w="65"/><text x="16.4469%" y="943.50"></text></g><g><title>redb::tree_store::page_store::xxh3::hash128_large_avx2 (41 samples, 0.34%)</title><rect x="16.3941%" y="917" width="0.3369%" height="15" fill="rgb(252,204,47)" fg:x="1995" fg:w="41"/><text x="16.6441%" y="927.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (309 samples, 2.54%)</title><rect x="16.7310%" y="933" width="2.5392%" height="15" fill="rgb(208,77,27)" fg:x="2036" fg:w="309"/><text x="16.9810%" y="943.50">re..</text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (398 samples, 3.27%)</title><rect x="16.0161%" y="949" width="3.2706%" height="15" fill="rgb(221,76,26)" fg:x="1949" fg:w="398"/><text x="16.2661%" y="959.50">red..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (2 samples, 0.02%)</title><rect x="19.2703%" y="933" width="0.0164%" height="15" fill="rgb(225,139,18)" fg:x="2345" fg:w="2"/><text x="19.5203%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::BranchMutator::write_child_page (2 samples, 0.02%)</title><rect x="19.2867%" y="949" width="0.0164%" height="15" fill="rgb(230,137,11)" fg:x="2347" fg:w="2"/><text x="19.5367%" y="959.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (7 samples, 0.06%)</title><rect x="19.3031%" y="949" width="0.0575%" height="15" fill="rgb(212,28,1)" fg:x="2349" fg:w="7"/><text x="19.5531%" y="959.50"></text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (461 samples, 3.79%)</title><rect x="15.9586%" y="965" width="3.7883%" height="15" fill="rgb(248,164,17)" fg:x="1942" fg:w="461"/><text x="16.2086%" y="975.50">redb..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (47 samples, 0.39%)</title><rect x="19.3607%" y="949" width="0.3862%" height="15" fill="rgb(222,171,42)" fg:x="2356" fg:w="47"/><text x="19.6107%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.06%)</title><rect x="19.6894%" y="933" width="0.0575%" height="15" fill="rgb(243,84,45)" fg:x="2396" fg:w="7"/><text x="19.9394%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="19.7140%" y="917" width="0.0329%" height="15" fill="rgb(252,49,23)" fg:x="2399" fg:w="4"/><text x="19.9640%" y="927.50"></text></g><g><title>ord::index::updater::Updater::commit (464 samples, 3.81%)</title><rect x="15.9504%" y="1077" width="3.8130%" height="15" fill="rgb(215,19,7)" fg:x="1941" fg:w="464"/><text x="16.2004%" y="1087.50">ord:..</text></g><g><title>redb::transactions::WriteTransaction::commit (464 samples, 3.81%)</title><rect x="15.9504%" y="1061" width="3.8130%" height="15" fill="rgb(238,81,41)" fg:x="1941" fg:w="464"/><text x="16.2004%" y="1071.50">redb..</text></g><g><title>redb::transactions::WriteTransaction::durable_commit (464 samples, 3.81%)</title><rect x="15.9504%" y="1045" width="3.8130%" height="15" fill="rgb(210,199,37)" fg:x="1941" fg:w="464"/><text x="16.2004%" y="1055.50">redb..</text></g><g><title>redb::tree_store::table_tree::TableTree::flush_table_root_updates (464 samples, 3.81%)</title><rect x="15.9504%" y="1029" width="3.8130%" height="15" fill="rgb(244,192,49)" fg:x="1941" fg:w="464"/><text x="16.2004%" y="1039.50">redb..</text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (463 samples, 3.80%)</title><rect x="15.9586%" y="1013" width="3.8047%" height="15" fill="rgb(226,211,11)" fg:x="1942" fg:w="463"/><text x="16.2086%" y="1023.50">redb..</text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (463 samples, 3.80%)</title><rect x="15.9586%" y="997" width="3.8047%" height="15" fill="rgb(236,162,54)" fg:x="1942" fg:w="463"/><text x="16.2086%" y="1007.50">redb..</text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (463 samples, 3.80%)</title><rect x="15.9586%" y="981" width="3.8047%" height="15" fill="rgb(220,229,9)" fg:x="1942" fg:w="463"/><text x="16.2086%" y="991.50">redb..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (2 samples, 0.02%)</title><rect x="19.7469%" y="965" width="0.0164%" height="15" fill="rgb(250,87,22)" fg:x="2403" fg:w="2"/><text x="19.9969%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.04%)</title><rect x="19.9441%" y="1061" width="0.0411%" height="15" fill="rgb(239,43,17)" fg:x="2427" fg:w="5"/><text x="20.1941%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="19.9441%" y="1045" width="0.0411%" height="15" fill="rgb(231,177,25)" fg:x="2427" fg:w="5"/><text x="20.1941%" y="1055.50"></text></g><g><title>__libc_malloc (4 samples, 0.03%)</title><rect x="19.9523%" y="1029" width="0.0329%" height="15" fill="rgb(219,179,1)" fg:x="2428" fg:w="4"/><text x="20.2023%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (60 samples, 0.49%)</title><rect x="20.0345%" y="1045" width="0.4931%" height="15" fill="rgb(238,219,53)" fg:x="2438" fg:w="60"/><text x="20.2845%" y="1055.50"></text></g><g><title>_IO_str_seekoff (17 samples, 0.14%)</title><rect x="20.8234%" y="981" width="0.1397%" height="15" fill="rgb(232,167,36)" fg:x="2534" fg:w="17"/><text x="21.0734%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (120 samples, 0.99%)</title><rect x="19.9852%" y="1061" width="0.9861%" height="15" fill="rgb(244,19,51)" fg:x="2432" fg:w="120"/><text x="20.2352%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (54 samples, 0.44%)</title><rect x="20.5276%" y="1045" width="0.4438%" height="15" fill="rgb(224,6,22)" fg:x="2498" fg:w="54"/><text x="20.7776%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.40%)</title><rect x="20.5687%" y="1029" width="0.4027%" height="15" fill="rgb(224,145,5)" fg:x="2503" fg:w="49"/><text x="20.8187%" y="1039.50"></text></g><g><title>realloc (47 samples, 0.39%)</title><rect x="20.5851%" y="1013" width="0.3862%" height="15" fill="rgb(234,130,49)" fg:x="2505" fg:w="47"/><text x="20.8351%" y="1023.50"></text></g><g><title>_IO_str_seekoff (22 samples, 0.18%)</title><rect x="20.7905%" y="997" width="0.1808%" height="15" fill="rgb(254,6,2)" fg:x="2530" fg:w="22"/><text x="21.0405%" y="1007.50"></text></g><g><title>cfree (7 samples, 0.06%)</title><rect x="20.9713%" y="1061" width="0.0575%" height="15" fill="rgb(208,96,46)" fg:x="2552" fg:w="7"/><text x="21.2213%" y="1071.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (33 samples, 0.27%)</title><rect x="21.1850%" y="1045" width="0.2712%" height="15" fill="rgb(239,3,39)" fg:x="2578" fg:w="33"/><text x="21.4350%" y="1055.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="21.4397%" y="1029" width="0.0164%" height="15" fill="rgb(233,210,1)" fg:x="2609" fg:w="2"/><text x="21.6897%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageMut as redb::tree_store::page_store::base::Page&gt;::get_page_number (2 samples, 0.02%)</title><rect x="21.5548%" y="1029" width="0.0164%" height="15" fill="rgb(244,137,37)" fg:x="2623" fg:w="2"/><text x="21.8048%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="21.5712%" y="1029" width="0.0329%" height="15" fill="rgb(240,136,2)" fg:x="2625" fg:w="4"/><text x="21.8212%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (14 samples, 0.12%)</title><rect x="21.6041%" y="1029" width="0.1150%" height="15" fill="rgb(239,18,37)" fg:x="2629" fg:w="14"/><text x="21.8541%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (14 samples, 0.12%)</title><rect x="21.6041%" y="1013" width="0.1150%" height="15" fill="rgb(218,185,22)" fg:x="2629" fg:w="14"/><text x="21.8541%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="21.7849%" y="1013" width="0.0329%" height="15" fill="rgb(225,218,4)" fg:x="2651" fg:w="4"/><text x="22.0349%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (3 samples, 0.02%)</title><rect x="21.8177%" y="1013" width="0.0247%" height="15" fill="rgb(230,182,32)" fg:x="2655" fg:w="3"/><text x="22.0677%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (23 samples, 0.19%)</title><rect x="21.7191%" y="1029" width="0.1890%" height="15" fill="rgb(242,56,43)" fg:x="2643" fg:w="23"/><text x="21.9691%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (8 samples, 0.07%)</title><rect x="21.8424%" y="1013" width="0.0657%" height="15" fill="rgb(233,99,24)" fg:x="2658" fg:w="8"/><text x="22.0924%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (3 samples, 0.02%)</title><rect x="21.8835%" y="997" width="0.0247%" height="15" fill="rgb(234,209,42)" fg:x="2663" fg:w="3"/><text x="22.1335%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="22.0067%" y="1013" width="0.0247%" height="15" fill="rgb(227,7,12)" fg:x="2678" fg:w="3"/><text x="22.2567%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.07%)</title><rect x="22.0314%" y="1013" width="0.0657%" height="15" fill="rgb(245,203,43)" fg:x="2681" fg:w="8"/><text x="22.2814%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (17 samples, 0.14%)</title><rect x="22.0971%" y="1013" width="0.1397%" height="15" fill="rgb(238,205,33)" fg:x="2689" fg:w="17"/><text x="22.3471%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (15 samples, 0.12%)</title><rect x="22.1136%" y="997" width="0.1233%" height="15" fill="rgb(231,56,7)" fg:x="2691" fg:w="15"/><text x="22.3636%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (17 samples, 0.14%)</title><rect x="22.3847%" y="997" width="0.1397%" height="15" fill="rgb(244,186,29)" fg:x="2724" fg:w="17"/><text x="22.6347%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (5 samples, 0.04%)</title><rect x="22.5244%" y="997" width="0.0411%" height="15" fill="rgb(234,111,31)" fg:x="2741" fg:w="5"/><text x="22.7744%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (55 samples, 0.45%)</title><rect x="22.2368%" y="1013" width="0.4520%" height="15" fill="rgb(241,149,10)" fg:x="2706" fg:w="55"/><text x="22.4868%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (15 samples, 0.12%)</title><rect x="22.5655%" y="997" width="0.1233%" height="15" fill="rgb(249,206,44)" fg:x="2746" fg:w="15"/><text x="22.8155%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (7 samples, 0.06%)</title><rect x="22.6313%" y="981" width="0.0575%" height="15" fill="rgb(251,153,30)" fg:x="2754" fg:w="7"/><text x="22.8813%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (4 samples, 0.03%)</title><rect x="23.0750%" y="997" width="0.0329%" height="15" fill="rgb(239,152,38)" fg:x="2808" fg:w="4"/><text x="23.3250%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageMut as redb::tree_store::page_store::base::Page&gt;::get_page_number (2 samples, 0.02%)</title><rect x="23.1079%" y="997" width="0.0164%" height="15" fill="rgb(249,139,47)" fg:x="2812" fg:w="2"/><text x="23.3579%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (22 samples, 0.18%)</title><rect x="23.1325%" y="997" width="0.1808%" height="15" fill="rgb(244,64,35)" fg:x="2815" fg:w="22"/><text x="23.3825%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (22 samples, 0.18%)</title><rect x="23.1325%" y="981" width="0.1808%" height="15" fill="rgb(216,46,15)" fg:x="2815" fg:w="22"/><text x="23.3825%" y="991.50"></text></g><g><title>__nss_passwd_lookup (39 samples, 0.32%)</title><rect x="23.4366%" y="981" width="0.3205%" height="15" fill="rgb(250,74,19)" fg:x="2852" fg:w="39"/><text x="23.6866%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (7 samples, 0.06%)</title><rect x="23.7571%" y="981" width="0.0575%" height="15" fill="rgb(249,42,33)" fg:x="2891" fg:w="7"/><text x="24.0071%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="23.8886%" y="965" width="0.0247%" height="15" fill="rgb(242,149,17)" fg:x="2907" fg:w="3"/><text x="24.1386%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (79 samples, 0.65%)</title><rect x="23.3133%" y="997" width="0.6492%" height="15" fill="rgb(244,29,21)" fg:x="2837" fg:w="79"/><text x="23.5633%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (18 samples, 0.15%)</title><rect x="23.8146%" y="981" width="0.1479%" height="15" fill="rgb(220,130,37)" fg:x="2898" fg:w="18"/><text x="24.0646%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (6 samples, 0.05%)</title><rect x="23.9132%" y="965" width="0.0493%" height="15" fill="rgb(211,67,2)" fg:x="2910" fg:w="6"/><text x="24.1632%" y="975.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (9 samples, 0.07%)</title><rect x="24.6446%" y="981" width="0.0740%" height="15" fill="rgb(235,68,52)" fg:x="2999" fg:w="9"/><text x="24.8946%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageMut as redb::tree_store::page_store::base::Page&gt;::get_page_number (2 samples, 0.02%)</title><rect x="24.7185%" y="981" width="0.0164%" height="15" fill="rgb(246,142,3)" fg:x="3008" fg:w="2"/><text x="24.9685%" y="991.50"></text></g><g><title>__nss_passwd_lookup (2 samples, 0.02%)</title><rect x="24.7432%" y="981" width="0.0164%" height="15" fill="rgb(241,25,7)" fg:x="3011" fg:w="2"/><text x="24.9932%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (27 samples, 0.22%)</title><rect x="24.7679%" y="981" width="0.2219%" height="15" fill="rgb(242,119,39)" fg:x="3014" fg:w="27"/><text x="25.0179%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (26 samples, 0.21%)</title><rect x="24.7761%" y="965" width="0.2137%" height="15" fill="rgb(241,98,45)" fg:x="3015" fg:w="26"/><text x="25.0261%" y="975.50"></text></g><g><title>__nss_passwd_lookup (85 samples, 0.70%)</title><rect x="25.0390%" y="965" width="0.6985%" height="15" fill="rgb(254,28,30)" fg:x="3047" fg:w="85"/><text x="25.2890%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (13 samples, 0.11%)</title><rect x="25.7375%" y="965" width="0.1068%" height="15" fill="rgb(241,142,54)" fg:x="3132" fg:w="13"/><text x="25.9875%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (117 samples, 0.96%)</title><rect x="24.9897%" y="981" width="0.9615%" height="15" fill="rgb(222,85,15)" fg:x="3041" fg:w="117"/><text x="25.2397%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (13 samples, 0.11%)</title><rect x="25.8444%" y="965" width="0.1068%" height="15" fill="rgb(210,85,47)" fg:x="3145" fg:w="13"/><text x="26.0944%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (8 samples, 0.07%)</title><rect x="25.8854%" y="949" width="0.0657%" height="15" fill="rgb(224,206,25)" fg:x="3150" fg:w="8"/><text x="26.1354%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (7 samples, 0.06%)</title><rect x="25.9512%" y="981" width="0.0575%" height="15" fill="rgb(243,201,19)" fg:x="3158" fg:w="7"/><text x="26.2012%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (2 samples, 0.02%)</title><rect x="26.0087%" y="981" width="0.0164%" height="15" fill="rgb(236,59,4)" fg:x="3165" fg:w="2"/><text x="26.2587%" y="991.50"></text></g><g><title>__nss_passwd_lookup (2 samples, 0.02%)</title><rect x="26.0251%" y="965" width="0.0164%" height="15" fill="rgb(254,179,45)" fg:x="3167" fg:w="2"/><text x="26.2751%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::build (11 samples, 0.09%)</title><rect x="26.0251%" y="981" width="0.0904%" height="15" fill="rgb(226,14,10)" fg:x="3167" fg:w="11"/><text x="26.2751%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (8 samples, 0.07%)</title><rect x="26.0498%" y="965" width="0.0657%" height="15" fill="rgb(244,27,41)" fg:x="3170" fg:w="8"/><text x="26.2998%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (6 samples, 0.05%)</title><rect x="26.0662%" y="949" width="0.0493%" height="15" fill="rgb(235,35,32)" fg:x="3172" fg:w="6"/><text x="26.3162%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::new (6 samples, 0.05%)</title><rect x="26.1155%" y="981" width="0.0493%" height="15" fill="rgb(218,68,31)" fg:x="3178" fg:w="6"/><text x="26.3655%" y="991.50"></text></g><g><title>__libc_malloc (6 samples, 0.05%)</title><rect x="26.1155%" y="965" width="0.0493%" height="15" fill="rgb(207,120,37)" fg:x="3178" fg:w="6"/><text x="26.3655%" y="975.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.03%)</title><rect x="26.1320%" y="949" width="0.0329%" height="15" fill="rgb(227,98,0)" fg:x="3180" fg:w="4"/><text x="26.3820%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::push_child (5 samples, 0.04%)</title><rect x="26.1648%" y="981" width="0.0411%" height="15" fill="rgb(207,7,3)" fg:x="3184" fg:w="5"/><text x="26.4148%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::get_page_number (2 samples, 0.02%)</title><rect x="26.9373%" y="965" width="0.0164%" height="15" fill="rgb(206,98,19)" fg:x="3278" fg:w="2"/><text x="27.1873%" y="975.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (11 samples, 0.09%)</title><rect x="26.9537%" y="965" width="0.0904%" height="15" fill="rgb(217,5,26)" fg:x="3280" fg:w="11"/><text x="27.2037%" y="975.50"></text></g><g><title>__nss_passwd_lookup (61 samples, 0.50%)</title><rect x="27.0523%" y="965" width="0.5013%" height="15" fill="rgb(235,190,38)" fg:x="3292" fg:w="61"/><text x="27.3023%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::EntryAccessor::key (4 samples, 0.03%)</title><rect x="27.5536%" y="965" width="0.0329%" height="15" fill="rgb(247,86,24)" fg:x="3353" fg:w="4"/><text x="27.8036%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::entry (13 samples, 0.11%)</title><rect x="27.5865%" y="965" width="0.1068%" height="15" fill="rgb(205,101,16)" fg:x="3357" fg:w="13"/><text x="27.8365%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (5 samples, 0.04%)</title><rect x="27.6522%" y="949" width="0.0411%" height="15" fill="rgb(246,168,33)" fg:x="3365" fg:w="5"/><text x="27.9022%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (2 samples, 0.02%)</title><rect x="27.6933%" y="965" width="0.0164%" height="15" fill="rgb(231,114,1)" fg:x="3370" fg:w="2"/><text x="27.9433%" y="975.50"></text></g><g><title>cfree (6 samples, 0.05%)</title><rect x="27.8001%" y="949" width="0.0493%" height="15" fill="rgb(207,184,53)" fg:x="3383" fg:w="6"/><text x="28.0501%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (49 samples, 0.40%)</title><rect x="27.8495%" y="949" width="0.4027%" height="15" fill="rgb(224,95,51)" fg:x="3389" fg:w="49"/><text x="28.0995%" y="959.50"></text></g><g><title>__nss_passwd_lookup (25 samples, 0.21%)</title><rect x="28.0467%" y="933" width="0.2054%" height="15" fill="rgb(212,188,45)" fg:x="3413" fg:w="25"/><text x="28.2967%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.05%)</title><rect x="28.3014%" y="933" width="0.0493%" height="15" fill="rgb(223,154,38)" fg:x="3444" fg:w="6"/><text x="28.5514%" y="943.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="28.6548%" y="917" width="0.0247%" height="15" fill="rgb(251,22,52)" fg:x="3487" fg:w="3"/><text x="28.9048%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (8 samples, 0.07%)</title><rect x="28.6876%" y="917" width="0.0657%" height="15" fill="rgb(229,209,22)" fg:x="3491" fg:w="8"/><text x="28.9376%" y="927.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (54 samples, 0.44%)</title><rect x="28.3507%" y="933" width="0.4438%" height="15" fill="rgb(234,138,34)" fg:x="3450" fg:w="54"/><text x="28.6007%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.04%)</title><rect x="28.7534%" y="917" width="0.0411%" height="15" fill="rgb(212,95,11)" fg:x="3499" fg:w="5"/><text x="29.0034%" y="927.50"></text></g><g><title>__libc_calloc (5 samples, 0.04%)</title><rect x="28.7534%" y="901" width="0.0411%" height="15" fill="rgb(240,179,47)" fg:x="3499" fg:w="5"/><text x="29.0034%" y="911.50"></text></g><g><title>__nss_passwd_lookup (3 samples, 0.02%)</title><rect x="28.7698%" y="885" width="0.0247%" height="15" fill="rgb(240,163,11)" fg:x="3501" fg:w="3"/><text x="29.0198%" y="895.50"></text></g><g><title>redb::tree_store::page_store::bitmap::BtreeBitmap::find_first_unset (3 samples, 0.02%)</title><rect x="28.8191%" y="901" width="0.0247%" height="15" fill="rgb(236,37,12)" fg:x="3507" fg:w="3"/><text x="29.0691%" y="911.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (137 samples, 1.13%)</title><rect x="27.7262%" y="965" width="1.1258%" height="15" fill="rgb(232,164,16)" fg:x="3374" fg:w="137"/><text x="27.9762%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (73 samples, 0.60%)</title><rect x="28.2521%" y="949" width="0.5999%" height="15" fill="rgb(244,205,15)" fg:x="3438" fg:w="73"/><text x="28.5021%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (7 samples, 0.06%)</title><rect x="28.7945%" y="933" width="0.0575%" height="15" fill="rgb(223,117,47)" fg:x="3504" fg:w="7"/><text x="29.0445%" y="943.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (4 samples, 0.03%)</title><rect x="28.8191%" y="917" width="0.0329%" height="15" fill="rgb(244,107,35)" fg:x="3507" fg:w="4"/><text x="29.0691%" y="927.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="28.8520%" y="949" width="0.0164%" height="15" fill="rgb(205,140,8)" fg:x="3511" fg:w="2"/><text x="29.1020%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (11 samples, 0.09%)</title><rect x="28.8684%" y="949" width="0.0904%" height="15" fill="rgb(228,84,46)" fg:x="3513" fg:w="11"/><text x="29.1184%" y="959.50"></text></g><g><title>__nss_passwd_lookup (6 samples, 0.05%)</title><rect x="28.9095%" y="933" width="0.0493%" height="15" fill="rgb(254,188,9)" fg:x="3518" fg:w="6"/><text x="29.1595%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (19 samples, 0.16%)</title><rect x="28.8520%" y="965" width="0.1561%" height="15" fill="rgb(206,112,54)" fg:x="3511" fg:w="19"/><text x="29.1020%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (6 samples, 0.05%)</title><rect x="28.9588%" y="949" width="0.0493%" height="15" fill="rgb(216,84,49)" fg:x="3524" fg:w="6"/><text x="29.2088%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="28.9753%" y="933" width="0.0329%" height="15" fill="rgb(214,194,35)" fg:x="3526" fg:w="4"/><text x="29.2253%" y="943.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::new (13 samples, 0.11%)</title><rect x="29.0081%" y="965" width="0.1068%" height="15" fill="rgb(249,28,3)" fg:x="3530" fg:w="13"/><text x="29.2581%" y="975.50"></text></g><g><title>__libc_malloc (13 samples, 0.11%)</title><rect x="29.0081%" y="949" width="0.1068%" height="15" fill="rgb(222,56,52)" fg:x="3530" fg:w="13"/><text x="29.2581%" y="959.50"></text></g><g><title>_IO_str_seekoff (12 samples, 0.10%)</title><rect x="29.0164%" y="933" width="0.0986%" height="15" fill="rgb(245,217,50)" fg:x="3531" fg:w="12"/><text x="29.2664%" y="943.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="29.0985%" y="917" width="0.0164%" height="15" fill="rgb(213,201,24)" fg:x="3541" fg:w="2"/><text x="29.3485%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::push (4 samples, 0.03%)</title><rect x="29.1150%" y="965" width="0.0329%" height="15" fill="rgb(248,116,28)" fg:x="3543" fg:w="4"/><text x="29.3650%" y="975.50"></text></g><g><title>__nss_passwd_lookup (60 samples, 0.49%)</title><rect x="29.3040%" y="949" width="0.4931%" height="15" fill="rgb(219,72,43)" fg:x="3566" fg:w="60"/><text x="29.5540%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (5 samples, 0.04%)</title><rect x="29.7970%" y="949" width="0.0411%" height="15" fill="rgb(209,138,14)" fg:x="3626" fg:w="5"/><text x="30.0470%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::insert (110 samples, 0.90%)</title><rect x="29.1561%" y="965" width="0.9039%" height="15" fill="rgb(222,18,33)" fg:x="3548" fg:w="110"/><text x="29.4061%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::update_value_end (27 samples, 0.22%)</title><rect x="29.8381%" y="949" width="0.2219%" height="15" fill="rgb(213,199,7)" fg:x="3631" fg:w="27"/><text x="30.0881%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.02%)</title><rect x="30.1175%" y="917" width="0.0164%" height="15" fill="rgb(250,110,10)" fg:x="3665" fg:w="2"/><text x="30.3675%" y="927.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (5 samples, 0.04%)</title><rect x="30.1011%" y="933" width="0.0411%" height="15" fill="rgb(248,123,6)" fg:x="3663" fg:w="5"/><text x="30.3511%" y="943.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (10 samples, 0.08%)</title><rect x="30.0682%" y="965" width="0.0822%" height="15" fill="rgb(206,91,31)" fg:x="3659" fg:w="10"/><text x="30.3182%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (7 samples, 0.06%)</title><rect x="30.0929%" y="949" width="0.0575%" height="15" fill="rgb(211,154,13)" fg:x="3662" fg:w="7"/><text x="30.3429%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (216 samples, 1.78%)</title><rect x="30.1504%" y="965" width="1.7750%" height="15" fill="rgb(225,148,7)" fg:x="3669" fg:w="216"/><text x="30.4004%" y="975.50">r..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (214 samples, 1.76%)</title><rect x="30.1668%" y="949" width="1.7586%" height="15" fill="rgb(220,160,43)" fg:x="3671" fg:w="214"/><text x="30.4168%" y="959.50"></text></g><g><title>cfree (13 samples, 0.11%)</title><rect x="31.8186%" y="933" width="0.1068%" height="15" fill="rgb(213,52,39)" fg:x="3872" fg:w="13"/><text x="32.0686%" y="943.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (765 samples, 6.29%)</title><rect x="26.2224%" y="981" width="6.2865%" height="15" fill="rgb(243,137,7)" fg:x="3191" fg:w="765"/><text x="26.4724%" y="991.50">redb::tr..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (71 samples, 0.58%)</title><rect x="31.9254%" y="965" width="0.5834%" height="15" fill="rgb(230,79,13)" fg:x="3885" fg:w="71"/><text x="32.1754%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.05%)</title><rect x="32.4595%" y="949" width="0.0493%" height="15" fill="rgb(247,105,23)" fg:x="3950" fg:w="6"/><text x="32.7095%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="32.4924%" y="933" width="0.0164%" height="15" fill="rgb(223,179,41)" fg:x="3954" fg:w="2"/><text x="32.7424%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (5 samples, 0.04%)</title><rect x="32.5171%" y="965" width="0.0411%" height="15" fill="rgb(218,9,34)" fg:x="3957" fg:w="5"/><text x="32.7671%" y="975.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::free (2 samples, 0.02%)</title><rect x="32.5664%" y="949" width="0.0164%" height="15" fill="rgb(222,106,8)" fg:x="3963" fg:w="2"/><text x="32.8164%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.02%)</title><rect x="32.5910%" y="933" width="0.0164%" height="15" fill="rgb(211,220,0)" fg:x="3966" fg:w="2"/><text x="32.8410%" y="943.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (2 samples, 0.02%)</title><rect x="32.5910%" y="917" width="0.0164%" height="15" fill="rgb(229,52,16)" fg:x="3966" fg:w="2"/><text x="32.8410%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.02%)</title><rect x="32.6074%" y="933" width="0.0247%" height="15" fill="rgb(212,155,18)" fg:x="3968" fg:w="3"/><text x="32.8574%" y="943.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="32.6074%" y="917" width="0.0247%" height="15" fill="rgb(242,21,14)" fg:x="3968" fg:w="3"/><text x="32.8574%" y="927.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (6 samples, 0.05%)</title><rect x="32.5910%" y="949" width="0.0493%" height="15" fill="rgb(222,19,48)" fg:x="3966" fg:w="6"/><text x="32.8410%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (19 samples, 0.16%)</title><rect x="32.5088%" y="981" width="0.1561%" height="15" fill="rgb(232,45,27)" fg:x="3956" fg:w="19"/><text x="32.7588%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (13 samples, 0.11%)</title><rect x="32.5581%" y="965" width="0.1068%" height="15" fill="rgb(249,103,42)" fg:x="3962" fg:w="13"/><text x="32.8081%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::invalidate_cache (3 samples, 0.02%)</title><rect x="32.6403%" y="949" width="0.0247%" height="15" fill="rgb(246,81,33)" fg:x="3972" fg:w="3"/><text x="32.8903%" y="959.50"></text></g><g><title>__libc_calloc (9 samples, 0.07%)</title><rect x="35.0399%" y="933" width="0.0740%" height="15" fill="rgb(252,33,42)" fg:x="4264" fg:w="9"/><text x="35.2899%" y="943.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.05%)</title><rect x="35.0645%" y="917" width="0.0493%" height="15" fill="rgb(209,212,41)" fg:x="4267" fg:w="6"/><text x="35.3145%" y="927.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="35.0892%" y="901" width="0.0247%" height="15" fill="rgb(207,154,6)" fg:x="4270" fg:w="3"/><text x="35.3392%" y="911.50"></text></g><g><title>__pthread_enable_asynccancel (9 samples, 0.07%)</title><rect x="35.1713%" y="853" width="0.0740%" height="15" fill="rgb(223,64,47)" fg:x="4280" fg:w="9"/><text x="35.4213%" y="863.50"></text></g><g><title>__fdget (2 samples, 0.02%)</title><rect x="35.2535%" y="789" width="0.0164%" height="15" fill="rgb(211,161,38)" fg:x="4290" fg:w="2"/><text x="35.5035%" y="799.50"></text></g><g><title>__fget_light (2 samples, 0.02%)</title><rect x="35.2535%" y="773" width="0.0164%" height="15" fill="rgb(219,138,40)" fg:x="4290" fg:w="2"/><text x="35.5035%" y="783.50"></text></g><g><title>copy_page_to_iter (12 samples, 0.10%)</title><rect x="35.3110%" y="709" width="0.0986%" height="15" fill="rgb(241,228,46)" fg:x="4297" fg:w="12"/><text x="35.5610%" y="719.50"></text></g><g><title>copy_user_enhanced_fast_string (12 samples, 0.10%)</title><rect x="35.3110%" y="693" width="0.0986%" height="15" fill="rgb(223,209,38)" fg:x="4297" fg:w="12"/><text x="35.5610%" y="703.50"></text></g><g><title>io_schedule (15 samples, 0.12%)</title><rect x="35.4096%" y="709" width="0.1233%" height="15" fill="rgb(236,164,45)" fg:x="4309" fg:w="15"/><text x="35.6596%" y="719.50"></text></g><g><title>schedule (13 samples, 0.11%)</title><rect x="35.4261%" y="693" width="0.1068%" height="15" fill="rgb(231,15,5)" fg:x="4311" fg:w="13"/><text x="35.6761%" y="703.50"></text></g><g><title>__sched_text_start (13 samples, 0.11%)</title><rect x="35.4261%" y="677" width="0.1068%" height="15" fill="rgb(252,35,15)" fg:x="4311" fg:w="13"/><text x="35.6761%" y="687.50"></text></g><g><title>finish_task_switch (13 samples, 0.11%)</title><rect x="35.4261%" y="661" width="0.1068%" height="15" fill="rgb(248,181,18)" fg:x="4311" fg:w="13"/><text x="35.6761%" y="671.50"></text></g><g><title>__page_cache_alloc (6 samples, 0.05%)</title><rect x="35.5576%" y="661" width="0.0493%" height="15" fill="rgb(233,39,42)" fg:x="4327" fg:w="6"/><text x="35.8076%" y="671.50"></text></g><g><title>alloc_pages_current (6 samples, 0.05%)</title><rect x="35.5576%" y="645" width="0.0493%" height="15" fill="rgb(238,110,33)" fg:x="4327" fg:w="6"/><text x="35.8076%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.05%)</title><rect x="35.5576%" y="629" width="0.0493%" height="15" fill="rgb(233,195,10)" fg:x="4327" fg:w="6"/><text x="35.8076%" y="639.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.05%)</title><rect x="35.5576%" y="613" width="0.0493%" height="15" fill="rgb(254,105,3)" fg:x="4327" fg:w="6"/><text x="35.8076%" y="623.50"></text></g><g><title>prep_new_page (3 samples, 0.02%)</title><rect x="35.5822%" y="597" width="0.0247%" height="15" fill="rgb(221,225,9)" fg:x="4330" fg:w="3"/><text x="35.8322%" y="607.50"></text></g><g><title>clear_page_erms (3 samples, 0.02%)</title><rect x="35.5822%" y="581" width="0.0247%" height="15" fill="rgb(224,227,45)" fg:x="4330" fg:w="3"/><text x="35.8322%" y="591.50"></text></g><g><title>nvme_queue_rq (4 samples, 0.03%)</title><rect x="35.6069%" y="533" width="0.0329%" height="15" fill="rgb(229,198,43)" fg:x="4333" fg:w="4"/><text x="35.8569%" y="543.50"></text></g><g><title>nvme_submit_cmd (2 samples, 0.02%)</title><rect x="35.6233%" y="517" width="0.0164%" height="15" fill="rgb(206,209,35)" fg:x="4335" fg:w="2"/><text x="35.8733%" y="527.50"></text></g><g><title>blk_finish_plug (5 samples, 0.04%)</title><rect x="35.6069%" y="645" width="0.0411%" height="15" fill="rgb(245,195,53)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="655.50"></text></g><g><title>blk_flush_plug_list (5 samples, 0.04%)</title><rect x="35.6069%" y="629" width="0.0411%" height="15" fill="rgb(240,92,26)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="639.50"></text></g><g><title>blk_mq_flush_plug_list (5 samples, 0.04%)</title><rect x="35.6069%" y="613" width="0.0411%" height="15" fill="rgb(207,40,23)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="623.50"></text></g><g><title>blk_mq_sched_insert_requests (5 samples, 0.04%)</title><rect x="35.6069%" y="597" width="0.0411%" height="15" fill="rgb(223,111,35)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="607.50"></text></g><g><title>blk_mq_try_issue_list_directly (5 samples, 0.04%)</title><rect x="35.6069%" y="581" width="0.0411%" height="15" fill="rgb(229,147,28)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="591.50"></text></g><g><title>blk_mq_request_issue_directly (5 samples, 0.04%)</title><rect x="35.6069%" y="565" width="0.0411%" height="15" fill="rgb(211,29,28)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="575.50"></text></g><g><title>__blk_mq_try_issue_directly (5 samples, 0.04%)</title><rect x="35.6069%" y="549" width="0.0411%" height="15" fill="rgb(228,72,33)" fg:x="4333" fg:w="5"/><text x="35.8569%" y="559.50"></text></g><g><title>__add_to_page_cache_locked (3 samples, 0.02%)</title><rect x="35.6726%" y="597" width="0.0247%" height="15" fill="rgb(205,214,31)" fg:x="4341" fg:w="3"/><text x="35.9226%" y="607.50"></text></g><g><title>lru_cache_add (2 samples, 0.02%)</title><rect x="35.6973%" y="597" width="0.0164%" height="15" fill="rgb(224,111,15)" fg:x="4344" fg:w="2"/><text x="35.9473%" y="607.50"></text></g><g><title>__lru_cache_add (2 samples, 0.02%)</title><rect x="35.6973%" y="581" width="0.0164%" height="15" fill="rgb(253,21,26)" fg:x="4344" fg:w="2"/><text x="35.9473%" y="591.50"></text></g><g><title>pagevec_lru_move_fn (2 samples, 0.02%)</title><rect x="35.6973%" y="565" width="0.0164%" height="15" fill="rgb(245,139,43)" fg:x="4344" fg:w="2"/><text x="35.9473%" y="575.50"></text></g><g><title>__lock_text_start (2 samples, 0.02%)</title><rect x="35.6973%" y="549" width="0.0164%" height="15" fill="rgb(252,170,7)" fg:x="4344" fg:w="2"/><text x="35.9473%" y="559.50"></text></g><g><title>add_to_page_cache_lru (6 samples, 0.05%)</title><rect x="35.6726%" y="613" width="0.0493%" height="15" fill="rgb(231,118,14)" fg:x="4341" fg:w="6"/><text x="35.9226%" y="623.50"></text></g><g><title>bio_associate_blkg (2 samples, 0.02%)</title><rect x="35.7301%" y="613" width="0.0164%" height="15" fill="rgb(238,83,0)" fg:x="4348" fg:w="2"/><text x="35.9801%" y="623.50"></text></g><g><title>__check_block_validity.constprop.85 (2 samples, 0.02%)</title><rect x="35.7466%" y="597" width="0.0164%" height="15" fill="rgb(221,39,39)" fg:x="4350" fg:w="2"/><text x="35.9966%" y="607.50"></text></g><g><title>ext4_inode_block_valid (2 samples, 0.02%)</title><rect x="35.7466%" y="581" width="0.0164%" height="15" fill="rgb(222,119,46)" fg:x="4350" fg:w="2"/><text x="35.9966%" y="591.50"></text></g><g><title>ext4_data_block_valid_rcu.isra.5 (2 samples, 0.02%)</title><rect x="35.7466%" y="565" width="0.0164%" height="15" fill="rgb(222,165,49)" fg:x="4350" fg:w="2"/><text x="35.9966%" y="575.50"></text></g><g><title>ext4_map_blocks (9 samples, 0.07%)</title><rect x="35.7466%" y="613" width="0.0740%" height="15" fill="rgb(219,113,52)" fg:x="4350" fg:w="9"/><text x="35.9966%" y="623.50"></text></g><g><title>ext4_es_lookup_extent (7 samples, 0.06%)</title><rect x="35.7630%" y="597" width="0.0575%" height="15" fill="rgb(214,7,15)" fg:x="4352" fg:w="7"/><text x="36.0130%" y="607.50"></text></g><g><title>__blk_mq_sched_bio_merge (3 samples, 0.02%)</title><rect x="35.8370%" y="565" width="0.0247%" height="15" fill="rgb(235,32,4)" fg:x="4361" fg:w="3"/><text x="36.0870%" y="575.50"></text></g><g><title>blk_mq_make_request (6 samples, 0.05%)</title><rect x="35.8287%" y="581" width="0.0493%" height="15" fill="rgb(238,90,54)" fg:x="4360" fg:w="6"/><text x="36.0787%" y="591.50"></text></g><g><title>blk_mq_get_request (2 samples, 0.02%)</title><rect x="35.8616%" y="565" width="0.0164%" height="15" fill="rgb(213,208,19)" fg:x="4364" fg:w="2"/><text x="36.1116%" y="575.50"></text></g><g><title>ext4_readpages (29 samples, 0.24%)</title><rect x="35.6480%" y="645" width="0.2383%" height="15" fill="rgb(233,156,4)" fg:x="4338" fg:w="29"/><text x="35.8980%" y="655.50"></text></g><g><title>ext4_mpage_readpages (29 samples, 0.24%)</title><rect x="35.6480%" y="629" width="0.2383%" height="15" fill="rgb(207,194,5)" fg:x="4338" fg:w="29"/><text x="35.8980%" y="639.50"></text></g><g><title>submit_bio (8 samples, 0.07%)</title><rect x="35.8205%" y="613" width="0.0657%" height="15" fill="rgb(206,111,30)" fg:x="4359" fg:w="8"/><text x="36.0705%" y="623.50"></text></g><g><title>generic_make_request (7 samples, 0.06%)</title><rect x="35.8287%" y="597" width="0.0575%" height="15" fill="rgb(243,70,54)" fg:x="4360" fg:w="7"/><text x="36.0787%" y="607.50"></text></g><g><title>__do_page_cache_readahead (41 samples, 0.34%)</title><rect x="35.5576%" y="677" width="0.3369%" height="15" fill="rgb(242,28,8)" fg:x="4327" fg:w="41"/><text x="35.8076%" y="687.50"></text></g><g><title>read_pages (35 samples, 0.29%)</title><rect x="35.6069%" y="661" width="0.2876%" height="15" fill="rgb(219,106,18)" fg:x="4333" fg:w="35"/><text x="35.8569%" y="671.50"></text></g><g><title>page_cache_sync_readahead (43 samples, 0.35%)</title><rect x="35.5493%" y="709" width="0.3534%" height="15" fill="rgb(244,222,10)" fg:x="4326" fg:w="43"/><text x="35.7993%" y="719.50"></text></g><g><title>ondemand_readahead (42 samples, 0.35%)</title><rect x="35.5576%" y="693" width="0.3451%" height="15" fill="rgb(236,179,52)" fg:x="4327" fg:w="42"/><text x="35.8076%" y="703.50"></text></g><g><title>__vfs_read (98 samples, 0.81%)</title><rect x="35.2782%" y="773" width="0.8053%" height="15" fill="rgb(213,23,39)" fg:x="4293" fg:w="98"/><text x="35.5282%" y="783.50"></text></g><g><title>new_sync_read (98 samples, 0.81%)</title><rect x="35.2782%" y="757" width="0.8053%" height="15" fill="rgb(238,48,10)" fg:x="4293" fg:w="98"/><text x="35.5282%" y="767.50"></text></g><g><title>ext4_file_read_iter (97 samples, 0.80%)</title><rect x="35.2864%" y="741" width="0.7971%" height="15" fill="rgb(251,196,23)" fg:x="4294" fg:w="97"/><text x="35.5364%" y="751.50"></text></g><g><title>generic_file_read_iter (95 samples, 0.78%)</title><rect x="35.3028%" y="725" width="0.7807%" height="15" fill="rgb(250,152,24)" fg:x="4296" fg:w="95"/><text x="35.5528%" y="735.50"></text></g><g><title>pagecache_get_page (22 samples, 0.18%)</title><rect x="35.9027%" y="709" width="0.1808%" height="15" fill="rgb(209,150,17)" fg:x="4369" fg:w="22"/><text x="36.1527%" y="719.50"></text></g><g><title>find_get_entry (22 samples, 0.18%)</title><rect x="35.9027%" y="693" width="0.1808%" height="15" fill="rgb(234,202,34)" fg:x="4369" fg:w="22"/><text x="36.1527%" y="703.50"></text></g><g><title>xas_load (15 samples, 0.12%)</title><rect x="35.9602%" y="677" width="0.1233%" height="15" fill="rgb(253,148,53)" fg:x="4376" fg:w="15"/><text x="36.2102%" y="687.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (418 samples, 3.43%)</title><rect x="32.6650%" y="981" width="3.4350%" height="15" fill="rgb(218,129,16)" fg:x="3975" fg:w="418"/><text x="32.9150%" y="991.50">red..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (418 samples, 3.43%)</title><rect x="32.6650%" y="965" width="3.4350%" height="15" fill="rgb(216,85,19)" fg:x="3975" fg:w="418"/><text x="32.9150%" y="975.50">red..</text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (129 samples, 1.06%)</title><rect x="35.0399%" y="949" width="1.0601%" height="15" fill="rgb(235,228,7)" fg:x="4264" fg:w="129"/><text x="35.2899%" y="959.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (120 samples, 0.99%)</title><rect x="35.1138%" y="933" width="0.9861%" height="15" fill="rgb(245,175,0)" fg:x="4273" fg:w="120"/><text x="35.3638%" y="943.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (118 samples, 0.97%)</title><rect x="35.1302%" y="917" width="0.9697%" height="15" fill="rgb(208,168,36)" fg:x="4275" fg:w="118"/><text x="35.3802%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::read_at (118 samples, 0.97%)</title><rect x="35.1302%" y="901" width="0.9697%" height="15" fill="rgb(246,171,24)" fg:x="4275" fg:w="118"/><text x="35.3802%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (118 samples, 0.97%)</title><rect x="35.1302%" y="885" width="0.9697%" height="15" fill="rgb(215,142,24)" fg:x="4275" fg:w="118"/><text x="35.3802%" y="895.50"></text></g><g><title>__libc_pread (118 samples, 0.97%)</title><rect x="35.1302%" y="869" width="0.9697%" height="15" fill="rgb(250,187,7)" fg:x="4275" fg:w="118"/><text x="35.3802%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (104 samples, 0.85%)</title><rect x="35.2453%" y="853" width="0.8546%" height="15" fill="rgb(228,66,33)" fg:x="4289" fg:w="104"/><text x="35.4953%" y="863.50"></text></g><g><title>do_syscall_64 (104 samples, 0.85%)</title><rect x="35.2453%" y="837" width="0.8546%" height="15" fill="rgb(234,215,21)" fg:x="4289" fg:w="104"/><text x="35.4953%" y="847.50"></text></g><g><title>__x64_sys_pread64 (103 samples, 0.85%)</title><rect x="35.2535%" y="821" width="0.8464%" height="15" fill="rgb(222,191,20)" fg:x="4290" fg:w="103"/><text x="35.5035%" y="831.50"></text></g><g><title>ksys_pread64 (103 samples, 0.85%)</title><rect x="35.2535%" y="805" width="0.8464%" height="15" fill="rgb(245,79,54)" fg:x="4290" fg:w="103"/><text x="35.5035%" y="815.50"></text></g><g><title>vfs_read (101 samples, 0.83%)</title><rect x="35.2699%" y="789" width="0.8300%" height="15" fill="rgb(240,10,37)" fg:x="4292" fg:w="101"/><text x="35.5199%" y="799.50"></text></g><g><title>rw_verify_area (2 samples, 0.02%)</title><rect x="36.0835%" y="773" width="0.0164%" height="15" fill="rgb(214,192,32)" fg:x="4391" fg:w="2"/><text x="36.3335%" y="783.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (225 samples, 1.85%)</title><rect x="36.0999%" y="981" width="1.8490%" height="15" fill="rgb(209,36,54)" fg:x="4393" fg:w="225"/><text x="36.3499%" y="991.50">r..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (224 samples, 1.84%)</title><rect x="36.1081%" y="965" width="1.8407%" height="15" fill="rgb(220,10,11)" fg:x="4394" fg:w="224"/><text x="36.3581%" y="975.50">r..</text></g><g><title>cfree (21 samples, 0.17%)</title><rect x="37.7763%" y="949" width="0.1726%" height="15" fill="rgb(221,106,17)" fg:x="4597" fg:w="21"/><text x="38.0263%" y="959.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (1,764 samples, 14.50%)</title><rect x="23.9790%" y="997" width="14.4959%" height="15" fill="rgb(251,142,44)" fg:x="2918" fg:w="1764"/><text x="24.2290%" y="1007.50">redb::tree_store::btre..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (64 samples, 0.53%)</title><rect x="37.9489%" y="981" width="0.5259%" height="15" fill="rgb(238,13,15)" fg:x="4618" fg:w="64"/><text x="38.1989%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.03%)</title><rect x="38.4419%" y="965" width="0.0329%" height="15" fill="rgb(208,107,27)" fg:x="4678" fg:w="4"/><text x="38.6919%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="38.4502%" y="949" width="0.0247%" height="15" fill="rgb(205,136,37)" fg:x="4679" fg:w="3"/><text x="38.7002%" y="959.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (108 samples, 0.89%)</title><rect x="38.4748%" y="997" width="0.8875%" height="15" fill="rgb(250,205,27)" fg:x="4682" fg:w="108"/><text x="38.7248%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (108 samples, 0.89%)</title><rect x="38.4748%" y="981" width="0.8875%" height="15" fill="rgb(210,80,43)" fg:x="4682" fg:w="108"/><text x="38.7248%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (142 samples, 1.17%)</title><rect x="39.3623%" y="997" width="1.1669%" height="15" fill="rgb(247,160,36)" fg:x="4790" fg:w="142"/><text x="39.6123%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (142 samples, 1.17%)</title><rect x="39.3623%" y="981" width="1.1669%" height="15" fill="rgb(234,13,49)" fg:x="4790" fg:w="142"/><text x="39.6123%" y="991.50"></text></g><g><title>cfree (9 samples, 0.07%)</title><rect x="40.4553%" y="965" width="0.0740%" height="15" fill="rgb(234,122,0)" fg:x="4923" fg:w="9"/><text x="40.7053%" y="975.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2,231 samples, 18.33%)</title><rect x="22.6970%" y="1013" width="18.3335%" height="15" fill="rgb(207,146,38)" fg:x="2762" fg:w="2231"/><text x="22.9470%" y="1023.50">redb::tree_store::btree_mutat..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (61 samples, 0.50%)</title><rect x="40.5292%" y="997" width="0.5013%" height="15" fill="rgb(207,177,25)" fg:x="4932" fg:w="61"/><text x="40.7792%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="41.0058%" y="981" width="0.0247%" height="15" fill="rgb(211,178,42)" fg:x="4990" fg:w="3"/><text x="41.2558%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="41.0141%" y="965" width="0.0164%" height="15" fill="rgb(230,69,54)" fg:x="4991" fg:w="2"/><text x="41.2641%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (82 samples, 0.67%)</title><rect x="41.0305%" y="1013" width="0.6738%" height="15" fill="rgb(214,135,41)" fg:x="4993" fg:w="82"/><text x="41.2805%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (79 samples, 0.65%)</title><rect x="41.0551%" y="997" width="0.6492%" height="15" fill="rgb(237,67,25)" fg:x="4996" fg:w="79"/><text x="41.3051%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (48 samples, 0.39%)</title><rect x="41.7043%" y="1013" width="0.3944%" height="15" fill="rgb(222,189,50)" fg:x="5075" fg:w="48"/><text x="41.9543%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (47 samples, 0.39%)</title><rect x="41.7125%" y="997" width="0.3862%" height="15" fill="rgb(245,148,34)" fg:x="5076" fg:w="47"/><text x="41.9625%" y="1007.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="42.0741%" y="981" width="0.0247%" height="15" fill="rgb(222,29,6)" fg:x="5120" fg:w="3"/><text x="42.3241%" y="991.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2,476 samples, 20.35%)</title><rect x="21.9163%" y="1029" width="20.3468%" height="15" fill="rgb(221,189,43)" fg:x="2667" fg:w="2476"/><text x="22.1663%" y="1039.50">redb::tree_store::btree_mutator:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (20 samples, 0.16%)</title><rect x="42.0988%" y="1013" width="0.1644%" height="15" fill="rgb(207,36,27)" fg:x="5123" fg:w="20"/><text x="42.3488%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="42.2220%" y="997" width="0.0411%" height="15" fill="rgb(217,90,24)" fg:x="5138" fg:w="5"/><text x="42.4720%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (24 samples, 0.20%)</title><rect x="42.2631%" y="1029" width="0.1972%" height="15" fill="rgb(224,66,35)" fg:x="5143" fg:w="24"/><text x="42.5131%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (23 samples, 0.19%)</title><rect x="42.2713%" y="1013" width="0.1890%" height="15" fill="rgb(221,13,50)" fg:x="5144" fg:w="23"/><text x="42.5213%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (24 samples, 0.20%)</title><rect x="42.4604%" y="1029" width="0.1972%" height="15" fill="rgb(236,68,49)" fg:x="5167" fg:w="24"/><text x="42.7104%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (24 samples, 0.20%)</title><rect x="42.4604%" y="1013" width="0.1972%" height="15" fill="rgb(229,146,28)" fg:x="5167" fg:w="24"/><text x="42.7104%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2,595 samples, 21.32%)</title><rect x="21.4644%" y="1045" width="21.3247%" height="15" fill="rgb(225,31,38)" fg:x="2612" fg:w="2595"/><text x="21.7144%" y="1055.50">redb::tree_store::btree_mutator::M..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (16 samples, 0.13%)</title><rect x="42.6576%" y="1029" width="0.1315%" height="15" fill="rgb(250,208,3)" fg:x="5191" fg:w="16"/><text x="42.9076%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="42.7480%" y="1013" width="0.0411%" height="15" fill="rgb(246,54,23)" fg:x="5202" fg:w="5"/><text x="42.9980%" y="1023.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (2,806 samples, 23.06%)</title><rect x="19.7716%" y="1077" width="23.0586%" height="15" fill="rgb(243,76,11)" fg:x="2406" fg:w="2806"/><text x="20.0216%" y="1087.50">ord::index::updater::inscription_upda..</text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (2,653 samples, 21.80%)</title><rect x="21.0288%" y="1061" width="21.8013%" height="15" fill="rgb(245,21,50)" fg:x="2559" fg:w="2653"/><text x="21.2788%" y="1071.50">redb::table::Table&lt;K,V&gt;::insert</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (5 samples, 0.04%)</title><rect x="42.7891%" y="1045" width="0.0411%" height="15" fill="rgb(228,9,43)" fg:x="5207" fg:w="5"/><text x="43.0391%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (5 samples, 0.04%)</title><rect x="42.7891%" y="1029" width="0.0411%" height="15" fill="rgb(208,100,47)" fg:x="5207" fg:w="5"/><text x="43.0391%" y="1039.50"></text></g><g><title>__libc_malloc (55 samples, 0.45%)</title><rect x="43.0109%" y="1061" width="0.4520%" height="15" fill="rgb(232,26,8)" fg:x="5234" fg:w="55"/><text x="43.2609%" y="1071.50"></text></g><g><title>_IO_str_seekoff (43 samples, 0.35%)</title><rect x="43.1095%" y="1045" width="0.3534%" height="15" fill="rgb(216,166,38)" fg:x="5246" fg:w="43"/><text x="43.3595%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (18 samples, 0.15%)</title><rect x="43.4629%" y="1061" width="0.1479%" height="15" fill="rgb(251,202,51)" fg:x="5289" fg:w="18"/><text x="43.7129%" y="1071.50"></text></g><g><title>cfree (9 samples, 0.07%)</title><rect x="43.6190%" y="1061" width="0.0740%" height="15" fill="rgb(254,216,34)" fg:x="5308" fg:w="9"/><text x="43.8690%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.06%)</title><rect x="43.6930%" y="1061" width="0.0575%" height="15" fill="rgb(251,32,27)" fg:x="5317" fg:w="7"/><text x="43.9430%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="43.7176%" y="1045" width="0.0329%" height="15" fill="rgb(208,127,28)" fg:x="5320" fg:w="4"/><text x="43.9676%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.05%)</title><rect x="43.8820%" y="1045" width="0.0493%" height="15" fill="rgb(224,137,22)" fg:x="5340" fg:w="6"/><text x="44.1320%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="43.8984%" y="1029" width="0.0329%" height="15" fill="rgb(254,70,32)" fg:x="5342" fg:w="4"/><text x="44.1484%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (45 samples, 0.37%)</title><rect x="43.7505%" y="1061" width="0.3698%" height="15" fill="rgb(229,75,37)" fg:x="5324" fg:w="45"/><text x="44.0005%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.19%)</title><rect x="43.9313%" y="1045" width="0.1890%" height="15" fill="rgb(252,64,23)" fg:x="5346" fg:w="23"/><text x="44.1813%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.12%)</title><rect x="44.0053%" y="1029" width="0.1150%" height="15" fill="rgb(232,162,48)" fg:x="5355" fg:w="14"/><text x="44.2553%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.07%)</title><rect x="44.0546%" y="1013" width="0.0657%" height="15" fill="rgb(246,160,12)" fg:x="5361" fg:w="8"/><text x="44.3046%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_iters::RangeIterState&gt; (12 samples, 0.10%)</title><rect x="44.2929%" y="1045" width="0.0986%" height="15" fill="rgb(247,166,0)" fg:x="5390" fg:w="12"/><text x="44.5429%" y="1055.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (9 samples, 0.07%)</title><rect x="44.3915%" y="1045" width="0.0740%" height="15" fill="rgb(249,219,21)" fg:x="5402" fg:w="9"/><text x="44.6415%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="44.6380%" y="1013" width="0.0329%" height="15" fill="rgb(205,209,3)" fg:x="5432" fg:w="4"/><text x="44.8880%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (3 samples, 0.02%)</title><rect x="44.6709%" y="1013" width="0.0247%" height="15" fill="rgb(243,44,1)" fg:x="5436" fg:w="3"/><text x="44.9209%" y="1023.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_left (15 samples, 0.12%)</title><rect x="44.5805%" y="1029" width="0.1233%" height="15" fill="rgb(206,159,16)" fg:x="5425" fg:w="15"/><text x="44.8305%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="44.7531%" y="1013" width="0.0329%" height="15" fill="rgb(244,77,30)" fg:x="5446" fg:w="4"/><text x="45.0031%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (5 samples, 0.04%)</title><rect x="44.7859%" y="1013" width="0.0411%" height="15" fill="rgb(218,69,12)" fg:x="5450" fg:w="5"/><text x="45.0359%" y="1023.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_right (16 samples, 0.13%)</title><rect x="44.7038%" y="1029" width="0.1315%" height="15" fill="rgb(212,87,7)" fg:x="5440" fg:w="16"/><text x="44.9538%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt;::new (100 samples, 0.82%)</title><rect x="44.4654%" y="1045" width="0.8218%" height="15" fill="rgb(245,114,25)" fg:x="5411" fg:w="100"/><text x="44.7154%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (55 samples, 0.45%)</title><rect x="44.8352%" y="1029" width="0.4520%" height="15" fill="rgb(210,61,42)" fg:x="5456" fg:w="55"/><text x="45.0852%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (51 samples, 0.42%)</title><rect x="44.8681%" y="1013" width="0.4191%" height="15" fill="rgb(211,52,33)" fg:x="5460" fg:w="51"/><text x="45.1181%" y="1023.50"></text></g><g><title>ord::index::Index::inscriptions_on_output_ordered (172 samples, 1.41%)</title><rect x="44.1203%" y="1061" width="1.4134%" height="15" fill="rgb(234,58,33)" fg:x="5369" fg:w="172"/><text x="44.3703%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (30 samples, 0.25%)</title><rect x="45.2872%" y="1045" width="0.2465%" height="15" fill="rgb(220,115,36)" fg:x="5511" fg:w="30"/><text x="45.5372%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (30 samples, 0.25%)</title><rect x="45.2872%" y="1029" width="0.2465%" height="15" fill="rgb(243,153,54)" fg:x="5511" fg:w="30"/><text x="45.5372%" y="1039.50"></text></g><g><title>__libc_malloc (20 samples, 0.16%)</title><rect x="45.6323%" y="997" width="0.1644%" height="15" fill="rgb(251,47,18)" fg:x="5553" fg:w="20"/><text x="45.8823%" y="1007.50"></text></g><g><title>_IO_str_seekoff (13 samples, 0.11%)</title><rect x="45.6899%" y="981" width="0.1068%" height="15" fill="rgb(242,102,42)" fg:x="5560" fg:w="13"/><text x="45.9399%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.19%)</title><rect x="45.6159%" y="1029" width="0.1890%" height="15" fill="rgb(234,31,38)" fg:x="5551" fg:w="23"/><text x="45.8659%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.18%)</title><rect x="45.6241%" y="1013" width="0.1808%" height="15" fill="rgb(221,117,51)" fg:x="5552" fg:w="22"/><text x="45.8741%" y="1023.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (54 samples, 0.44%)</title><rect x="45.5830%" y="1045" width="0.4438%" height="15" fill="rgb(212,20,18)" fg:x="5547" fg:w="54"/><text x="45.8330%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (26 samples, 0.21%)</title><rect x="45.8131%" y="1029" width="0.2137%" height="15" fill="rgb(245,133,36)" fg:x="5575" fg:w="26"/><text x="46.0631%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (24 samples, 0.20%)</title><rect x="45.8296%" y="1013" width="0.1972%" height="15" fill="rgb(212,6,19)" fg:x="5577" fg:w="24"/><text x="46.0796%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="46.0597%" y="1029" width="0.0164%" height="15" fill="rgb(218,1,36)" fg:x="5605" fg:w="2"/><text x="46.3097%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="46.1254%" y="997" width="0.0247%" height="15" fill="rgb(246,84,54)" fg:x="5613" fg:w="3"/><text x="46.3754%" y="1007.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="46.3555%" y="981" width="0.0247%" height="15" fill="rgb(242,110,6)" fg:x="5641" fg:w="3"/><text x="46.6055%" y="991.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (22 samples, 0.18%)</title><rect x="46.8485%" y="965" width="0.1808%" height="15" fill="rgb(214,47,5)" fg:x="5701" fg:w="22"/><text x="47.0985%" y="975.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (15 samples, 0.12%)</title><rect x="47.5060%" y="949" width="0.1233%" height="15" fill="rgb(218,159,25)" fg:x="5781" fg:w="15"/><text x="47.7560%" y="959.50"></text></g><g><title>__nss_passwd_lookup (71 samples, 0.58%)</title><rect x="47.6292%" y="949" width="0.5834%" height="15" fill="rgb(215,211,28)" fg:x="5796" fg:w="71"/><text x="47.8792%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (10 samples, 0.08%)</title><rect x="48.2127%" y="949" width="0.0822%" height="15" fill="rgb(238,59,32)" fg:x="5867" fg:w="10"/><text x="48.4627%" y="959.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (162 samples, 1.33%)</title><rect x="47.0293%" y="965" width="1.3313%" height="15" fill="rgb(226,82,3)" fg:x="5723" fg:w="162"/><text x="47.2793%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_range (8 samples, 0.07%)</title><rect x="48.2948%" y="949" width="0.0657%" height="15" fill="rgb(240,164,32)" fg:x="5877" fg:w="8"/><text x="48.5448%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (8 samples, 0.07%)</title><rect x="48.2948%" y="933" width="0.0657%" height="15" fill="rgb(232,46,7)" fg:x="5877" fg:w="8"/><text x="48.5448%" y="943.50"></text></g><g><title>__nss_passwd_lookup (91 samples, 0.75%)</title><rect x="48.4674%" y="949" width="0.7478%" height="15" fill="rgb(229,129,53)" fg:x="5898" fg:w="91"/><text x="48.7174%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (22 samples, 0.18%)</title><rect x="49.2152%" y="949" width="0.1808%" height="15" fill="rgb(234,188,29)" fg:x="5989" fg:w="22"/><text x="49.4652%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (143 samples, 1.18%)</title><rect x="48.3606%" y="965" width="1.1751%" height="15" fill="rgb(246,141,4)" fg:x="5885" fg:w="143"/><text x="48.6106%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (17 samples, 0.14%)</title><rect x="49.3960%" y="949" width="0.1397%" height="15" fill="rgb(229,23,39)" fg:x="6011" fg:w="17"/><text x="49.6460%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (8 samples, 0.07%)</title><rect x="49.4700%" y="933" width="0.0657%" height="15" fill="rgb(206,12,3)" fg:x="6020" fg:w="8"/><text x="49.7200%" y="943.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (747 samples, 6.14%)</title><rect x="46.3801%" y="981" width="6.1385%" height="15" fill="rgb(252,226,20)" fg:x="5644" fg:w="747"/><text x="46.6301%" y="991.50">redb::tr..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (363 samples, 2.98%)</title><rect x="49.5357%" y="965" width="2.9830%" height="15" fill="rgb(216,123,35)" fg:x="6028" fg:w="363"/><text x="49.7857%" y="975.50">red..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (358 samples, 2.94%)</title><rect x="49.5768%" y="949" width="2.9419%" height="15" fill="rgb(212,68,40)" fg:x="6033" fg:w="358"/><text x="49.8268%" y="959.50">re..</text></g><g><title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="52.5023%" y="933" width="0.0164%" height="15" fill="rgb(254,125,32)" fg:x="6389" fg:w="2"/><text x="52.7523%" y="943.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="52.5023%" y="917" width="0.0164%" height="15" fill="rgb(253,97,22)" fg:x="6389" fg:w="2"/><text x="52.7523%" y="927.50"></text></g><g><title>irq_exit (2 samples, 0.02%)</title><rect x="52.5023%" y="901" width="0.0164%" height="15" fill="rgb(241,101,14)" fg:x="6389" fg:w="2"/><text x="52.7523%" y="911.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="52.5023%" y="885" width="0.0164%" height="15" fill="rgb(238,103,29)" fg:x="6389" fg:w="2"/><text x="52.7523%" y="895.50"></text></g><g><title>__nss_passwd_lookup (60 samples, 0.49%)</title><rect x="52.6337%" y="965" width="0.4931%" height="15" fill="rgb(233,195,47)" fg:x="6405" fg:w="60"/><text x="52.8837%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (11 samples, 0.09%)</title><rect x="53.1268%" y="965" width="0.0904%" height="15" fill="rgb(246,218,30)" fg:x="6465" fg:w="11"/><text x="53.3768%" y="975.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (3 samples, 0.02%)</title><rect x="53.2501%" y="949" width="0.0247%" height="15" fill="rgb(219,145,47)" fg:x="6480" fg:w="3"/><text x="53.5001%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (97 samples, 0.80%)</title><rect x="52.5187%" y="981" width="0.7971%" height="15" fill="rgb(243,12,26)" fg:x="6391" fg:w="97"/><text x="52.7687%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (12 samples, 0.10%)</title><rect x="53.2172%" y="965" width="0.0986%" height="15" fill="rgb(214,87,16)" fg:x="6476" fg:w="12"/><text x="53.4672%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (5 samples, 0.04%)</title><rect x="53.2747%" y="949" width="0.0411%" height="15" fill="rgb(208,99,42)" fg:x="6483" fg:w="5"/><text x="53.5247%" y="959.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,001 samples, 8.23%)</title><rect x="46.1501%" y="997" width="8.2258%" height="15" fill="rgb(253,99,2)" fg:x="5616" fg:w="1001"/><text x="46.4001%" y="1007.50">redb::tree_..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (129 samples, 1.06%)</title><rect x="53.3158%" y="981" width="1.0601%" height="15" fill="rgb(220,168,23)" fg:x="6488" fg:w="129"/><text x="53.5658%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (127 samples, 1.04%)</title><rect x="53.3322%" y="965" width="1.0436%" height="15" fill="rgb(242,38,24)" fg:x="6490" fg:w="127"/><text x="53.5822%" y="975.50"></text></g><g><title>__nss_passwd_lookup (15 samples, 0.12%)</title><rect x="54.5074%" y="981" width="0.1233%" height="15" fill="rgb(225,182,9)" fg:x="6633" fg:w="15"/><text x="54.7574%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (3 samples, 0.02%)</title><rect x="54.6306%" y="981" width="0.0247%" height="15" fill="rgb(243,178,37)" fg:x="6648" fg:w="3"/><text x="54.8806%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (41 samples, 0.34%)</title><rect x="54.3759%" y="997" width="0.3369%" height="15" fill="rgb(232,139,19)" fg:x="6617" fg:w="41"/><text x="54.6259%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (7 samples, 0.06%)</title><rect x="54.6553%" y="981" width="0.0575%" height="15" fill="rgb(225,201,24)" fg:x="6651" fg:w="7"/><text x="54.9053%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (3 samples, 0.02%)</title><rect x="54.6881%" y="965" width="0.0247%" height="15" fill="rgb(221,47,46)" fg:x="6655" fg:w="3"/><text x="54.9381%" y="975.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,144 samples, 9.40%)</title><rect x="46.1007%" y="1013" width="9.4009%" height="15" fill="rgb(249,23,13)" fg:x="5610" fg:w="1144"/><text x="46.3507%" y="1023.50">redb::tree_st..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (96 samples, 0.79%)</title><rect x="54.7128%" y="997" width="0.7889%" height="15" fill="rgb(219,9,5)" fg:x="6658" fg:w="96"/><text x="54.9628%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (95 samples, 0.78%)</title><rect x="54.7210%" y="981" width="0.7807%" height="15" fill="rgb(254,171,16)" fg:x="6659" fg:w="95"/><text x="54.9710%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (10 samples, 0.08%)</title><rect x="55.5017%" y="1013" width="0.0822%" height="15" fill="rgb(230,171,20)" fg:x="6754" fg:w="10"/><text x="55.7517%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (4 samples, 0.03%)</title><rect x="55.5510%" y="997" width="0.0329%" height="15" fill="rgb(210,71,41)" fg:x="6760" fg:w="4"/><text x="55.8010%" y="1007.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,172 samples, 9.63%)</title><rect x="46.0761%" y="1029" width="9.6310%" height="15" fill="rgb(206,173,20)" fg:x="5607" fg:w="1172"/><text x="46.3261%" y="1039.50">redb::tree_sto..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (15 samples, 0.12%)</title><rect x="55.5839%" y="1013" width="0.1233%" height="15" fill="rgb(233,88,34)" fg:x="6764" fg:w="15"/><text x="55.8339%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (15 samples, 0.12%)</title><rect x="55.5839%" y="997" width="0.1233%" height="15" fill="rgb(223,209,46)" fg:x="6764" fg:w="15"/><text x="55.8339%" y="1007.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (6 samples, 0.05%)</title><rect x="55.7071%" y="1029" width="0.0493%" height="15" fill="rgb(250,43,18)" fg:x="6779" fg:w="6"/><text x="55.9571%" y="1039.50"></text></g><g><title>&lt;redb::table::Table&lt;K,V&gt; as redb::table::ReadableTable&lt;K,V&gt;&gt;::get (1,198 samples, 9.84%)</title><rect x="46.0268%" y="1045" width="9.8447%" height="15" fill="rgb(208,13,10)" fg:x="5601" fg:w="1198"/><text x="46.2768%" y="1055.50">&lt;redb::table::..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (14 samples, 0.12%)</title><rect x="55.7564%" y="1029" width="0.1150%" height="15" fill="rgb(212,200,36)" fg:x="6785" fg:w="14"/><text x="56.0064%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (13 samples, 0.11%)</title><rect x="55.7646%" y="1013" width="0.1068%" height="15" fill="rgb(225,90,30)" fg:x="6786" fg:w="13"/><text x="56.0146%" y="1023.50"></text></g><g><title>ord::index::Index::transaction_output_by_outpoint (1,263 samples, 10.38%)</title><rect x="45.5337%" y="1061" width="10.3788%" height="15" fill="rgb(236,182,39)" fg:x="5541" fg:w="1263"/><text x="45.7837%" y="1071.50">ord::index::Ind..</text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_base::EitherPage&gt; (4 samples, 0.03%)</title><rect x="55.8797%" y="1045" width="0.0329%" height="15" fill="rgb(212,144,35)" fg:x="6800" fg:w="4"/><text x="56.1297%" y="1055.50"></text></g><g><title>&lt;&amp;bitcoin::blockdata::script::push_bytes::primitive::PushBytes as core::convert::From&lt;&amp;[u8: 3]&gt;&gt;::from (2 samples, 0.02%)</title><rect x="56.0440%" y="1045" width="0.0164%" height="15" fill="rgb(228,63,44)" fg:x="6820" fg:w="2"/><text x="56.2940%" y="1055.50"></text></g><g><title>&lt;bitcoin::blockdata::script::instruction::Instructions as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.12%)</title><rect x="56.0605%" y="1045" width="0.1233%" height="15" fill="rgb(228,109,6)" fg:x="6822" fg:w="15"/><text x="56.3105%" y="1055.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (8 samples, 0.07%)</title><rect x="56.1180%" y="1029" width="0.0657%" height="15" fill="rgb(238,117,24)" fg:x="6829" fg:w="8"/><text x="56.3680%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="56.1837%" y="1045" width="0.0164%" height="15" fill="rgb(242,26,26)" fg:x="6837" fg:w="2"/><text x="56.4337%" y="1055.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::tapscript (28 samples, 0.23%)</title><rect x="56.2002%" y="1045" width="0.2301%" height="15" fill="rgb(221,92,48)" fg:x="6839" fg:w="28"/><text x="56.4502%" y="1055.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::nth (22 samples, 0.18%)</title><rect x="56.2495%" y="1029" width="0.1808%" height="15" fill="rgb(209,209,32)" fg:x="6845" fg:w="22"/><text x="56.4995%" y="1039.50"></text></g><g><title>ord::inscription::Inscription::from_transaction (70 samples, 0.58%)</title><rect x="55.9126%" y="1061" width="0.5752%" height="15" fill="rgb(221,70,22)" fg:x="6804" fg:w="70"/><text x="56.1626%" y="1071.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.06%)</title><rect x="56.4303%" y="1045" width="0.0575%" height="15" fill="rgb(248,145,5)" fg:x="6867" fg:w="7"/><text x="56.6803%" y="1055.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="56.4714%" y="1029" width="0.0164%" height="15" fill="rgb(226,116,26)" fg:x="6872" fg:w="2"/><text x="56.7214%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="56.4878%" y="1045" width="0.0164%" height="15" fill="rgb(244,5,17)" fg:x="6874" fg:w="2"/><text x="56.7378%" y="1055.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (1,665 samples, 13.68%)</title><rect x="42.8301%" y="1077" width="13.6823%" height="15" fill="rgb(252,159,33)" fg:x="5212" fg:w="1665"/><text x="43.0801%" y="1087.50">ord::index::updater::..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (3 samples, 0.02%)</title><rect x="56.4878%" y="1061" width="0.0247%" height="15" fill="rgb(206,71,0)" fg:x="6874" fg:w="3"/><text x="56.7378%" y="1071.50"></text></g><g><title>ord::okx::protocol::protocol_manager::ProtocolManager&lt;RW&gt;::index_block (3 samples, 0.02%)</title><rect x="56.5207%" y="1077" width="0.0247%" height="15" fill="rgb(233,118,54)" fg:x="6878" fg:w="3"/><text x="56.7707%" y="1087.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (3 samples, 0.02%)</title><rect x="56.5618%" y="1077" width="0.0247%" height="15" fill="rgb(234,83,48)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1087.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (3 samples, 0.02%)</title><rect x="56.5618%" y="1061" width="0.0247%" height="15" fill="rgb(228,3,54)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1071.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (3 samples, 0.02%)</title><rect x="56.5618%" y="1045" width="0.0247%" height="15" fill="rgb(226,155,13)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1055.50"></text></g><g><title>std::sys::unix::futex::futex_wake (3 samples, 0.02%)</title><rect x="56.5618%" y="1029" width="0.0247%" height="15" fill="rgb(241,28,37)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1039.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="56.5618%" y="1013" width="0.0247%" height="15" fill="rgb(233,93,10)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="56.5618%" y="997" width="0.0247%" height="15" fill="rgb(225,113,19)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="1007.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="56.5618%" y="981" width="0.0247%" height="15" fill="rgb(241,2,18)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="991.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="56.5618%" y="965" width="0.0247%" height="15" fill="rgb(228,207,21)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="975.50"></text></g><g><title>do_futex (3 samples, 0.02%)</title><rect x="56.5618%" y="949" width="0.0247%" height="15" fill="rgb(213,211,35)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="959.50"></text></g><g><title>futex_wake (3 samples, 0.02%)</title><rect x="56.5618%" y="933" width="0.0247%" height="15" fill="rgb(209,83,10)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="943.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="56.5618%" y="917" width="0.0247%" height="15" fill="rgb(209,164,1)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="927.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="56.5618%" y="901" width="0.0247%" height="15" fill="rgb(213,184,43)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="911.50"></text></g><g><title>__lock_text_start (3 samples, 0.02%)</title><rect x="56.5618%" y="885" width="0.0247%" height="15" fill="rgb(231,61,34)" fg:x="6883" fg:w="3"/><text x="56.8118%" y="895.50"></text></g><g><title>ord::index::Index::update (6,532 samples, 53.68%)</title><rect x="2.9583%" y="1109" width="53.6774%" height="15" fill="rgb(235,75,3)" fg:x="360" fg:w="6532"/><text x="3.2083%" y="1119.50">ord::index::Index::update</text></g><g><title>ord::index::updater::Updater::update_index (6,532 samples, 53.68%)</title><rect x="2.9583%" y="1093" width="53.6774%" height="15" fill="rgb(220,106,47)" fg:x="360" fg:w="6532"/><text x="3.2083%" y="1103.50">ord::index::updater::Updater::update_index</text></g><g><title>tokio::future::block_on::block_on (6 samples, 0.05%)</title><rect x="56.5864%" y="1077" width="0.0493%" height="15" fill="rgb(210,196,33)" fg:x="6886" fg:w="6"/><text x="56.8364%" y="1087.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (6 samples, 0.05%)</title><rect x="56.5864%" y="1061" width="0.0493%" height="15" fill="rgb(229,154,42)" fg:x="6886" fg:w="6"/><text x="56.8364%" y="1071.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (96 samples, 0.79%)</title><rect x="56.6357%" y="1029" width="0.7889%" height="15" fill="rgb(228,114,26)" fg:x="6892" fg:w="96"/><text x="56.8857%" y="1039.50"></text></g><g><title>jsonrpc::Response::result (116 samples, 0.95%)</title><rect x="56.6357%" y="1061" width="0.9532%" height="15" fill="rgb(208,144,1)" fg:x="6892" fg:w="116"/><text x="56.8857%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (116 samples, 0.95%)</title><rect x="56.6357%" y="1045" width="0.9532%" height="15" fill="rgb(239,112,37)" fg:x="6892" fg:w="116"/><text x="56.8857%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (20 samples, 0.16%)</title><rect x="57.4246%" y="1029" width="0.1644%" height="15" fill="rgb(210,96,50)" fg:x="6988" fg:w="20"/><text x="57.6746%" y="1039.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::end_raw_buffering (14 samples, 0.12%)</title><rect x="57.5972%" y="965" width="0.1150%" height="15" fill="rgb(222,178,2)" fg:x="7009" fg:w="14"/><text x="57.8472%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (14 samples, 0.12%)</title><rect x="57.5972%" y="949" width="0.1150%" height="15" fill="rgb(226,74,18)" fg:x="7009" fg:w="14"/><text x="57.8472%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (14 samples, 0.12%)</title><rect x="57.5972%" y="933" width="0.1150%" height="15" fill="rgb(225,67,54)" fg:x="7009" fg:w="14"/><text x="57.8472%" y="943.50"></text></g><g><title>skb_release_data (2 samples, 0.02%)</title><rect x="67.9349%" y="677" width="0.0164%" height="15" fill="rgb(251,92,32)" fg:x="8267" fg:w="2"/><text x="68.1849%" y="687.50"></text></g><g><title>__put_page (2 samples, 0.02%)</title><rect x="67.9349%" y="661" width="0.0164%" height="15" fill="rgb(228,149,22)" fg:x="8267" fg:w="2"/><text x="68.1849%" y="671.50"></text></g><g><title>__put_compound_page (2 samples, 0.02%)</title><rect x="67.9349%" y="645" width="0.0164%" height="15" fill="rgb(243,54,13)" fg:x="8267" fg:w="2"/><text x="68.1849%" y="655.50"></text></g><g><title>free_compound_page (2 samples, 0.02%)</title><rect x="67.9349%" y="629" width="0.0164%" height="15" fill="rgb(243,180,28)" fg:x="8267" fg:w="2"/><text x="68.1849%" y="639.50"></text></g><g><title>__free_pages_ok (2 samples, 0.02%)</title><rect x="67.9349%" y="613" width="0.0164%" height="15" fill="rgb(208,167,24)" fg:x="8267" fg:w="2"/><text x="68.1849%" y="623.50"></text></g><g><title>__kfree_skb (3 samples, 0.02%)</title><rect x="67.9349%" y="709" width="0.0247%" height="15" fill="rgb(245,73,45)" fg:x="8267" fg:w="3"/><text x="68.1849%" y="719.50"></text></g><g><title>skb_release_all (3 samples, 0.02%)</title><rect x="67.9349%" y="693" width="0.0247%" height="15" fill="rgb(237,203,48)" fg:x="8267" fg:w="3"/><text x="68.1849%" y="703.50"></text></g><g><title>skb_copy_datagram_iter (10 samples, 0.08%)</title><rect x="67.9596%" y="709" width="0.0822%" height="15" fill="rgb(211,197,16)" fg:x="8270" fg:w="10"/><text x="68.2096%" y="719.50"></text></g><g><title>__skb_datagram_iter (10 samples, 0.08%)</title><rect x="67.9596%" y="693" width="0.0822%" height="15" fill="rgb(243,99,51)" fg:x="8270" fg:w="10"/><text x="68.2096%" y="703.50"></text></g><g><title>simple_copy_to_iter (9 samples, 0.07%)</title><rect x="67.9678%" y="677" width="0.0740%" height="15" fill="rgb(215,123,29)" fg:x="8271" fg:w="9"/><text x="68.2178%" y="687.50"></text></g><g><title>_copy_to_iter (9 samples, 0.07%)</title><rect x="67.9678%" y="661" width="0.0740%" height="15" fill="rgb(239,186,37)" fg:x="8271" fg:w="9"/><text x="68.2178%" y="671.50"></text></g><g><title>copy_user_enhanced_fast_string (9 samples, 0.07%)</title><rect x="67.9678%" y="645" width="0.0740%" height="15" fill="rgb(252,136,39)" fg:x="8271" fg:w="9"/><text x="68.2178%" y="655.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (600 samples, 4.93%)</title><rect x="63.1276%" y="917" width="4.9306%" height="15" fill="rgb(223,213,32)" fg:x="7682" fg:w="600"/><text x="63.3776%" y="927.50">&lt;std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (16 samples, 0.13%)</title><rect x="67.9267%" y="901" width="0.1315%" height="15" fill="rgb(233,115,5)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="911.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (16 samples, 0.13%)</title><rect x="67.9267%" y="885" width="0.1315%" height="15" fill="rgb(207,226,44)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (16 samples, 0.13%)</title><rect x="67.9267%" y="869" width="0.1315%" height="15" fill="rgb(208,126,0)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="879.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (16 samples, 0.13%)</title><rect x="67.9267%" y="853" width="0.1315%" height="15" fill="rgb(244,66,21)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="863.50"></text></g><g><title>__libc_recv (16 samples, 0.13%)</title><rect x="67.9267%" y="837" width="0.1315%" height="15" fill="rgb(222,97,12)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.13%)</title><rect x="67.9267%" y="821" width="0.1315%" height="15" fill="rgb(219,213,19)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="831.50"></text></g><g><title>do_syscall_64 (16 samples, 0.13%)</title><rect x="67.9267%" y="805" width="0.1315%" height="15" fill="rgb(252,169,30)" fg:x="8266" fg:w="16"/><text x="68.1767%" y="815.50"></text></g><g><title>__x64_sys_recvfrom (15 samples, 0.12%)</title><rect x="67.9349%" y="789" width="0.1233%" height="15" fill="rgb(206,32,51)" fg:x="8267" fg:w="15"/><text x="68.1849%" y="799.50"></text></g><g><title>__sys_recvfrom (15 samples, 0.12%)</title><rect x="67.9349%" y="773" width="0.1233%" height="15" fill="rgb(250,172,42)" fg:x="8267" fg:w="15"/><text x="68.1849%" y="783.50"></text></g><g><title>sock_recvmsg (15 samples, 0.12%)</title><rect x="67.9349%" y="757" width="0.1233%" height="15" fill="rgb(209,34,43)" fg:x="8267" fg:w="15"/><text x="68.1849%" y="767.50"></text></g><g><title>inet_recvmsg (15 samples, 0.12%)</title><rect x="67.9349%" y="741" width="0.1233%" height="15" fill="rgb(223,11,35)" fg:x="8267" fg:w="15"/><text x="68.1849%" y="751.50"></text></g><g><title>tcp_recvmsg (15 samples, 0.12%)</title><rect x="67.9349%" y="725" width="0.1233%" height="15" fill="rgb(251,219,26)" fg:x="8267" fg:w="15"/><text x="68.1849%" y="735.50"></text></g><g><title>_IO_str_seekoff (5 samples, 0.04%)</title><rect x="68.0582%" y="853" width="0.0411%" height="15" fill="rgb(231,119,3)" fg:x="8282" fg:w="5"/><text x="68.3082%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.09%)</title><rect x="68.0582%" y="917" width="0.0904%" height="15" fill="rgb(216,97,11)" fg:x="8282" fg:w="11"/><text x="68.3082%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.09%)</title><rect x="68.0582%" y="901" width="0.0904%" height="15" fill="rgb(223,59,9)" fg:x="8282" fg:w="11"/><text x="68.3082%" y="911.50"></text></g><g><title>realloc (11 samples, 0.09%)</title><rect x="68.0582%" y="885" width="0.0904%" height="15" fill="rgb(233,93,31)" fg:x="8282" fg:w="11"/><text x="68.3082%" y="895.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.09%)</title><rect x="68.0582%" y="869" width="0.0904%" height="15" fill="rgb(239,81,33)" fg:x="8282" fg:w="11"/><text x="68.3082%" y="879.50"></text></g><g><title>__nss_passwd_lookup (6 samples, 0.05%)</title><rect x="68.0993%" y="853" width="0.0493%" height="15" fill="rgb(213,120,34)" fg:x="8287" fg:w="6"/><text x="68.3493%" y="863.50"></text></g><g><title>serde_json::de::from_reader (1,285 samples, 10.56%)</title><rect x="57.5972%" y="1029" width="10.5596%" height="15" fill="rgb(243,49,53)" fg:x="7009" fg:w="1285"/><text x="57.8472%" y="1039.50">serde_json::de:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,285 samples, 10.56%)</title><rect x="57.5972%" y="1013" width="10.5596%" height="15" fill="rgb(247,216,33)" fg:x="7009" fg:w="1285"/><text x="57.8472%" y="1023.50">&lt;&amp;mut serde_jso..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1,285 samples, 10.56%)</title><rect x="57.5972%" y="997" width="10.5596%" height="15" fill="rgb(226,26,14)" fg:x="7009" fg:w="1285"/><text x="57.8472%" y="1007.50">serde::de::impl..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (1,285 samples, 10.56%)</title><rect x="57.5972%" y="981" width="10.5596%" height="15" fill="rgb(215,49,53)" fg:x="7009" fg:w="1285"/><text x="57.8472%" y="991.50">serde_json::de:..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (1,271 samples, 10.44%)</title><rect x="57.7122%" y="965" width="10.4446%" height="15" fill="rgb(245,162,40)" fg:x="7023" fg:w="1271"/><text x="57.9622%" y="975.50">serde_json::de:..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::ignore_str (1,271 samples, 10.44%)</title><rect x="57.7122%" y="949" width="10.4446%" height="15" fill="rgb(229,68,17)" fg:x="7023" fg:w="1271"/><text x="57.9622%" y="959.50">&lt;serde_json::re..</text></g><g><title>serde_json::read::next_or_eof (971 samples, 7.98%)</title><rect x="60.1775%" y="933" width="7.9793%" height="15" fill="rgb(213,182,10)" fg:x="7323" fg:w="971"/><text x="60.4275%" y="943.50">serde_json:..</text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (1,403 samples, 11.53%)</title><rect x="56.6357%" y="1077" width="11.5293%" height="15" fill="rgb(245,125,30)" fg:x="6892" fg:w="1403"/><text x="56.8857%" y="1087.50">&lt;bitcoincore_rpc:..</text></g><g><title>jsonrpc::client::Client::send_request (1,287 samples, 10.58%)</title><rect x="57.5890%" y="1061" width="10.5761%" height="15" fill="rgb(232,202,2)" fg:x="7008" fg:w="1287"/><text x="57.8390%" y="1071.50">jsonrpc::client..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (1,287 samples, 10.58%)</title><rect x="57.5890%" y="1045" width="10.5761%" height="15" fill="rgb(237,140,51)" fg:x="7008" fg:w="1287"/><text x="57.8390%" y="1055.50">&lt;jsonrpc::simpl..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (3 samples, 0.02%)</title><rect x="68.3704%" y="1045" width="0.0247%" height="15" fill="rgb(236,157,25)" fg:x="8320" fg:w="3"/><text x="68.6204%" y="1055.50"></text></g><g><title>__libc_malloc (14 samples, 0.12%)</title><rect x="68.3951%" y="1045" width="0.1150%" height="15" fill="rgb(219,209,0)" fg:x="8323" fg:w="14"/><text x="68.6451%" y="1055.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.07%)</title><rect x="68.4444%" y="1029" width="0.0657%" height="15" fill="rgb(240,116,54)" fg:x="8329" fg:w="8"/><text x="68.6944%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (4 samples, 0.03%)</title><rect x="68.5923%" y="1029" width="0.0329%" height="15" fill="rgb(216,10,36)" fg:x="8347" fg:w="4"/><text x="68.8423%" y="1039.50"></text></g><g><title>std::io::Read::read_exact (3 samples, 0.02%)</title><rect x="68.6005%" y="1013" width="0.0247%" height="15" fill="rgb(222,72,44)" fg:x="8348" fg:w="3"/><text x="68.8505%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.09%)</title><rect x="68.6252%" y="1029" width="0.0904%" height="15" fill="rgb(232,159,9)" fg:x="8351" fg:w="11"/><text x="68.8752%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.08%)</title><rect x="68.6334%" y="1013" width="0.0822%" height="15" fill="rgb(210,39,32)" fg:x="8352" fg:w="10"/><text x="68.8834%" y="1023.50"></text></g><g><title>__libc_malloc (10 samples, 0.08%)</title><rect x="68.6334%" y="997" width="0.0822%" height="15" fill="rgb(216,194,45)" fg:x="8352" fg:w="10"/><text x="68.8834%" y="1007.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="68.6909%" y="981" width="0.0247%" height="15" fill="rgb(218,18,35)" fg:x="8359" fg:w="3"/><text x="68.9409%" y="991.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (94 samples, 0.77%)</title><rect x="68.5184%" y="1045" width="0.7725%" height="15" fill="rgb(207,83,51)" fg:x="8338" fg:w="94"/><text x="68.7684%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (70 samples, 0.58%)</title><rect x="68.7156%" y="1029" width="0.5752%" height="15" fill="rgb(225,63,43)" fg:x="8362" fg:w="70"/><text x="68.9656%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (68 samples, 0.56%)</title><rect x="68.7320%" y="1013" width="0.5588%" height="15" fill="rgb(207,57,36)" fg:x="8364" fg:w="68"/><text x="68.9820%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (204 samples, 1.68%)</title><rect x="68.2554%" y="1061" width="1.6764%" height="15" fill="rgb(216,99,33)" fg:x="8306" fg:w="204"/><text x="68.5054%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (78 samples, 0.64%)</title><rect x="69.2908%" y="1045" width="0.6410%" height="15" fill="rgb(225,42,16)" fg:x="8432" fg:w="78"/><text x="69.5408%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (76 samples, 0.62%)</title><rect x="69.3073%" y="1029" width="0.6245%" height="15" fill="rgb(220,201,45)" fg:x="8434" fg:w="76"/><text x="69.5573%" y="1039.50"></text></g><g><title>__libc_malloc (8 samples, 0.07%)</title><rect x="69.9811%" y="1045" width="0.0657%" height="15" fill="rgb(225,33,4)" fg:x="8516" fg:w="8"/><text x="70.2311%" y="1055.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (2 samples, 0.02%)</title><rect x="70.0879%" y="1029" width="0.0164%" height="15" fill="rgb(224,33,50)" fg:x="8529" fg:w="2"/><text x="70.3379%" y="1039.50"></text></g><g><title>__libc_malloc (15 samples, 0.12%)</title><rect x="70.1044%" y="997" width="0.1233%" height="15" fill="rgb(246,198,51)" fg:x="8531" fg:w="15"/><text x="70.3544%" y="1007.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="70.2030%" y="981" width="0.0247%" height="15" fill="rgb(205,22,4)" fg:x="8543" fg:w="3"/><text x="70.4530%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.13%)</title><rect x="70.1044%" y="1029" width="0.1315%" height="15" fill="rgb(206,3,8)" fg:x="8531" fg:w="16"/><text x="70.3544%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.13%)</title><rect x="70.1044%" y="1013" width="0.1315%" height="15" fill="rgb(251,23,15)" fg:x="8531" fg:w="16"/><text x="70.3544%" y="1023.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (81 samples, 0.67%)</title><rect x="70.0551%" y="1045" width="0.6656%" height="15" fill="rgb(252,88,28)" fg:x="8525" fg:w="81"/><text x="70.3051%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (59 samples, 0.48%)</title><rect x="70.2358%" y="1029" width="0.4848%" height="15" fill="rgb(212,127,14)" fg:x="8547" fg:w="59"/><text x="70.4858%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (58 samples, 0.48%)</title><rect x="70.2441%" y="1013" width="0.4766%" height="15" fill="rgb(247,145,37)" fg:x="8548" fg:w="58"/><text x="70.4941%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (102 samples, 0.84%)</title><rect x="69.9318%" y="1061" width="0.8382%" height="15" fill="rgb(209,117,53)" fg:x="8510" fg:w="102"/><text x="70.1818%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (6 samples, 0.05%)</title><rect x="70.7207%" y="1045" width="0.0493%" height="15" fill="rgb(212,90,42)" fg:x="8606" fg:w="6"/><text x="70.9707%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (3 samples, 0.02%)</title><rect x="70.7453%" y="1029" width="0.0247%" height="15" fill="rgb(218,164,37)" fg:x="8609" fg:w="3"/><text x="70.9953%" y="1039.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (5 samples, 0.04%)</title><rect x="70.7700%" y="1061" width="0.0411%" height="15" fill="rgb(246,65,34)" fg:x="8612" fg:w="5"/><text x="71.0200%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (5 samples, 0.04%)</title><rect x="70.7700%" y="1045" width="0.0411%" height="15" fill="rgb(231,100,33)" fg:x="8612" fg:w="5"/><text x="71.0200%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (3 samples, 0.02%)</title><rect x="70.7864%" y="1029" width="0.0247%" height="15" fill="rgb(228,126,14)" fg:x="8614" fg:w="3"/><text x="71.0364%" y="1039.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.09%)</title><rect x="70.8850%" y="1029" width="0.0904%" height="15" fill="rgb(215,173,21)" fg:x="8626" fg:w="11"/><text x="71.1350%" y="1039.50"></text></g><g><title>__libc_calloc (21 samples, 0.17%)</title><rect x="70.8193%" y="1045" width="0.1726%" height="15" fill="rgb(210,6,40)" fg:x="8618" fg:w="21"/><text x="71.0693%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (2 samples, 0.02%)</title><rect x="70.9754%" y="1029" width="0.0164%" height="15" fill="rgb(212,48,18)" fg:x="8637" fg:w="2"/><text x="71.2254%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.19%)</title><rect x="70.8111%" y="1061" width="0.1890%" height="15" fill="rgb(230,214,11)" fg:x="8617" fg:w="23"/><text x="71.0611%" y="1071.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (5 samples, 0.04%)</title><rect x="71.0001%" y="1061" width="0.0411%" height="15" fill="rgb(254,105,39)" fg:x="8640" fg:w="5"/><text x="71.2501%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="71.0083%" y="1045" width="0.0329%" height="15" fill="rgb(245,158,5)" fg:x="8641" fg:w="4"/><text x="71.2583%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="71.0083%" y="1029" width="0.0329%" height="15" fill="rgb(249,208,11)" fg:x="8641" fg:w="4"/><text x="71.2583%" y="1039.50"></text></g><g><title>realloc (4 samples, 0.03%)</title><rect x="71.0083%" y="1013" width="0.0329%" height="15" fill="rgb(210,39,28)" fg:x="8641" fg:w="4"/><text x="71.2583%" y="1023.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="71.0247%" y="997" width="0.0164%" height="15" fill="rgb(211,56,53)" fg:x="8643" fg:w="2"/><text x="71.2747%" y="1007.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="71.0247%" y="981" width="0.0164%" height="15" fill="rgb(226,201,30)" fg:x="8643" fg:w="2"/><text x="71.2747%" y="991.50"></text></g><g><title>core::slice::rotate::ptr_rotate (2 samples, 0.02%)</title><rect x="71.0576%" y="1061" width="0.0164%" height="15" fill="rgb(239,101,34)" fg:x="8647" fg:w="2"/><text x="71.3076%" y="1071.50"></text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (2,010 samples, 16.52%)</title><rect x="56.6357%" y="1093" width="16.5174%" height="15" fill="rgb(226,209,5)" fg:x="6892" fg:w="2010"/><text x="56.8857%" y="1103.50">bitcoincore_rpc::client::..</text></g><g><title>bitcoincore_rpc::deserialize_hex (607 samples, 4.99%)</title><rect x="68.1650%" y="1077" width="4.9881%" height="15" fill="rgb(250,105,47)" fg:x="8295" fg:w="607"/><text x="68.4150%" y="1087.50">bitcoi..</text></g><g><title>std::io::Read::read_exact (253 samples, 2.08%)</title><rect x="71.0740%" y="1061" width="2.0791%" height="15" fill="rgb(230,72,3)" fg:x="8649" fg:w="253"/><text x="71.3240%" y="1071.50">s..</text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (242 samples, 1.99%)</title><rect x="71.1644%" y="1045" width="1.9887%" height="15" fill="rgb(232,218,39)" fg:x="8660" fg:w="242"/><text x="71.4144%" y="1055.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="73.1531%" y="1077" width="0.0164%" height="15" fill="rgb(248,166,6)" fg:x="8902" fg:w="2"/><text x="73.4031%" y="1087.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="73.1531%" y="1061" width="0.0164%" height="15" fill="rgb(247,89,20)" fg:x="8902" fg:w="2"/><text x="73.4031%" y="1071.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="73.1531%" y="1045" width="0.0164%" height="15" fill="rgb(248,130,54)" fg:x="8902" fg:w="2"/><text x="73.4031%" y="1055.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.02%)</title><rect x="73.1860%" y="1045" width="0.0164%" height="15" fill="rgb(234,196,4)" fg:x="8906" fg:w="2"/><text x="73.4360%" y="1055.50"></text></g><g><title>ord::index::updater::Updater::get_block_with_retries (2,018 samples, 16.58%)</title><rect x="56.6357%" y="1109" width="16.5831%" height="15" fill="rgb(250,143,31)" fg:x="6892" fg:w="2018"/><text x="56.8857%" y="1119.50">ord::index::updater::Updat..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (8 samples, 0.07%)</title><rect x="73.1531%" y="1093" width="0.0657%" height="15" fill="rgb(211,110,34)" fg:x="8902" fg:w="8"/><text x="73.4031%" y="1103.50"></text></g><g><title>jsonrpc::client::Client::send_request (5 samples, 0.04%)</title><rect x="73.1777%" y="1077" width="0.0411%" height="15" fill="rgb(215,124,48)" fg:x="8905" fg:w="5"/><text x="73.4277%" y="1087.50"></text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (5 samples, 0.04%)</title><rect x="73.1777%" y="1061" width="0.0411%" height="15" fill="rgb(216,46,13)" fg:x="8905" fg:w="5"/><text x="73.4277%" y="1071.50"></text></g><g><title>std::net::udp::UdpSocket::send (2 samples, 0.02%)</title><rect x="73.2024%" y="1045" width="0.0164%" height="15" fill="rgb(205,184,25)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="1055.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (2 samples, 0.02%)</title><rect x="73.2024%" y="1029" width="0.0164%" height="15" fill="rgb(228,1,10)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="1039.50"></text></g><g><title>__libc_send (2 samples, 0.02%)</title><rect x="73.2024%" y="1013" width="0.0164%" height="15" fill="rgb(213,116,27)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="73.2024%" y="997" width="0.0164%" height="15" fill="rgb(241,95,50)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="1007.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="73.2024%" y="981" width="0.0164%" height="15" fill="rgb(238,48,32)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="991.50"></text></g><g><title>__x64_sys_sendto (2 samples, 0.02%)</title><rect x="73.2024%" y="965" width="0.0164%" height="15" fill="rgb(235,113,49)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="975.50"></text></g><g><title>__sys_sendto (2 samples, 0.02%)</title><rect x="73.2024%" y="949" width="0.0164%" height="15" fill="rgb(205,127,43)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="959.50"></text></g><g><title>sock_sendmsg (2 samples, 0.02%)</title><rect x="73.2024%" y="933" width="0.0164%" height="15" fill="rgb(250,162,2)" fg:x="8908" fg:w="2"/><text x="73.4524%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.81%)</title><rect x="73.2271%" y="1093" width="0.8135%" height="15" fill="rgb(220,13,41)" fg:x="8911" fg:w="99"/><text x="73.4771%" y="1103.50"></text></g><g><title>cfree (97 samples, 0.80%)</title><rect x="73.2435%" y="1077" width="0.7971%" height="15" fill="rgb(249,221,25)" fg:x="8913" fg:w="97"/><text x="73.4935%" y="1087.50"></text></g><g><title>_IO_str_seekoff (27 samples, 0.22%)</title><rect x="73.8187%" y="1061" width="0.2219%" height="15" fill="rgb(215,208,19)" fg:x="8983" fg:w="27"/><text x="74.0687%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (34 samples, 0.28%)</title><rect x="74.1063%" y="1045" width="0.2794%" height="15" fill="rgb(236,175,2)" fg:x="9018" fg:w="34"/><text x="74.3563%" y="1055.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="74.3940%" y="981" width="0.0164%" height="15" fill="rgb(241,52,2)" fg:x="9053" fg:w="2"/><text x="74.6440%" y="991.50"></text></g><g><title>_IO_str_seekoff (41 samples, 0.34%)</title><rect x="74.3940%" y="997" width="0.3369%" height="15" fill="rgb(248,140,14)" fg:x="9053" fg:w="41"/><text x="74.6440%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (39 samples, 0.32%)</title><rect x="74.4104%" y="981" width="0.3205%" height="15" fill="rgb(253,22,42)" fg:x="9055" fg:w="39"/><text x="74.6604%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (77 samples, 0.63%)</title><rect x="74.1063%" y="1061" width="0.6328%" height="15" fill="rgb(234,61,47)" fg:x="9018" fg:w="77"/><text x="74.3563%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (43 samples, 0.35%)</title><rect x="74.3857%" y="1045" width="0.3534%" height="15" fill="rgb(208,226,15)" fg:x="9052" fg:w="43"/><text x="74.6357%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.35%)</title><rect x="74.3857%" y="1029" width="0.3534%" height="15" fill="rgb(217,221,4)" fg:x="9052" fg:w="43"/><text x="74.6357%" y="1039.50"></text></g><g><title>realloc (43 samples, 0.35%)</title><rect x="74.3857%" y="1013" width="0.3534%" height="15" fill="rgb(212,174,34)" fg:x="9052" fg:w="43"/><text x="74.6357%" y="1023.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (10 samples, 0.08%)</title><rect x="74.7391%" y="1061" width="0.0822%" height="15" fill="rgb(253,83,4)" fg:x="9095" fg:w="10"/><text x="74.9891%" y="1071.50"></text></g><g><title>hyper::body::body::Body::poll_inner (9 samples, 0.07%)</title><rect x="74.7473%" y="1045" width="0.0740%" height="15" fill="rgb(250,195,49)" fg:x="9096" fg:w="9"/><text x="74.9973%" y="1055.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.07%)</title><rect x="74.7473%" y="1029" width="0.0740%" height="15" fill="rgb(241,192,25)" fg:x="9096" fg:w="9"/><text x="74.9973%" y="1039.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (9 samples, 0.07%)</title><rect x="74.7473%" y="1013" width="0.0740%" height="15" fill="rgb(208,124,10)" fg:x="9096" fg:w="9"/><text x="74.9973%" y="1023.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (8 samples, 0.07%)</title><rect x="74.7555%" y="997" width="0.0657%" height="15" fill="rgb(222,33,0)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (8 samples, 0.07%)</title><rect x="74.7555%" y="981" width="0.0657%" height="15" fill="rgb(234,209,28)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="991.50"></text></g><g><title>syscall (8 samples, 0.07%)</title><rect x="74.7555%" y="965" width="0.0657%" height="15" fill="rgb(224,11,23)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.07%)</title><rect x="74.7555%" y="949" width="0.0657%" height="15" fill="rgb(232,99,1)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="959.50"></text></g><g><title>do_syscall_64 (8 samples, 0.07%)</title><rect x="74.7555%" y="933" width="0.0657%" height="15" fill="rgb(237,95,45)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="943.50"></text></g><g><title>__x64_sys_futex (8 samples, 0.07%)</title><rect x="74.7555%" y="917" width="0.0657%" height="15" fill="rgb(208,109,11)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="927.50"></text></g><g><title>do_futex (8 samples, 0.07%)</title><rect x="74.7555%" y="901" width="0.0657%" height="15" fill="rgb(216,190,48)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="911.50"></text></g><g><title>futex_wake (8 samples, 0.07%)</title><rect x="74.7555%" y="885" width="0.0657%" height="15" fill="rgb(251,171,36)" fg:x="9097" fg:w="8"/><text x="75.0055%" y="895.50"></text></g><g><title>wake_up_q (7 samples, 0.06%)</title><rect x="74.7637%" y="869" width="0.0575%" height="15" fill="rgb(230,62,22)" fg:x="9098" fg:w="7"/><text x="75.0137%" y="879.50"></text></g><g><title>try_to_wake_up (7 samples, 0.06%)</title><rect x="74.7637%" y="853" width="0.0575%" height="15" fill="rgb(225,114,35)" fg:x="9098" fg:w="7"/><text x="75.0137%" y="863.50"></text></g><g><title>__lock_text_start (7 samples, 0.06%)</title><rect x="74.7637%" y="837" width="0.0575%" height="15" fill="rgb(215,118,42)" fg:x="9098" fg:w="7"/><text x="75.0137%" y="847.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.06%)</title><rect x="74.8459%" y="1029" width="0.0575%" height="15" fill="rgb(243,119,21)" fg:x="9108" fg:w="7"/><text x="75.0959%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="74.8541%" y="1013" width="0.0493%" height="15" fill="rgb(252,177,53)" fg:x="9109" fg:w="6"/><text x="75.1041%" y="1023.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="74.8541%" y="997" width="0.0493%" height="15" fill="rgb(237,209,29)" fg:x="9109" fg:w="6"/><text x="75.1041%" y="1007.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.04%)</title><rect x="74.8624%" y="981" width="0.0411%" height="15" fill="rgb(212,65,23)" fg:x="9110" fg:w="5"/><text x="75.1124%" y="991.50"></text></g><g><title>tokio::sync::oneshot::State::load (2 samples, 0.02%)</title><rect x="74.8870%" y="965" width="0.0164%" height="15" fill="rgb(230,222,46)" fg:x="9113" fg:w="2"/><text x="75.1370%" y="975.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="74.9199%" y="997" width="0.0164%" height="15" fill="rgb(215,135,32)" fg:x="9117" fg:w="2"/><text x="75.1699%" y="1007.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (4 samples, 0.03%)</title><rect x="74.9117%" y="1029" width="0.0329%" height="15" fill="rgb(246,101,22)" fg:x="9116" fg:w="4"/><text x="75.1617%" y="1039.50"></text></g><g><title>http::extensions::Extensions::insert (3 samples, 0.02%)</title><rect x="74.9199%" y="1013" width="0.0247%" height="15" fill="rgb(206,107,13)" fg:x="9117" fg:w="3"/><text x="75.1699%" y="1023.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="74.9445%" y="1029" width="0.0247%" height="15" fill="rgb(250,100,44)" fg:x="9120" fg:w="3"/><text x="75.1945%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (2 samples, 0.02%)</title><rect x="74.9692%" y="1029" width="0.0164%" height="15" fill="rgb(231,147,38)" fg:x="9123" fg:w="2"/><text x="75.2192%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="74.9938%" y="1029" width="0.0164%" height="15" fill="rgb(229,8,40)" fg:x="9126" fg:w="2"/><text x="75.2438%" y="1039.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.9938%" y="1013" width="0.0164%" height="15" fill="rgb(221,135,30)" fg:x="9126" fg:w="2"/><text x="75.2438%" y="1023.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (2 samples, 0.02%)</title><rect x="74.9938%" y="997" width="0.0164%" height="15" fill="rgb(249,193,18)" fg:x="9126" fg:w="2"/><text x="75.2438%" y="1007.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (2 samples, 0.02%)</title><rect x="75.0103%" y="1029" width="0.0164%" height="15" fill="rgb(209,133,39)" fg:x="9128" fg:w="2"/><text x="75.2603%" y="1039.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="75.0349%" y="901" width="0.0164%" height="15" fill="rgb(232,100,14)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="911.50"></text></g><g><title>do_futex (2 samples, 0.02%)</title><rect x="75.0349%" y="885" width="0.0164%" height="15" fill="rgb(224,185,1)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="895.50"></text></g><g><title>futex_wake (2 samples, 0.02%)</title><rect x="75.0349%" y="869" width="0.0164%" height="15" fill="rgb(223,139,8)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="879.50"></text></g><g><title>wake_up_q (2 samples, 0.02%)</title><rect x="75.0349%" y="853" width="0.0164%" height="15" fill="rgb(232,213,38)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="863.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="75.0349%" y="837" width="0.0164%" height="15" fill="rgb(207,94,22)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="847.50"></text></g><g><title>__lock_text_start (2 samples, 0.02%)</title><rect x="75.0349%" y="821" width="0.0164%" height="15" fill="rgb(219,183,54)" fg:x="9131" fg:w="2"/><text x="75.2849%" y="831.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="75.0349%" y="949" width="0.0247%" height="15" fill="rgb(216,185,54)" fg:x="9131" fg:w="3"/><text x="75.2849%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="75.0349%" y="933" width="0.0247%" height="15" fill="rgb(254,217,39)" fg:x="9131" fg:w="3"/><text x="75.2849%" y="943.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="75.0349%" y="917" width="0.0247%" height="15" fill="rgb(240,178,23)" fg:x="9131" fg:w="3"/><text x="75.2849%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (5 samples, 0.04%)</title><rect x="75.0349%" y="981" width="0.0411%" height="15" fill="rgb(218,11,47)" fg:x="9131" fg:w="5"/><text x="75.2849%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (5 samples, 0.04%)</title><rect x="75.0349%" y="965" width="0.0411%" height="15" fill="rgb(218,51,51)" fg:x="9131" fg:w="5"/><text x="75.2849%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2 samples, 0.02%)</title><rect x="75.0596%" y="949" width="0.0164%" height="15" fill="rgb(238,126,27)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="959.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (2 samples, 0.02%)</title><rect x="75.0596%" y="933" width="0.0164%" height="15" fill="rgb(249,202,22)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="943.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="75.0596%" y="917" width="0.0164%" height="15" fill="rgb(254,195,49)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.02%)</title><rect x="75.0596%" y="901" width="0.0164%" height="15" fill="rgb(208,123,14)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.02%)</title><rect x="75.0596%" y="885" width="0.0164%" height="15" fill="rgb(224,200,8)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="895.50"></text></g><g><title>__libc_write (2 samples, 0.02%)</title><rect x="75.0596%" y="869" width="0.0164%" height="15" fill="rgb(217,61,36)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="75.0596%" y="853" width="0.0164%" height="15" fill="rgb(206,35,45)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="863.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="75.0596%" y="837" width="0.0164%" height="15" fill="rgb(217,65,33)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="847.50"></text></g><g><title>__x64_sys_write (2 samples, 0.02%)</title><rect x="75.0596%" y="821" width="0.0164%" height="15" fill="rgb(222,158,48)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="831.50"></text></g><g><title>ksys_write (2 samples, 0.02%)</title><rect x="75.0596%" y="805" width="0.0164%" height="15" fill="rgb(254,2,54)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="815.50"></text></g><g><title>vfs_write (2 samples, 0.02%)</title><rect x="75.0596%" y="789" width="0.0164%" height="15" fill="rgb(250,143,38)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="799.50"></text></g><g><title>__vfs_write (2 samples, 0.02%)</title><rect x="75.0596%" y="773" width="0.0164%" height="15" fill="rgb(248,25,0)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="783.50"></text></g><g><title>eventfd_write (2 samples, 0.02%)</title><rect x="75.0596%" y="757" width="0.0164%" height="15" fill="rgb(206,152,27)" fg:x="9134" fg:w="2"/><text x="75.3096%" y="767.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (6 samples, 0.05%)</title><rect x="75.0349%" y="1029" width="0.0493%" height="15" fill="rgb(240,77,30)" fg:x="9131" fg:w="6"/><text x="75.2849%" y="1039.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (6 samples, 0.05%)</title><rect x="75.0349%" y="1013" width="0.0493%" height="15" fill="rgb(231,5,3)" fg:x="9131" fg:w="6"/><text x="75.2849%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (6 samples, 0.05%)</title><rect x="75.0349%" y="997" width="0.0493%" height="15" fill="rgb(207,226,32)" fg:x="9131" fg:w="6"/><text x="75.2849%" y="1007.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (45 samples, 0.37%)</title><rect x="74.8213%" y="1061" width="0.3698%" height="15" fill="rgb(222,207,47)" fg:x="9105" fg:w="45"/><text x="75.0713%" y="1071.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (44 samples, 0.36%)</title><rect x="74.8295%" y="1045" width="0.3616%" height="15" fill="rgb(229,115,45)" fg:x="9106" fg:w="44"/><text x="75.0795%" y="1055.50"></text></g><g><title>tokio::runtime::context::current::with_current (13 samples, 0.11%)</title><rect x="75.0842%" y="1029" width="0.1068%" height="15" fill="rgb(224,191,6)" fg:x="9137" fg:w="13"/><text x="75.3342%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (13 samples, 0.11%)</title><rect x="75.0842%" y="1013" width="0.1068%" height="15" fill="rgb(230,227,24)" fg:x="9137" fg:w="13"/><text x="75.3342%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (13 samples, 0.11%)</title><rect x="75.0842%" y="997" width="0.1068%" height="15" fill="rgb(228,80,19)" fg:x="9137" fg:w="13"/><text x="75.3342%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.10%)</title><rect x="75.0924%" y="981" width="0.0986%" height="15" fill="rgb(247,229,0)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="991.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (12 samples, 0.10%)</title><rect x="75.0924%" y="965" width="0.0986%" height="15" fill="rgb(237,194,15)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (12 samples, 0.10%)</title><rect x="75.0924%" y="949" width="0.0986%" height="15" fill="rgb(219,203,20)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::write (12 samples, 0.10%)</title><rect x="75.0924%" y="933" width="0.0986%" height="15" fill="rgb(234,128,8)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (12 samples, 0.10%)</title><rect x="75.0924%" y="917" width="0.0986%" height="15" fill="rgb(248,202,8)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="927.50"></text></g><g><title>__libc_write (12 samples, 0.10%)</title><rect x="75.0924%" y="901" width="0.0986%" height="15" fill="rgb(206,104,37)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.10%)</title><rect x="75.0924%" y="885" width="0.0986%" height="15" fill="rgb(223,8,27)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="895.50"></text></g><g><title>do_syscall_64 (12 samples, 0.10%)</title><rect x="75.0924%" y="869" width="0.0986%" height="15" fill="rgb(216,217,28)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="879.50"></text></g><g><title>__x64_sys_write (12 samples, 0.10%)</title><rect x="75.0924%" y="853" width="0.0986%" height="15" fill="rgb(249,199,1)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="863.50"></text></g><g><title>ksys_write (12 samples, 0.10%)</title><rect x="75.0924%" y="837" width="0.0986%" height="15" fill="rgb(240,85,17)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="847.50"></text></g><g><title>vfs_write (12 samples, 0.10%)</title><rect x="75.0924%" y="821" width="0.0986%" height="15" fill="rgb(206,108,45)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="831.50"></text></g><g><title>__vfs_write (12 samples, 0.10%)</title><rect x="75.0924%" y="805" width="0.0986%" height="15" fill="rgb(245,210,41)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="815.50"></text></g><g><title>eventfd_write (12 samples, 0.10%)</title><rect x="75.0924%" y="789" width="0.0986%" height="15" fill="rgb(206,13,37)" fg:x="9138" fg:w="12"/><text x="75.3424%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.03%)</title><rect x="75.2075%" y="1013" width="0.0329%" height="15" fill="rgb(250,61,18)" fg:x="9152" fg:w="4"/><text x="75.4575%" y="1023.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.03%)</title><rect x="75.2075%" y="997" width="0.0329%" height="15" fill="rgb(235,172,48)" fg:x="9152" fg:w="4"/><text x="75.4575%" y="1007.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.03%)</title><rect x="75.2075%" y="981" width="0.0329%" height="15" fill="rgb(249,201,17)" fg:x="9152" fg:w="4"/><text x="75.4575%" y="991.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.02%)</title><rect x="75.2157%" y="965" width="0.0247%" height="15" fill="rgb(219,208,6)" fg:x="9153" fg:w="3"/><text x="75.4657%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="75.2157%" y="949" width="0.0247%" height="15" fill="rgb(248,31,23)" fg:x="9153" fg:w="3"/><text x="75.4657%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="75.2239%" y="933" width="0.0164%" height="15" fill="rgb(245,15,42)" fg:x="9154" fg:w="2"/><text x="75.4739%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="75.2239%" y="917" width="0.0164%" height="15" fill="rgb(222,217,39)" fg:x="9154" fg:w="2"/><text x="75.4739%" y="927.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="75.2239%" y="901" width="0.0164%" height="15" fill="rgb(210,219,27)" fg:x="9154" fg:w="2"/><text x="75.4739%" y="911.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="75.2239%" y="885" width="0.0164%" height="15" fill="rgb(252,166,36)" fg:x="9154" fg:w="2"/><text x="75.4739%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.02%)</title><rect x="75.2404%" y="1013" width="0.0247%" height="15" fill="rgb(245,132,34)" fg:x="9156" fg:w="3"/><text x="75.4904%" y="1023.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="75.2486%" y="997" width="0.0164%" height="15" fill="rgb(236,54,3)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="75.2486%" y="981" width="0.0164%" height="15" fill="rgb(241,173,43)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="75.2486%" y="965" width="0.0164%" height="15" fill="rgb(215,190,9)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="75.2486%" y="949" width="0.0164%" height="15" fill="rgb(242,101,16)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="959.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="75.2486%" y="933" width="0.0164%" height="15" fill="rgb(223,190,21)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="943.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="75.2486%" y="917" width="0.0164%" height="15" fill="rgb(215,228,25)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="927.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="75.2486%" y="901" width="0.0164%" height="15" fill="rgb(225,36,22)" fg:x="9157" fg:w="2"/><text x="75.4986%" y="911.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.08%)</title><rect x="75.1993%" y="1029" width="0.0822%" height="15" fill="rgb(251,106,46)" fg:x="9151" fg:w="10"/><text x="75.4493%" y="1039.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.10%)</title><rect x="75.1911%" y="1061" width="0.0986%" height="15" fill="rgb(208,90,1)" fg:x="9150" fg:w="12"/><text x="75.4411%" y="1071.50"></text></g><g><title>serde::ser::Serializer::collect_seq (11 samples, 0.09%)</title><rect x="75.1993%" y="1045" width="0.0904%" height="15" fill="rgb(243,10,4)" fg:x="9151" fg:w="11"/><text x="75.4493%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.04%)</title><rect x="75.3225%" y="1029" width="0.0411%" height="15" fill="rgb(212,137,27)" fg:x="9166" fg:w="5"/><text x="75.5725%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="75.3390%" y="1013" width="0.0247%" height="15" fill="rgb(231,220,49)" fg:x="9168" fg:w="3"/><text x="75.5890%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="75.3390%" y="997" width="0.0247%" height="15" fill="rgb(237,96,20)" fg:x="9168" fg:w="3"/><text x="75.5890%" y="1007.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="75.3390%" y="981" width="0.0247%" height="15" fill="rgb(239,229,30)" fg:x="9168" fg:w="3"/><text x="75.5890%" y="991.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="75.3636%" y="1029" width="0.0329%" height="15" fill="rgb(219,65,33)" fg:x="9171" fg:w="4"/><text x="75.6136%" y="1039.50"></text></g><g><title>bitcoin_private::hex::buf_encoder::out_bytes::OutBytes::write (2 samples, 0.02%)</title><rect x="75.3965%" y="1029" width="0.0164%" height="15" fill="rgb(243,134,7)" fg:x="9175" fg:w="2"/><text x="75.6465%" y="1039.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::collect_str (18 samples, 0.15%)</title><rect x="75.2897%" y="1061" width="0.1479%" height="15" fill="rgb(216,177,54)" fg:x="9162" fg:w="18"/><text x="75.5397%" y="1071.50"></text></g><g><title>bitcoin_private::hex::display::DisplayArray&lt;A,B&gt;::display (18 samples, 0.15%)</title><rect x="75.2897%" y="1045" width="0.1479%" height="15" fill="rgb(211,160,20)" fg:x="9162" fg:w="18"/><text x="75.5397%" y="1055.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.02%)</title><rect x="75.4212%" y="1029" width="0.0164%" height="15" fill="rgb(239,85,39)" fg:x="9178" fg:w="2"/><text x="75.6712%" y="1039.50"></text></g><g><title>__libc_malloc (7 samples, 0.06%)</title><rect x="75.4376%" y="1061" width="0.0575%" height="15" fill="rgb(232,125,22)" fg:x="9180" fg:w="7"/><text x="75.6876%" y="1071.50"></text></g><g><title>_IO_str_seekoff (4 samples, 0.03%)</title><rect x="75.4622%" y="1045" width="0.0329%" height="15" fill="rgb(244,57,34)" fg:x="9183" fg:w="4"/><text x="75.7122%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.02%)</title><rect x="75.4951%" y="1061" width="0.0247%" height="15" fill="rgb(214,203,32)" fg:x="9187" fg:w="3"/><text x="75.7451%" y="1071.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="75.5280%" y="1061" width="0.0164%" height="15" fill="rgb(207,58,43)" fg:x="9191" fg:w="2"/><text x="75.7780%" y="1071.50"></text></g><g><title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="84.7646%" y="949" width="0.0164%" height="15" fill="rgb(215,193,15)" fg:x="10315" fg:w="2"/><text x="85.0146%" y="959.50"></text></g><g><title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="84.7646%" y="933" width="0.0164%" height="15" fill="rgb(232,15,44)" fg:x="10315" fg:w="2"/><text x="85.0146%" y="943.50"></text></g><g><title>irq_exit (2 samples, 0.02%)</title><rect x="84.7646%" y="917" width="0.0164%" height="15" fill="rgb(212,3,48)" fg:x="10315" fg:w="2"/><text x="85.0146%" y="927.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="84.7646%" y="901" width="0.0164%" height="15" fill="rgb(218,128,7)" fg:x="10315" fg:w="2"/><text x="85.0146%" y="911.50"></text></g><g><title>hex::val (839 samples, 6.89%)</title><rect x="84.7810%" y="949" width="6.8946%" height="15" fill="rgb(226,216,39)" fg:x="10317" fg:w="839"/><text x="85.0310%" y="959.50">hex::val</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,813 samples, 14.90%)</title><rect x="76.7853%" y="965" width="14.8985%" height="15" fill="rgb(243,47,51)" fg:x="9344" fg:w="1813"/><text x="77.0353%" y="975.50">&lt;core::iter::adapters::..</text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="91.6838%" y="965" width="0.0164%" height="15" fill="rgb(241,183,40)" fg:x="11157" fg:w="2"/><text x="91.9338%" y="975.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.06%)</title><rect x="91.7660%" y="901" width="0.0575%" height="15" fill="rgb(231,217,32)" fg:x="11167" fg:w="7"/><text x="92.0160%" y="911.50"></text></g><g><title>_IO_str_seekoff (19 samples, 0.16%)</title><rect x="91.7577%" y="917" width="0.1561%" height="15" fill="rgb(229,61,38)" fg:x="11166" fg:w="19"/><text x="92.0077%" y="927.50"></text></g><g><title>__nss_passwd_lookup (11 samples, 0.09%)</title><rect x="91.8235%" y="901" width="0.0904%" height="15" fill="rgb(225,210,5)" fg:x="11174" fg:w="11"/><text x="92.0735%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.22%)</title><rect x="91.7002%" y="965" width="0.2219%" height="15" fill="rgb(231,79,45)" fg:x="11159" fg:w="27"/><text x="91.9502%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.22%)</title><rect x="91.7002%" y="949" width="0.2219%" height="15" fill="rgb(224,100,7)" fg:x="11159" fg:w="27"/><text x="91.9502%" y="959.50"></text></g><g><title>realloc (27 samples, 0.22%)</title><rect x="91.7002%" y="933" width="0.2219%" height="15" fill="rgb(241,198,18)" fg:x="11159" fg:w="27"/><text x="91.9502%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1,994 samples, 16.39%)</title><rect x="75.5444%" y="997" width="16.3859%" height="15" fill="rgb(252,97,53)" fg:x="9193" fg:w="1994"/><text x="75.7944%" y="1007.50">&lt;alloc::vec::Vec&lt;u8&gt; as h..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,994 samples, 16.39%)</title><rect x="75.5444%" y="981" width="16.3859%" height="15" fill="rgb(220,88,7)" fg:x="9193" fg:w="1994"/><text x="75.7944%" y="991.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="92.1358%" y="965" width="0.0247%" height="15" fill="rgb(213,176,14)" fg:x="11212" fg:w="3"/><text x="92.3858%" y="975.50"></text></g><g><title>_IO_str_seekoff (2 samples, 0.02%)</title><rect x="92.1440%" y="949" width="0.0164%" height="15" fill="rgb(246,73,7)" fg:x="11213" fg:w="2"/><text x="92.3940%" y="959.50"></text></g><g><title>__libc_malloc (6 samples, 0.05%)</title><rect x="92.1686%" y="917" width="0.0493%" height="15" fill="rgb(245,64,36)" fg:x="11216" fg:w="6"/><text x="92.4186%" y="927.50"></text></g><g><title>_IO_str_seekoff (5 samples, 0.04%)</title><rect x="92.1768%" y="901" width="0.0411%" height="15" fill="rgb(245,80,10)" fg:x="11217" fg:w="5"/><text x="92.4268%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (28 samples, 0.23%)</title><rect x="91.9961%" y="981" width="0.2301%" height="15" fill="rgb(232,107,50)" fg:x="11195" fg:w="28"/><text x="92.2461%" y="991.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (8 samples, 0.07%)</title><rect x="92.1604%" y="965" width="0.0657%" height="15" fill="rgb(253,3,0)" fg:x="11215" fg:w="8"/><text x="92.4104%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.06%)</title><rect x="92.1686%" y="949" width="0.0575%" height="15" fill="rgb(212,99,53)" fg:x="11216" fg:w="7"/><text x="92.4186%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.06%)</title><rect x="92.1686%" y="933" width="0.0575%" height="15" fill="rgb(249,111,54)" fg:x="11216" fg:w="7"/><text x="92.4186%" y="943.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="92.4480%" y="965" width="0.0247%" height="15" fill="rgb(249,55,30)" fg:x="11250" fg:w="3"/><text x="92.6980%" y="975.50"></text></g><g><title>_IO_str_seekoff (3 samples, 0.02%)</title><rect x="92.4480%" y="949" width="0.0247%" height="15" fill="rgb(237,47,42)" fg:x="11250" fg:w="3"/><text x="92.6980%" y="959.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.07%)</title><rect x="92.6781%" y="949" width="0.0657%" height="15" fill="rgb(211,20,18)" fg:x="11278" fg:w="8"/><text x="92.9281%" y="959.50"></text></g><g><title>__libc_malloc (125 samples, 1.03%)</title><rect x="92.8753%" y="917" width="1.0272%" height="15" fill="rgb(231,203,46)" fg:x="11302" fg:w="125"/><text x="93.1253%" y="927.50"></text></g><g><title>_IO_str_seekoff (32 samples, 0.26%)</title><rect x="93.6396%" y="901" width="0.2630%" height="15" fill="rgb(237,142,3)" fg:x="11395" fg:w="32"/><text x="93.8896%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (143 samples, 1.18%)</title><rect x="92.7439%" y="949" width="1.1751%" height="15" fill="rgb(241,107,1)" fg:x="11286" fg:w="143"/><text x="92.9939%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 samples, 1.13%)</title><rect x="92.7932%" y="933" width="1.1258%" height="15" fill="rgb(229,83,13)" fg:x="11292" fg:w="137"/><text x="93.0432%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (207 samples, 1.70%)</title><rect x="92.2261%" y="981" width="1.7010%" height="15" fill="rgb(241,91,40)" fg:x="11223" fg:w="207"/><text x="92.4761%" y="991.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (177 samples, 1.45%)</title><rect x="92.4727%" y="965" width="1.4545%" height="15" fill="rgb(225,3,45)" fg:x="11253" fg:w="177"/><text x="92.7227%" y="975.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.02%)</title><rect x="93.9272%" y="981" width="0.0164%" height="15" fill="rgb(244,223,14)" fg:x="11430" fg:w="2"/><text x="94.1772%" y="991.50"></text></g><g><title>__nss_passwd_lookup (4 samples, 0.03%)</title><rect x="93.9436%" y="981" width="0.0329%" height="15" fill="rgb(224,124,37)" fg:x="11432" fg:w="4"/><text x="94.1936%" y="991.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.06%)</title><rect x="94.0669%" y="949" width="0.0575%" height="15" fill="rgb(251,171,30)" fg:x="11447" fg:w="7"/><text x="94.3169%" y="959.50"></text></g><g><title>__libc_calloc (18 samples, 0.15%)</title><rect x="93.9847%" y="965" width="0.1479%" height="15" fill="rgb(236,46,54)" fg:x="11437" fg:w="18"/><text x="94.2347%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.16%)</title><rect x="93.9765%" y="981" width="0.1644%" height="15" fill="rgb(245,213,5)" fg:x="11436" fg:w="20"/><text x="94.2265%" y="991.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (4 samples, 0.03%)</title><rect x="94.1408%" y="981" width="0.0329%" height="15" fill="rgb(230,144,27)" fg:x="11456" fg:w="4"/><text x="94.3908%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (2 samples, 0.02%)</title><rect x="94.1737%" y="981" width="0.0164%" height="15" fill="rgb(220,86,6)" fg:x="11460" fg:w="2"/><text x="94.4237%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (276 samples, 2.27%)</title><rect x="91.9303%" y="997" width="2.2681%" height="15" fill="rgb(240,20,13)" fg:x="11187" fg:w="276"/><text x="92.1803%" y="1007.50">b..</text></g><g><title>core::iter::adapters::try_process (2,271 samples, 18.66%)</title><rect x="75.5444%" y="1061" width="18.6622%" height="15" fill="rgb(217,89,34)" fg:x="9193" fg:w="2271"/><text x="75.7944%" y="1071.50">core::iter::adapters::try_pro..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2,271 samples, 18.66%)</title><rect x="75.5444%" y="1045" width="18.6622%" height="15" fill="rgb(229,13,5)" fg:x="9193" fg:w="2271"/><text x="75.7944%" y="1055.50">alloc::vec::in_place_collect:..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,271 samples, 18.66%)</title><rect x="75.5444%" y="1029" width="18.6622%" height="15" fill="rgb(244,67,35)" fg:x="9193" fg:w="2271"/><text x="75.7944%" y="1039.50">&lt;core::iter::adapters::Generi..</text></g><g><title>ord::index::fetcher::Fetcher::get_transactions::_{{closure}}::_{{closure}} (2,271 samples, 18.66%)</title><rect x="75.5444%" y="1013" width="18.6622%" height="15" fill="rgb(221,40,2)" fg:x="9193" fg:w="2271"/><text x="75.7944%" y="1023.50">ord::index::fetcher::Fetcher:..</text></g><g><title>core::ptr::drop_in_place&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt; (3 samples, 0.02%)</title><rect x="94.2066%" y="1061" width="0.0247%" height="15" fill="rgb(237,157,21)" fg:x="11464" fg:w="3"/><text x="94.4566%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.02%)</title><rect x="94.2066%" y="1045" width="0.0247%" height="15" fill="rgb(222,94,11)" fg:x="11464" fg:w="3"/><text x="94.4566%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="94.2066%" y="1029" width="0.0247%" height="15" fill="rgb(249,113,6)" fg:x="11464" fg:w="3"/><text x="94.4566%" y="1039.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (3 samples, 0.02%)</title><rect x="94.2066%" y="1013" width="0.0247%" height="15" fill="rgb(238,137,36)" fg:x="11464" fg:w="3"/><text x="94.4566%" y="1023.50"></text></g><g><title>syscall (6 samples, 0.05%)</title><rect x="94.2312%" y="1013" width="0.0493%" height="15" fill="rgb(210,102,26)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.05%)</title><rect x="94.2312%" y="997" width="0.0493%" height="15" fill="rgb(218,30,30)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="1007.50"></text></g><g><title>do_syscall_64 (6 samples, 0.05%)</title><rect x="94.2312%" y="981" width="0.0493%" height="15" fill="rgb(214,67,26)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="991.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.05%)</title><rect x="94.2312%" y="965" width="0.0493%" height="15" fill="rgb(251,9,53)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="975.50"></text></g><g><title>do_futex (6 samples, 0.05%)</title><rect x="94.2312%" y="949" width="0.0493%" height="15" fill="rgb(228,204,25)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="959.50"></text></g><g><title>futex_wake (6 samples, 0.05%)</title><rect x="94.2312%" y="933" width="0.0493%" height="15" fill="rgb(207,153,8)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="943.50"></text></g><g><title>wake_up_q (6 samples, 0.05%)</title><rect x="94.2312%" y="917" width="0.0493%" height="15" fill="rgb(242,9,16)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="927.50"></text></g><g><title>try_to_wake_up (6 samples, 0.05%)</title><rect x="94.2312%" y="901" width="0.0493%" height="15" fill="rgb(217,211,10)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="911.50"></text></g><g><title>__lock_text_start (6 samples, 0.05%)</title><rect x="94.2312%" y="885" width="0.0493%" height="15" fill="rgb(219,228,52)" fg:x="11467" fg:w="6"/><text x="94.4812%" y="895.50"></text></g><g><title>__vfs_write (7 samples, 0.06%)</title><rect x="94.2970%" y="837" width="0.0575%" height="15" fill="rgb(231,92,29)" fg:x="11475" fg:w="7"/><text x="94.5470%" y="847.50"></text></g><g><title>eventfd_write (7 samples, 0.06%)</title><rect x="94.2970%" y="821" width="0.0575%" height="15" fill="rgb(232,8,23)" fg:x="11475" fg:w="7"/><text x="94.5470%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (17 samples, 0.14%)</title><rect x="94.2312%" y="1029" width="0.1397%" height="15" fill="rgb(216,211,34)" fg:x="11467" fg:w="17"/><text x="94.4812%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (11 samples, 0.09%)</title><rect x="94.2805%" y="1013" width="0.0904%" height="15" fill="rgb(236,151,0)" fg:x="11473" fg:w="11"/><text x="94.5305%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (11 samples, 0.09%)</title><rect x="94.2805%" y="997" width="0.0904%" height="15" fill="rgb(209,168,3)" fg:x="11473" fg:w="11"/><text x="94.5305%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (11 samples, 0.09%)</title><rect x="94.2805%" y="981" width="0.0904%" height="15" fill="rgb(208,129,28)" fg:x="11473" fg:w="11"/><text x="94.5305%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (11 samples, 0.09%)</title><rect x="94.2805%" y="965" width="0.0904%" height="15" fill="rgb(229,78,22)" fg:x="11473" fg:w="11"/><text x="94.5305%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 0.09%)</title><rect x="94.2805%" y="949" width="0.0904%" height="15" fill="rgb(228,187,13)" fg:x="11473" fg:w="11"/><text x="94.5305%" y="959.50"></text></g><g><title>__libc_write (10 samples, 0.08%)</title><rect x="94.2888%" y="933" width="0.0822%" height="15" fill="rgb(240,119,24)" fg:x="11474" fg:w="10"/><text x="94.5388%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.08%)</title><rect x="94.2888%" y="917" width="0.0822%" height="15" fill="rgb(209,194,42)" fg:x="11474" fg:w="10"/><text x="94.5388%" y="927.50"></text></g><g><title>do_syscall_64 (10 samples, 0.08%)</title><rect x="94.2888%" y="901" width="0.0822%" height="15" fill="rgb(247,200,46)" fg:x="11474" fg:w="10"/><text x="94.5388%" y="911.50"></text></g><g><title>__x64_sys_write (9 samples, 0.07%)</title><rect x="94.2970%" y="885" width="0.0740%" height="15" fill="rgb(218,76,16)" fg:x="11475" fg:w="9"/><text x="94.5470%" y="895.50"></text></g><g><title>ksys_write (9 samples, 0.07%)</title><rect x="94.2970%" y="869" width="0.0740%" height="15" fill="rgb(225,21,48)" fg:x="11475" fg:w="9"/><text x="94.5470%" y="879.50"></text></g><g><title>vfs_write (9 samples, 0.07%)</title><rect x="94.2970%" y="853" width="0.0740%" height="15" fill="rgb(239,223,50)" fg:x="11475" fg:w="9"/><text x="94.5470%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (18 samples, 0.15%)</title><rect x="94.2312%" y="1061" width="0.1479%" height="15" fill="rgb(244,45,21)" fg:x="11467" fg:w="18"/><text x="94.4812%" y="1071.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (18 samples, 0.15%)</title><rect x="94.2312%" y="1045" width="0.1479%" height="15" fill="rgb(232,33,43)" fg:x="11467" fg:w="18"/><text x="94.4812%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::to_bytes::to_bytes&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt;::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="94.3792%" y="1061" width="0.0164%" height="15" fill="rgb(209,8,3)" fg:x="11485" fg:w="2"/><text x="94.6292%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.03%)</title><rect x="94.3956%" y="1061" width="0.0329%" height="15" fill="rgb(214,25,53)" fg:x="11487" fg:w="4"/><text x="94.6456%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.03%)</title><rect x="94.3956%" y="1045" width="0.0329%" height="15" fill="rgb(254,186,54)" fg:x="11487" fg:w="4"/><text x="94.6456%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.03%)</title><rect x="94.3956%" y="1029" width="0.0329%" height="15" fill="rgb(208,174,49)" fg:x="11487" fg:w="4"/><text x="94.6456%" y="1039.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="94.4038%" y="1013" width="0.0247%" height="15" fill="rgb(233,191,51)" fg:x="11488" fg:w="3"/><text x="94.6538%" y="1023.50"></text></g><g><title>http::request::Builder::header (3 samples, 0.02%)</title><rect x="94.4285%" y="1061" width="0.0247%" height="15" fill="rgb(222,134,10)" fg:x="11491" fg:w="3"/><text x="94.6785%" y="1071.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::request (2 samples, 0.02%)</title><rect x="94.4531%" y="1061" width="0.0164%" height="15" fill="rgb(230,226,20)" fg:x="11494" fg:w="2"/><text x="94.7031%" y="1071.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.02%)</title><rect x="94.4942%" y="981" width="0.0164%" height="15" fill="rgb(251,111,25)" fg:x="11499" fg:w="2"/><text x="94.7442%" y="991.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (278 samples, 2.28%)</title><rect x="94.5353%" y="949" width="2.2845%" height="15" fill="rgb(224,40,46)" fg:x="11504" fg:w="278"/><text x="94.7853%" y="959.50">&lt;..</text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.05%)</title><rect x="96.7705%" y="933" width="0.0493%" height="15" fill="rgb(236,108,47)" fg:x="11776" fg:w="6"/><text x="97.0205%" y="943.50"></text></g><g><title>core::str::validations::run_utf8_validation (6 samples, 0.05%)</title><rect x="96.7705%" y="917" width="0.0493%" height="15" fill="rgb(234,93,0)" fg:x="11776" fg:w="6"/><text x="97.0205%" y="927.50"></text></g><g><title>__libc_malloc (11 samples, 0.09%)</title><rect x="96.8198%" y="949" width="0.0904%" height="15" fill="rgb(224,213,32)" fg:x="11782" fg:w="11"/><text x="97.0698%" y="959.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.09%)</title><rect x="96.8198%" y="933" width="0.0904%" height="15" fill="rgb(251,11,48)" fg:x="11782" fg:w="11"/><text x="97.0698%" y="943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (323 samples, 2.65%)</title><rect x="94.4778%" y="1013" width="2.6543%" height="15" fill="rgb(236,173,5)" fg:x="11497" fg:w="323"/><text x="94.7278%" y="1023.50">&lt;s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (322 samples, 2.65%)</title><rect x="94.4860%" y="997" width="2.6461%" height="15" fill="rgb(230,95,12)" fg:x="11498" fg:w="322"/><text x="94.7360%" y="1007.50">&lt;&amp;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (319 samples, 2.62%)</title><rect x="94.5106%" y="981" width="2.6214%" height="15" fill="rgb(232,209,1)" fg:x="11501" fg:w="319"/><text x="94.7606%" y="991.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (316 samples, 2.60%)</title><rect x="94.5353%" y="965" width="2.5968%" height="15" fill="rgb(232,6,1)" fg:x="11504" fg:w="316"/><text x="94.7853%" y="975.50">&lt;&amp;..</text></g><g><title>__nss_passwd_lookup (27 samples, 0.22%)</title><rect x="96.9102%" y="949" width="0.2219%" height="15" fill="rgb(210,224,50)" fg:x="11793" fg:w="27"/><text x="97.1602%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (325 samples, 2.67%)</title><rect x="94.4696%" y="1045" width="2.6707%" height="15" fill="rgb(228,127,35)" fg:x="11496" fg:w="325"/><text x="94.7196%" y="1055.50">&lt;&amp;..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (325 samples, 2.67%)</title><rect x="94.4696%" y="1029" width="2.6707%" height="15" fill="rgb(245,102,45)" fg:x="11496" fg:w="325"/><text x="94.7196%" y="1039.50">&lt;s..</text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (2,812 samples, 23.11%)</title><rect x="74.0406%" y="1093" width="23.1079%" height="15" fill="rgb(214,1,49)" fg:x="9010" fg:w="2812"/><text x="74.2906%" y="1103.50">&lt;futures_util::future::try_join_all::..</text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,812 samples, 23.11%)</title><rect x="74.0406%" y="1077" width="23.1079%" height="15" fill="rgb(226,163,40)" fg:x="9010" fg:w="2812"/><text x="74.2906%" y="1087.50">&lt;futures_util::future::try_maybe_done..</text></g><g><title>serde_json::de::from_slice (326 samples, 2.68%)</title><rect x="94.4696%" y="1061" width="2.6789%" height="15" fill="rgb(239,212,28)" fg:x="11496" fg:w="326"/><text x="94.7196%" y="1071.50">se..</text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="97.1485%" y="1093" width="0.0164%" height="15" fill="rgb(220,20,13)" fg:x="11822" fg:w="2"/><text x="97.3985%" y="1103.50"></text></g><g><title>__libc_malloc (11 samples, 0.09%)</title><rect x="97.1649%" y="1093" width="0.0904%" height="15" fill="rgb(210,164,35)" fg:x="11824" fg:w="11"/><text x="97.4149%" y="1103.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.09%)</title><rect x="97.1649%" y="1077" width="0.0904%" height="15" fill="rgb(248,109,41)" fg:x="11824" fg:w="11"/><text x="97.4149%" y="1087.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.06%)</title><rect x="97.1978%" y="1061" width="0.0575%" height="15" fill="rgb(238,23,50)" fg:x="11828" fg:w="7"/><text x="97.4478%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (3 samples, 0.02%)</title><rect x="97.2553%" y="1093" width="0.0247%" height="15" fill="rgb(211,48,49)" fg:x="11835" fg:w="3"/><text x="97.5053%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="97.2882%" y="1093" width="0.0164%" height="15" fill="rgb(223,36,21)" fg:x="11839" fg:w="2"/><text x="97.5382%" y="1103.50"></text></g><g><title>futex_wait_queue_me (15 samples, 0.12%)</title><rect x="97.3128%" y="933" width="0.1233%" height="15" fill="rgb(207,123,46)" fg:x="11842" fg:w="15"/><text x="97.5628%" y="943.50"></text></g><g><title>schedule (15 samples, 0.12%)</title><rect x="97.3128%" y="917" width="0.1233%" height="15" fill="rgb(240,218,32)" fg:x="11842" fg:w="15"/><text x="97.5628%" y="927.50"></text></g><g><title>__sched_text_start (15 samples, 0.12%)</title><rect x="97.3128%" y="901" width="0.1233%" height="15" fill="rgb(252,5,43)" fg:x="11842" fg:w="15"/><text x="97.5628%" y="911.50"></text></g><g><title>finish_task_switch (15 samples, 0.12%)</title><rect x="97.3128%" y="885" width="0.1233%" height="15" fill="rgb(252,84,19)" fg:x="11842" fg:w="15"/><text x="97.5628%" y="895.50"></text></g><g><title>tokio::runtime::park::Inner::park (17 samples, 0.14%)</title><rect x="97.3046%" y="1093" width="0.1397%" height="15" fill="rgb(243,152,39)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (17 samples, 0.14%)</title><rect x="97.3046%" y="1077" width="0.1397%" height="15" fill="rgb(234,160,15)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1087.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (17 samples, 0.14%)</title><rect x="97.3046%" y="1061" width="0.1397%" height="15" fill="rgb(237,34,20)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1071.50"></text></g><g><title>std::sys::unix::futex::futex_wait (17 samples, 0.14%)</title><rect x="97.3046%" y="1045" width="0.1397%" height="15" fill="rgb(229,97,13)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1055.50"></text></g><g><title>syscall (17 samples, 0.14%)</title><rect x="97.3046%" y="1029" width="0.1397%" height="15" fill="rgb(234,71,50)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.14%)</title><rect x="97.3046%" y="1013" width="0.1397%" height="15" fill="rgb(253,155,4)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1023.50"></text></g><g><title>do_syscall_64 (17 samples, 0.14%)</title><rect x="97.3046%" y="997" width="0.1397%" height="15" fill="rgb(222,185,37)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="1007.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.14%)</title><rect x="97.3046%" y="981" width="0.1397%" height="15" fill="rgb(251,177,13)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="991.50"></text></g><g><title>do_futex (17 samples, 0.14%)</title><rect x="97.3046%" y="965" width="0.1397%" height="15" fill="rgb(250,179,40)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="975.50"></text></g><g><title>futex_wait (17 samples, 0.14%)</title><rect x="97.3046%" y="949" width="0.1397%" height="15" fill="rgb(242,44,2)" fg:x="11841" fg:w="17"/><text x="97.5546%" y="959.50"></text></g><g><title>ord (11,859 samples, 97.45%)</title><rect x="0.0000%" y="1237" width="97.4525%" height="15" fill="rgb(216,177,13)" fg:x="0" fg:w="11859"/><text x="0.2500%" y="1247.50">ord</text></g><g><title>clone (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1221" width="96.8691%" height="15" fill="rgb(216,106,43)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1231.50">clone</text></g><g><title>start_thread (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1205" width="96.8691%" height="15" fill="rgb(216,183,2)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1215.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1189" width="96.8691%" height="15" fill="rgb(249,75,3)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1199.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1173" width="96.8691%" height="15" fill="rgb(219,67,39)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1157" width="96.8691%" height="15" fill="rgb(253,228,2)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1167.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1141" width="96.8691%" height="15" fill="rgb(235,138,27)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1151.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,788 samples, 96.87%)</title><rect x="0.5834%" y="1125" width="96.8691%" height="15" fill="rgb(236,97,51)" fg:x="71" fg:w="11788"/><text x="0.8334%" y="1135.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2,949 samples, 24.23%)</title><rect x="73.2188%" y="1109" width="24.2337%" height="15" fill="rgb(240,80,30)" fg:x="8910" fg:w="2949"/><text x="73.4688%" y="1119.50">tokio::runtime::park::CachedParkThread:..</text></g><g><title>[unknown] (7 samples, 0.06%)</title><rect x="97.4525%" y="1221" width="0.0575%" height="15" fill="rgb(230,178,19)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.06%)</title><rect x="97.4525%" y="1205" width="0.0575%" height="15" fill="rgb(210,190,27)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7 samples, 0.06%)</title><rect x="97.4525%" y="1189" width="0.0575%" height="15" fill="rgb(222,107,31)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.06%)</title><rect x="97.4525%" y="1173" width="0.0575%" height="15" fill="rgb(216,127,34)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.06%)</title><rect x="97.4525%" y="1157" width="0.0575%" height="15" fill="rgb(234,116,52)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.06%)</title><rect x="97.4525%" y="1141" width="0.0575%" height="15" fill="rgb(222,124,15)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1151.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (7 samples, 0.06%)</title><rect x="97.4525%" y="1125" width="0.0575%" height="15" fill="rgb(231,179,28)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1135.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (7 samples, 0.06%)</title><rect x="97.4525%" y="1109" width="0.0575%" height="15" fill="rgb(226,93,45)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1119.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (7 samples, 0.06%)</title><rect x="97.4525%" y="1093" width="0.0575%" height="15" fill="rgb(215,8,51)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1103.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (7 samples, 0.06%)</title><rect x="97.4525%" y="1077" width="0.0575%" height="15" fill="rgb(223,106,5)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1087.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (7 samples, 0.06%)</title><rect x="97.4525%" y="1061" width="0.0575%" height="15" fill="rgb(250,191,5)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1071.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (7 samples, 0.06%)</title><rect x="97.4525%" y="1045" width="0.0575%" height="15" fill="rgb(242,132,44)" fg:x="11859" fg:w="7"/><text x="97.7025%" y="1055.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (2 samples, 0.02%)</title><rect x="97.4936%" y="1029" width="0.0164%" height="15" fill="rgb(251,152,29)" fg:x="11864" fg:w="2"/><text x="97.7436%" y="1039.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (2 samples, 0.02%)</title><rect x="97.4936%" y="1013" width="0.0164%" height="15" fill="rgb(218,179,5)" fg:x="11864" fg:w="2"/><text x="97.7436%" y="1023.50"></text></g><g><title>pow (6 samples, 0.05%)</title><rect x="97.5758%" y="1013" width="0.0493%" height="15" fill="rgb(227,67,19)" fg:x="11874" fg:w="6"/><text x="97.8258%" y="1023.50"></text></g><g><title>__iscanonicall (5 samples, 0.04%)</title><rect x="97.5840%" y="997" width="0.0411%" height="15" fill="rgb(233,119,31)" fg:x="11875" fg:w="5"/><text x="97.8340%" y="1007.50"></text></g><g><title>futex_wait_queue_me (26 samples, 0.21%)</title><rect x="97.7566%" y="837" width="0.2137%" height="15" fill="rgb(241,120,22)" fg:x="11896" fg:w="26"/><text x="98.0066%" y="847.50"></text></g><g><title>schedule (25 samples, 0.21%)</title><rect x="97.7648%" y="821" width="0.2054%" height="15" fill="rgb(224,102,30)" fg:x="11897" fg:w="25"/><text x="98.0148%" y="831.50"></text></g><g><title>__sched_text_start (25 samples, 0.21%)</title><rect x="97.7648%" y="805" width="0.2054%" height="15" fill="rgb(210,164,37)" fg:x="11897" fg:w="25"/><text x="98.0148%" y="815.50"></text></g><g><title>finish_task_switch (24 samples, 0.20%)</title><rect x="97.7730%" y="789" width="0.1972%" height="15" fill="rgb(226,191,16)" fg:x="11898" fg:w="24"/><text x="98.0230%" y="799.50"></text></g><g><title>std::sys::unix::futex::futex_wait (37 samples, 0.30%)</title><rect x="97.6826%" y="949" width="0.3041%" height="15" fill="rgb(214,40,45)" fg:x="11887" fg:w="37"/><text x="97.9326%" y="959.50"></text></g><g><title>syscall (37 samples, 0.30%)</title><rect x="97.6826%" y="933" width="0.3041%" height="15" fill="rgb(244,29,26)" fg:x="11887" fg:w="37"/><text x="97.9326%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.27%)</title><rect x="97.7155%" y="917" width="0.2712%" height="15" fill="rgb(216,16,5)" fg:x="11891" fg:w="33"/><text x="97.9655%" y="927.50"></text></g><g><title>do_syscall_64 (33 samples, 0.27%)</title><rect x="97.7155%" y="901" width="0.2712%" height="15" fill="rgb(249,76,35)" fg:x="11891" fg:w="33"/><text x="97.9655%" y="911.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.26%)</title><rect x="97.7237%" y="885" width="0.2630%" height="15" fill="rgb(207,11,44)" fg:x="11892" fg:w="32"/><text x="97.9737%" y="895.50"></text></g><g><title>do_futex (32 samples, 0.26%)</title><rect x="97.7237%" y="869" width="0.2630%" height="15" fill="rgb(228,190,49)" fg:x="11892" fg:w="32"/><text x="97.9737%" y="879.50"></text></g><g><title>futex_wait (32 samples, 0.26%)</title><rect x="97.7237%" y="853" width="0.2630%" height="15" fill="rgb(214,173,12)" fg:x="11892" fg:w="32"/><text x="97.9737%" y="863.50"></text></g><g><title>futex_wait_setup (2 samples, 0.02%)</title><rect x="97.9703%" y="837" width="0.0164%" height="15" fill="rgb(218,26,35)" fg:x="11922" fg:w="2"/><text x="98.2203%" y="847.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (40 samples, 0.33%)</title><rect x="97.6662%" y="981" width="0.3287%" height="15" fill="rgb(220,200,19)" fg:x="11885" fg:w="40"/><text x="97.9162%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (40 samples, 0.33%)</title><rect x="97.6662%" y="965" width="0.3287%" height="15" fill="rgb(239,95,49)" fg:x="11885" fg:w="40"/><text x="97.9162%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (5 samples, 0.04%)</title><rect x="97.9949%" y="981" width="0.0411%" height="15" fill="rgb(235,85,53)" fg:x="11925" fg:w="5"/><text x="98.2449%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (2 samples, 0.02%)</title><rect x="98.0196%" y="965" width="0.0164%" height="15" fill="rgb(233,133,31)" fg:x="11928" fg:w="2"/><text x="98.2696%" y="975.50"></text></g><g><title>ep_send_events_proc (2 samples, 0.02%)</title><rect x="98.1264%" y="821" width="0.0164%" height="15" fill="rgb(218,25,20)" fg:x="11941" fg:w="2"/><text x="98.3764%" y="831.50"></text></g><g><title>ep_scan_ready_list.constprop.20 (5 samples, 0.04%)</title><rect x="98.1100%" y="837" width="0.0411%" height="15" fill="rgb(252,210,38)" fg:x="11939" fg:w="5"/><text x="98.3600%" y="847.50"></text></g><g><title>mutex_unlock (2 samples, 0.02%)</title><rect x="98.1510%" y="837" width="0.0164%" height="15" fill="rgb(242,134,21)" fg:x="11944" fg:w="2"/><text x="98.4010%" y="847.50"></text></g><g><title>ep_poll (40 samples, 0.33%)</title><rect x="98.1100%" y="853" width="0.3287%" height="15" fill="rgb(213,28,48)" fg:x="11939" fg:w="40"/><text x="98.3600%" y="863.50"></text></g><g><title>schedule_hrtimeout_range (33 samples, 0.27%)</title><rect x="98.1675%" y="837" width="0.2712%" height="15" fill="rgb(250,196,2)" fg:x="11946" fg:w="33"/><text x="98.4175%" y="847.50"></text></g><g><title>schedule_hrtimeout_range_clock (33 samples, 0.27%)</title><rect x="98.1675%" y="821" width="0.2712%" height="15" fill="rgb(227,5,17)" fg:x="11946" fg:w="33"/><text x="98.4175%" y="831.50"></text></g><g><title>schedule (32 samples, 0.26%)</title><rect x="98.1757%" y="805" width="0.2630%" height="15" fill="rgb(221,226,24)" fg:x="11947" fg:w="32"/><text x="98.4257%" y="815.50"></text></g><g><title>__sched_text_start (32 samples, 0.26%)</title><rect x="98.1757%" y="789" width="0.2630%" height="15" fill="rgb(211,5,48)" fg:x="11947" fg:w="32"/><text x="98.4257%" y="799.50"></text></g><g><title>finish_task_switch (32 samples, 0.26%)</title><rect x="98.1757%" y="773" width="0.2630%" height="15" fill="rgb(219,150,6)" fg:x="11947" fg:w="32"/><text x="98.4257%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 0.35%)</title><rect x="98.1017%" y="917" width="0.3451%" height="15" fill="rgb(251,46,16)" fg:x="11938" fg:w="42"/><text x="98.3517%" y="927.50"></text></g><g><title>do_syscall_64 (42 samples, 0.35%)</title><rect x="98.1017%" y="901" width="0.3451%" height="15" fill="rgb(220,204,40)" fg:x="11938" fg:w="42"/><text x="98.3517%" y="911.50"></text></g><g><title>__x64_sys_epoll_wait (42 samples, 0.35%)</title><rect x="98.1017%" y="885" width="0.3451%" height="15" fill="rgb(211,85,2)" fg:x="11938" fg:w="42"/><text x="98.3517%" y="895.50"></text></g><g><title>do_epoll_wait (42 samples, 0.35%)</title><rect x="98.1017%" y="869" width="0.3451%" height="15" fill="rgb(229,17,7)" fg:x="11938" fg:w="42"/><text x="98.3517%" y="879.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (46 samples, 0.38%)</title><rect x="98.0771%" y="949" width="0.3780%" height="15" fill="rgb(239,72,28)" fg:x="11935" fg:w="46"/><text x="98.3271%" y="959.50"></text></g><g><title>epoll_wait (45 samples, 0.37%)</title><rect x="98.0853%" y="933" width="0.3698%" height="15" fill="rgb(230,47,54)" fg:x="11936" fg:w="45"/><text x="98.3353%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (101 samples, 0.83%)</title><rect x="97.6415%" y="1013" width="0.8300%" height="15" fill="rgb(214,50,8)" fg:x="11882" fg:w="101"/><text x="97.8915%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (100 samples, 0.82%)</title><rect x="97.6498%" y="997" width="0.8218%" height="15" fill="rgb(216,198,43)" fg:x="11883" fg:w="100"/><text x="97.8998%" y="1007.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (53 samples, 0.44%)</title><rect x="98.0360%" y="981" width="0.4355%" height="15" fill="rgb(234,20,35)" fg:x="11930" fg:w="53"/><text x="98.2860%" y="991.50"></text></g><g><title>tokio::runtime::io::Driver::turn (51 samples, 0.42%)</title><rect x="98.0524%" y="965" width="0.4191%" height="15" fill="rgb(254,45,19)" fg:x="11932" fg:w="51"/><text x="98.3024%" y="975.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.02%)</title><rect x="98.4551%" y="949" width="0.0164%" height="15" fill="rgb(219,14,44)" fg:x="11981" fg:w="2"/><text x="98.7051%" y="959.50"></text></g><g><title>syscall (24 samples, 0.20%)</title><rect x="98.4797%" y="997" width="0.1972%" height="15" fill="rgb(217,220,26)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.20%)</title><rect x="98.4797%" y="981" width="0.1972%" height="15" fill="rgb(213,158,28)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="991.50"></text></g><g><title>do_syscall_64 (24 samples, 0.20%)</title><rect x="98.4797%" y="965" width="0.1972%" height="15" fill="rgb(252,51,52)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="975.50"></text></g><g><title>__x64_sys_futex (24 samples, 0.20%)</title><rect x="98.4797%" y="949" width="0.1972%" height="15" fill="rgb(246,89,16)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="959.50"></text></g><g><title>do_futex (24 samples, 0.20%)</title><rect x="98.4797%" y="933" width="0.1972%" height="15" fill="rgb(216,158,49)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="943.50"></text></g><g><title>futex_wake (24 samples, 0.20%)</title><rect x="98.4797%" y="917" width="0.1972%" height="15" fill="rgb(236,107,19)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="927.50"></text></g><g><title>wake_up_q (24 samples, 0.20%)</title><rect x="98.4797%" y="901" width="0.1972%" height="15" fill="rgb(228,185,30)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="911.50"></text></g><g><title>try_to_wake_up (24 samples, 0.20%)</title><rect x="98.4797%" y="885" width="0.1972%" height="15" fill="rgb(246,134,8)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="895.50"></text></g><g><title>__lock_text_start (24 samples, 0.20%)</title><rect x="98.4797%" y="869" width="0.1972%" height="15" fill="rgb(214,143,50)" fg:x="11984" fg:w="24"/><text x="98.7297%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (3 samples, 0.02%)</title><rect x="98.6770%" y="997" width="0.0247%" height="15" fill="rgb(228,75,8)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="1007.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (3 samples, 0.02%)</title><rect x="98.6770%" y="981" width="0.0247%" height="15" fill="rgb(207,175,4)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.02%)</title><rect x="98.6770%" y="965" width="0.0247%" height="15" fill="rgb(205,108,24)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.02%)</title><rect x="98.6770%" y="949" width="0.0247%" height="15" fill="rgb(244,120,49)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.02%)</title><rect x="98.6770%" y="933" width="0.0247%" height="15" fill="rgb(223,47,38)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="943.50"></text></g><g><title>__libc_write (3 samples, 0.02%)</title><rect x="98.6770%" y="917" width="0.0247%" height="15" fill="rgb(229,179,11)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="98.6770%" y="901" width="0.0247%" height="15" fill="rgb(231,122,1)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="911.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="98.6770%" y="885" width="0.0247%" height="15" fill="rgb(245,119,9)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="895.50"></text></g><g><title>__x64_sys_write (3 samples, 0.02%)</title><rect x="98.6770%" y="869" width="0.0247%" height="15" fill="rgb(241,163,25)" fg:x="12008" fg:w="3"/><text x="98.9270%" y="879.50"></text></g><g><title>ksys_write (2 samples, 0.02%)</title><rect x="98.6852%" y="853" width="0.0164%" height="15" fill="rgb(217,214,3)" fg:x="12009" fg:w="2"/><text x="98.9352%" y="863.50"></text></g><g><title>vfs_write (2 samples, 0.02%)</title><rect x="98.6852%" y="837" width="0.0164%" height="15" fill="rgb(240,86,28)" fg:x="12009" fg:w="2"/><text x="98.9352%" y="847.50"></text></g><g><title>__vfs_write (2 samples, 0.02%)</title><rect x="98.6852%" y="821" width="0.0164%" height="15" fill="rgb(215,47,9)" fg:x="12009" fg:w="2"/><text x="98.9352%" y="831.50"></text></g><g><title>eventfd_write (2 samples, 0.02%)</title><rect x="98.6852%" y="805" width="0.0164%" height="15" fill="rgb(252,25,45)" fg:x="12009" fg:w="2"/><text x="98.9352%" y="815.50"></text></g><g><title>&lt;hyper::client::dispatch::Callback&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="98.7674%" y="837" width="0.0247%" height="15" fill="rgb(251,164,9)" fg:x="12019" fg:w="3"/><text x="99.0174%" y="847.50"></text></g><g><title>hyper::error::Error::with (2 samples, 0.02%)</title><rect x="98.7756%" y="821" width="0.0164%" height="15" fill="rgb(233,194,0)" fg:x="12020" fg:w="2"/><text x="99.0256%" y="831.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="98.7756%" y="805" width="0.0164%" height="15" fill="rgb(249,111,24)" fg:x="12020" fg:w="2"/><text x="99.0256%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="98.7674%" y="853" width="0.0329%" height="15" fill="rgb(250,223,3)" fg:x="12019" fg:w="4"/><text x="99.0174%" y="863.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (9 samples, 0.07%)</title><rect x="98.7674%" y="885" width="0.0740%" height="15" fill="rgb(236,178,37)" fg:x="12019" fg:w="9"/><text x="99.0174%" y="895.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (9 samples, 0.07%)</title><rect x="98.7674%" y="869" width="0.0740%" height="15" fill="rgb(241,158,50)" fg:x="12019" fg:w="9"/><text x="99.0174%" y="879.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (5 samples, 0.04%)</title><rect x="98.8002%" y="853" width="0.0411%" height="15" fill="rgb(213,121,41)" fg:x="12023" fg:w="5"/><text x="99.0502%" y="863.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (5 samples, 0.04%)</title><rect x="98.8002%" y="837" width="0.0411%" height="15" fill="rgb(240,92,3)" fg:x="12023" fg:w="5"/><text x="99.0502%" y="847.50"></text></g><g><title>syscall (5 samples, 0.04%)</title><rect x="98.8002%" y="821" width="0.0411%" height="15" fill="rgb(205,123,3)" fg:x="12023" fg:w="5"/><text x="99.0502%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="98.8084%" y="805" width="0.0329%" height="15" fill="rgb(205,97,47)" fg:x="12024" fg:w="4"/><text x="99.0584%" y="815.50"></text></g><g><title>do_syscall_64 (4 samples, 0.03%)</title><rect x="98.8084%" y="789" width="0.0329%" height="15" fill="rgb(247,152,14)" fg:x="12024" fg:w="4"/><text x="99.0584%" y="799.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.03%)</title><rect x="98.8084%" y="773" width="0.0329%" height="15" fill="rgb(248,195,53)" fg:x="12024" fg:w="4"/><text x="99.0584%" y="783.50"></text></g><g><title>do_futex (4 samples, 0.03%)</title><rect x="98.8084%" y="757" width="0.0329%" height="15" fill="rgb(226,201,16)" fg:x="12024" fg:w="4"/><text x="99.0584%" y="767.50"></text></g><g><title>futex_wake (4 samples, 0.03%)</title><rect x="98.8084%" y="741" width="0.0329%" height="15" fill="rgb(205,98,0)" fg:x="12024" fg:w="4"/><text x="99.0584%" y="751.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="98.8167%" y="725" width="0.0247%" height="15" fill="rgb(214,191,48)" fg:x="12025" fg:w="3"/><text x="99.0667%" y="735.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="98.8167%" y="709" width="0.0247%" height="15" fill="rgb(237,112,39)" fg:x="12025" fg:w="3"/><text x="99.0667%" y="719.50"></text></g><g><title>__lock_text_start (3 samples, 0.02%)</title><rect x="98.8167%" y="693" width="0.0247%" height="15" fill="rgb(247,203,27)" fg:x="12025" fg:w="3"/><text x="99.0667%" y="703.50"></text></g><g><title>hyper::body::body::Body::new_channel (3 samples, 0.02%)</title><rect x="98.8578%" y="885" width="0.0247%" height="15" fill="rgb(235,124,28)" fg:x="12030" fg:w="3"/><text x="99.1078%" y="895.50"></text></g><g><title>futures_channel::mpsc::channel (3 samples, 0.02%)</title><rect x="98.8578%" y="869" width="0.0247%" height="15" fill="rgb(208,207,46)" fg:x="12030" fg:w="3"/><text x="99.1078%" y="879.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="98.8660%" y="853" width="0.0164%" height="15" fill="rgb(234,176,4)" fg:x="12031" fg:w="2"/><text x="99.1160%" y="863.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (5 samples, 0.04%)</title><rect x="98.8824%" y="885" width="0.0411%" height="15" fill="rgb(230,133,28)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="895.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (5 samples, 0.04%)</title><rect x="98.8824%" y="869" width="0.0411%" height="15" fill="rgb(211,137,40)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="879.50"></text></g><g><title>tokio::runtime::park::wake (5 samples, 0.04%)</title><rect x="98.8824%" y="853" width="0.0411%" height="15" fill="rgb(254,35,13)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="863.50"></text></g><g><title>syscall (5 samples, 0.04%)</title><rect x="98.8824%" y="837" width="0.0411%" height="15" fill="rgb(225,49,51)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="98.8824%" y="821" width="0.0411%" height="15" fill="rgb(251,10,15)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="831.50"></text></g><g><title>do_syscall_64 (5 samples, 0.04%)</title><rect x="98.8824%" y="805" width="0.0411%" height="15" fill="rgb(228,207,15)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="815.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.04%)</title><rect x="98.8824%" y="789" width="0.0411%" height="15" fill="rgb(241,99,19)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="799.50"></text></g><g><title>do_futex (5 samples, 0.04%)</title><rect x="98.8824%" y="773" width="0.0411%" height="15" fill="rgb(207,104,49)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="783.50"></text></g><g><title>futex_wake (5 samples, 0.04%)</title><rect x="98.8824%" y="757" width="0.0411%" height="15" fill="rgb(234,99,18)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="767.50"></text></g><g><title>wake_up_q (5 samples, 0.04%)</title><rect x="98.8824%" y="741" width="0.0411%" height="15" fill="rgb(213,191,49)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="751.50"></text></g><g><title>try_to_wake_up (5 samples, 0.04%)</title><rect x="98.8824%" y="725" width="0.0411%" height="15" fill="rgb(210,226,19)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="735.50"></text></g><g><title>__lock_text_start (5 samples, 0.04%)</title><rect x="98.8824%" y="709" width="0.0411%" height="15" fill="rgb(229,97,18)" fg:x="12033" fg:w="5"/><text x="99.1324%" y="719.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (4 samples, 0.03%)</title><rect x="98.9235%" y="885" width="0.0329%" height="15" fill="rgb(211,167,15)" fg:x="12038" fg:w="4"/><text x="99.1735%" y="895.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.03%)</title><rect x="98.9235%" y="869" width="0.0329%" height="15" fill="rgb(210,169,34)" fg:x="12038" fg:w="4"/><text x="99.1735%" y="879.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (4 samples, 0.03%)</title><rect x="98.9235%" y="853" width="0.0329%" height="15" fill="rgb(241,121,31)" fg:x="12038" fg:w="4"/><text x="99.1735%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::State::try_keep_alive (3 samples, 0.02%)</title><rect x="98.9564%" y="869" width="0.0247%" height="15" fill="rgb(232,40,11)" fg:x="12042" fg:w="3"/><text x="99.2064%" y="879.50"></text></g><g><title>nf_conntrack_tcp_packet (3 samples, 0.02%)</title><rect x="99.0796%" y="357" width="0.0247%" height="15" fill="rgb(205,86,26)" fg:x="12057" fg:w="3"/><text x="99.3296%" y="367.50"></text></g><g><title>__ip_local_out (6 samples, 0.05%)</title><rect x="99.0632%" y="421" width="0.0493%" height="15" fill="rgb(231,126,28)" fg:x="12055" fg:w="6"/><text x="99.3132%" y="431.50"></text></g><g><title>nf_hook_slow (6 samples, 0.05%)</title><rect x="99.0632%" y="405" width="0.0493%" height="15" fill="rgb(219,221,18)" fg:x="12055" fg:w="6"/><text x="99.3132%" y="415.50"></text></g><g><title>ipv4_conntrack_local (5 samples, 0.04%)</title><rect x="99.0714%" y="389" width="0.0411%" height="15" fill="rgb(211,40,0)" fg:x="12056" fg:w="5"/><text x="99.3214%" y="399.50"></text></g><g><title>nf_conntrack_in (5 samples, 0.04%)</title><rect x="99.0714%" y="373" width="0.0411%" height="15" fill="rgb(239,85,43)" fg:x="12056" fg:w="5"/><text x="99.3214%" y="383.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="99.1454%" y="133" width="0.0164%" height="15" fill="rgb(231,55,21)" fg:x="12065" fg:w="2"/><text x="99.3954%" y="143.50"></text></g><g><title>__local_bh_enable_ip (10 samples, 0.08%)</title><rect x="99.1289%" y="357" width="0.0822%" height="15" fill="rgb(225,184,43)" fg:x="12063" fg:w="10"/><text x="99.3789%" y="367.50"></text></g><g><title>do_softirq.part.20 (10 samples, 0.08%)</title><rect x="99.1289%" y="341" width="0.0822%" height="15" fill="rgb(251,158,41)" fg:x="12063" fg:w="10"/><text x="99.3789%" y="351.50"></text></g><g><title>do_softirq_own_stack (10 samples, 0.08%)</title><rect x="99.1289%" y="325" width="0.0822%" height="15" fill="rgb(234,159,37)" fg:x="12063" fg:w="10"/><text x="99.3789%" y="335.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.08%)</title><rect x="99.1289%" y="309" width="0.0822%" height="15" fill="rgb(216,204,22)" fg:x="12063" fg:w="10"/><text x="99.3789%" y="319.50"></text></g><g><title>net_rx_action (9 samples, 0.07%)</title><rect x="99.1372%" y="293" width="0.0740%" height="15" fill="rgb(214,17,3)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="303.50"></text></g><g><title>process_backlog (9 samples, 0.07%)</title><rect x="99.1372%" y="277" width="0.0740%" height="15" fill="rgb(212,111,17)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="287.50"></text></g><g><title>__netif_receive_skb (9 samples, 0.07%)</title><rect x="99.1372%" y="261" width="0.0740%" height="15" fill="rgb(221,157,24)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (9 samples, 0.07%)</title><rect x="99.1372%" y="245" width="0.0740%" height="15" fill="rgb(252,16,13)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="255.50"></text></g><g><title>ip_rcv (9 samples, 0.07%)</title><rect x="99.1372%" y="229" width="0.0740%" height="15" fill="rgb(221,62,2)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="239.50"></text></g><g><title>ip_rcv_finish (9 samples, 0.07%)</title><rect x="99.1372%" y="213" width="0.0740%" height="15" fill="rgb(247,87,22)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="223.50"></text></g><g><title>ip_local_deliver (9 samples, 0.07%)</title><rect x="99.1372%" y="197" width="0.0740%" height="15" fill="rgb(215,73,9)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="207.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 0.07%)</title><rect x="99.1372%" y="181" width="0.0740%" height="15" fill="rgb(207,175,33)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 0.07%)</title><rect x="99.1372%" y="165" width="0.0740%" height="15" fill="rgb(243,129,54)" fg:x="12064" fg:w="9"/><text x="99.3872%" y="175.50"></text></g><g><title>tcp_v4_rcv (8 samples, 0.07%)</title><rect x="99.1454%" y="149" width="0.0657%" height="15" fill="rgb(227,119,45)" fg:x="12065" fg:w="8"/><text x="99.3954%" y="159.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.04%)</title><rect x="99.1700%" y="133" width="0.0411%" height="15" fill="rgb(205,109,36)" fg:x="12068" fg:w="5"/><text x="99.4200%" y="143.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.04%)</title><rect x="99.1700%" y="117" width="0.0411%" height="15" fill="rgb(205,6,39)" fg:x="12068" fg:w="5"/><text x="99.4200%" y="127.50"></text></g><g><title>tcp_data_ready (2 samples, 0.02%)</title><rect x="99.1947%" y="101" width="0.0164%" height="15" fill="rgb(221,32,16)" fg:x="12071" fg:w="2"/><text x="99.4447%" y="111.50"></text></g><g><title>sock_def_readable (2 samples, 0.02%)</title><rect x="99.1947%" y="85" width="0.0164%" height="15" fill="rgb(228,144,50)" fg:x="12071" fg:w="2"/><text x="99.4447%" y="95.50"></text></g><g><title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="99.1947%" y="69" width="0.0164%" height="15" fill="rgb(229,201,53)" fg:x="12071" fg:w="2"/><text x="99.4447%" y="79.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="99.1947%" y="53" width="0.0164%" height="15" fill="rgb(249,153,27)" fg:x="12071" fg:w="2"/><text x="99.4447%" y="63.50"></text></g><g><title>__lock_text_start (2 samples, 0.02%)</title><rect x="99.1947%" y="37" width="0.0164%" height="15" fill="rgb(227,106,25)" fg:x="12071" fg:w="2"/><text x="99.4447%" y="47.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (34 samples, 0.28%)</title><rect x="98.9564%" y="885" width="0.2794%" height="15" fill="rgb(230,65,29)" fg:x="12042" fg:w="34"/><text x="99.2064%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (31 samples, 0.25%)</title><rect x="98.9810%" y="869" width="0.2547%" height="15" fill="rgb(221,57,46)" fg:x="12045" fg:w="31"/><text x="99.2310%" y="879.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (28 samples, 0.23%)</title><rect x="99.0057%" y="853" width="0.2301%" height="15" fill="rgb(229,161,17)" fg:x="12048" fg:w="28"/><text x="99.2557%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (27 samples, 0.22%)</title><rect x="99.0139%" y="837" width="0.2219%" height="15" fill="rgb(222,213,11)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (27 samples, 0.22%)</title><rect x="99.0139%" y="821" width="0.2219%" height="15" fill="rgb(235,35,13)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (27 samples, 0.22%)</title><rect x="99.0139%" y="805" width="0.2219%" height="15" fill="rgb(233,158,34)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::write_vectored (27 samples, 0.22%)</title><rect x="99.0139%" y="789" width="0.2219%" height="15" fill="rgb(215,151,48)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::write_vectored (27 samples, 0.22%)</title><rect x="99.0139%" y="773" width="0.2219%" height="15" fill="rgb(229,84,14)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="783.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (27 samples, 0.22%)</title><rect x="99.0139%" y="757" width="0.2219%" height="15" fill="rgb(229,68,14)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="767.50"></text></g><g><title>writev (27 samples, 0.22%)</title><rect x="99.0139%" y="741" width="0.2219%" height="15" fill="rgb(243,106,26)" fg:x="12049" fg:w="27"/><text x="99.2639%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.21%)</title><rect x="99.0221%" y="725" width="0.2137%" height="15" fill="rgb(206,45,38)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="735.50"></text></g><g><title>do_syscall_64 (26 samples, 0.21%)</title><rect x="99.0221%" y="709" width="0.2137%" height="15" fill="rgb(226,6,15)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="719.50"></text></g><g><title>__x64_sys_writev (26 samples, 0.21%)</title><rect x="99.0221%" y="693" width="0.2137%" height="15" fill="rgb(232,22,54)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="703.50"></text></g><g><title>do_writev (26 samples, 0.21%)</title><rect x="99.0221%" y="677" width="0.2137%" height="15" fill="rgb(229,222,32)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="687.50"></text></g><g><title>vfs_writev (26 samples, 0.21%)</title><rect x="99.0221%" y="661" width="0.2137%" height="15" fill="rgb(228,62,29)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="671.50"></text></g><g><title>do_iter_write (26 samples, 0.21%)</title><rect x="99.0221%" y="645" width="0.2137%" height="15" fill="rgb(251,103,34)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="655.50"></text></g><g><title>do_iter_readv_writev (26 samples, 0.21%)</title><rect x="99.0221%" y="629" width="0.2137%" height="15" fill="rgb(233,12,30)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="639.50"></text></g><g><title>sock_write_iter (26 samples, 0.21%)</title><rect x="99.0221%" y="613" width="0.2137%" height="15" fill="rgb(238,52,0)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="623.50"></text></g><g><title>sock_sendmsg (26 samples, 0.21%)</title><rect x="99.0221%" y="597" width="0.2137%" height="15" fill="rgb(223,98,5)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="607.50"></text></g><g><title>inet_sendmsg (26 samples, 0.21%)</title><rect x="99.0221%" y="581" width="0.2137%" height="15" fill="rgb(228,75,37)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="591.50"></text></g><g><title>tcp_sendmsg (26 samples, 0.21%)</title><rect x="99.0221%" y="565" width="0.2137%" height="15" fill="rgb(205,115,49)" fg:x="12050" fg:w="26"/><text x="99.2721%" y="575.50"></text></g><g><title>tcp_sendmsg_locked (25 samples, 0.21%)</title><rect x="99.0303%" y="549" width="0.2054%" height="15" fill="rgb(250,154,43)" fg:x="12051" fg:w="25"/><text x="99.2803%" y="559.50"></text></g><g><title>tcp_push (23 samples, 0.19%)</title><rect x="99.0468%" y="533" width="0.1890%" height="15" fill="rgb(226,43,29)" fg:x="12053" fg:w="23"/><text x="99.2968%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (23 samples, 0.19%)</title><rect x="99.0468%" y="517" width="0.1890%" height="15" fill="rgb(249,228,39)" fg:x="12053" fg:w="23"/><text x="99.2968%" y="527.50"></text></g><g><title>tcp_write_xmit (23 samples, 0.19%)</title><rect x="99.0468%" y="501" width="0.1890%" height="15" fill="rgb(216,79,43)" fg:x="12053" fg:w="23"/><text x="99.2968%" y="511.50"></text></g><g><title>__tcp_transmit_skb (22 samples, 0.18%)</title><rect x="99.0550%" y="485" width="0.1808%" height="15" fill="rgb(228,95,12)" fg:x="12054" fg:w="22"/><text x="99.3050%" y="495.50"></text></g><g><title>ip_queue_xmit (21 samples, 0.17%)</title><rect x="99.0632%" y="469" width="0.1726%" height="15" fill="rgb(249,221,15)" fg:x="12055" fg:w="21"/><text x="99.3132%" y="479.50"></text></g><g><title>__ip_queue_xmit (21 samples, 0.17%)</title><rect x="99.0632%" y="453" width="0.1726%" height="15" fill="rgb(233,34,13)" fg:x="12055" fg:w="21"/><text x="99.3132%" y="463.50"></text></g><g><title>ip_local_out (21 samples, 0.17%)</title><rect x="99.0632%" y="437" width="0.1726%" height="15" fill="rgb(214,103,39)" fg:x="12055" fg:w="21"/><text x="99.3132%" y="447.50"></text></g><g><title>ip_output (15 samples, 0.12%)</title><rect x="99.1125%" y="421" width="0.1233%" height="15" fill="rgb(251,126,39)" fg:x="12061" fg:w="15"/><text x="99.3625%" y="431.50"></text></g><g><title>ip_finish_output (14 samples, 0.12%)</title><rect x="99.1207%" y="405" width="0.1150%" height="15" fill="rgb(214,216,36)" fg:x="12062" fg:w="14"/><text x="99.3707%" y="415.50"></text></g><g><title>__ip_finish_output (14 samples, 0.12%)</title><rect x="99.1207%" y="389" width="0.1150%" height="15" fill="rgb(220,221,8)" fg:x="12062" fg:w="14"/><text x="99.3707%" y="399.50"></text></g><g><title>ip_finish_output2 (14 samples, 0.12%)</title><rect x="99.1207%" y="373" width="0.1150%" height="15" fill="rgb(240,216,3)" fg:x="12062" fg:w="14"/><text x="99.3707%" y="383.50"></text></g><g><title>dev_queue_xmit (3 samples, 0.02%)</title><rect x="99.2111%" y="357" width="0.0247%" height="15" fill="rgb(232,218,17)" fg:x="12073" fg:w="3"/><text x="99.4611%" y="367.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="99.2111%" y="341" width="0.0247%" height="15" fill="rgb(229,163,45)" fg:x="12073" fg:w="3"/><text x="99.4611%" y="351.50"></text></g><g><title>__kfree_skb (2 samples, 0.02%)</title><rect x="99.2769%" y="597" width="0.0164%" height="15" fill="rgb(231,110,42)" fg:x="12081" fg:w="2"/><text x="99.5269%" y="607.50"></text></g><g><title>skb_release_all (2 samples, 0.02%)</title><rect x="99.2769%" y="581" width="0.0164%" height="15" fill="rgb(208,170,48)" fg:x="12081" fg:w="2"/><text x="99.5269%" y="591.50"></text></g><g><title>skb_release_data (2 samples, 0.02%)</title><rect x="99.2769%" y="565" width="0.0164%" height="15" fill="rgb(239,116,25)" fg:x="12081" fg:w="2"/><text x="99.5269%" y="575.50"></text></g><g><title>release_sock (5 samples, 0.04%)</title><rect x="99.2933%" y="597" width="0.0411%" height="15" fill="rgb(219,200,50)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="607.50"></text></g><g><title>__release_sock (5 samples, 0.04%)</title><rect x="99.2933%" y="581" width="0.0411%" height="15" fill="rgb(245,200,0)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (5 samples, 0.04%)</title><rect x="99.2933%" y="565" width="0.0411%" height="15" fill="rgb(245,119,33)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="575.50"></text></g><g><title>tcp_rcv_established (5 samples, 0.04%)</title><rect x="99.2933%" y="549" width="0.0411%" height="15" fill="rgb(231,125,12)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="559.50"></text></g><g><title>tcp_data_ready (5 samples, 0.04%)</title><rect x="99.2933%" y="533" width="0.0411%" height="15" fill="rgb(216,96,41)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="543.50"></text></g><g><title>sock_def_readable (5 samples, 0.04%)</title><rect x="99.2933%" y="517" width="0.0411%" height="15" fill="rgb(248,43,45)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="527.50"></text></g><g><title>__wake_up_sync_key (5 samples, 0.04%)</title><rect x="99.2933%" y="501" width="0.0411%" height="15" fill="rgb(217,222,7)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="511.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.04%)</title><rect x="99.2933%" y="485" width="0.0411%" height="15" fill="rgb(233,28,6)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="495.50"></text></g><g><title>__lock_text_start (5 samples, 0.04%)</title><rect x="99.2933%" y="469" width="0.0411%" height="15" fill="rgb(231,218,15)" fg:x="12083" fg:w="5"/><text x="99.5433%" y="479.50"></text></g><g><title>skb_copy_datagram_iter (28 samples, 0.23%)</title><rect x="99.3344%" y="597" width="0.2301%" height="15" fill="rgb(226,171,48)" fg:x="12088" fg:w="28"/><text x="99.5844%" y="607.50"></text></g><g><title>__skb_datagram_iter (28 samples, 0.23%)</title><rect x="99.3344%" y="581" width="0.2301%" height="15" fill="rgb(235,201,9)" fg:x="12088" fg:w="28"/><text x="99.5844%" y="591.50"></text></g><g><title>simple_copy_to_iter (25 samples, 0.21%)</title><rect x="99.3590%" y="565" width="0.2054%" height="15" fill="rgb(217,80,15)" fg:x="12091" fg:w="25"/><text x="99.6090%" y="575.50"></text></g><g><title>_copy_to_iter (25 samples, 0.21%)</title><rect x="99.3590%" y="549" width="0.2054%" height="15" fill="rgb(219,152,8)" fg:x="12091" fg:w="25"/><text x="99.6090%" y="559.50"></text></g><g><title>copy_user_enhanced_fast_string (25 samples, 0.21%)</title><rect x="99.3590%" y="533" width="0.2054%" height="15" fill="rgb(243,107,38)" fg:x="12091" fg:w="25"/><text x="99.6090%" y="543.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.04%)</title><rect x="99.5809%" y="437" width="0.0411%" height="15" fill="rgb(231,17,5)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="447.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.04%)</title><rect x="99.5809%" y="421" width="0.0411%" height="15" fill="rgb(209,25,54)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="431.50"></text></g><g><title>do_softirq.part.20 (5 samples, 0.04%)</title><rect x="99.5809%" y="405" width="0.0411%" height="15" fill="rgb(219,0,2)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="415.50"></text></g><g><title>do_softirq_own_stack (5 samples, 0.04%)</title><rect x="99.5809%" y="389" width="0.0411%" height="15" fill="rgb(246,9,5)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="399.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="99.5809%" y="373" width="0.0411%" height="15" fill="rgb(226,159,4)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="383.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="99.5809%" y="357" width="0.0411%" height="15" fill="rgb(219,175,34)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="367.50"></text></g><g><title>process_backlog (5 samples, 0.04%)</title><rect x="99.5809%" y="341" width="0.0411%" height="15" fill="rgb(236,10,46)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="351.50"></text></g><g><title>__netif_receive_skb (5 samples, 0.04%)</title><rect x="99.5809%" y="325" width="0.0411%" height="15" fill="rgb(240,211,16)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (5 samples, 0.04%)</title><rect x="99.5809%" y="309" width="0.0411%" height="15" fill="rgb(205,3,43)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="319.50"></text></g><g><title>ip_rcv (5 samples, 0.04%)</title><rect x="99.5809%" y="293" width="0.0411%" height="15" fill="rgb(245,7,22)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="303.50"></text></g><g><title>ip_rcv_finish (5 samples, 0.04%)</title><rect x="99.5809%" y="277" width="0.0411%" height="15" fill="rgb(239,132,32)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="287.50"></text></g><g><title>ip_local_deliver (5 samples, 0.04%)</title><rect x="99.5809%" y="261" width="0.0411%" height="15" fill="rgb(228,202,34)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="271.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.04%)</title><rect x="99.5809%" y="245" width="0.0411%" height="15" fill="rgb(254,200,22)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="255.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.04%)</title><rect x="99.5809%" y="229" width="0.0411%" height="15" fill="rgb(219,10,39)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="239.50"></text></g><g><title>tcp_v4_rcv (5 samples, 0.04%)</title><rect x="99.5809%" y="213" width="0.0411%" height="15" fill="rgb(226,210,39)" fg:x="12118" fg:w="5"/><text x="99.8309%" y="223.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="99.5891%" y="197" width="0.0329%" height="15" fill="rgb(208,219,16)" fg:x="12119" fg:w="4"/><text x="99.8391%" y="207.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="99.5891%" y="181" width="0.0329%" height="15" fill="rgb(216,158,51)" fg:x="12119" fg:w="4"/><text x="99.8391%" y="191.50"></text></g><g><title>tcp_ack (4 samples, 0.03%)</title><rect x="99.5891%" y="165" width="0.0329%" height="15" fill="rgb(233,14,44)" fg:x="12119" fg:w="4"/><text x="99.8391%" y="175.50"></text></g><g><title>tcp_clean_rtx_queue (3 samples, 0.02%)</title><rect x="99.5973%" y="149" width="0.0247%" height="15" fill="rgb(237,97,39)" fg:x="12120" fg:w="3"/><text x="99.8473%" y="159.50"></text></g><g><title>rb_erase (2 samples, 0.02%)</title><rect x="99.6056%" y="133" width="0.0164%" height="15" fill="rgb(218,198,43)" fg:x="12121" fg:w="2"/><text x="99.8556%" y="143.50"></text></g><g><title>tcp_cleanup_rbuf (8 samples, 0.07%)</title><rect x="99.5645%" y="597" width="0.0657%" height="15" fill="rgb(231,104,20)" fg:x="12116" fg:w="8"/><text x="99.8145%" y="607.50"></text></g><g><title>tcp_send_ack (7 samples, 0.06%)</title><rect x="99.5727%" y="581" width="0.0575%" height="15" fill="rgb(254,36,13)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="591.50"></text></g><g><title>__tcp_send_ack.part.45 (7 samples, 0.06%)</title><rect x="99.5727%" y="565" width="0.0575%" height="15" fill="rgb(248,14,50)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="575.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 0.06%)</title><rect x="99.5727%" y="549" width="0.0575%" height="15" fill="rgb(217,107,29)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="559.50"></text></g><g><title>ip_queue_xmit (7 samples, 0.06%)</title><rect x="99.5727%" y="533" width="0.0575%" height="15" fill="rgb(251,169,33)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="543.50"></text></g><g><title>__ip_queue_xmit (7 samples, 0.06%)</title><rect x="99.5727%" y="517" width="0.0575%" height="15" fill="rgb(217,108,32)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="527.50"></text></g><g><title>ip_local_out (7 samples, 0.06%)</title><rect x="99.5727%" y="501" width="0.0575%" height="15" fill="rgb(219,66,42)" fg:x="12117" fg:w="7"/><text x="99.8227%" y="511.50"></text></g><g><title>ip_output (6 samples, 0.05%)</title><rect x="99.5809%" y="485" width="0.0493%" height="15" fill="rgb(206,180,7)" fg:x="12118" fg:w="6"/><text x="99.8309%" y="495.50"></text></g><g><title>ip_finish_output (6 samples, 0.05%)</title><rect x="99.5809%" y="469" width="0.0493%" height="15" fill="rgb(208,226,31)" fg:x="12118" fg:w="6"/><text x="99.8309%" y="479.50"></text></g><g><title>__ip_finish_output (6 samples, 0.05%)</title><rect x="99.5809%" y="453" width="0.0493%" height="15" fill="rgb(218,26,49)" fg:x="12118" fg:w="6"/><text x="99.8309%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (44 samples, 0.36%)</title><rect x="99.2769%" y="805" width="0.3616%" height="15" fill="rgb(233,197,48)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (44 samples, 0.36%)</title><rect x="99.2769%" y="789" width="0.3616%" height="15" fill="rgb(252,181,51)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (44 samples, 0.36%)</title><rect x="99.2769%" y="773" width="0.3616%" height="15" fill="rgb(253,90,19)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (44 samples, 0.36%)</title><rect x="99.2769%" y="757" width="0.3616%" height="15" fill="rgb(215,171,30)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (44 samples, 0.36%)</title><rect x="99.2769%" y="741" width="0.3616%" height="15" fill="rgb(214,222,9)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="751.50"></text></g><g><title>__libc_recv (44 samples, 0.36%)</title><rect x="99.2769%" y="725" width="0.3616%" height="15" fill="rgb(223,3,22)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.36%)</title><rect x="99.2769%" y="709" width="0.3616%" height="15" fill="rgb(225,196,46)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="719.50"></text></g><g><title>do_syscall_64 (44 samples, 0.36%)</title><rect x="99.2769%" y="693" width="0.3616%" height="15" fill="rgb(209,110,37)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="703.50"></text></g><g><title>__x64_sys_recvfrom (44 samples, 0.36%)</title><rect x="99.2769%" y="677" width="0.3616%" height="15" fill="rgb(249,89,12)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="687.50"></text></g><g><title>__sys_recvfrom (44 samples, 0.36%)</title><rect x="99.2769%" y="661" width="0.3616%" height="15" fill="rgb(226,27,33)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="671.50"></text></g><g><title>sock_recvmsg (44 samples, 0.36%)</title><rect x="99.2769%" y="645" width="0.3616%" height="15" fill="rgb(213,82,22)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="655.50"></text></g><g><title>inet_recvmsg (44 samples, 0.36%)</title><rect x="99.2769%" y="629" width="0.3616%" height="15" fill="rgb(248,140,0)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="639.50"></text></g><g><title>tcp_recvmsg (44 samples, 0.36%)</title><rect x="99.2769%" y="613" width="0.3616%" height="15" fill="rgb(228,106,3)" fg:x="12081" fg:w="44"/><text x="99.5269%" y="623.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (48 samples, 0.39%)</title><rect x="99.2522%" y="853" width="0.3944%" height="15" fill="rgb(209,23,37)" fg:x="12078" fg:w="48"/><text x="99.5022%" y="863.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (47 samples, 0.39%)</title><rect x="99.2604%" y="837" width="0.3862%" height="15" fill="rgb(241,93,50)" fg:x="12079" fg:w="47"/><text x="99.5104%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (46 samples, 0.38%)</title><rect x="99.2686%" y="821" width="0.3780%" height="15" fill="rgb(253,46,43)" fg:x="12080" fg:w="46"/><text x="99.5186%" y="831.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (49 samples, 0.40%)</title><rect x="99.2522%" y="869" width="0.4027%" height="15" fill="rgb(226,206,43)" fg:x="12078" fg:w="49"/><text x="99.5022%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (52 samples, 0.43%)</title><rect x="99.2358%" y="885" width="0.4273%" height="15" fill="rgb(217,54,7)" fg:x="12076" fg:w="52"/><text x="99.4858%" y="895.50"></text></g><g><title>release_sock (4 samples, 0.03%)</title><rect x="99.7042%" y="613" width="0.0329%" height="15" fill="rgb(223,5,52)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="623.50"></text></g><g><title>__release_sock (4 samples, 0.03%)</title><rect x="99.7042%" y="597" width="0.0329%" height="15" fill="rgb(206,52,46)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (4 samples, 0.03%)</title><rect x="99.7042%" y="581" width="0.0329%" height="15" fill="rgb(253,136,11)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="591.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.03%)</title><rect x="99.7042%" y="565" width="0.0329%" height="15" fill="rgb(208,106,33)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="575.50"></text></g><g><title>__tcp_ack_snd_check (4 samples, 0.03%)</title><rect x="99.7042%" y="549" width="0.0329%" height="15" fill="rgb(206,54,4)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="559.50"></text></g><g><title>tcp_send_ack (4 samples, 0.03%)</title><rect x="99.7042%" y="533" width="0.0329%" height="15" fill="rgb(213,3,15)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="543.50"></text></g><g><title>__tcp_send_ack.part.45 (4 samples, 0.03%)</title><rect x="99.7042%" y="517" width="0.0329%" height="15" fill="rgb(252,211,39)" fg:x="12133" fg:w="4"/><text x="99.9542%" y="527.50"></text></g><g><title>__tcp_transmit_skb (3 samples, 0.02%)</title><rect x="99.7124%" y="501" width="0.0247%" height="15" fill="rgb(223,6,36)" fg:x="12134" fg:w="3"/><text x="99.9624%" y="511.50"></text></g><g><title>ip_queue_xmit (3 samples, 0.02%)</title><rect x="99.7124%" y="485" width="0.0247%" height="15" fill="rgb(252,169,45)" fg:x="12134" fg:w="3"/><text x="99.9624%" y="495.50"></text></g><g><title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="99.7124%" y="469" width="0.0247%" height="15" fill="rgb(212,48,26)" fg:x="12134" fg:w="3"/><text x="99.9624%" y="479.50"></text></g><g><title>ip_local_out (3 samples, 0.02%)</title><rect x="99.7124%" y="453" width="0.0247%" height="15" fill="rgb(251,102,48)" fg:x="12134" fg:w="3"/><text x="99.9624%" y="463.50"></text></g><g><title>ip_output (2 samples, 0.02%)</title><rect x="99.7206%" y="437" width="0.0164%" height="15" fill="rgb(243,208,16)" fg:x="12135" fg:w="2"/><text x="99.9706%" y="447.50"></text></g><g><title>ip_finish_output (2 samples, 0.02%)</title><rect x="99.7206%" y="421" width="0.0164%" height="15" fill="rgb(219,96,24)" fg:x="12135" fg:w="2"/><text x="99.9706%" y="431.50"></text></g><g><title>__ip_finish_output (2 samples, 0.02%)</title><rect x="99.7206%" y="405" width="0.0164%" height="15" fill="rgb(219,33,29)" fg:x="12135" fg:w="2"/><text x="99.9706%" y="415.50"></text></g><g><title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="99.7206%" y="389" width="0.0164%" height="15" fill="rgb(223,176,5)" fg:x="12135" fg:w="2"/><text x="99.9706%" y="399.50"></text></g><g><title>skb_copy_datagram_iter (3 samples, 0.02%)</title><rect x="99.7370%" y="613" width="0.0247%" height="15" fill="rgb(228,140,14)" fg:x="12137" fg:w="3"/><text x="99.9870%" y="623.50"></text></g><g><title>__skb_datagram_iter (3 samples, 0.02%)</title><rect x="99.7370%" y="597" width="0.0247%" height="15" fill="rgb(217,179,31)" fg:x="12137" fg:w="3"/><text x="99.9870%" y="607.50"></text></g><g><title>simple_copy_to_iter (3 samples, 0.02%)</title><rect x="99.7370%" y="581" width="0.0247%" height="15" fill="rgb(230,9,30)" fg:x="12137" fg:w="3"/><text x="99.9870%" y="591.50"></text></g><g><title>_copy_to_iter (3 samples, 0.02%)</title><rect x="99.7370%" y="565" width="0.0247%" height="15" fill="rgb(230,136,20)" fg:x="12137" fg:w="3"/><text x="99.9870%" y="575.50"></text></g><g><title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="99.7370%" y="549" width="0.0247%" height="15" fill="rgb(215,210,22)" fg:x="12137" fg:w="3"/><text x="99.9870%" y="559.50"></text></g><g><title>__alloc_skb (3 samples, 0.02%)</title><rect x="99.7617%" y="565" width="0.0247%" height="15" fill="rgb(218,43,5)" fg:x="12140" fg:w="3"/><text x="100.0117%" y="575.50"></text></g><g><title>ip_rcv_finish (2 samples, 0.02%)</title><rect x="99.7863%" y="293" width="0.0164%" height="15" fill="rgb(216,11,5)" fg:x="12143" fg:w="2"/><text x="100.0363%" y="303.50"></text></g><g><title>ip_local_deliver (2 samples, 0.02%)</title><rect x="99.7863%" y="277" width="0.0164%" height="15" fill="rgb(209,82,29)" fg:x="12143" fg:w="2"/><text x="100.0363%" y="287.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="99.7863%" y="261" width="0.0164%" height="15" fill="rgb(244,115,12)" fg:x="12143" fg:w="2"/><text x="100.0363%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="99.7863%" y="245" width="0.0164%" height="15" fill="rgb(222,82,18)" fg:x="12143" fg:w="2"/><text x="100.0363%" y="255.50"></text></g><g><title>__ip_finish_output (3 samples, 0.02%)</title><rect x="99.7863%" y="469" width="0.0247%" height="15" fill="rgb(249,227,8)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="479.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="99.7863%" y="453" width="0.0247%" height="15" fill="rgb(253,141,45)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="463.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.02%)</title><rect x="99.7863%" y="437" width="0.0247%" height="15" fill="rgb(234,184,4)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="447.50"></text></g><g><title>do_softirq.part.20 (3 samples, 0.02%)</title><rect x="99.7863%" y="421" width="0.0247%" height="15" fill="rgb(218,194,23)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="431.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="99.7863%" y="405" width="0.0247%" height="15" fill="rgb(235,66,41)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="415.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="99.7863%" y="389" width="0.0247%" height="15" fill="rgb(245,217,1)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="399.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="99.7863%" y="373" width="0.0247%" height="15" fill="rgb(229,91,1)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="383.50"></text></g><g><title>process_backlog (3 samples, 0.02%)</title><rect x="99.7863%" y="357" width="0.0247%" height="15" fill="rgb(207,101,30)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="367.50"></text></g><g><title>__netif_receive_skb (3 samples, 0.02%)</title><rect x="99.7863%" y="341" width="0.0247%" height="15" fill="rgb(223,82,49)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.02%)</title><rect x="99.7863%" y="325" width="0.0247%" height="15" fill="rgb(218,167,17)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="335.50"></text></g><g><title>ip_rcv (3 samples, 0.02%)</title><rect x="99.7863%" y="309" width="0.0247%" height="15" fill="rgb(208,103,14)" fg:x="12143" fg:w="3"/><text x="100.0363%" y="319.50"></text></g><g><title>sock_recvmsg (16 samples, 0.13%)</title><rect x="99.6877%" y="661" width="0.1315%" height="15" fill="rgb(238,20,8)" fg:x="12131" fg:w="16"/><text x="99.9377%" y="671.50"></text></g><g><title>inet_recvmsg (16 samples, 0.13%)</title><rect x="99.6877%" y="645" width="0.1315%" height="15" fill="rgb(218,80,54)" fg:x="12131" fg:w="16"/><text x="99.9377%" y="655.50"></text></g><g><title>tcp_recvmsg (15 samples, 0.12%)</title><rect x="99.6959%" y="629" width="0.1233%" height="15" fill="rgb(240,144,17)" fg:x="12132" fg:w="15"/><text x="99.9459%" y="639.50"></text></g><g><title>tcp_cleanup_rbuf (7 samples, 0.06%)</title><rect x="99.7617%" y="613" width="0.0575%" height="15" fill="rgb(245,27,50)" fg:x="12140" fg:w="7"/><text x="100.0117%" y="623.50"></text></g><g><title>tcp_send_ack (7 samples, 0.06%)</title><rect x="99.7617%" y="597" width="0.0575%" height="15" fill="rgb(251,51,7)" fg:x="12140" fg:w="7"/><text x="100.0117%" y="607.50"></text></g><g><title>__tcp_send_ack.part.45 (7 samples, 0.06%)</title><rect x="99.7617%" y="581" width="0.0575%" height="15" fill="rgb(245,217,29)" fg:x="12140" fg:w="7"/><text x="100.0117%" y="591.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.03%)</title><rect x="99.7863%" y="565" width="0.0329%" height="15" fill="rgb(221,176,29)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="575.50"></text></g><g><title>ip_queue_xmit (4 samples, 0.03%)</title><rect x="99.7863%" y="549" width="0.0329%" height="15" fill="rgb(212,180,24)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="559.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.03%)</title><rect x="99.7863%" y="533" width="0.0329%" height="15" fill="rgb(254,24,2)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="543.50"></text></g><g><title>ip_local_out (4 samples, 0.03%)</title><rect x="99.7863%" y="517" width="0.0329%" height="15" fill="rgb(230,100,2)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="527.50"></text></g><g><title>ip_output (4 samples, 0.03%)</title><rect x="99.7863%" y="501" width="0.0329%" height="15" fill="rgb(219,142,25)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="511.50"></text></g><g><title>ip_finish_output (4 samples, 0.03%)</title><rect x="99.7863%" y="485" width="0.0329%" height="15" fill="rgb(240,73,43)" fg:x="12143" fg:w="4"/><text x="100.0363%" y="495.50"></text></g><g><title>__sys_recvfrom (17 samples, 0.14%)</title><rect x="99.6877%" y="677" width="0.1397%" height="15" fill="rgb(214,114,15)" fg:x="12131" fg:w="17"/><text x="99.9377%" y="687.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (20 samples, 0.16%)</title><rect x="99.6713%" y="853" width="0.1644%" height="15" fill="rgb(207,130,4)" fg:x="12129" fg:w="20"/><text x="99.9213%" y="863.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (19 samples, 0.16%)</title><rect x="99.6795%" y="837" width="0.1561%" height="15" fill="rgb(221,25,40)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="847.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (19 samples, 0.16%)</title><rect x="99.6795%" y="821" width="0.1561%" height="15" fill="rgb(241,184,7)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (19 samples, 0.16%)</title><rect x="99.6795%" y="805" width="0.1561%" height="15" fill="rgb(235,159,4)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (19 samples, 0.16%)</title><rect x="99.6795%" y="789" width="0.1561%" height="15" fill="rgb(214,87,48)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::read (19 samples, 0.16%)</title><rect x="99.6795%" y="773" width="0.1561%" height="15" fill="rgb(246,198,24)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (19 samples, 0.16%)</title><rect x="99.6795%" y="757" width="0.1561%" height="15" fill="rgb(209,66,40)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="767.50"></text></g><g><title>__libc_recv (19 samples, 0.16%)</title><rect x="99.6795%" y="741" width="0.1561%" height="15" fill="rgb(233,147,39)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.16%)</title><rect x="99.6795%" y="725" width="0.1561%" height="15" fill="rgb(231,145,52)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="735.50"></text></g><g><title>do_syscall_64 (19 samples, 0.16%)</title><rect x="99.6795%" y="709" width="0.1561%" height="15" fill="rgb(206,20,26)" fg:x="12130" fg:w="19"/><text x="99.9295%" y="719.50"></text></g><g><title>__x64_sys_recvfrom (18 samples, 0.15%)</title><rect x="99.6877%" y="693" width="0.1479%" height="15" fill="rgb(238,220,4)" fg:x="12131" fg:w="18"/><text x="99.9377%" y="703.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (23 samples, 0.19%)</title><rect x="99.6631%" y="885" width="0.1890%" height="15" fill="rgb(252,195,42)" fg:x="12128" fg:w="23"/><text x="99.9131%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (22 samples, 0.18%)</title><rect x="99.6713%" y="869" width="0.1808%" height="15" fill="rgb(209,10,6)" fg:x="12129" fg:w="22"/><text x="99.9213%" y="879.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (2 samples, 0.02%)</title><rect x="99.8356%" y="853" width="0.0164%" height="15" fill="rgb(229,3,52)" fg:x="12149" fg:w="2"/><text x="100.0856%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (2 samples, 0.02%)</title><rect x="99.8521%" y="885" width="0.0164%" height="15" fill="rgb(253,49,37)" fg:x="12151" fg:w="2"/><text x="100.1021%" y="895.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (2 samples, 0.02%)</title><rect x="99.8521%" y="869" width="0.0164%" height="15" fill="rgb(240,103,49)" fg:x="12151" fg:w="2"/><text x="100.1021%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.02%)</title><rect x="99.8521%" y="853" width="0.0164%" height="15" fill="rgb(250,182,30)" fg:x="12151" fg:w="2"/><text x="100.1021%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (144 samples, 1.18%)</title><rect x="98.7181%" y="933" width="1.1833%" height="15" fill="rgb(248,8,30)" fg:x="12013" fg:w="144"/><text x="98.9681%" y="943.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (143 samples, 1.18%)</title><rect x="98.7263%" y="917" width="1.1751%" height="15" fill="rgb(237,120,30)" fg:x="12014" fg:w="143"/><text x="98.9763%" y="927.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (142 samples, 1.17%)</title><rect x="98.7345%" y="901" width="1.1669%" height="15" fill="rgb(221,146,34)" fg:x="12015" fg:w="142"/><text x="98.9845%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (4 samples, 0.03%)</title><rect x="99.8685%" y="885" width="0.0329%" height="15" fill="rgb(242,55,13)" fg:x="12153" fg:w="4"/><text x="100.1185%" y="895.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (4 samples, 0.03%)</title><rect x="99.8685%" y="869" width="0.0329%" height="15" fill="rgb(242,112,31)" fg:x="12153" fg:w="4"/><text x="100.1185%" y="879.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (4 samples, 0.03%)</title><rect x="99.8685%" y="853" width="0.0329%" height="15" fill="rgb(249,192,27)" fg:x="12153" fg:w="4"/><text x="100.1185%" y="863.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (3 samples, 0.02%)</title><rect x="99.8767%" y="837" width="0.0247%" height="15" fill="rgb(208,204,44)" fg:x="12154" fg:w="3"/><text x="100.1267%" y="847.50"></text></g><g><title>hyper::headers::content_length_parse_all (2 samples, 0.02%)</title><rect x="99.8850%" y="821" width="0.0164%" height="15" fill="rgb(208,93,54)" fg:x="12155" fg:w="2"/><text x="100.1350%" y="831.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (2 samples, 0.02%)</title><rect x="99.8850%" y="805" width="0.0164%" height="15" fill="rgb(242,1,31)" fg:x="12155" fg:w="2"/><text x="100.1350%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (4 samples, 0.03%)</title><rect x="99.9014%" y="933" width="0.0329%" height="15" fill="rgb(241,83,25)" fg:x="12157" fg:w="4"/><text x="100.1514%" y="943.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="99.9096%" y="917" width="0.0247%" height="15" fill="rgb(205,169,50)" fg:x="12158" fg:w="3"/><text x="100.1596%" y="927.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (149 samples, 1.22%)</title><rect x="98.7181%" y="949" width="1.2244%" height="15" fill="rgb(239,186,37)" fg:x="12013" fg:w="149"/><text x="98.9681%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (153 samples, 1.26%)</title><rect x="98.7016%" y="981" width="1.2573%" height="15" fill="rgb(205,221,10)" fg:x="12011" fg:w="153"/><text x="98.9516%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (153 samples, 1.26%)</title><rect x="98.7016%" y="965" width="1.2573%" height="15" fill="rgb(218,196,15)" fg:x="12011" fg:w="153"/><text x="98.9516%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (183 samples, 1.50%)</title><rect x="98.4715%" y="1013" width="1.5038%" height="15" fill="rgb(218,196,35)" fg:x="11983" fg:w="183"/><text x="98.7215%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (155 samples, 1.27%)</title><rect x="98.7016%" y="997" width="1.2737%" height="15" fill="rgb(233,63,24)" fg:x="12011" fg:w="155"/><text x="98.9516%" y="1007.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2 samples, 0.02%)</title><rect x="99.9589%" y="981" width="0.0164%" height="15" fill="rgb(225,8,4)" fg:x="12164" fg:w="2"/><text x="100.2089%" y="991.50"></text></g><g><title>all (12,169 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(234,105,35)" fg:x="0" fg:w="12169"/><text x="0.2500%" y="1263.50"></text></g><g><title>tokio-runtime-w (310 samples, 2.55%)</title><rect x="97.4525%" y="1237" width="2.5475%" height="15" fill="rgb(236,21,32)" fg:x="11859" fg:w="310"/><text x="97.7025%" y="1247.50">to..</text></g><g><title>clone (303 samples, 2.49%)</title><rect x="97.5101%" y="1221" width="2.4899%" height="15" fill="rgb(228,109,6)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1231.50">cl..</text></g><g><title>start_thread (303 samples, 2.49%)</title><rect x="97.5101%" y="1205" width="2.4899%" height="15" fill="rgb(229,215,31)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1215.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (303 samples, 2.49%)</title><rect x="97.5101%" y="1189" width="2.4899%" height="15" fill="rgb(221,52,54)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1199.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (303 samples, 2.49%)</title><rect x="97.5101%" y="1173" width="2.4899%" height="15" fill="rgb(252,129,43)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1183.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (303 samples, 2.49%)</title><rect x="97.5101%" y="1157" width="2.4899%" height="15" fill="rgb(248,183,27)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1167.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (303 samples, 2.49%)</title><rect x="97.5101%" y="1141" width="2.4899%" height="15" fill="rgb(250,0,22)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1151.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (303 samples, 2.49%)</title><rect x="97.5101%" y="1125" width="2.4899%" height="15" fill="rgb(213,166,10)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1135.50">st..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (303 samples, 2.49%)</title><rect x="97.5101%" y="1109" width="2.4899%" height="15" fill="rgb(207,163,36)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1119.50">to..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (303 samples, 2.49%)</title><rect x="97.5101%" y="1093" width="2.4899%" height="15" fill="rgb(208,122,22)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1103.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (303 samples, 2.49%)</title><rect x="97.5101%" y="1077" width="2.4899%" height="15" fill="rgb(207,104,49)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1087.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (303 samples, 2.49%)</title><rect x="97.5101%" y="1061" width="2.4899%" height="15" fill="rgb(248,211,50)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1071.50">to..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (303 samples, 2.49%)</title><rect x="97.5101%" y="1045" width="2.4899%" height="15" fill="rgb(217,13,45)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1055.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (303 samples, 2.49%)</title><rect x="97.5101%" y="1029" width="2.4899%" height="15" fill="rgb(211,216,49)" fg:x="11866" fg:w="303"/><text x="97.7601%" y="1039.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (3 samples, 0.02%)</title><rect x="99.9753%" y="1013" width="0.0247%" height="15" fill="rgb(221,58,53)" fg:x="12166" fg:w="3"/><text x="100.2253%" y="1023.50"></text></g></svg></svg>