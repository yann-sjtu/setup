<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1317.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="53236"><g><title>redb::tree_store::btree_base::LeafBuilder::build (10 samples, 0.02%)</title><rect x="0.0019%" y="1077" width="0.0188%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="10"/><text x="0.2519%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (10 samples, 0.02%)</title><rect x="0.0019%" y="1061" width="0.0188%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="10"/><text x="0.2519%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (10 samples, 0.02%)</title><rect x="0.0019%" y="1045" width="0.0188%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="10"/><text x="0.2519%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (15 samples, 0.03%)</title><rect x="0.0207%" y="1045" width="0.0282%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="15"/><text x="0.2707%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (18 samples, 0.03%)</title><rect x="0.0207%" y="1077" width="0.0338%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="18"/><text x="0.2707%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (18 samples, 0.03%)</title><rect x="0.0207%" y="1061" width="0.0338%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="18"/><text x="0.2707%" y="1071.50"></text></g><g><title>ord::index::Index::update (31 samples, 0.06%)</title><rect x="0.0019%" y="1205" width="0.0582%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1215.50"></text></g><g><title>ord::index::updater::Updater::index_block (31 samples, 0.06%)</title><rect x="0.0019%" y="1189" width="0.0582%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1199.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (31 samples, 0.06%)</title><rect x="0.0019%" y="1173" width="0.0582%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1183.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (31 samples, 0.06%)</title><rect x="0.0019%" y="1157" width="0.0582%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (31 samples, 0.06%)</title><rect x="0.0019%" y="1141" width="0.0582%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (31 samples, 0.06%)</title><rect x="0.0019%" y="1125" width="0.0582%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (31 samples, 0.06%)</title><rect x="0.0019%" y="1109" width="0.0582%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (31 samples, 0.06%)</title><rect x="0.0019%" y="1093" width="0.0582%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="31"/><text x="0.2519%" y="1103.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.0620%" y="1125" width="0.0113%" height="15" fill="rgb(217,207,13)" fg:x="33" fg:w="6"/><text x="0.3120%" y="1135.50"></text></g><g><title>__vfs_write (28 samples, 0.05%)</title><rect x="0.0845%" y="901" width="0.0526%" height="15" fill="rgb(231,73,38)" fg:x="45" fg:w="28"/><text x="0.3345%" y="911.50"></text></g><g><title>eventfd_write (28 samples, 0.05%)</title><rect x="0.0845%" y="885" width="0.0526%" height="15" fill="rgb(225,20,46)" fg:x="45" fg:w="28"/><text x="0.3345%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (33 samples, 0.06%)</title><rect x="0.0770%" y="1093" width="0.0620%" height="15" fill="rgb(210,31,41)" fg:x="41" fg:w="33"/><text x="0.3270%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (32 samples, 0.06%)</title><rect x="0.0789%" y="1077" width="0.0601%" height="15" fill="rgb(221,200,47)" fg:x="42" fg:w="32"/><text x="0.3289%" y="1087.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (32 samples, 0.06%)</title><rect x="0.0789%" y="1061" width="0.0601%" height="15" fill="rgb(226,26,5)" fg:x="42" fg:w="32"/><text x="0.3289%" y="1071.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (31 samples, 0.06%)</title><rect x="0.0808%" y="1045" width="0.0582%" height="15" fill="rgb(249,33,26)" fg:x="43" fg:w="31"/><text x="0.3308%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::write (30 samples, 0.06%)</title><rect x="0.0827%" y="1029" width="0.0564%" height="15" fill="rgb(235,183,28)" fg:x="44" fg:w="30"/><text x="0.3327%" y="1039.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (30 samples, 0.06%)</title><rect x="0.0827%" y="1013" width="0.0564%" height="15" fill="rgb(221,5,38)" fg:x="44" fg:w="30"/><text x="0.3327%" y="1023.50"></text></g><g><title>__libc_write (30 samples, 0.06%)</title><rect x="0.0827%" y="997" width="0.0564%" height="15" fill="rgb(247,18,42)" fg:x="44" fg:w="30"/><text x="0.3327%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.05%)</title><rect x="0.0845%" y="981" width="0.0545%" height="15" fill="rgb(241,131,45)" fg:x="45" fg:w="29"/><text x="0.3345%" y="991.50"></text></g><g><title>do_syscall_64 (29 samples, 0.05%)</title><rect x="0.0845%" y="965" width="0.0545%" height="15" fill="rgb(249,31,29)" fg:x="45" fg:w="29"/><text x="0.3345%" y="975.50"></text></g><g><title>__x64_sys_write (29 samples, 0.05%)</title><rect x="0.0845%" y="949" width="0.0545%" height="15" fill="rgb(225,111,53)" fg:x="45" fg:w="29"/><text x="0.3345%" y="959.50"></text></g><g><title>ksys_write (29 samples, 0.05%)</title><rect x="0.0845%" y="933" width="0.0545%" height="15" fill="rgb(238,160,17)" fg:x="45" fg:w="29"/><text x="0.3345%" y="943.50"></text></g><g><title>vfs_write (29 samples, 0.05%)</title><rect x="0.0845%" y="917" width="0.0545%" height="15" fill="rgb(214,148,48)" fg:x="45" fg:w="29"/><text x="0.3345%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (74 samples, 0.14%)</title><rect x="0.0019%" y="1237" width="0.1390%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="74"/><text x="0.2519%" y="1247.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (74 samples, 0.14%)</title><rect x="0.0019%" y="1221" width="0.1390%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="74"/><text x="0.2519%" y="1231.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (43 samples, 0.08%)</title><rect x="0.0601%" y="1205" width="0.0808%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="43"/><text x="0.3101%" y="1215.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (43 samples, 0.08%)</title><rect x="0.0601%" y="1189" width="0.0808%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="43"/><text x="0.3101%" y="1199.50"></text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (43 samples, 0.08%)</title><rect x="0.0601%" y="1173" width="0.0808%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="43"/><text x="0.3101%" y="1183.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (43 samples, 0.08%)</title><rect x="0.0601%" y="1157" width="0.0808%" height="15" fill="rgb(241,83,37)" fg:x="32" fg:w="43"/><text x="0.3101%" y="1167.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (43 samples, 0.08%)</title><rect x="0.0601%" y="1141" width="0.0808%" height="15" fill="rgb(233,36,39)" fg:x="32" fg:w="43"/><text x="0.3101%" y="1151.50"></text></g><g><title>tokio::runtime::context::current::with_current (34 samples, 0.06%)</title><rect x="0.0770%" y="1125" width="0.0639%" height="15" fill="rgb(226,3,54)" fg:x="41" fg:w="34"/><text x="0.3270%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (34 samples, 0.06%)</title><rect x="0.0770%" y="1109" width="0.0639%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="34"/><text x="0.3270%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="0.1484%" y="1061" width="0.0150%" height="15" fill="rgb(238,167,29)" fg:x="79" fg:w="8"/><text x="0.3984%" y="1071.50"></text></g><g><title>__libc_calloc (8 samples, 0.02%)</title><rect x="0.1484%" y="1045" width="0.0150%" height="15" fill="rgb(232,182,51)" fg:x="79" fg:w="8"/><text x="0.3984%" y="1055.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="0.1484%" y="1029" width="0.0150%" height="15" fill="rgb(231,60,39)" fg:x="79" fg:w="8"/><text x="0.3984%" y="1039.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.01%)</title><rect x="0.1522%" y="1013" width="0.0113%" height="15" fill="rgb(208,69,12)" fg:x="81" fg:w="6"/><text x="0.4022%" y="1023.50"></text></g><g><title>ord::index::Index::update (18 samples, 0.03%)</title><rect x="0.1409%" y="1237" width="0.0338%" height="15" fill="rgb(235,93,37)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1247.50"></text></g><g><title>ord::index::updater::Updater::index_block (18 samples, 0.03%)</title><rect x="0.1409%" y="1221" width="0.0338%" height="15" fill="rgb(213,116,39)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1231.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (18 samples, 0.03%)</title><rect x="0.1409%" y="1205" width="0.0338%" height="15" fill="rgb(222,207,29)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1215.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (18 samples, 0.03%)</title><rect x="0.1409%" y="1189" width="0.0338%" height="15" fill="rgb(206,96,30)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1199.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (18 samples, 0.03%)</title><rect x="0.1409%" y="1173" width="0.0338%" height="15" fill="rgb(218,138,4)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1183.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (18 samples, 0.03%)</title><rect x="0.1409%" y="1157" width="0.0338%" height="15" fill="rgb(250,191,14)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (18 samples, 0.03%)</title><rect x="0.1409%" y="1141" width="0.0338%" height="15" fill="rgb(239,60,40)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (18 samples, 0.03%)</title><rect x="0.1409%" y="1125" width="0.0338%" height="15" fill="rgb(206,27,48)" fg:x="75" fg:w="18"/><text x="0.3909%" y="1135.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (14 samples, 0.03%)</title><rect x="0.1484%" y="1109" width="0.0263%" height="15" fill="rgb(225,35,8)" fg:x="79" fg:w="14"/><text x="0.3984%" y="1119.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (14 samples, 0.03%)</title><rect x="0.1484%" y="1093" width="0.0263%" height="15" fill="rgb(250,213,24)" fg:x="79" fg:w="14"/><text x="0.3984%" y="1103.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (14 samples, 0.03%)</title><rect x="0.1484%" y="1077" width="0.0263%" height="15" fill="rgb(247,123,22)" fg:x="79" fg:w="14"/><text x="0.3984%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.02%)</title><rect x="0.1747%" y="965" width="0.0150%" height="15" fill="rgb(231,138,38)" fg:x="93" fg:w="8"/><text x="0.4247%" y="975.50"></text></g><g><title>cfree (8 samples, 0.02%)</title><rect x="0.1747%" y="949" width="0.0150%" height="15" fill="rgb(231,145,46)" fg:x="93" fg:w="8"/><text x="0.4247%" y="959.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::invalidate_cache_all (9 samples, 0.02%)</title><rect x="0.1747%" y="981" width="0.0169%" height="15" fill="rgb(251,118,11)" fg:x="93" fg:w="9"/><text x="0.4247%" y="991.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="0.2836%" y="965" width="0.0225%" height="15" fill="rgb(217,147,25)" fg:x="151" fg:w="12"/><text x="0.5336%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="0.3156%" y="965" width="0.0131%" height="15" fill="rgb(247,81,37)" fg:x="168" fg:w="7"/><text x="0.5656%" y="975.50"></text></g><g><title>__libc_calloc (7 samples, 0.01%)</title><rect x="0.3156%" y="949" width="0.0131%" height="15" fill="rgb(209,12,38)" fg:x="168" fg:w="7"/><text x="0.5656%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.01%)</title><rect x="0.3287%" y="965" width="0.0131%" height="15" fill="rgb(227,1,9)" fg:x="175" fg:w="7"/><text x="0.5787%" y="975.50"></text></g><g><title>cfree (6 samples, 0.01%)</title><rect x="0.3306%" y="949" width="0.0113%" height="15" fill="rgb(248,47,43)" fg:x="176" fg:w="6"/><text x="0.5806%" y="959.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (88 samples, 0.17%)</title><rect x="0.1916%" y="981" width="0.1653%" height="15" fill="rgb(221,10,30)" fg:x="102" fg:w="88"/><text x="0.4416%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (102 samples, 0.19%)</title><rect x="0.1747%" y="1013" width="0.1916%" height="15" fill="rgb(210,229,1)" fg:x="93" fg:w="102"/><text x="0.4247%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (102 samples, 0.19%)</title><rect x="0.1747%" y="997" width="0.1916%" height="15" fill="rgb(222,148,37)" fg:x="93" fg:w="102"/><text x="0.4247%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="0.3663%" y="981" width="0.0131%" height="15" fill="rgb(234,67,33)" fg:x="195" fg:w="7"/><text x="0.6163%" y="991.50"></text></g><g><title>redb::tree_store::page_store::bitmap::BtreeBitmap::find_first_unset (7 samples, 0.01%)</title><rect x="0.3945%" y="949" width="0.0131%" height="15" fill="rgb(247,98,35)" fg:x="210" fg:w="7"/><text x="0.6445%" y="959.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (24 samples, 0.05%)</title><rect x="0.3663%" y="1013" width="0.0451%" height="15" fill="rgb(247,138,52)" fg:x="195" fg:w="24"/><text x="0.6163%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (24 samples, 0.05%)</title><rect x="0.3663%" y="997" width="0.0451%" height="15" fill="rgb(213,79,30)" fg:x="195" fg:w="24"/><text x="0.6163%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (17 samples, 0.03%)</title><rect x="0.3794%" y="981" width="0.0319%" height="15" fill="rgb(246,177,23)" fg:x="202" fg:w="17"/><text x="0.6294%" y="991.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (9 samples, 0.02%)</title><rect x="0.3945%" y="965" width="0.0169%" height="15" fill="rgb(230,62,27)" fg:x="210" fg:w="9"/><text x="0.6445%" y="975.50"></text></g><g><title>ord::index::Index::update (137 samples, 0.26%)</title><rect x="0.1747%" y="1141" width="0.2573%" height="15" fill="rgb(216,154,8)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1151.50"></text></g><g><title>ord::index::updater::Updater::index_block (137 samples, 0.26%)</title><rect x="0.1747%" y="1125" width="0.2573%" height="15" fill="rgb(244,35,45)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1135.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (137 samples, 0.26%)</title><rect x="0.1747%" y="1109" width="0.2573%" height="15" fill="rgb(251,115,12)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1119.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (137 samples, 0.26%)</title><rect x="0.1747%" y="1093" width="0.2573%" height="15" fill="rgb(240,54,50)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (137 samples, 0.26%)</title><rect x="0.1747%" y="1077" width="0.2573%" height="15" fill="rgb(233,84,52)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (137 samples, 0.26%)</title><rect x="0.1747%" y="1061" width="0.2573%" height="15" fill="rgb(207,117,47)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (137 samples, 0.26%)</title><rect x="0.1747%" y="1045" width="0.2573%" height="15" fill="rgb(249,43,39)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1055.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (137 samples, 0.26%)</title><rect x="0.1747%" y="1029" width="0.2573%" height="15" fill="rgb(209,38,44)" fg:x="93" fg:w="137"/><text x="0.4247%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (11 samples, 0.02%)</title><rect x="0.4114%" y="1013" width="0.0207%" height="15" fill="rgb(236,212,23)" fg:x="219" fg:w="11"/><text x="0.6614%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (11 samples, 0.02%)</title><rect x="0.4114%" y="997" width="0.0207%" height="15" fill="rgb(242,79,21)" fg:x="219" fg:w="11"/><text x="0.6614%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::pop_lowest_priority (7 samples, 0.01%)</title><rect x="0.4189%" y="981" width="0.0131%" height="15" fill="rgb(211,96,35)" fg:x="223" fg:w="7"/><text x="0.6689%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (7 samples, 0.01%)</title><rect x="0.4189%" y="965" width="0.0131%" height="15" fill="rgb(253,215,40)" fg:x="223" fg:w="7"/><text x="0.6689%" y="975.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (7 samples, 0.01%)</title><rect x="0.4189%" y="949" width="0.0131%" height="15" fill="rgb(211,81,21)" fg:x="223" fg:w="7"/><text x="0.6689%" y="959.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (7 samples, 0.01%)</title><rect x="0.4189%" y="933" width="0.0131%" height="15" fill="rgb(208,190,38)" fg:x="223" fg:w="7"/><text x="0.6689%" y="943.50"></text></g><g><title>start_thread (142 samples, 0.27%)</title><rect x="0.1747%" y="1237" width="0.2667%" height="15" fill="rgb(235,213,38)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (142 samples, 0.27%)</title><rect x="0.1747%" y="1221" width="0.2667%" height="15" fill="rgb(237,122,38)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (142 samples, 0.27%)</title><rect x="0.1747%" y="1205" width="0.2667%" height="15" fill="rgb(244,218,35)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (142 samples, 0.27%)</title><rect x="0.1747%" y="1189" width="0.2667%" height="15" fill="rgb(240,68,47)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (142 samples, 0.27%)</title><rect x="0.1747%" y="1173" width="0.2667%" height="15" fill="rgb(210,16,53)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1183.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (142 samples, 0.27%)</title><rect x="0.1747%" y="1157" width="0.2667%" height="15" fill="rgb(235,124,12)" fg:x="93" fg:w="142"/><text x="0.4247%" y="1167.50"></text></g><g><title>ext4_block_write_begin (6 samples, 0.01%)</title><rect x="0.4715%" y="725" width="0.0113%" height="15" fill="rgb(224,169,11)" fg:x="251" fg:w="6"/><text x="0.7215%" y="735.50"></text></g><g><title>grab_cache_page_write_begin (15 samples, 0.03%)</title><rect x="0.4828%" y="725" width="0.0282%" height="15" fill="rgb(250,166,2)" fg:x="257" fg:w="15"/><text x="0.7328%" y="735.50"></text></g><g><title>pagecache_get_page (15 samples, 0.03%)</title><rect x="0.4828%" y="709" width="0.0282%" height="15" fill="rgb(242,216,29)" fg:x="257" fg:w="15"/><text x="0.7328%" y="719.50"></text></g><g><title>find_get_entry (7 samples, 0.01%)</title><rect x="0.4978%" y="693" width="0.0131%" height="15" fill="rgb(230,116,27)" fg:x="265" fg:w="7"/><text x="0.7478%" y="703.50"></text></g><g><title>ext4_da_write_begin (29 samples, 0.05%)</title><rect x="0.4640%" y="741" width="0.0545%" height="15" fill="rgb(228,99,48)" fg:x="247" fg:w="29"/><text x="0.7140%" y="751.50"></text></g><g><title>__ext4_journal_stop (6 samples, 0.01%)</title><rect x="0.5203%" y="725" width="0.0113%" height="15" fill="rgb(253,11,6)" fg:x="277" fg:w="6"/><text x="0.7703%" y="735.50"></text></g><g><title>jbd2_journal_stop (6 samples, 0.01%)</title><rect x="0.5203%" y="709" width="0.0113%" height="15" fill="rgb(247,143,39)" fg:x="277" fg:w="6"/><text x="0.7703%" y="719.50"></text></g><g><title>ext4_da_write_end (21 samples, 0.04%)</title><rect x="0.5184%" y="741" width="0.0394%" height="15" fill="rgb(236,97,10)" fg:x="276" fg:w="21"/><text x="0.7684%" y="751.50"></text></g><g><title>generic_write_end (12 samples, 0.02%)</title><rect x="0.5354%" y="725" width="0.0225%" height="15" fill="rgb(233,208,19)" fg:x="285" fg:w="12"/><text x="0.7854%" y="735.50"></text></g><g><title>block_write_end (12 samples, 0.02%)</title><rect x="0.5354%" y="709" width="0.0225%" height="15" fill="rgb(216,164,2)" fg:x="285" fg:w="12"/><text x="0.7854%" y="719.50"></text></g><g><title>__block_commit_write.isra.41 (12 samples, 0.02%)</title><rect x="0.5354%" y="693" width="0.0225%" height="15" fill="rgb(220,129,5)" fg:x="285" fg:w="12"/><text x="0.7854%" y="703.50"></text></g><g><title>mark_buffer_dirty (10 samples, 0.02%)</title><rect x="0.5391%" y="677" width="0.0188%" height="15" fill="rgb(242,17,10)" fg:x="287" fg:w="10"/><text x="0.7891%" y="687.50"></text></g><g><title>iov_iter_copy_from_user_atomic (15 samples, 0.03%)</title><rect x="0.5598%" y="741" width="0.0282%" height="15" fill="rgb(242,107,0)" fg:x="298" fg:w="15"/><text x="0.8098%" y="751.50"></text></g><g><title>copy_user_enhanced_fast_string (15 samples, 0.03%)</title><rect x="0.5598%" y="725" width="0.0282%" height="15" fill="rgb(251,28,31)" fg:x="298" fg:w="15"/><text x="0.8098%" y="735.50"></text></g><g><title>__generic_file_write_iter (76 samples, 0.14%)</title><rect x="0.4621%" y="773" width="0.1428%" height="15" fill="rgb(233,223,10)" fg:x="246" fg:w="76"/><text x="0.7121%" y="783.50"></text></g><g><title>generic_perform_write (75 samples, 0.14%)</title><rect x="0.4640%" y="757" width="0.1409%" height="15" fill="rgb(215,21,27)" fg:x="247" fg:w="75"/><text x="0.7140%" y="767.50"></text></g><g><title>iov_iter_fault_in_readable (9 samples, 0.02%)</title><rect x="0.5879%" y="741" width="0.0169%" height="15" fill="rgb(232,23,21)" fg:x="313" fg:w="9"/><text x="0.8379%" y="751.50"></text></g><g><title>__vfs_write (77 samples, 0.14%)</title><rect x="0.4621%" y="821" width="0.1446%" height="15" fill="rgb(244,5,23)" fg:x="246" fg:w="77"/><text x="0.7121%" y="831.50"></text></g><g><title>new_sync_write (77 samples, 0.14%)</title><rect x="0.4621%" y="805" width="0.1446%" height="15" fill="rgb(226,81,46)" fg:x="246" fg:w="77"/><text x="0.7121%" y="815.50"></text></g><g><title>ext4_file_write_iter (77 samples, 0.14%)</title><rect x="0.4621%" y="789" width="0.1446%" height="15" fill="rgb(247,70,30)" fg:x="246" fg:w="77"/><text x="0.7121%" y="799.50"></text></g><g><title>__x64_sys_pwrite64 (79 samples, 0.15%)</title><rect x="0.4602%" y="869" width="0.1484%" height="15" fill="rgb(212,68,19)" fg:x="245" fg:w="79"/><text x="0.7102%" y="879.50"></text></g><g><title>ksys_pwrite64 (79 samples, 0.15%)</title><rect x="0.4602%" y="853" width="0.1484%" height="15" fill="rgb(240,187,13)" fg:x="245" fg:w="79"/><text x="0.7102%" y="863.50"></text></g><g><title>vfs_write (78 samples, 0.15%)</title><rect x="0.4621%" y="837" width="0.1465%" height="15" fill="rgb(223,113,26)" fg:x="246" fg:w="78"/><text x="0.7121%" y="847.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (90 samples, 0.17%)</title><rect x="0.4414%" y="1029" width="0.1691%" height="15" fill="rgb(206,192,2)" fg:x="235" fg:w="90"/><text x="0.6914%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (90 samples, 0.17%)</title><rect x="0.4414%" y="1013" width="0.1691%" height="15" fill="rgb(241,108,4)" fg:x="235" fg:w="90"/><text x="0.6914%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (90 samples, 0.17%)</title><rect x="0.4414%" y="997" width="0.1691%" height="15" fill="rgb(247,173,49)" fg:x="235" fg:w="90"/><text x="0.6914%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (86 samples, 0.16%)</title><rect x="0.4489%" y="981" width="0.1615%" height="15" fill="rgb(224,114,35)" fg:x="239" fg:w="86"/><text x="0.6989%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (86 samples, 0.16%)</title><rect x="0.4489%" y="965" width="0.1615%" height="15" fill="rgb(245,159,27)" fg:x="239" fg:w="86"/><text x="0.6989%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write_at (86 samples, 0.16%)</title><rect x="0.4489%" y="949" width="0.1615%" height="15" fill="rgb(245,172,44)" fg:x="239" fg:w="86"/><text x="0.6989%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (86 samples, 0.16%)</title><rect x="0.4489%" y="933" width="0.1615%" height="15" fill="rgb(236,23,11)" fg:x="239" fg:w="86"/><text x="0.6989%" y="943.50"></text></g><g><title>__libc_pwrite64 (86 samples, 0.16%)</title><rect x="0.4489%" y="917" width="0.1615%" height="15" fill="rgb(205,117,38)" fg:x="239" fg:w="86"/><text x="0.6989%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (81 samples, 0.15%)</title><rect x="0.4583%" y="901" width="0.1522%" height="15" fill="rgb(237,72,25)" fg:x="244" fg:w="81"/><text x="0.7083%" y="911.50"></text></g><g><title>do_syscall_64 (81 samples, 0.15%)</title><rect x="0.4583%" y="885" width="0.1522%" height="15" fill="rgb(244,70,9)" fg:x="244" fg:w="81"/><text x="0.7083%" y="895.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (41 samples, 0.08%)</title><rect x="0.6105%" y="997" width="0.0770%" height="15" fill="rgb(217,125,39)" fg:x="325" fg:w="41"/><text x="0.8605%" y="1007.50"></text></g><g><title>ord::index::Index::update (138 samples, 0.26%)</title><rect x="0.4414%" y="1157" width="0.2592%" height="15" fill="rgb(235,36,10)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1167.50"></text></g><g><title>ord::index::updater::Updater::index_block (138 samples, 0.26%)</title><rect x="0.4414%" y="1141" width="0.2592%" height="15" fill="rgb(251,123,47)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1151.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (138 samples, 0.26%)</title><rect x="0.4414%" y="1125" width="0.2592%" height="15" fill="rgb(221,13,13)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1135.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (138 samples, 0.26%)</title><rect x="0.4414%" y="1109" width="0.2592%" height="15" fill="rgb(238,131,9)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1119.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (138 samples, 0.26%)</title><rect x="0.4414%" y="1093" width="0.2592%" height="15" fill="rgb(211,50,8)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1103.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (138 samples, 0.26%)</title><rect x="0.4414%" y="1077" width="0.2592%" height="15" fill="rgb(245,182,24)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1087.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (138 samples, 0.26%)</title><rect x="0.4414%" y="1061" width="0.2592%" height="15" fill="rgb(242,14,37)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1071.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (138 samples, 0.26%)</title><rect x="0.4414%" y="1045" width="0.2592%" height="15" fill="rgb(246,228,12)" fg:x="235" fg:w="138"/><text x="0.6914%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (48 samples, 0.09%)</title><rect x="0.6105%" y="1029" width="0.0902%" height="15" fill="rgb(213,55,15)" fg:x="325" fg:w="48"/><text x="0.8605%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (48 samples, 0.09%)</title><rect x="0.6105%" y="1013" width="0.0902%" height="15" fill="rgb(209,9,3)" fg:x="325" fg:w="48"/><text x="0.8605%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (7 samples, 0.01%)</title><rect x="0.6875%" y="997" width="0.0131%" height="15" fill="rgb(230,59,30)" fg:x="366" fg:w="7"/><text x="0.9375%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (7 samples, 0.01%)</title><rect x="0.6875%" y="981" width="0.0131%" height="15" fill="rgb(209,121,21)" fg:x="366" fg:w="7"/><text x="0.9375%" y="991.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (143 samples, 0.27%)</title><rect x="0.4414%" y="1237" width="0.2686%" height="15" fill="rgb(220,109,13)" fg:x="235" fg:w="143"/><text x="0.6914%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (143 samples, 0.27%)</title><rect x="0.4414%" y="1221" width="0.2686%" height="15" fill="rgb(232,18,1)" fg:x="235" fg:w="143"/><text x="0.6914%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (143 samples, 0.27%)</title><rect x="0.4414%" y="1205" width="0.2686%" height="15" fill="rgb(215,41,42)" fg:x="235" fg:w="143"/><text x="0.6914%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (143 samples, 0.27%)</title><rect x="0.4414%" y="1189" width="0.2686%" height="15" fill="rgb(224,123,36)" fg:x="235" fg:w="143"/><text x="0.6914%" y="1199.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (143 samples, 0.27%)</title><rect x="0.4414%" y="1173" width="0.2686%" height="15" fill="rgb(240,125,3)" fg:x="235" fg:w="143"/><text x="0.6914%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="0.7100%" y="1045" width="0.0188%" height="15" fill="rgb(205,98,50)" fg:x="378" fg:w="10"/><text x="0.9600%" y="1055.50"></text></g><g><title>__libc_calloc (10 samples, 0.02%)</title><rect x="0.7100%" y="1029" width="0.0188%" height="15" fill="rgb(205,185,37)" fg:x="378" fg:w="10"/><text x="0.9600%" y="1039.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="0.7100%" y="1013" width="0.0188%" height="15" fill="rgb(238,207,15)" fg:x="378" fg:w="10"/><text x="0.9600%" y="1023.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="0.7100%" y="997" width="0.0188%" height="15" fill="rgb(213,199,42)" fg:x="378" fg:w="10"/><text x="0.9600%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (15 samples, 0.03%)</title><rect x="0.7100%" y="1061" width="0.0282%" height="15" fill="rgb(235,201,11)" fg:x="378" fg:w="15"/><text x="0.9600%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (16 samples, 0.03%)</title><rect x="0.7100%" y="1093" width="0.0301%" height="15" fill="rgb(207,46,11)" fg:x="378" fg:w="16"/><text x="0.9600%" y="1103.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (16 samples, 0.03%)</title><rect x="0.7100%" y="1077" width="0.0301%" height="15" fill="rgb(241,35,35)" fg:x="378" fg:w="16"/><text x="0.9600%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="0.7401%" y="1045" width="0.0113%" height="15" fill="rgb(243,32,47)" fg:x="394" fg:w="6"/><text x="0.9901%" y="1055.50"></text></g><g><title>cfree (6 samples, 0.01%)</title><rect x="0.7401%" y="1029" width="0.0113%" height="15" fill="rgb(247,202,23)" fg:x="394" fg:w="6"/><text x="0.9901%" y="1039.50"></text></g><g><title>__ext4_journal_start_sb (8 samples, 0.02%)</title><rect x="0.7946%" y="789" width="0.0150%" height="15" fill="rgb(219,102,11)" fg:x="423" fg:w="8"/><text x="1.0446%" y="799.50"></text></g><g><title>jbd2__journal_start (8 samples, 0.02%)</title><rect x="0.7946%" y="773" width="0.0150%" height="15" fill="rgb(243,110,44)" fg:x="423" fg:w="8"/><text x="1.0446%" y="783.50"></text></g><g><title>start_this_handle (7 samples, 0.01%)</title><rect x="0.7965%" y="757" width="0.0131%" height="15" fill="rgb(222,74,54)" fg:x="424" fg:w="7"/><text x="1.0465%" y="767.50"></text></g><g><title>create_empty_buffers (7 samples, 0.01%)</title><rect x="0.8209%" y="773" width="0.0131%" height="15" fill="rgb(216,99,12)" fg:x="437" fg:w="7"/><text x="1.0709%" y="783.50"></text></g><g><title>alloc_page_buffers (6 samples, 0.01%)</title><rect x="0.8228%" y="757" width="0.0113%" height="15" fill="rgb(226,22,26)" fg:x="438" fg:w="6"/><text x="1.0728%" y="767.50"></text></g><g><title>alloc_buffer_head (6 samples, 0.01%)</title><rect x="0.8228%" y="741" width="0.0113%" height="15" fill="rgb(217,163,10)" fg:x="438" fg:w="6"/><text x="1.0728%" y="751.50"></text></g><g><title>kmem_cache_alloc (6 samples, 0.01%)</title><rect x="0.8228%" y="725" width="0.0113%" height="15" fill="rgb(213,25,53)" fg:x="438" fg:w="6"/><text x="1.0728%" y="735.50"></text></g><g><title>ext4_da_get_block_prep (6 samples, 0.01%)</title><rect x="0.8340%" y="773" width="0.0113%" height="15" fill="rgb(252,105,26)" fg:x="444" fg:w="6"/><text x="1.0840%" y="783.50"></text></g><g><title>ext4_block_write_begin (20 samples, 0.04%)</title><rect x="0.8096%" y="789" width="0.0376%" height="15" fill="rgb(220,39,43)" fg:x="431" fg:w="20"/><text x="1.0596%" y="799.50"></text></g><g><title>__page_cache_alloc (16 samples, 0.03%)</title><rect x="0.8547%" y="757" width="0.0301%" height="15" fill="rgb(229,68,48)" fg:x="455" fg:w="16"/><text x="1.1047%" y="767.50"></text></g><g><title>alloc_pages_current (16 samples, 0.03%)</title><rect x="0.8547%" y="741" width="0.0301%" height="15" fill="rgb(252,8,32)" fg:x="455" fg:w="16"/><text x="1.1047%" y="751.50"></text></g><g><title>__alloc_pages_nodemask (15 samples, 0.03%)</title><rect x="0.8566%" y="725" width="0.0282%" height="15" fill="rgb(223,20,43)" fg:x="456" fg:w="15"/><text x="1.1066%" y="735.50"></text></g><g><title>get_page_from_freelist (13 samples, 0.02%)</title><rect x="0.8603%" y="709" width="0.0244%" height="15" fill="rgb(229,81,49)" fg:x="458" fg:w="13"/><text x="1.1103%" y="719.50"></text></g><g><title>__add_to_page_cache_locked (15 samples, 0.03%)</title><rect x="0.8866%" y="741" width="0.0282%" height="15" fill="rgb(236,28,36)" fg:x="472" fg:w="15"/><text x="1.1366%" y="751.50"></text></g><g><title>mem_cgroup_try_charge (6 samples, 0.01%)</title><rect x="0.9035%" y="725" width="0.0113%" height="15" fill="rgb(249,185,26)" fg:x="481" fg:w="6"/><text x="1.1535%" y="735.50"></text></g><g><title>add_to_page_cache_lru (22 samples, 0.04%)</title><rect x="0.8847%" y="757" width="0.0413%" height="15" fill="rgb(249,174,33)" fg:x="471" fg:w="22"/><text x="1.1347%" y="767.50"></text></g><g><title>lru_cache_add (6 samples, 0.01%)</title><rect x="0.9148%" y="741" width="0.0113%" height="15" fill="rgb(233,201,37)" fg:x="487" fg:w="6"/><text x="1.1648%" y="751.50"></text></g><g><title>__lru_cache_add (6 samples, 0.01%)</title><rect x="0.9148%" y="725" width="0.0113%" height="15" fill="rgb(221,78,26)" fg:x="487" fg:w="6"/><text x="1.1648%" y="735.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.01%)</title><rect x="0.9148%" y="709" width="0.0113%" height="15" fill="rgb(250,127,30)" fg:x="487" fg:w="6"/><text x="1.1648%" y="719.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="0.9148%" y="693" width="0.0113%" height="15" fill="rgb(230,49,44)" fg:x="487" fg:w="6"/><text x="1.1648%" y="703.50"></text></g><g><title>ext4_da_write_begin (86 samples, 0.16%)</title><rect x="0.7908%" y="805" width="0.1615%" height="15" fill="rgb(229,67,23)" fg:x="421" fg:w="86"/><text x="1.0408%" y="815.50"></text></g><g><title>grab_cache_page_write_begin (55 samples, 0.10%)</title><rect x="0.8490%" y="789" width="0.1033%" height="15" fill="rgb(249,83,47)" fg:x="452" fg:w="55"/><text x="1.0990%" y="799.50"></text></g><g><title>pagecache_get_page (55 samples, 0.10%)</title><rect x="0.8490%" y="773" width="0.1033%" height="15" fill="rgb(215,43,3)" fg:x="452" fg:w="55"/><text x="1.0990%" y="783.50"></text></g><g><title>find_get_entry (14 samples, 0.03%)</title><rect x="0.9261%" y="757" width="0.0263%" height="15" fill="rgb(238,154,13)" fg:x="493" fg:w="14"/><text x="1.1761%" y="767.50"></text></g><g><title>xas_load (6 samples, 0.01%)</title><rect x="0.9411%" y="741" width="0.0113%" height="15" fill="rgb(219,56,2)" fg:x="501" fg:w="6"/><text x="1.1911%" y="751.50"></text></g><g><title>generic_write_end (10 samples, 0.02%)</title><rect x="0.9655%" y="789" width="0.0188%" height="15" fill="rgb(233,0,4)" fg:x="514" fg:w="10"/><text x="1.2155%" y="799.50"></text></g><g><title>block_write_end (10 samples, 0.02%)</title><rect x="0.9655%" y="773" width="0.0188%" height="15" fill="rgb(235,30,7)" fg:x="514" fg:w="10"/><text x="1.2155%" y="783.50"></text></g><g><title>__block_commit_write.isra.41 (10 samples, 0.02%)</title><rect x="0.9655%" y="757" width="0.0188%" height="15" fill="rgb(250,79,13)" fg:x="514" fg:w="10"/><text x="1.2155%" y="767.50"></text></g><g><title>mark_buffer_dirty (9 samples, 0.02%)</title><rect x="0.9674%" y="741" width="0.0169%" height="15" fill="rgb(211,146,34)" fg:x="515" fg:w="9"/><text x="1.2174%" y="751.50"></text></g><g><title>ext4_da_write_end (19 samples, 0.04%)</title><rect x="0.9524%" y="805" width="0.0357%" height="15" fill="rgb(228,22,38)" fg:x="507" fg:w="19"/><text x="1.2024%" y="815.50"></text></g><g><title>iov_iter_copy_from_user_atomic (18 samples, 0.03%)</title><rect x="0.9881%" y="805" width="0.0338%" height="15" fill="rgb(235,168,5)" fg:x="526" fg:w="18"/><text x="1.2381%" y="815.50"></text></g><g><title>copy_user_enhanced_fast_string (16 samples, 0.03%)</title><rect x="0.9918%" y="789" width="0.0301%" height="15" fill="rgb(221,155,16)" fg:x="528" fg:w="16"/><text x="1.2418%" y="799.50"></text></g><g><title>generic_perform_write (143 samples, 0.27%)</title><rect x="0.7871%" y="821" width="0.2686%" height="15" fill="rgb(215,215,53)" fg:x="419" fg:w="143"/><text x="1.0371%" y="831.50"></text></g><g><title>iov_iter_fault_in_readable (18 samples, 0.03%)</title><rect x="1.0219%" y="805" width="0.0338%" height="15" fill="rgb(223,4,10)" fg:x="544" fg:w="18"/><text x="1.2719%" y="815.50"></text></g><g><title>__generic_file_write_iter (147 samples, 0.28%)</title><rect x="0.7833%" y="837" width="0.2761%" height="15" fill="rgb(234,103,6)" fg:x="417" fg:w="147"/><text x="1.0333%" y="847.50"></text></g><g><title>__vfs_write (152 samples, 0.29%)</title><rect x="0.7777%" y="885" width="0.2855%" height="15" fill="rgb(227,97,0)" fg:x="414" fg:w="152"/><text x="1.0277%" y="895.50"></text></g><g><title>new_sync_write (151 samples, 0.28%)</title><rect x="0.7795%" y="869" width="0.2836%" height="15" fill="rgb(234,150,53)" fg:x="415" fg:w="151"/><text x="1.0295%" y="879.50"></text></g><g><title>ext4_file_write_iter (149 samples, 0.28%)</title><rect x="0.7833%" y="853" width="0.2799%" height="15" fill="rgb(228,201,54)" fg:x="417" fg:w="149"/><text x="1.0333%" y="863.50"></text></g><g><title>ord::index::Index::update (189 samples, 0.36%)</title><rect x="0.7100%" y="1221" width="0.3550%" height="15" fill="rgb(222,22,37)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1231.50"></text></g><g><title>ord::index::updater::Updater::index_block (189 samples, 0.36%)</title><rect x="0.7100%" y="1205" width="0.3550%" height="15" fill="rgb(237,53,32)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1215.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (189 samples, 0.36%)</title><rect x="0.7100%" y="1189" width="0.3550%" height="15" fill="rgb(233,25,53)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1199.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (189 samples, 0.36%)</title><rect x="0.7100%" y="1173" width="0.3550%" height="15" fill="rgb(210,40,34)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1183.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (189 samples, 0.36%)</title><rect x="0.7100%" y="1157" width="0.3550%" height="15" fill="rgb(241,220,44)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1167.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (189 samples, 0.36%)</title><rect x="0.7100%" y="1141" width="0.3550%" height="15" fill="rgb(235,28,35)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1151.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (189 samples, 0.36%)</title><rect x="0.7100%" y="1125" width="0.3550%" height="15" fill="rgb(210,56,17)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (189 samples, 0.36%)</title><rect x="0.7100%" y="1109" width="0.3550%" height="15" fill="rgb(224,130,29)" fg:x="378" fg:w="189"/><text x="0.9600%" y="1119.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (173 samples, 0.32%)</title><rect x="0.7401%" y="1093" width="0.3250%" height="15" fill="rgb(235,212,8)" fg:x="394" fg:w="173"/><text x="0.9901%" y="1103.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (173 samples, 0.32%)</title><rect x="0.7401%" y="1077" width="0.3250%" height="15" fill="rgb(223,33,50)" fg:x="394" fg:w="173"/><text x="0.9901%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (173 samples, 0.32%)</title><rect x="0.7401%" y="1061" width="0.3250%" height="15" fill="rgb(219,149,13)" fg:x="394" fg:w="173"/><text x="0.9901%" y="1071.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (163 samples, 0.31%)</title><rect x="0.7589%" y="1045" width="0.3062%" height="15" fill="rgb(250,156,29)" fg:x="404" fg:w="163"/><text x="1.0089%" y="1055.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (163 samples, 0.31%)</title><rect x="0.7589%" y="1029" width="0.3062%" height="15" fill="rgb(216,193,19)" fg:x="404" fg:w="163"/><text x="1.0089%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::write_at (163 samples, 0.31%)</title><rect x="0.7589%" y="1013" width="0.3062%" height="15" fill="rgb(216,135,14)" fg:x="404" fg:w="163"/><text x="1.0089%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (163 samples, 0.31%)</title><rect x="0.7589%" y="997" width="0.3062%" height="15" fill="rgb(241,47,5)" fg:x="404" fg:w="163"/><text x="1.0089%" y="1007.50"></text></g><g><title>__libc_pwrite64 (163 samples, 0.31%)</title><rect x="0.7589%" y="981" width="0.3062%" height="15" fill="rgb(233,42,35)" fg:x="404" fg:w="163"/><text x="1.0089%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (158 samples, 0.30%)</title><rect x="0.7683%" y="965" width="0.2968%" height="15" fill="rgb(231,13,6)" fg:x="409" fg:w="158"/><text x="1.0183%" y="975.50"></text></g><g><title>do_syscall_64 (158 samples, 0.30%)</title><rect x="0.7683%" y="949" width="0.2968%" height="15" fill="rgb(207,181,40)" fg:x="409" fg:w="158"/><text x="1.0183%" y="959.50"></text></g><g><title>__x64_sys_pwrite64 (155 samples, 0.29%)</title><rect x="0.7739%" y="933" width="0.2912%" height="15" fill="rgb(254,173,49)" fg:x="412" fg:w="155"/><text x="1.0239%" y="943.50"></text></g><g><title>ksys_pwrite64 (155 samples, 0.29%)</title><rect x="0.7739%" y="917" width="0.2912%" height="15" fill="rgb(221,1,38)" fg:x="412" fg:w="155"/><text x="1.0239%" y="927.50"></text></g><g><title>vfs_write (153 samples, 0.29%)</title><rect x="0.7777%" y="901" width="0.2874%" height="15" fill="rgb(206,124,46)" fg:x="414" fg:w="153"/><text x="1.0277%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1.0651%" y="1141" width="0.0263%" height="15" fill="rgb(249,21,11)" fg:x="567" fg:w="14"/><text x="1.3151%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1.0651%" y="1125" width="0.0263%" height="15" fill="rgb(222,201,40)" fg:x="567" fg:w="14"/><text x="1.3151%" y="1135.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.03%)</title><rect x="1.0651%" y="1109" width="0.0263%" height="15" fill="rgb(235,61,29)" fg:x="567" fg:w="14"/><text x="1.3151%" y="1119.50"></text></g><g><title>syscall (15 samples, 0.03%)</title><rect x="1.0932%" y="1061" width="0.0282%" height="15" fill="rgb(219,207,3)" fg:x="582" fg:w="15"/><text x="1.3432%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.03%)</title><rect x="1.0951%" y="1045" width="0.0263%" height="15" fill="rgb(222,56,46)" fg:x="583" fg:w="14"/><text x="1.3451%" y="1055.50"></text></g><g><title>do_syscall_64 (14 samples, 0.03%)</title><rect x="1.0951%" y="1029" width="0.0263%" height="15" fill="rgb(239,76,54)" fg:x="583" fg:w="14"/><text x="1.3451%" y="1039.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.02%)</title><rect x="1.0970%" y="1013" width="0.0244%" height="15" fill="rgb(231,124,27)" fg:x="584" fg:w="13"/><text x="1.3470%" y="1023.50"></text></g><g><title>do_futex (13 samples, 0.02%)</title><rect x="1.0970%" y="997" width="0.0244%" height="15" fill="rgb(249,195,6)" fg:x="584" fg:w="13"/><text x="1.3470%" y="1007.50"></text></g><g><title>futex_wake (13 samples, 0.02%)</title><rect x="1.0970%" y="981" width="0.0244%" height="15" fill="rgb(237,174,47)" fg:x="584" fg:w="13"/><text x="1.3470%" y="991.50"></text></g><g><title>wake_up_q (12 samples, 0.02%)</title><rect x="1.0989%" y="965" width="0.0225%" height="15" fill="rgb(206,201,31)" fg:x="585" fg:w="12"/><text x="1.3489%" y="975.50"></text></g><g><title>try_to_wake_up (12 samples, 0.02%)</title><rect x="1.0989%" y="949" width="0.0225%" height="15" fill="rgb(231,57,52)" fg:x="585" fg:w="12"/><text x="1.3489%" y="959.50"></text></g><g><title>__lock_text_start (12 samples, 0.02%)</title><rect x="1.0989%" y="933" width="0.0225%" height="15" fill="rgb(248,177,22)" fg:x="585" fg:w="12"/><text x="1.3489%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (16 samples, 0.03%)</title><rect x="1.0932%" y="1077" width="0.0301%" height="15" fill="rgb(215,211,37)" fg:x="582" fg:w="16"/><text x="1.3432%" y="1087.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (18 samples, 0.03%)</title><rect x="1.0932%" y="1093" width="0.0338%" height="15" fill="rgb(241,128,51)" fg:x="582" fg:w="18"/><text x="1.3432%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (21 samples, 0.04%)</title><rect x="1.0914%" y="1109" width="0.0394%" height="15" fill="rgb(227,165,31)" fg:x="581" fg:w="21"/><text x="1.3414%" y="1119.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (23 samples, 0.04%)</title><rect x="1.0914%" y="1141" width="0.0432%" height="15" fill="rgb(228,167,24)" fg:x="581" fg:w="23"/><text x="1.3414%" y="1151.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (23 samples, 0.04%)</title><rect x="1.0914%" y="1125" width="0.0432%" height="15" fill="rgb(228,143,12)" fg:x="581" fg:w="23"/><text x="1.3414%" y="1135.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (230 samples, 0.43%)</title><rect x="0.7100%" y="1237" width="0.4320%" height="15" fill="rgb(249,149,8)" fg:x="378" fg:w="230"/><text x="0.9600%" y="1247.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (41 samples, 0.08%)</title><rect x="1.0651%" y="1221" width="0.0770%" height="15" fill="rgb(243,35,44)" fg:x="567" fg:w="41"/><text x="1.3151%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.08%)</title><rect x="1.0651%" y="1205" width="0.0770%" height="15" fill="rgb(246,89,9)" fg:x="567" fg:w="41"/><text x="1.3151%" y="1215.50"></text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (41 samples, 0.08%)</title><rect x="1.0651%" y="1189" width="0.0770%" height="15" fill="rgb(233,213,13)" fg:x="567" fg:w="41"/><text x="1.3151%" y="1199.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (41 samples, 0.08%)</title><rect x="1.0651%" y="1173" width="0.0770%" height="15" fill="rgb(233,141,41)" fg:x="567" fg:w="41"/><text x="1.3151%" y="1183.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (41 samples, 0.08%)</title><rect x="1.0651%" y="1157" width="0.0770%" height="15" fill="rgb(239,167,4)" fg:x="567" fg:w="41"/><text x="1.3151%" y="1167.50"></text></g><g><title>[unknown] (613 samples, 1.15%)</title><rect x="0.0019%" y="1253" width="1.1515%" height="15" fill="rgb(209,217,16)" fg:x="1" fg:w="613"/><text x="0.2519%" y="1263.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (6 samples, 0.01%)</title><rect x="1.1421%" y="1237" width="0.0113%" height="15" fill="rgb(219,88,35)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1247.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1.1421%" y="1221" width="0.0113%" height="15" fill="rgb(220,193,23)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1.1421%" y="1205" width="0.0113%" height="15" fill="rgb(230,90,52)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1215.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="1.1421%" y="1189" width="0.0113%" height="15" fill="rgb(252,106,19)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1199.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (6 samples, 0.01%)</title><rect x="1.1421%" y="1173" width="0.0113%" height="15" fill="rgb(206,74,20)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1183.50"></text></g><g><title>hyper::client::conn::SendRequest&lt;B&gt;::send_request_retryable (6 samples, 0.01%)</title><rect x="1.1421%" y="1157" width="0.0113%" height="15" fill="rgb(230,138,44)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1167.50"></text></g><g><title>hyper::client::dispatch::Sender&lt;T,U&gt;::try_send (6 samples, 0.01%)</title><rect x="1.1421%" y="1141" width="0.0113%" height="15" fill="rgb(235,182,43)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (6 samples, 0.01%)</title><rect x="1.1421%" y="1125" width="0.0113%" height="15" fill="rgb(242,16,51)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (6 samples, 0.01%)</title><rect x="1.1421%" y="1109" width="0.0113%" height="15" fill="rgb(248,9,4)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.01%)</title><rect x="1.1421%" y="1093" width="0.0113%" height="15" fill="rgb(210,31,22)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (6 samples, 0.01%)</title><rect x="1.1421%" y="1077" width="0.0113%" height="15" fill="rgb(239,54,39)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1087.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (6 samples, 0.01%)</title><rect x="1.1421%" y="1061" width="0.0113%" height="15" fill="rgb(230,99,41)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1071.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (6 samples, 0.01%)</title><rect x="1.1421%" y="1045" width="0.0113%" height="15" fill="rgb(253,106,12)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::write (6 samples, 0.01%)</title><rect x="1.1421%" y="1029" width="0.0113%" height="15" fill="rgb(213,46,41)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1039.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (6 samples, 0.01%)</title><rect x="1.1421%" y="1013" width="0.0113%" height="15" fill="rgb(215,133,35)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1023.50"></text></g><g><title>__libc_write (6 samples, 0.01%)</title><rect x="1.1421%" y="997" width="0.0113%" height="15" fill="rgb(213,28,5)" fg:x="608" fg:w="6"/><text x="1.3921%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (16 samples, 0.03%)</title><rect x="1.8052%" y="1013" width="0.0301%" height="15" fill="rgb(215,77,49)" fg:x="961" fg:w="16"/><text x="2.0552%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (333 samples, 0.63%)</title><rect x="1.2116%" y="1077" width="0.6255%" height="15" fill="rgb(248,100,22)" fg:x="645" fg:w="333"/><text x="1.4616%" y="1087.50"></text></g><g><title>std::io::Write::write_all (328 samples, 0.62%)</title><rect x="1.2210%" y="1061" width="0.6161%" height="15" fill="rgb(208,67,9)" fg:x="650" fg:w="328"/><text x="1.4710%" y="1071.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (318 samples, 0.60%)</title><rect x="1.2398%" y="1045" width="0.5973%" height="15" fill="rgb(219,133,21)" fg:x="660" fg:w="318"/><text x="1.4898%" y="1055.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (315 samples, 0.59%)</title><rect x="1.2454%" y="1029" width="0.5917%" height="15" fill="rgb(246,46,29)" fg:x="663" fg:w="315"/><text x="1.4954%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (14 samples, 0.03%)</title><rect x="2.2090%" y="1029" width="0.0263%" height="15" fill="rgb(246,185,52)" fg:x="1176" fg:w="14"/><text x="2.4590%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (556 samples, 1.04%)</title><rect x="1.1928%" y="1093" width="1.0444%" height="15" fill="rgb(252,136,11)" fg:x="635" fg:w="556"/><text x="1.4428%" y="1103.50"></text></g><g><title>std::io::Write::write_all (213 samples, 0.40%)</title><rect x="1.8371%" y="1077" width="0.4001%" height="15" fill="rgb(219,138,53)" fg:x="978" fg:w="213"/><text x="2.0871%" y="1087.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (195 samples, 0.37%)</title><rect x="1.8709%" y="1061" width="0.3663%" height="15" fill="rgb(211,51,23)" fg:x="996" fg:w="195"/><text x="2.1209%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (189 samples, 0.36%)</title><rect x="1.8822%" y="1045" width="0.3550%" height="15" fill="rgb(247,221,28)" fg:x="1002" fg:w="189"/><text x="2.1322%" y="1055.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (6 samples, 0.01%)</title><rect x="2.2372%" y="1093" width="0.0113%" height="15" fill="rgb(251,222,45)" fg:x="1191" fg:w="6"/><text x="2.4872%" y="1103.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.01%)</title><rect x="2.2372%" y="1077" width="0.0113%" height="15" fill="rgb(217,162,53)" fg:x="1191" fg:w="6"/><text x="2.4872%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (154 samples, 0.29%)</title><rect x="2.2635%" y="1077" width="0.2893%" height="15" fill="rgb(229,93,14)" fg:x="1205" fg:w="154"/><text x="2.5135%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (307 samples, 0.58%)</title><rect x="2.2485%" y="1093" width="0.5767%" height="15" fill="rgb(209,67,49)" fg:x="1197" fg:w="307"/><text x="2.4985%" y="1103.50"></text></g><g><title>bitcoin_hashes::Hash::hash (145 samples, 0.27%)</title><rect x="2.5528%" y="1077" width="0.2724%" height="15" fill="rgb(213,87,29)" fg:x="1359" fg:w="145"/><text x="2.8028%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (139 samples, 0.26%)</title><rect x="2.5641%" y="1061" width="0.2611%" height="15" fill="rgb(205,151,52)" fg:x="1365" fg:w="139"/><text x="2.8141%" y="1071.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (235 samples, 0.44%)</title><rect x="2.8252%" y="1093" width="0.4414%" height="15" fill="rgb(253,215,39)" fg:x="1504" fg:w="235"/><text x="3.0752%" y="1103.50"></text></g><g><title>std::io::Write::write_all (235 samples, 0.44%)</title><rect x="2.8252%" y="1077" width="0.4414%" height="15" fill="rgb(221,220,41)" fg:x="1504" fg:w="235"/><text x="3.0752%" y="1087.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (221 samples, 0.42%)</title><rect x="2.8515%" y="1061" width="0.4151%" height="15" fill="rgb(218,133,21)" fg:x="1518" fg:w="221"/><text x="3.1015%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (217 samples, 0.41%)</title><rect x="2.8590%" y="1045" width="0.4076%" height="15" fill="rgb(221,193,43)" fg:x="1522" fg:w="217"/><text x="3.1090%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (19 samples, 0.04%)</title><rect x="3.2309%" y="1029" width="0.0357%" height="15" fill="rgb(240,128,52)" fg:x="1720" fg:w="19"/><text x="3.4809%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,184 samples, 2.22%)</title><rect x="1.1552%" y="1125" width="2.2241%" height="15" fill="rgb(253,114,12)" fg:x="615" fg:w="1184"/><text x="1.4052%" y="1135.50">&lt;..</text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (1,173 samples, 2.20%)</title><rect x="1.1759%" y="1109" width="2.2034%" height="15" fill="rgb(215,223,47)" fg:x="626" fg:w="1173"/><text x="1.4259%" y="1119.50">b..</text></g><g><title>std::io::Write::write_all (60 samples, 0.11%)</title><rect x="3.2666%" y="1093" width="0.1127%" height="15" fill="rgb(248,225,23)" fg:x="1739" fg:w="60"/><text x="3.5166%" y="1103.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (45 samples, 0.08%)</title><rect x="3.2948%" y="1077" width="0.0845%" height="15" fill="rgb(250,108,0)" fg:x="1754" fg:w="45"/><text x="3.5448%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (43 samples, 0.08%)</title><rect x="3.2985%" y="1061" width="0.0808%" height="15" fill="rgb(228,208,7)" fg:x="1756" fg:w="43"/><text x="3.5485%" y="1071.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,186 samples, 2.23%)</title><rect x="1.1552%" y="1141" width="2.2278%" height="15" fill="rgb(244,45,10)" fg:x="615" fg:w="1186"/><text x="1.4052%" y="1151.50">a..</text></g><g><title>cfree (18 samples, 0.03%)</title><rect x="4.2340%" y="1109" width="0.0338%" height="15" fill="rgb(207,125,25)" fg:x="2254" fg:w="18"/><text x="4.4840%" y="1119.50"></text></g><g><title>_IO_str_seekoff (17 samples, 0.03%)</title><rect x="4.2359%" y="1093" width="0.0319%" height="15" fill="rgb(210,195,18)" fg:x="2255" fg:w="17"/><text x="4.4859%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (53 samples, 0.10%)</title><rect x="4.2678%" y="1109" width="0.0996%" height="15" fill="rgb(249,80,12)" fg:x="2272" fg:w="53"/><text x="4.5178%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="4.3129%" y="1093" width="0.0545%" height="15" fill="rgb(221,65,9)" fg:x="2296" fg:w="29"/><text x="4.5629%" y="1103.50"></text></g><g><title>cfree (15 samples, 0.03%)</title><rect x="4.3673%" y="1093" width="0.0282%" height="15" fill="rgb(235,49,36)" fg:x="2325" fg:w="15"/><text x="4.6173%" y="1103.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="4.3824%" y="1077" width="0.0131%" height="15" fill="rgb(225,32,20)" fg:x="2333" fg:w="7"/><text x="4.6324%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;ord::index::updater::BlockData&gt; (111 samples, 0.21%)</title><rect x="4.3673%" y="1109" width="0.2085%" height="15" fill="rgb(215,141,46)" fg:x="2325" fg:w="111"/><text x="4.6173%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (96 samples, 0.18%)</title><rect x="4.3955%" y="1093" width="0.1803%" height="15" fill="rgb(250,160,47)" fg:x="2340" fg:w="96"/><text x="4.6455%" y="1103.50"></text></g><g><title>cfree (91 samples, 0.17%)</title><rect x="4.4049%" y="1077" width="0.1709%" height="15" fill="rgb(216,222,40)" fg:x="2345" fg:w="91"/><text x="4.6549%" y="1087.50"></text></g><g><title>_IO_str_seekoff (14 samples, 0.03%)</title><rect x="4.5496%" y="1061" width="0.0263%" height="15" fill="rgb(234,217,39)" fg:x="2422" fg:w="14"/><text x="4.7996%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.04%)</title><rect x="4.5796%" y="1109" width="0.0357%" height="15" fill="rgb(207,178,40)" fg:x="2438" fg:w="19"/><text x="4.8296%" y="1119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.03%)</title><rect x="4.5890%" y="1093" width="0.0263%" height="15" fill="rgb(221,136,13)" fg:x="2443" fg:w="14"/><text x="4.8390%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="4.5946%" y="1077" width="0.0207%" height="15" fill="rgb(249,199,10)" fg:x="2446" fg:w="11"/><text x="4.8446%" y="1087.50"></text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (6 samples, 0.01%)</title><rect x="4.6209%" y="1061" width="0.0113%" height="15" fill="rgb(249,222,13)" fg:x="2460" fg:w="6"/><text x="4.8709%" y="1071.50"></text></g><g><title>&lt;log4rs::append::console::ConsoleAppender as log4rs::append::Append&gt;::append (7 samples, 0.01%)</title><rect x="4.6209%" y="1077" width="0.0131%" height="15" fill="rgb(244,185,38)" fg:x="2460" fg:w="7"/><text x="4.8709%" y="1087.50"></text></g><g><title>log::__private_api_log (17 samples, 0.03%)</title><rect x="4.6209%" y="1109" width="0.0319%" height="15" fill="rgb(236,202,9)" fg:x="2460" fg:w="17"/><text x="4.8709%" y="1119.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (17 samples, 0.03%)</title><rect x="4.6209%" y="1093" width="0.0319%" height="15" fill="rgb(250,229,37)" fg:x="2460" fg:w="17"/><text x="4.8709%" y="1103.50"></text></g><g><title>&lt;log4rs::append::rolling_file::RollingFileAppender as log4rs::append::Append&gt;::append (10 samples, 0.02%)</title><rect x="4.6341%" y="1077" width="0.0188%" height="15" fill="rgb(206,174,23)" fg:x="2467" fg:w="10"/><text x="4.8841%" y="1087.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.01%)</title><rect x="4.6416%" y="1061" width="0.0113%" height="15" fill="rgb(211,33,43)" fg:x="2471" fg:w="6"/><text x="4.8916%" y="1071.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (18 samples, 0.03%)</title><rect x="4.7900%" y="1029" width="0.0338%" height="15" fill="rgb(245,58,50)" fg:x="2550" fg:w="18"/><text x="5.0400%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (32 samples, 0.06%)</title><rect x="4.8651%" y="1013" width="0.0601%" height="15" fill="rgb(244,68,36)" fg:x="2590" fg:w="32"/><text x="5.1151%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (6 samples, 0.01%)</title><rect x="4.9252%" y="1013" width="0.0113%" height="15" fill="rgb(232,229,15)" fg:x="2622" fg:w="6"/><text x="5.1752%" y="1023.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (61 samples, 0.11%)</title><rect x="4.8238%" y="1029" width="0.1146%" height="15" fill="rgb(254,30,23)" fg:x="2568" fg:w="61"/><text x="5.0738%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (77 samples, 0.14%)</title><rect x="4.9534%" y="1013" width="0.1446%" height="15" fill="rgb(235,160,14)" fg:x="2637" fg:w="77"/><text x="5.2034%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (22 samples, 0.04%)</title><rect x="5.0981%" y="1013" width="0.0413%" height="15" fill="rgb(212,155,44)" fg:x="2714" fg:w="22"/><text x="5.3481%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (122 samples, 0.23%)</title><rect x="4.9384%" y="1029" width="0.2292%" height="15" fill="rgb(226,2,50)" fg:x="2629" fg:w="122"/><text x="5.1884%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (15 samples, 0.03%)</title><rect x="5.1394%" y="1013" width="0.0282%" height="15" fill="rgb(234,177,6)" fg:x="2736" fg:w="15"/><text x="5.3894%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (7 samples, 0.01%)</title><rect x="5.1544%" y="997" width="0.0131%" height="15" fill="rgb(217,24,9)" fg:x="2744" fg:w="7"/><text x="5.4044%" y="1007.50"></text></g><g><title>__libc_malloc (42 samples, 0.08%)</title><rect x="5.3967%" y="997" width="0.0789%" height="15" fill="rgb(220,13,46)" fg:x="2873" fg:w="42"/><text x="5.6467%" y="1007.50"></text></g><g><title>_IO_str_seekoff (36 samples, 0.07%)</title><rect x="5.4080%" y="981" width="0.0676%" height="15" fill="rgb(239,221,27)" fg:x="2879" fg:w="36"/><text x="5.6580%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (21 samples, 0.04%)</title><rect x="5.4756%" y="997" width="0.0394%" height="15" fill="rgb(222,198,25)" fg:x="2915" fg:w="21"/><text x="5.7256%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (17 samples, 0.03%)</title><rect x="5.4831%" y="981" width="0.0319%" height="15" fill="rgb(211,99,13)" fg:x="2919" fg:w="17"/><text x="5.7331%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (14 samples, 0.03%)</title><rect x="5.4888%" y="965" width="0.0263%" height="15" fill="rgb(232,111,31)" fg:x="2922" fg:w="14"/><text x="5.7388%" y="975.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.01%)</title><rect x="5.5019%" y="949" width="0.0131%" height="15" fill="rgb(245,82,37)" fg:x="2929" fg:w="7"/><text x="5.7519%" y="959.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.02%)</title><rect x="5.6334%" y="821" width="0.0169%" height="15" fill="rgb(227,149,46)" fg:x="2999" fg:w="9"/><text x="5.8834%" y="831.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.02%)</title><rect x="5.6353%" y="805" width="0.0150%" height="15" fill="rgb(218,36,50)" fg:x="3000" fg:w="8"/><text x="5.8853%" y="815.50"></text></g><g><title>prep_new_page (6 samples, 0.01%)</title><rect x="5.6390%" y="789" width="0.0113%" height="15" fill="rgb(226,80,48)" fg:x="3002" fg:w="6"/><text x="5.8890%" y="799.50"></text></g><g><title>alloc_pages_vma (10 samples, 0.02%)</title><rect x="5.6334%" y="837" width="0.0188%" height="15" fill="rgb(238,224,15)" fg:x="2999" fg:w="10"/><text x="5.8834%" y="847.50"></text></g><g><title>handle_mm_fault (27 samples, 0.05%)</title><rect x="5.6259%" y="869" width="0.0507%" height="15" fill="rgb(241,136,10)" fg:x="2995" fg:w="27"/><text x="5.8759%" y="879.50"></text></g><g><title>__handle_mm_fault (27 samples, 0.05%)</title><rect x="5.6259%" y="853" width="0.0507%" height="15" fill="rgb(208,32,45)" fg:x="2995" fg:w="27"/><text x="5.8759%" y="863.50"></text></g><g><title>mem_cgroup_try_charge_delay (9 samples, 0.02%)</title><rect x="5.6597%" y="837" width="0.0169%" height="15" fill="rgb(207,135,9)" fg:x="3013" fg:w="9"/><text x="5.9097%" y="847.50"></text></g><g><title>async_page_fault (46 samples, 0.09%)</title><rect x="5.5921%" y="933" width="0.0864%" height="15" fill="rgb(206,86,44)" fg:x="2977" fg:w="46"/><text x="5.8421%" y="943.50"></text></g><g><title>do_async_page_fault (46 samples, 0.09%)</title><rect x="5.5921%" y="917" width="0.0864%" height="15" fill="rgb(245,177,15)" fg:x="2977" fg:w="46"/><text x="5.8421%" y="927.50"></text></g><g><title>do_page_fault (46 samples, 0.09%)</title><rect x="5.5921%" y="901" width="0.0864%" height="15" fill="rgb(206,64,50)" fg:x="2977" fg:w="46"/><text x="5.8421%" y="911.50"></text></g><g><title>__do_page_fault (46 samples, 0.09%)</title><rect x="5.5921%" y="885" width="0.0864%" height="15" fill="rgb(234,36,40)" fg:x="2977" fg:w="46"/><text x="5.8421%" y="895.50"></text></g><g><title>perf_event_mmap (14 samples, 0.03%)</title><rect x="5.6916%" y="837" width="0.0263%" height="15" fill="rgb(213,64,8)" fg:x="3030" fg:w="14"/><text x="5.9416%" y="847.50"></text></g><g><title>perf_iterate_sb (13 samples, 0.02%)</title><rect x="5.6935%" y="821" width="0.0244%" height="15" fill="rgb(210,75,36)" fg:x="3031" fg:w="13"/><text x="5.9435%" y="831.50"></text></g><g><title>perf_iterate_ctx (13 samples, 0.02%)</title><rect x="5.6935%" y="805" width="0.0244%" height="15" fill="rgb(229,88,21)" fg:x="3031" fg:w="13"/><text x="5.9435%" y="815.50"></text></g><g><title>perf_event_mmap_output (10 samples, 0.02%)</title><rect x="5.6992%" y="789" width="0.0188%" height="15" fill="rgb(252,204,47)" fg:x="3034" fg:w="10"/><text x="5.9492%" y="799.50"></text></g><g><title>mprotect_fixup (21 samples, 0.04%)</title><rect x="5.6841%" y="853" width="0.0394%" height="15" fill="rgb(208,77,27)" fg:x="3026" fg:w="21"/><text x="5.9341%" y="863.50"></text></g><g><title>_IO_str_seekoff (93 samples, 0.17%)</title><rect x="5.5508%" y="965" width="0.1747%" height="15" fill="rgb(221,76,26)" fg:x="2955" fg:w="93"/><text x="5.8008%" y="975.50"></text></g><g><title>_IO_str_seekoff (75 samples, 0.14%)</title><rect x="5.5846%" y="949" width="0.1409%" height="15" fill="rgb(225,139,18)" fg:x="2973" fg:w="75"/><text x="5.8346%" y="959.50"></text></g><g><title>mprotect (25 samples, 0.05%)</title><rect x="5.6785%" y="933" width="0.0470%" height="15" fill="rgb(230,137,11)" fg:x="3023" fg:w="25"/><text x="5.9285%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.05%)</title><rect x="5.6785%" y="917" width="0.0470%" height="15" fill="rgb(212,28,1)" fg:x="3023" fg:w="25"/><text x="5.9285%" y="927.50"></text></g><g><title>do_syscall_64 (25 samples, 0.05%)</title><rect x="5.6785%" y="901" width="0.0470%" height="15" fill="rgb(248,164,17)" fg:x="3023" fg:w="25"/><text x="5.9285%" y="911.50"></text></g><g><title>__x64_sys_mprotect (23 samples, 0.04%)</title><rect x="5.6822%" y="885" width="0.0432%" height="15" fill="rgb(222,171,42)" fg:x="3025" fg:w="23"/><text x="5.9322%" y="895.50"></text></g><g><title>do_mprotect_pkey (23 samples, 0.04%)</title><rect x="5.6822%" y="869" width="0.0432%" height="15" fill="rgb(243,84,45)" fg:x="3025" fg:w="23"/><text x="5.9322%" y="879.50"></text></g><g><title>__libc_calloc (127 samples, 0.24%)</title><rect x="5.5188%" y="981" width="0.2386%" height="15" fill="rgb(252,49,23)" fg:x="2938" fg:w="127"/><text x="5.7688%" y="991.50"></text></g><g><title>__nss_passwd_lookup (17 samples, 0.03%)</title><rect x="5.7254%" y="965" width="0.0319%" height="15" fill="rgb(215,19,7)" fg:x="3048" fg:w="17"/><text x="5.9754%" y="975.50"></text></g><g><title>__pthread_enable_asynccancel (41 samples, 0.08%)</title><rect x="5.8137%" y="901" width="0.0770%" height="15" fill="rgb(238,81,41)" fg:x="3095" fg:w="41"/><text x="6.0637%" y="911.50"></text></g><g><title>copy_page_to_iter (128 samples, 0.24%)</title><rect x="5.9490%" y="757" width="0.2404%" height="15" fill="rgb(210,199,37)" fg:x="3167" fg:w="128"/><text x="6.1990%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string (126 samples, 0.24%)</title><rect x="5.9527%" y="741" width="0.2367%" height="15" fill="rgb(244,192,49)" fg:x="3169" fg:w="126"/><text x="6.2027%" y="751.50"></text></g><g><title>pagecache_get_page (95 samples, 0.18%)</title><rect x="6.1988%" y="757" width="0.1785%" height="15" fill="rgb(226,211,11)" fg:x="3300" fg:w="95"/><text x="6.4488%" y="767.50"></text></g><g><title>find_get_entry (95 samples, 0.18%)</title><rect x="6.1988%" y="741" width="0.1785%" height="15" fill="rgb(236,162,54)" fg:x="3300" fg:w="95"/><text x="6.4488%" y="751.50"></text></g><g><title>xas_load (57 samples, 0.11%)</title><rect x="6.2702%" y="725" width="0.1071%" height="15" fill="rgb(220,229,9)" fg:x="3338" fg:w="57"/><text x="6.5202%" y="735.50"></text></g><g><title>generic_file_read_iter (239 samples, 0.45%)</title><rect x="5.9358%" y="773" width="0.4489%" height="15" fill="rgb(250,87,22)" fg:x="3160" fg:w="239"/><text x="6.1858%" y="783.50"></text></g><g><title>ext4_file_read_iter (242 samples, 0.45%)</title><rect x="5.9321%" y="789" width="0.4546%" height="15" fill="rgb(239,43,17)" fg:x="3158" fg:w="242"/><text x="6.1821%" y="799.50"></text></g><g><title>__vfs_read (247 samples, 0.46%)</title><rect x="5.9246%" y="821" width="0.4640%" height="15" fill="rgb(231,177,25)" fg:x="3154" fg:w="247"/><text x="6.1746%" y="831.50"></text></g><g><title>new_sync_read (246 samples, 0.46%)</title><rect x="5.9264%" y="805" width="0.4621%" height="15" fill="rgb(219,179,1)" fg:x="3155" fg:w="246"/><text x="6.1764%" y="815.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (898 samples, 1.69%)</title><rect x="4.7167%" y="1045" width="1.6868%" height="15" fill="rgb(238,219,53)" fg:x="2511" fg:w="898"/><text x="4.9667%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (658 samples, 1.24%)</title><rect x="5.1676%" y="1029" width="1.2360%" height="15" fill="rgb(232,167,36)" fg:x="2751" fg:w="658"/><text x="5.4176%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (656 samples, 1.23%)</title><rect x="5.1713%" y="1013" width="1.2322%" height="15" fill="rgb(244,19,51)" fg:x="2753" fg:w="656"/><text x="5.4213%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (473 samples, 0.89%)</title><rect x="5.5151%" y="997" width="0.8885%" height="15" fill="rgb(224,6,22)" fg:x="2936" fg:w="473"/><text x="5.7651%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (344 samples, 0.65%)</title><rect x="5.7574%" y="981" width="0.6462%" height="15" fill="rgb(224,145,5)" fg:x="3065" fg:w="344"/><text x="6.0074%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (332 samples, 0.62%)</title><rect x="5.7799%" y="965" width="0.6236%" height="15" fill="rgb(234,130,49)" fg:x="3077" fg:w="332"/><text x="6.0299%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::read_at (332 samples, 0.62%)</title><rect x="5.7799%" y="949" width="0.6236%" height="15" fill="rgb(254,6,2)" fg:x="3077" fg:w="332"/><text x="6.0299%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (332 samples, 0.62%)</title><rect x="5.7799%" y="933" width="0.6236%" height="15" fill="rgb(208,96,46)" fg:x="3077" fg:w="332"/><text x="6.0299%" y="943.50"></text></g><g><title>__libc_pread (332 samples, 0.62%)</title><rect x="5.7799%" y="917" width="0.6236%" height="15" fill="rgb(239,3,39)" fg:x="3077" fg:w="332"/><text x="6.0299%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (273 samples, 0.51%)</title><rect x="5.8908%" y="901" width="0.5128%" height="15" fill="rgb(233,210,1)" fg:x="3136" fg:w="273"/><text x="6.1408%" y="911.50"></text></g><g><title>do_syscall_64 (273 samples, 0.51%)</title><rect x="5.8908%" y="885" width="0.5128%" height="15" fill="rgb(244,137,37)" fg:x="3136" fg:w="273"/><text x="6.1408%" y="895.50"></text></g><g><title>__x64_sys_pread64 (267 samples, 0.50%)</title><rect x="5.9020%" y="869" width="0.5015%" height="15" fill="rgb(240,136,2)" fg:x="3142" fg:w="267"/><text x="6.1520%" y="879.50"></text></g><g><title>ksys_pread64 (267 samples, 0.50%)</title><rect x="5.9020%" y="853" width="0.5015%" height="15" fill="rgb(239,18,37)" fg:x="3142" fg:w="267"/><text x="6.1520%" y="863.50"></text></g><g><title>vfs_read (257 samples, 0.48%)</title><rect x="5.9208%" y="837" width="0.4828%" height="15" fill="rgb(218,185,22)" fg:x="3152" fg:w="257"/><text x="6.1708%" y="847.50"></text></g><g><title>rw_verify_area (7 samples, 0.01%)</title><rect x="6.3904%" y="821" width="0.0131%" height="15" fill="rgb(225,218,4)" fg:x="3402" fg:w="7"/><text x="6.6404%" y="831.50"></text></g><g><title>security_file_permission (6 samples, 0.01%)</title><rect x="6.3923%" y="805" width="0.0113%" height="15" fill="rgb(230,182,32)" fg:x="3403" fg:w="6"/><text x="6.6423%" y="815.50"></text></g><g><title>__nss_passwd_lookup (29 samples, 0.05%)</title><rect x="6.4261%" y="1029" width="0.0545%" height="15" fill="rgb(242,56,43)" fg:x="3421" fg:w="29"/><text x="6.6761%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (7 samples, 0.01%)</title><rect x="6.4806%" y="1029" width="0.0131%" height="15" fill="rgb(233,99,24)" fg:x="3450" fg:w="7"/><text x="6.7306%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (66 samples, 0.12%)</title><rect x="6.4036%" y="1045" width="0.1240%" height="15" fill="rgb(234,209,42)" fg:x="3409" fg:w="66"/><text x="6.6536%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (18 samples, 0.03%)</title><rect x="6.4937%" y="1029" width="0.0338%" height="15" fill="rgb(227,7,12)" fg:x="3457" fg:w="18"/><text x="6.7437%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (13 samples, 0.02%)</title><rect x="6.5031%" y="1013" width="0.0244%" height="15" fill="rgb(245,203,43)" fg:x="3462" fg:w="13"/><text x="6.7531%" y="1023.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,056 samples, 1.98%)</title><rect x="4.6829%" y="1061" width="1.9836%" height="15" fill="rgb(238,205,33)" fg:x="2493" fg:w="1056"/><text x="4.9329%" y="1071.50">r..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (74 samples, 0.14%)</title><rect x="6.5275%" y="1045" width="0.1390%" height="15" fill="rgb(231,56,7)" fg:x="3475" fg:w="74"/><text x="6.7775%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (74 samples, 0.14%)</title><rect x="6.5275%" y="1029" width="0.1390%" height="15" fill="rgb(244,186,29)" fg:x="3475" fg:w="74"/><text x="6.7775%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (6 samples, 0.01%)</title><rect x="6.6816%" y="1045" width="0.0113%" height="15" fill="rgb(234,111,31)" fg:x="3557" fg:w="6"/><text x="6.9316%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (34 samples, 0.06%)</title><rect x="6.6665%" y="1061" width="0.0639%" height="15" fill="rgb(241,149,10)" fg:x="3549" fg:w="34"/><text x="6.9165%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (16 samples, 0.03%)</title><rect x="6.7004%" y="1045" width="0.0301%" height="15" fill="rgb(249,206,44)" fg:x="3567" fg:w="16"/><text x="6.9504%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (8 samples, 0.02%)</title><rect x="6.7154%" y="1029" width="0.0150%" height="15" fill="rgb(251,153,30)" fg:x="3575" fg:w="8"/><text x="6.9654%" y="1039.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1,127 samples, 2.12%)</title><rect x="4.6773%" y="1077" width="2.1170%" height="15" fill="rgb(239,152,38)" fg:x="2490" fg:w="1127"/><text x="4.9273%" y="1087.50">r..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (34 samples, 0.06%)</title><rect x="6.7304%" y="1061" width="0.0639%" height="15" fill="rgb(249,139,47)" fg:x="3583" fg:w="34"/><text x="6.9804%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (33 samples, 0.06%)</title><rect x="6.7323%" y="1045" width="0.0620%" height="15" fill="rgb(244,64,35)" fg:x="3584" fg:w="33"/><text x="6.9823%" y="1055.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (6 samples, 0.01%)</title><rect x="6.7943%" y="1077" width="0.0113%" height="15" fill="rgb(216,46,15)" fg:x="3617" fg:w="6"/><text x="7.0443%" y="1087.50"></text></g><g><title>ord::index::Index::transaction_output_by_outpoint (1,156 samples, 2.17%)</title><rect x="4.6529%" y="1109" width="2.1715%" height="15" fill="rgb(250,74,19)" fg:x="2477" fg:w="1156"/><text x="4.9029%" y="1119.50">o..</text></g><g><title>&lt;redb::table::Table&lt;K,V&gt; as redb::table::ReadableTable&lt;K,V&gt;&gt;::get (1,154 samples, 2.17%)</title><rect x="4.6566%" y="1093" width="2.1677%" height="15" fill="rgb(249,42,33)" fg:x="2479" fg:w="1154"/><text x="4.9066%" y="1103.50">&lt;..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (10 samples, 0.02%)</title><rect x="6.8055%" y="1077" width="0.0188%" height="15" fill="rgb(242,149,17)" fg:x="3623" fg:w="10"/><text x="7.0555%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (10 samples, 0.02%)</title><rect x="6.8055%" y="1061" width="0.0188%" height="15" fill="rgb(244,29,21)" fg:x="3623" fg:w="10"/><text x="7.0555%" y="1071.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (210 samples, 0.39%)</title><rect x="7.2601%" y="1093" width="0.3945%" height="15" fill="rgb(220,130,37)" fg:x="3865" fg:w="210"/><text x="7.5101%" y="1103.50"></text></g><g><title>__nss_passwd_lookup (207 samples, 0.39%)</title><rect x="7.2658%" y="1077" width="0.3888%" height="15" fill="rgb(211,67,2)" fg:x="3868" fg:w="207"/><text x="7.5158%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45 samples, 0.08%)</title><rect x="8.4623%" y="1077" width="0.0845%" height="15" fill="rgb(235,68,52)" fg:x="4505" fg:w="45"/><text x="8.7123%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.04%)</title><rect x="8.5093%" y="1061" width="0.0376%" height="15" fill="rgb(246,142,3)" fg:x="4530" fg:w="20"/><text x="8.7593%" y="1071.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.03%)</title><rect x="8.6577%" y="965" width="0.0263%" height="15" fill="rgb(241,25,7)" fg:x="4609" fg:w="14"/><text x="8.9077%" y="975.50"></text></g><g><title>lru_cache_add_active_or_unevictable (8 samples, 0.02%)</title><rect x="8.6915%" y="965" width="0.0150%" height="15" fill="rgb(242,119,39)" fg:x="4627" fg:w="8"/><text x="8.9415%" y="975.50"></text></g><g><title>__lru_cache_add (8 samples, 0.02%)</title><rect x="8.6915%" y="949" width="0.0150%" height="15" fill="rgb(241,98,45)" fg:x="4627" fg:w="8"/><text x="8.9415%" y="959.50"></text></g><g><title>pagevec_lru_move_fn (6 samples, 0.01%)</title><rect x="8.6952%" y="933" width="0.0113%" height="15" fill="rgb(254,28,30)" fg:x="4629" fg:w="6"/><text x="8.9452%" y="943.50"></text></g><g><title>__handle_mm_fault (53 samples, 0.10%)</title><rect x="8.6483%" y="981" width="0.0996%" height="15" fill="rgb(241,142,54)" fg:x="4604" fg:w="53"/><text x="8.8983%" y="991.50"></text></g><g><title>mem_cgroup_try_charge_delay (18 samples, 0.03%)</title><rect x="8.7140%" y="965" width="0.0338%" height="15" fill="rgb(222,85,15)" fg:x="4639" fg:w="18"/><text x="8.9640%" y="975.50"></text></g><g><title>mem_cgroup_try_charge (11 samples, 0.02%)</title><rect x="8.7272%" y="949" width="0.0207%" height="15" fill="rgb(210,85,47)" fg:x="4646" fg:w="11"/><text x="8.9772%" y="959.50"></text></g><g><title>__do_page_fault (82 samples, 0.15%)</title><rect x="8.5976%" y="1013" width="0.1540%" height="15" fill="rgb(224,206,25)" fg:x="4577" fg:w="82"/><text x="8.8476%" y="1023.50"></text></g><g><title>handle_mm_fault (56 samples, 0.11%)</title><rect x="8.6464%" y="997" width="0.1052%" height="15" fill="rgb(243,201,19)" fg:x="4603" fg:w="56"/><text x="8.8964%" y="1007.50"></text></g><g><title>async_page_fault (83 samples, 0.16%)</title><rect x="8.5976%" y="1061" width="0.1559%" height="15" fill="rgb(236,59,4)" fg:x="4577" fg:w="83"/><text x="8.8476%" y="1071.50"></text></g><g><title>do_async_page_fault (83 samples, 0.16%)</title><rect x="8.5976%" y="1045" width="0.1559%" height="15" fill="rgb(254,179,45)" fg:x="4577" fg:w="83"/><text x="8.8476%" y="1055.50"></text></g><g><title>do_page_fault (83 samples, 0.16%)</title><rect x="8.5976%" y="1029" width="0.1559%" height="15" fill="rgb(226,14,10)" fg:x="4577" fg:w="83"/><text x="8.8476%" y="1039.50"></text></g><g><title>unmap_page_range (6 samples, 0.01%)</title><rect x="8.7554%" y="901" width="0.0113%" height="15" fill="rgb(244,27,41)" fg:x="4661" fg:w="6"/><text x="9.0054%" y="911.50"></text></g><g><title>cfree (9 samples, 0.02%)</title><rect x="8.7535%" y="1061" width="0.0169%" height="15" fill="rgb(235,35,32)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="1071.50"></text></g><g><title>__munmap (9 samples, 0.02%)</title><rect x="8.7535%" y="1045" width="0.0169%" height="15" fill="rgb(218,68,31)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.02%)</title><rect x="8.7535%" y="1029" width="0.0169%" height="15" fill="rgb(207,120,37)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="1039.50"></text></g><g><title>do_syscall_64 (9 samples, 0.02%)</title><rect x="8.7535%" y="1013" width="0.0169%" height="15" fill="rgb(227,98,0)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="1023.50"></text></g><g><title>__x64_sys_munmap (9 samples, 0.02%)</title><rect x="8.7535%" y="997" width="0.0169%" height="15" fill="rgb(207,7,3)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="1007.50"></text></g><g><title>__vm_munmap (9 samples, 0.02%)</title><rect x="8.7535%" y="981" width="0.0169%" height="15" fill="rgb(206,98,19)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="991.50"></text></g><g><title>__do_munmap (9 samples, 0.02%)</title><rect x="8.7535%" y="965" width="0.0169%" height="15" fill="rgb(217,5,26)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="975.50"></text></g><g><title>unmap_region (9 samples, 0.02%)</title><rect x="8.7535%" y="949" width="0.0169%" height="15" fill="rgb(235,190,38)" fg:x="4660" fg:w="9"/><text x="9.0035%" y="959.50"></text></g><g><title>unmap_vmas (8 samples, 0.02%)</title><rect x="8.7554%" y="933" width="0.0150%" height="15" fill="rgb(247,86,24)" fg:x="4661" fg:w="8"/><text x="9.0054%" y="943.50"></text></g><g><title>unmap_single_vma (8 samples, 0.02%)</title><rect x="8.7554%" y="917" width="0.0150%" height="15" fill="rgb(205,101,16)" fg:x="4661" fg:w="8"/><text x="9.0054%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (629 samples, 1.18%)</title><rect x="7.6584%" y="1093" width="1.1815%" height="15" fill="rgb(246,168,33)" fg:x="4077" fg:w="629"/><text x="7.9084%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (156 samples, 0.29%)</title><rect x="8.5468%" y="1077" width="0.2930%" height="15" fill="rgb(231,114,1)" fg:x="4550" fg:w="156"/><text x="8.7968%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (37 samples, 0.07%)</title><rect x="8.7704%" y="1061" width="0.0695%" height="15" fill="rgb(207,184,53)" fg:x="4669" fg:w="37"/><text x="9.0204%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.04%)</title><rect x="8.8042%" y="1045" width="0.0357%" height="15" fill="rgb(224,95,51)" fg:x="4687" fg:w="19"/><text x="9.0542%" y="1055.50"></text></g><g><title>&lt;log4rs::append::console::ConsoleAppender as log4rs::append::Append&gt;::append (7 samples, 0.01%)</title><rect x="8.8399%" y="1061" width="0.0131%" height="15" fill="rgb(212,188,45)" fg:x="4706" fg:w="7"/><text x="9.0899%" y="1071.50"></text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (7 samples, 0.01%)</title><rect x="8.8399%" y="1045" width="0.0131%" height="15" fill="rgb(223,154,38)" fg:x="4706" fg:w="7"/><text x="9.0899%" y="1055.50"></text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (6 samples, 0.01%)</title><rect x="8.8418%" y="1029" width="0.0113%" height="15" fill="rgb(251,22,52)" fg:x="4707" fg:w="6"/><text x="9.0918%" y="1039.50"></text></g><g><title>std::io::Write::write_fmt (6 samples, 0.01%)</title><rect x="8.8418%" y="1013" width="0.0113%" height="15" fill="rgb(229,209,22)" fg:x="4707" fg:w="6"/><text x="9.0918%" y="1023.50"></text></g><g><title>core::fmt::write (6 samples, 0.01%)</title><rect x="8.8418%" y="997" width="0.0113%" height="15" fill="rgb(234,138,34)" fg:x="4707" fg:w="6"/><text x="9.0918%" y="1007.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.01%)</title><rect x="8.8418%" y="981" width="0.0113%" height="15" fill="rgb(212,95,11)" fg:x="4707" fg:w="6"/><text x="9.0918%" y="991.50"></text></g><g><title>log::__private_api_log (9 samples, 0.02%)</title><rect x="8.8399%" y="1093" width="0.0169%" height="15" fill="rgb(240,179,47)" fg:x="4706" fg:w="9"/><text x="9.0899%" y="1103.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (9 samples, 0.02%)</title><rect x="8.8399%" y="1077" width="0.0169%" height="15" fill="rgb(240,163,11)" fg:x="4706" fg:w="9"/><text x="9.0899%" y="1087.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (92 samples, 0.17%)</title><rect x="9.0784%" y="1077" width="0.1728%" height="15" fill="rgb(236,37,12)" fg:x="4833" fg:w="92"/><text x="9.3284%" y="1087.50"></text></g><g><title>__libc_malloc (7 samples, 0.01%)</title><rect x="9.2381%" y="1061" width="0.0131%" height="15" fill="rgb(232,164,16)" fg:x="4918" fg:w="7"/><text x="9.4881%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.02%)</title><rect x="9.2513%" y="1077" width="0.0169%" height="15" fill="rgb(244,205,15)" fg:x="4925" fg:w="9"/><text x="9.5013%" y="1087.50"></text></g><g><title>__nss_passwd_lookup (23 samples, 0.04%)</title><rect x="9.3997%" y="1061" width="0.0432%" height="15" fill="rgb(223,117,47)" fg:x="5004" fg:w="23"/><text x="9.6497%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (59 samples, 0.11%)</title><rect x="9.4429%" y="1061" width="0.1108%" height="15" fill="rgb(244,107,35)" fg:x="5027" fg:w="59"/><text x="9.6929%" y="1071.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (59 samples, 0.11%)</title><rect x="9.4429%" y="1045" width="0.1108%" height="15" fill="rgb(205,140,8)" fg:x="5027" fg:w="59"/><text x="9.6929%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (63 samples, 0.12%)</title><rect x="9.6457%" y="1045" width="0.1183%" height="15" fill="rgb(228,84,46)" fg:x="5135" fg:w="63"/><text x="9.8957%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (28 samples, 0.05%)</title><rect x="9.7641%" y="1045" width="0.0526%" height="15" fill="rgb(254,188,9)" fg:x="5198" fg:w="28"/><text x="10.0141%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (6 samples, 0.01%)</title><rect x="9.8542%" y="1029" width="0.0113%" height="15" fill="rgb(206,112,54)" fg:x="5246" fg:w="6"/><text x="10.1042%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (199 samples, 0.37%)</title><rect x="9.5537%" y="1061" width="0.3738%" height="15" fill="rgb(216,84,49)" fg:x="5086" fg:w="199"/><text x="9.8037%" y="1071.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (59 samples, 0.11%)</title><rect x="9.8167%" y="1045" width="0.1108%" height="15" fill="rgb(214,194,35)" fg:x="5226" fg:w="59"/><text x="10.0667%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (33 samples, 0.06%)</title><rect x="9.8655%" y="1029" width="0.0620%" height="15" fill="rgb(249,28,3)" fg:x="5252" fg:w="33"/><text x="10.1155%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (12 samples, 0.02%)</title><rect x="10.1285%" y="1045" width="0.0225%" height="15" fill="rgb(222,56,52)" fg:x="5392" fg:w="12"/><text x="10.3785%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (25 samples, 0.05%)</title><rect x="10.1604%" y="1045" width="0.0470%" height="15" fill="rgb(245,217,50)" fg:x="5409" fg:w="25"/><text x="10.4104%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (73 samples, 0.14%)</title><rect x="10.2111%" y="1045" width="0.1371%" height="15" fill="rgb(213,201,24)" fg:x="5436" fg:w="73"/><text x="10.4611%" y="1055.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (68 samples, 0.13%)</title><rect x="10.2205%" y="1029" width="0.1277%" height="15" fill="rgb(248,116,28)" fg:x="5441" fg:w="68"/><text x="10.4705%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (121 samples, 0.23%)</title><rect x="10.4422%" y="1029" width="0.2273%" height="15" fill="rgb(219,72,43)" fg:x="5559" fg:w="121"/><text x="10.6922%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (6 samples, 0.01%)</title><rect x="10.7070%" y="1013" width="0.0113%" height="15" fill="rgb(209,138,14)" fg:x="5700" fg:w="6"/><text x="10.9570%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (29 samples, 0.05%)</title><rect x="10.6695%" y="1029" width="0.0545%" height="15" fill="rgb(222,18,33)" fg:x="5680" fg:w="29"/><text x="10.9195%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (8 samples, 0.02%)</title><rect x="10.7653%" y="1013" width="0.0150%" height="15" fill="rgb(213,199,7)" fg:x="5731" fg:w="8"/><text x="11.0153%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (270 samples, 0.51%)</title><rect x="10.3483%" y="1045" width="0.5072%" height="15" fill="rgb(250,110,10)" fg:x="5509" fg:w="270"/><text x="10.5983%" y="1055.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (70 samples, 0.13%)</title><rect x="10.7239%" y="1029" width="0.1315%" height="15" fill="rgb(248,123,6)" fg:x="5709" fg:w="70"/><text x="10.9739%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (40 samples, 0.08%)</title><rect x="10.7803%" y="1013" width="0.0751%" height="15" fill="rgb(206,91,31)" fg:x="5739" fg:w="40"/><text x="11.0303%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (49 samples, 0.09%)</title><rect x="11.4002%" y="1029" width="0.0920%" height="15" fill="rgb(211,154,13)" fg:x="6069" fg:w="49"/><text x="11.6502%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (24 samples, 0.05%)</title><rect x="11.5073%" y="1029" width="0.0451%" height="15" fill="rgb(225,148,7)" fg:x="6126" fg:w="24"/><text x="11.7573%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::page_store::base::PageMut&gt; (120 samples, 0.23%)</title><rect x="11.5523%" y="1029" width="0.2254%" height="15" fill="rgb(220,160,43)" fg:x="6150" fg:w="120"/><text x="11.8023%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (117 samples, 0.22%)</title><rect x="11.5580%" y="1013" width="0.2198%" height="15" fill="rgb(213,52,39)" fg:x="6153" fg:w="117"/><text x="11.8080%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (354 samples, 0.66%)</title><rect x="11.8585%" y="1013" width="0.6650%" height="15" fill="rgb(243,137,7)" fg:x="6313" fg:w="354"/><text x="12.1085%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (41 samples, 0.08%)</title><rect x="12.5235%" y="1013" width="0.0770%" height="15" fill="rgb(230,79,13)" fg:x="6667" fg:w="41"/><text x="12.7735%" y="1023.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (10 samples, 0.02%)</title><rect x="12.6381%" y="997" width="0.0188%" height="15" fill="rgb(247,105,23)" fg:x="6728" fg:w="10"/><text x="12.8881%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_for_key (487 samples, 0.91%)</title><rect x="11.7777%" y="1029" width="0.9148%" height="15" fill="rgb(223,179,41)" fg:x="6270" fg:w="487"/><text x="12.0277%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (49 samples, 0.09%)</title><rect x="12.6005%" y="1013" width="0.0920%" height="15" fill="rgb(218,9,34)" fg:x="6708" fg:w="49"/><text x="12.8505%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (19 samples, 0.04%)</title><rect x="12.6568%" y="997" width="0.0357%" height="15" fill="rgb(222,106,8)" fg:x="6738" fg:w="19"/><text x="12.9068%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::child_page (57 samples, 0.11%)</title><rect x="12.6925%" y="1029" width="0.1071%" height="15" fill="rgb(211,220,0)" fg:x="6757" fg:w="57"/><text x="12.9425%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key (15 samples, 0.03%)</title><rect x="12.7996%" y="1029" width="0.0282%" height="15" fill="rgb(229,52,16)" fg:x="6814" fg:w="15"/><text x="13.0496%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::BranchAccessor&lt;T&gt;::key_end (7 samples, 0.01%)</title><rect x="12.8146%" y="1013" width="0.0131%" height="15" fill="rgb(212,155,18)" fg:x="6822" fg:w="7"/><text x="13.0646%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.02%)</title><rect x="12.8315%" y="1013" width="0.0169%" height="15" fill="rgb(242,21,14)" fg:x="6831" fg:w="9"/><text x="13.0815%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::RawBranchBuilder::write_nth_key (8 samples, 0.02%)</title><rect x="12.8560%" y="1013" width="0.0150%" height="15" fill="rgb(222,19,48)" fg:x="6844" fg:w="8"/><text x="13.1060%" y="1023.50"></text></g><g><title>ext4_block_write_begin (9 samples, 0.02%)</title><rect x="12.9536%" y="725" width="0.0169%" height="15" fill="rgb(232,45,27)" fg:x="6896" fg:w="9"/><text x="13.2036%" y="735.50"></text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.01%)</title><rect x="12.9931%" y="645" width="0.0113%" height="15" fill="rgb(249,103,42)" fg:x="6917" fg:w="6"/><text x="13.2431%" y="655.50"></text></g><g><title>__add_to_page_cache_locked (14 samples, 0.03%)</title><rect x="12.9818%" y="677" width="0.0263%" height="15" fill="rgb(246,81,33)" fg:x="6911" fg:w="14"/><text x="13.2318%" y="687.50"></text></g><g><title>mem_cgroup_try_charge (8 samples, 0.02%)</title><rect x="12.9931%" y="661" width="0.0150%" height="15" fill="rgb(252,33,42)" fg:x="6917" fg:w="8"/><text x="13.2431%" y="671.50"></text></g><g><title>add_to_page_cache_lru (16 samples, 0.03%)</title><rect x="12.9818%" y="693" width="0.0301%" height="15" fill="rgb(209,212,41)" fg:x="6911" fg:w="16"/><text x="13.2318%" y="703.50"></text></g><g><title>ext4_da_write_begin (35 samples, 0.07%)</title><rect x="12.9499%" y="741" width="0.0657%" height="15" fill="rgb(207,154,6)" fg:x="6894" fg:w="35"/><text x="13.1999%" y="751.50"></text></g><g><title>grab_cache_page_write_begin (24 samples, 0.05%)</title><rect x="12.9705%" y="725" width="0.0451%" height="15" fill="rgb(223,64,47)" fg:x="6905" fg:w="24"/><text x="13.2205%" y="735.50"></text></g><g><title>pagecache_get_page (24 samples, 0.05%)</title><rect x="12.9705%" y="709" width="0.0451%" height="15" fill="rgb(211,161,38)" fg:x="6905" fg:w="24"/><text x="13.2205%" y="719.50"></text></g><g><title>ext4_da_write_end (11 samples, 0.02%)</title><rect x="13.0156%" y="741" width="0.0207%" height="15" fill="rgb(219,138,40)" fg:x="6929" fg:w="11"/><text x="13.2656%" y="751.50"></text></g><g><title>generic_write_end (10 samples, 0.02%)</title><rect x="13.0175%" y="725" width="0.0188%" height="15" fill="rgb(241,228,46)" fg:x="6930" fg:w="10"/><text x="13.2675%" y="735.50"></text></g><g><title>block_write_end (9 samples, 0.02%)</title><rect x="13.0194%" y="709" width="0.0169%" height="15" fill="rgb(223,209,38)" fg:x="6931" fg:w="9"/><text x="13.2694%" y="719.50"></text></g><g><title>__block_commit_write.isra.41 (9 samples, 0.02%)</title><rect x="13.0194%" y="693" width="0.0169%" height="15" fill="rgb(236,164,45)" fg:x="6931" fg:w="9"/><text x="13.2694%" y="703.50"></text></g><g><title>mark_buffer_dirty (8 samples, 0.02%)</title><rect x="13.0213%" y="677" width="0.0150%" height="15" fill="rgb(231,15,5)" fg:x="6932" fg:w="8"/><text x="13.2713%" y="687.50"></text></g><g><title>__set_page_dirty (6 samples, 0.01%)</title><rect x="13.0250%" y="661" width="0.0113%" height="15" fill="rgb(252,35,15)" fg:x="6934" fg:w="6"/><text x="13.2750%" y="671.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="13.0250%" y="645" width="0.0113%" height="15" fill="rgb(248,181,18)" fg:x="6934" fg:w="6"/><text x="13.2750%" y="655.50"></text></g><g><title>iov_iter_copy_from_user_atomic (10 samples, 0.02%)</title><rect x="13.0363%" y="741" width="0.0188%" height="15" fill="rgb(233,39,42)" fg:x="6940" fg:w="10"/><text x="13.2863%" y="751.50"></text></g><g><title>copy_user_enhanced_fast_string (9 samples, 0.02%)</title><rect x="13.0382%" y="725" width="0.0169%" height="15" fill="rgb(238,110,33)" fg:x="6941" fg:w="9"/><text x="13.2882%" y="735.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (98 samples, 0.18%)</title><rect x="12.8823%" y="997" width="0.1841%" height="15" fill="rgb(233,195,10)" fg:x="6858" fg:w="98"/><text x="13.1323%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (67 samples, 0.13%)</title><rect x="12.9405%" y="981" width="0.1259%" height="15" fill="rgb(254,105,3)" fg:x="6889" fg:w="67"/><text x="13.1905%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (67 samples, 0.13%)</title><rect x="12.9405%" y="965" width="0.1259%" height="15" fill="rgb(221,225,9)" fg:x="6889" fg:w="67"/><text x="13.1905%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write_at (67 samples, 0.13%)</title><rect x="12.9405%" y="949" width="0.1259%" height="15" fill="rgb(224,227,45)" fg:x="6889" fg:w="67"/><text x="13.1905%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (67 samples, 0.13%)</title><rect x="12.9405%" y="933" width="0.1259%" height="15" fill="rgb(229,198,43)" fg:x="6889" fg:w="67"/><text x="13.1905%" y="943.50"></text></g><g><title>__libc_pwrite64 (67 samples, 0.13%)</title><rect x="12.9405%" y="917" width="0.1259%" height="15" fill="rgb(206,209,35)" fg:x="6889" fg:w="67"/><text x="13.1905%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.12%)</title><rect x="12.9442%" y="901" width="0.1221%" height="15" fill="rgb(245,195,53)" fg:x="6891" fg:w="65"/><text x="13.1942%" y="911.50"></text></g><g><title>do_syscall_64 (65 samples, 0.12%)</title><rect x="12.9442%" y="885" width="0.1221%" height="15" fill="rgb(240,92,26)" fg:x="6891" fg:w="65"/><text x="13.1942%" y="895.50"></text></g><g><title>__x64_sys_pwrite64 (64 samples, 0.12%)</title><rect x="12.9461%" y="869" width="0.1202%" height="15" fill="rgb(207,40,23)" fg:x="6892" fg:w="64"/><text x="13.1961%" y="879.50"></text></g><g><title>ksys_pwrite64 (64 samples, 0.12%)</title><rect x="12.9461%" y="853" width="0.1202%" height="15" fill="rgb(223,111,35)" fg:x="6892" fg:w="64"/><text x="13.1961%" y="863.50"></text></g><g><title>vfs_write (62 samples, 0.12%)</title><rect x="12.9499%" y="837" width="0.1165%" height="15" fill="rgb(229,147,28)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="847.50"></text></g><g><title>__vfs_write (62 samples, 0.12%)</title><rect x="12.9499%" y="821" width="0.1165%" height="15" fill="rgb(211,29,28)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="831.50"></text></g><g><title>new_sync_write (62 samples, 0.12%)</title><rect x="12.9499%" y="805" width="0.1165%" height="15" fill="rgb(228,72,33)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="815.50"></text></g><g><title>ext4_file_write_iter (62 samples, 0.12%)</title><rect x="12.9499%" y="789" width="0.1165%" height="15" fill="rgb(205,214,31)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="799.50"></text></g><g><title>__generic_file_write_iter (62 samples, 0.12%)</title><rect x="12.9499%" y="773" width="0.1165%" height="15" fill="rgb(224,111,15)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="783.50"></text></g><g><title>generic_perform_write (62 samples, 0.12%)</title><rect x="12.9499%" y="757" width="0.1165%" height="15" fill="rgb(253,21,26)" fg:x="6894" fg:w="62"/><text x="13.1999%" y="767.50"></text></g><g><title>iov_iter_fault_in_readable (6 samples, 0.01%)</title><rect x="13.0551%" y="741" width="0.0113%" height="15" fill="rgb(245,139,43)" fg:x="6950" fg:w="6"/><text x="13.3051%" y="751.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::build (130 samples, 0.24%)</title><rect x="12.8278%" y="1029" width="0.2442%" height="15" fill="rgb(252,170,7)" fg:x="6829" fg:w="130"/><text x="13.0778%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (107 samples, 0.20%)</title><rect x="12.8710%" y="1013" width="0.2010%" height="15" fill="rgb(231,118,14)" fg:x="6852" fg:w="107"/><text x="13.1210%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::build_split (9 samples, 0.02%)</title><rect x="13.0720%" y="1029" width="0.0169%" height="15" fill="rgb(238,83,0)" fg:x="6959" fg:w="9"/><text x="13.3220%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (9 samples, 0.02%)</title><rect x="13.0720%" y="1013" width="0.0169%" height="15" fill="rgb(221,39,39)" fg:x="6959" fg:w="9"/><text x="13.3220%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (8 samples, 0.02%)</title><rect x="13.0739%" y="997" width="0.0150%" height="15" fill="rgb(222,119,46)" fg:x="6960" fg:w="8"/><text x="13.3239%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (6 samples, 0.01%)</title><rect x="13.0776%" y="981" width="0.0113%" height="15" fill="rgb(222,165,49)" fg:x="6962" fg:w="6"/><text x="13.3276%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (6 samples, 0.01%)</title><rect x="13.0776%" y="965" width="0.0113%" height="15" fill="rgb(219,113,52)" fg:x="6962" fg:w="6"/><text x="13.3276%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write_at (6 samples, 0.01%)</title><rect x="13.0776%" y="949" width="0.0113%" height="15" fill="rgb(214,7,15)" fg:x="6962" fg:w="6"/><text x="13.3276%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (6 samples, 0.01%)</title><rect x="13.0776%" y="933" width="0.0113%" height="15" fill="rgb(235,32,4)" fg:x="6962" fg:w="6"/><text x="13.3276%" y="943.50"></text></g><g><title>__libc_pwrite64 (6 samples, 0.01%)</title><rect x="13.0776%" y="917" width="0.0113%" height="15" fill="rgb(238,90,54)" fg:x="6962" fg:w="6"/><text x="13.3276%" y="927.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::new (10 samples, 0.02%)</title><rect x="13.0889%" y="1029" width="0.0188%" height="15" fill="rgb(213,208,19)" fg:x="6968" fg:w="10"/><text x="13.3389%" y="1039.50"></text></g><g><title>__libc_malloc (10 samples, 0.02%)</title><rect x="13.0889%" y="1013" width="0.0188%" height="15" fill="rgb(233,156,4)" fg:x="6968" fg:w="10"/><text x="13.3389%" y="1023.50"></text></g><g><title>_IO_str_seekoff (6 samples, 0.01%)</title><rect x="13.0964%" y="997" width="0.0113%" height="15" fill="rgb(207,194,5)" fg:x="6972" fg:w="6"/><text x="13.3464%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::BranchBuilder::push_child (24 samples, 0.05%)</title><rect x="13.1077%" y="1029" width="0.0451%" height="15" fill="rgb(206,111,30)" fg:x="6978" fg:w="24"/><text x="13.3577%" y="1039.50"></text></g><g><title>&lt;redb::tree_store::page_store::base::PageImpl as redb::tree_store::page_store::base::Page&gt;::memory (28 samples, 0.05%)</title><rect x="13.6881%" y="1013" width="0.0526%" height="15" fill="rgb(243,70,54)" fg:x="7287" fg:w="28"/><text x="13.9381%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (230 samples, 0.43%)</title><rect x="13.7501%" y="1013" width="0.4320%" height="15" fill="rgb(242,28,8)" fg:x="7320" fg:w="230"/><text x="14.0001%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::entry (39 samples, 0.07%)</title><rect x="14.1972%" y="1013" width="0.0733%" height="15" fill="rgb(219,106,18)" fg:x="7558" fg:w="39"/><text x="14.4472%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (16 samples, 0.03%)</title><rect x="14.2404%" y="997" width="0.0301%" height="15" fill="rgb(244,222,10)" fg:x="7581" fg:w="16"/><text x="14.4904%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (19 samples, 0.04%)</title><rect x="14.2704%" y="1013" width="0.0357%" height="15" fill="rgb(236,179,52)" fg:x="7597" fg:w="19"/><text x="14.5204%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (41 samples, 0.08%)</title><rect x="14.4019%" y="981" width="0.0770%" height="15" fill="rgb(213,23,39)" fg:x="7667" fg:w="41"/><text x="14.6519%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (74 samples, 0.14%)</title><rect x="14.3418%" y="997" width="0.1390%" height="15" fill="rgb(238,48,10)" fg:x="7635" fg:w="74"/><text x="14.5918%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.01%)</title><rect x="14.5071%" y="981" width="0.0131%" height="15" fill="rgb(251,196,23)" fg:x="7723" fg:w="7"/><text x="14.7571%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build (123 samples, 0.23%)</title><rect x="14.3268%" y="1013" width="0.2310%" height="15" fill="rgb(250,152,24)" fg:x="7627" fg:w="123"/><text x="14.5768%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (41 samples, 0.08%)</title><rect x="14.4808%" y="997" width="0.0770%" height="15" fill="rgb(209,150,17)" fg:x="7709" fg:w="41"/><text x="14.7308%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper_retry (17 samples, 0.03%)</title><rect x="14.5259%" y="981" width="0.0319%" height="15" fill="rgb(234,202,34)" fg:x="7733" fg:w="17"/><text x="14.7759%" y="991.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::alloc_inner (11 samples, 0.02%)</title><rect x="14.5372%" y="965" width="0.0207%" height="15" fill="rgb(253,148,53)" fg:x="7739" fg:w="11"/><text x="14.7872%" y="975.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (40 samples, 0.08%)</title><rect x="14.5672%" y="997" width="0.0751%" height="15" fill="rgb(218,129,16)" fg:x="7755" fg:w="40"/><text x="14.8172%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (25 samples, 0.05%)</title><rect x="14.5954%" y="981" width="0.0470%" height="15" fill="rgb(216,85,19)" fg:x="7770" fg:w="25"/><text x="14.8454%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (64 samples, 0.12%)</title><rect x="14.5578%" y="1013" width="0.1202%" height="15" fill="rgb(235,228,7)" fg:x="7750" fg:w="64"/><text x="14.8078%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::allocate_helper (19 samples, 0.04%)</title><rect x="14.6423%" y="997" width="0.0357%" height="15" fill="rgb(245,175,0)" fg:x="7795" fg:w="19"/><text x="14.8923%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::new (26 samples, 0.05%)</title><rect x="14.6780%" y="1013" width="0.0488%" height="15" fill="rgb(208,168,36)" fg:x="7814" fg:w="26"/><text x="14.9280%" y="1023.50"></text></g><g><title>__libc_malloc (26 samples, 0.05%)</title><rect x="14.6780%" y="997" width="0.0488%" height="15" fill="rgb(246,171,24)" fg:x="7814" fg:w="26"/><text x="14.9280%" y="1007.50"></text></g><g><title>_IO_str_seekoff (17 samples, 0.03%)</title><rect x="14.6949%" y="981" width="0.0319%" height="15" fill="rgb(215,142,24)" fg:x="7823" fg:w="17"/><text x="14.9449%" y="991.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::push (18 samples, 0.03%)</title><rect x="14.7269%" y="1013" width="0.0338%" height="15" fill="rgb(250,187,7)" fg:x="7840" fg:w="18"/><text x="14.9769%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (247 samples, 0.46%)</title><rect x="14.8978%" y="997" width="0.4640%" height="15" fill="rgb(228,66,33)" fg:x="7931" fg:w="247"/><text x="15.1478%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (11 samples, 0.02%)</title><rect x="15.3618%" y="997" width="0.0207%" height="15" fill="rgb(234,215,21)" fg:x="8178" fg:w="11"/><text x="15.6118%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_range (6 samples, 0.01%)</title><rect x="15.3824%" y="997" width="0.0113%" height="15" fill="rgb(222,191,20)" fg:x="8189" fg:w="6"/><text x="15.6324%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::insert (492 samples, 0.92%)</title><rect x="14.7607%" y="1013" width="0.9242%" height="15" fill="rgb(245,79,54)" fg:x="7858" fg:w="492"/><text x="15.0107%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafMutator::update_value_end (155 samples, 0.29%)</title><rect x="15.3937%" y="997" width="0.2912%" height="15" fill="rgb(240,10,37)" fg:x="8195" fg:w="155"/><text x="15.6437%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (6 samples, 0.01%)</title><rect x="15.7243%" y="981" width="0.0113%" height="15" fill="rgb(214,192,32)" fg:x="8371" fg:w="6"/><text x="15.9743%" y="991.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (19 samples, 0.04%)</title><rect x="15.7037%" y="1013" width="0.0357%" height="15" fill="rgb(209,36,54)" fg:x="8360" fg:w="19"/><text x="15.9537%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (11 samples, 0.02%)</title><rect x="15.7187%" y="997" width="0.0207%" height="15" fill="rgb(220,10,11)" fg:x="8368" fg:w="11"/><text x="15.9687%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (16 samples, 0.03%)</title><rect x="16.4212%" y="981" width="0.0301%" height="15" fill="rgb(221,106,17)" fg:x="8742" fg:w="16"/><text x="16.6712%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (28 samples, 0.05%)</title><rect x="16.4513%" y="981" width="0.0526%" height="15" fill="rgb(251,142,44)" fg:x="8758" fg:w="28"/><text x="16.7013%" y="991.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (24 samples, 0.05%)</title><rect x="16.4588%" y="965" width="0.0451%" height="15" fill="rgb(238,13,15)" fg:x="8762" fg:w="24"/><text x="16.7088%" y="975.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (21 samples, 0.04%)</title><rect x="16.4644%" y="949" width="0.0394%" height="15" fill="rgb(208,107,27)" fg:x="8765" fg:w="21"/><text x="16.7144%" y="959.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.01%)</title><rect x="16.4907%" y="933" width="0.0131%" height="15" fill="rgb(205,136,37)" fg:x="8779" fg:w="7"/><text x="16.7407%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (49 samples, 0.09%)</title><rect x="16.5039%" y="981" width="0.0920%" height="15" fill="rgb(250,205,27)" fg:x="8786" fg:w="49"/><text x="16.7539%" y="991.50"></text></g><g><title>cfree (45 samples, 0.08%)</title><rect x="16.5114%" y="965" width="0.0845%" height="15" fill="rgb(210,80,43)" fg:x="8790" fg:w="45"/><text x="16.7614%" y="975.50"></text></g><g><title>cfree (26 samples, 0.05%)</title><rect x="16.5997%" y="981" width="0.0488%" height="15" fill="rgb(247,160,36)" fg:x="8837" fg:w="26"/><text x="16.8497%" y="991.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (30 samples, 0.06%)</title><rect x="16.6485%" y="981" width="0.0564%" height="15" fill="rgb(234,13,49)" fg:x="8863" fg:w="30"/><text x="16.8985%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (22 samples, 0.04%)</title><rect x="16.6635%" y="965" width="0.0413%" height="15" fill="rgb(234,122,0)" fg:x="8871" fg:w="22"/><text x="16.9135%" y="975.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (12 samples, 0.02%)</title><rect x="16.6823%" y="949" width="0.0225%" height="15" fill="rgb(207,146,38)" fg:x="8881" fg:w="12"/><text x="16.9323%" y="959.50"></text></g><g><title>__nss_passwd_lookup (6 samples, 0.01%)</title><rect x="16.6936%" y="933" width="0.0113%" height="15" fill="rgb(207,177,25)" fg:x="8887" fg:w="6"/><text x="16.9436%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (6 samples, 0.01%)</title><rect x="16.7161%" y="965" width="0.0113%" height="15" fill="rgb(211,178,42)" fg:x="8899" fg:w="6"/><text x="16.9661%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::pop_lowest_priority (36 samples, 0.07%)</title><rect x="16.7049%" y="981" width="0.0676%" height="15" fill="rgb(230,69,54)" fg:x="8893" fg:w="36"/><text x="16.9549%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (24 samples, 0.05%)</title><rect x="16.7274%" y="965" width="0.0451%" height="15" fill="rgb(214,135,41)" fg:x="8905" fg:w="24"/><text x="16.9774%" y="975.50"></text></g><g><title>__pthread_disable_asynccancel (9 samples, 0.02%)</title><rect x="16.8476%" y="901" width="0.0169%" height="15" fill="rgb(237,67,25)" fg:x="8969" fg:w="9"/><text x="17.0976%" y="911.50"></text></g><g><title>__pthread_enable_asynccancel (6 samples, 0.01%)</title><rect x="16.8645%" y="901" width="0.0113%" height="15" fill="rgb(222,189,50)" fg:x="8978" fg:w="6"/><text x="17.1145%" y="911.50"></text></g><g><title>__fdget (9 samples, 0.02%)</title><rect x="16.9284%" y="837" width="0.0169%" height="15" fill="rgb(245,148,34)" fg:x="9012" fg:w="9"/><text x="17.1784%" y="847.50"></text></g><g><title>__fget_light (9 samples, 0.02%)</title><rect x="16.9284%" y="821" width="0.0169%" height="15" fill="rgb(222,29,6)" fg:x="9012" fg:w="9"/><text x="17.1784%" y="831.50"></text></g><g><title>__sb_start_write (9 samples, 0.02%)</title><rect x="16.9810%" y="821" width="0.0169%" height="15" fill="rgb(221,189,43)" fg:x="9040" fg:w="9"/><text x="17.2310%" y="831.50"></text></g><g><title>file_update_time (6 samples, 0.01%)</title><rect x="17.0298%" y="757" width="0.0113%" height="15" fill="rgb(207,36,27)" fg:x="9066" fg:w="6"/><text x="17.2798%" y="767.50"></text></g><g><title>balance_dirty_pages_ratelimited (7 samples, 0.01%)</title><rect x="17.0618%" y="741" width="0.0131%" height="15" fill="rgb(217,90,24)" fg:x="9083" fg:w="7"/><text x="17.3118%" y="751.50"></text></g><g><title>__ext4_journal_start_sb (43 samples, 0.08%)</title><rect x="17.1012%" y="725" width="0.0808%" height="15" fill="rgb(224,66,35)" fg:x="9104" fg:w="43"/><text x="17.3512%" y="735.50"></text></g><g><title>jbd2__journal_start (38 samples, 0.07%)</title><rect x="17.1106%" y="709" width="0.0714%" height="15" fill="rgb(221,13,50)" fg:x="9109" fg:w="38"/><text x="17.3606%" y="719.50"></text></g><g><title>start_this_handle (22 samples, 0.04%)</title><rect x="17.1407%" y="693" width="0.0413%" height="15" fill="rgb(236,68,49)" fg:x="9125" fg:w="22"/><text x="17.3907%" y="703.50"></text></g><g><title>ext4_block_write_begin (81 samples, 0.15%)</title><rect x="17.1820%" y="725" width="0.1522%" height="15" fill="rgb(229,146,28)" fg:x="9147" fg:w="81"/><text x="17.4320%" y="735.50"></text></g><g><title>ext4_nonda_switch (7 samples, 0.01%)</title><rect x="17.3341%" y="725" width="0.0131%" height="15" fill="rgb(225,31,38)" fg:x="9228" fg:w="7"/><text x="17.5841%" y="735.50"></text></g><g><title>__add_to_page_cache_locked (14 samples, 0.03%)</title><rect x="17.3698%" y="677" width="0.0263%" height="15" fill="rgb(250,208,3)" fg:x="9247" fg:w="14"/><text x="17.6198%" y="687.50"></text></g><g><title>add_to_page_cache_lru (16 samples, 0.03%)</title><rect x="17.3698%" y="693" width="0.0301%" height="15" fill="rgb(246,54,23)" fg:x="9247" fg:w="16"/><text x="17.6198%" y="703.50"></text></g><g><title>find_get_entry (76 samples, 0.14%)</title><rect x="17.3999%" y="693" width="0.1428%" height="15" fill="rgb(243,76,11)" fg:x="9263" fg:w="76"/><text x="17.6499%" y="703.50"></text></g><g><title>xas_load (46 samples, 0.09%)</title><rect x="17.4562%" y="677" width="0.0864%" height="15" fill="rgb(245,21,50)" fg:x="9293" fg:w="46"/><text x="17.7062%" y="687.50"></text></g><g><title>grab_cache_page_write_begin (105 samples, 0.20%)</title><rect x="17.3473%" y="725" width="0.1972%" height="15" fill="rgb(228,9,43)" fg:x="9235" fg:w="105"/><text x="17.5973%" y="735.50"></text></g><g><title>pagecache_get_page (105 samples, 0.20%)</title><rect x="17.3473%" y="709" width="0.1972%" height="15" fill="rgb(208,100,47)" fg:x="9235" fg:w="105"/><text x="17.5973%" y="719.50"></text></g><g><title>ext4_da_write_begin (255 samples, 0.48%)</title><rect x="17.0768%" y="741" width="0.4790%" height="15" fill="rgb(232,26,8)" fg:x="9091" fg:w="255"/><text x="17.3268%" y="751.50"></text></g><g><title>__lock_text_start (10 samples, 0.02%)</title><rect x="17.6347%" y="661" width="0.0188%" height="15" fill="rgb(216,166,38)" fg:x="9388" fg:w="10"/><text x="17.8847%" y="671.50"></text></g><g><title>__wake_up_common_lock (20 samples, 0.04%)</title><rect x="17.6290%" y="677" width="0.0376%" height="15" fill="rgb(251,202,51)" fg:x="9385" fg:w="20"/><text x="17.8790%" y="687.50"></text></g><g><title>_raw_spin_lock_irqsave (7 samples, 0.01%)</title><rect x="17.6535%" y="661" width="0.0131%" height="15" fill="rgb(254,216,34)" fg:x="9398" fg:w="7"/><text x="17.9035%" y="671.50"></text></g><g><title>__wake_up (22 samples, 0.04%)</title><rect x="17.6272%" y="693" width="0.0413%" height="15" fill="rgb(251,32,27)" fg:x="9384" fg:w="22"/><text x="17.8772%" y="703.50"></text></g><g><title>jbd2_journal_stop (58 samples, 0.11%)</title><rect x="17.5877%" y="709" width="0.1089%" height="15" fill="rgb(208,127,28)" fg:x="9363" fg:w="58"/><text x="17.8377%" y="719.50"></text></g><g><title>kmem_cache_free (15 samples, 0.03%)</title><rect x="17.6685%" y="693" width="0.0282%" height="15" fill="rgb(224,137,22)" fg:x="9406" fg:w="15"/><text x="17.9185%" y="703.50"></text></g><g><title>__ext4_journal_stop (63 samples, 0.12%)</title><rect x="17.5821%" y="725" width="0.1183%" height="15" fill="rgb(254,70,32)" fg:x="9360" fg:w="63"/><text x="17.8321%" y="735.50"></text></g><g><title>block_write_end (10 samples, 0.02%)</title><rect x="17.7004%" y="725" width="0.0188%" height="15" fill="rgb(229,75,37)" fg:x="9423" fg:w="10"/><text x="17.9504%" y="735.50"></text></g><g><title>block_write_end (68 samples, 0.13%)</title><rect x="17.7324%" y="709" width="0.1277%" height="15" fill="rgb(252,64,23)" fg:x="9440" fg:w="68"/><text x="17.9824%" y="719.50"></text></g><g><title>__block_commit_write.isra.41 (67 samples, 0.13%)</title><rect x="17.7342%" y="693" width="0.1259%" height="15" fill="rgb(232,162,48)" fg:x="9441" fg:w="67"/><text x="17.9842%" y="703.50"></text></g><g><title>mark_buffer_dirty (51 samples, 0.10%)</title><rect x="17.7643%" y="677" width="0.0958%" height="15" fill="rgb(246,160,12)" fg:x="9457" fg:w="51"/><text x="18.0143%" y="687.50"></text></g><g><title>generic_write_end (83 samples, 0.16%)</title><rect x="17.7192%" y="725" width="0.1559%" height="15" fill="rgb(247,166,0)" fg:x="9433" fg:w="83"/><text x="17.9692%" y="735.50"></text></g><g><title>unlock_page (8 samples, 0.02%)</title><rect x="17.8601%" y="709" width="0.0150%" height="15" fill="rgb(249,219,21)" fg:x="9508" fg:w="8"/><text x="18.1101%" y="719.50"></text></g><g><title>ext4_da_write_end (171 samples, 0.32%)</title><rect x="17.5558%" y="741" width="0.3212%" height="15" fill="rgb(205,209,3)" fg:x="9346" fg:w="171"/><text x="17.8058%" y="751.50"></text></g><g><title>copy_user_enhanced_fast_string (82 samples, 0.15%)</title><rect x="17.8883%" y="725" width="0.1540%" height="15" fill="rgb(243,44,1)" fg:x="9523" fg:w="82"/><text x="18.1383%" y="735.50"></text></g><g><title>iov_iter_copy_from_user_atomic (90 samples, 0.17%)</title><rect x="17.8808%" y="741" width="0.1691%" height="15" fill="rgb(206,159,16)" fg:x="9519" fg:w="90"/><text x="18.1308%" y="751.50"></text></g><g><title>iov_iter_fault_in_readable (45 samples, 0.08%)</title><rect x="18.0498%" y="741" width="0.0845%" height="15" fill="rgb(244,77,30)" fg:x="9609" fg:w="45"/><text x="18.2998%" y="751.50"></text></g><g><title>generic_perform_write (584 samples, 1.10%)</title><rect x="17.0411%" y="757" width="1.0970%" height="15" fill="rgb(218,69,12)" fg:x="9072" fg:w="584"/><text x="17.2911%" y="767.50"></text></g><g><title>__generic_file_write_iter (601 samples, 1.13%)</title><rect x="17.0110%" y="773" width="1.1289%" height="15" fill="rgb(212,87,7)" fg:x="9056" fg:w="601"/><text x="17.2610%" y="783.50"></text></g><g><title>ext4_write_checks (8 samples, 0.02%)</title><rect x="18.1456%" y="773" width="0.0150%" height="15" fill="rgb(245,114,25)" fg:x="9660" fg:w="8"/><text x="18.3956%" y="783.50"></text></g><g><title>generic_write_checks (6 samples, 0.01%)</title><rect x="18.1494%" y="757" width="0.0113%" height="15" fill="rgb(210,61,42)" fg:x="9662" fg:w="6"/><text x="18.3994%" y="767.50"></text></g><g><title>__vfs_write (627 samples, 1.18%)</title><rect x="16.9979%" y="821" width="1.1778%" height="15" fill="rgb(211,52,33)" fg:x="9049" fg:w="627"/><text x="17.2479%" y="831.50"></text></g><g><title>new_sync_write (626 samples, 1.18%)</title><rect x="16.9998%" y="805" width="1.1759%" height="15" fill="rgb(234,58,33)" fg:x="9050" fg:w="626"/><text x="17.2498%" y="815.50"></text></g><g><title>ext4_file_write_iter (622 samples, 1.17%)</title><rect x="17.0073%" y="789" width="1.1684%" height="15" fill="rgb(220,115,36)" fg:x="9054" fg:w="622"/><text x="17.2573%" y="799.50"></text></g><g><title>up_write (7 samples, 0.01%)</title><rect x="18.1625%" y="773" width="0.0131%" height="15" fill="rgb(243,153,54)" fg:x="9669" fg:w="7"/><text x="18.4125%" y="783.50"></text></g><g><title>fsnotify (7 samples, 0.01%)</title><rect x="18.1757%" y="821" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="9676" fg:w="7"/><text x="18.4257%" y="831.50"></text></g><g><title>__x64_sys_pwrite64 (681 samples, 1.28%)</title><rect x="16.9265%" y="869" width="1.2792%" height="15" fill="rgb(242,102,42)" fg:x="9011" fg:w="681"/><text x="17.1765%" y="879.50"></text></g><g><title>ksys_pwrite64 (681 samples, 1.28%)</title><rect x="16.9265%" y="853" width="1.2792%" height="15" fill="rgb(234,31,38)" fg:x="9011" fg:w="681"/><text x="17.1765%" y="863.50"></text></g><g><title>vfs_write (662 samples, 1.24%)</title><rect x="16.9622%" y="837" width="1.2435%" height="15" fill="rgb(221,117,51)" fg:x="9030" fg:w="662"/><text x="17.2122%" y="847.50"></text></g><g><title>rw_verify_area (8 samples, 0.02%)</title><rect x="18.1907%" y="821" width="0.0150%" height="15" fill="rgb(212,20,18)" fg:x="9684" fg:w="8"/><text x="18.4407%" y="831.50"></text></g><g><title>__libc_pwrite64 (750 samples, 1.41%)</title><rect x="16.7988%" y="917" width="1.4088%" height="15" fill="rgb(245,133,36)" fg:x="8943" fg:w="750"/><text x="17.0488%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (709 samples, 1.33%)</title><rect x="16.8758%" y="901" width="1.3318%" height="15" fill="rgb(212,6,19)" fg:x="8984" fg:w="709"/><text x="17.1258%" y="911.50"></text></g><g><title>do_syscall_64 (709 samples, 1.33%)</title><rect x="16.8758%" y="885" width="1.3318%" height="15" fill="rgb(218,1,36)" fg:x="8984" fg:w="709"/><text x="17.1258%" y="895.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (1,315 samples, 2.47%)</title><rect x="15.7393%" y="1013" width="2.4701%" height="15" fill="rgb(246,84,54)" fg:x="8379" fg:w="1315"/><text x="15.9893%" y="1023.50">re..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (1,306 samples, 2.45%)</title><rect x="15.7563%" y="997" width="2.4532%" height="15" fill="rgb(242,110,6)" fg:x="8388" fg:w="1306"/><text x="16.0063%" y="1007.50">re..</text></g><g><title>std::os::unix::fs::FileExt::write_all_at (765 samples, 1.44%)</title><rect x="16.7725%" y="981" width="1.4370%" height="15" fill="rgb(214,47,5)" fg:x="8929" fg:w="765"/><text x="17.0225%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (751 samples, 1.41%)</title><rect x="16.7988%" y="965" width="1.4107%" height="15" fill="rgb(218,159,25)" fg:x="8943" fg:w="751"/><text x="17.0488%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write_at (751 samples, 1.41%)</title><rect x="16.7988%" y="949" width="1.4107%" height="15" fill="rgb(215,211,28)" fg:x="8943" fg:w="751"/><text x="17.0488%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (751 samples, 1.41%)</title><rect x="16.7988%" y="933" width="1.4107%" height="15" fill="rgb(238,59,32)" fg:x="8943" fg:w="751"/><text x="17.0488%" y="943.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (233 samples, 0.44%)</title><rect x="18.2095%" y="1013" width="0.4377%" height="15" fill="rgb(226,82,3)" fg:x="9694" fg:w="233"/><text x="18.4595%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.06%)</title><rect x="18.5852%" y="997" width="0.0620%" height="15" fill="rgb(240,164,32)" fg:x="9894" fg:w="33"/><text x="18.8352%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="18.6227%" y="981" width="0.0244%" height="15" fill="rgb(232,46,7)" fg:x="9914" fg:w="13"/><text x="18.8727%" y="991.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2,921 samples, 5.49%)</title><rect x="13.1621%" y="1029" width="5.4869%" height="15" fill="rgb(229,129,53)" fg:x="7007" fg:w="2921"/><text x="13.4121%" y="1039.50">redb::t..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::cancel_pending_write (8 samples, 0.02%)</title><rect x="18.6622%" y="997" width="0.0150%" height="15" fill="rgb(234,188,29)" fg:x="9935" fg:w="8"/><text x="18.9122%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.01%)</title><rect x="18.6641%" y="981" width="0.0131%" height="15" fill="rgb(246,141,4)" fg:x="9936" fg:w="7"/><text x="18.9141%" y="991.50"></text></g><g><title>cfree (7 samples, 0.01%)</title><rect x="18.6641%" y="965" width="0.0131%" height="15" fill="rgb(229,23,39)" fg:x="9936" fg:w="7"/><text x="18.9141%" y="975.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_if_uncommitted (20 samples, 0.04%)</title><rect x="18.6490%" y="1029" width="0.0376%" height="15" fill="rgb(206,12,3)" fg:x="9928" fg:w="20"/><text x="18.8990%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::free_helper (15 samples, 0.03%)</title><rect x="18.6584%" y="1013" width="0.0282%" height="15" fill="rgb(252,226,20)" fg:x="9933" fg:w="15"/><text x="18.9084%" y="1023.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="19.6408%" y="997" width="0.0225%" height="15" fill="rgb(216,123,35)" fg:x="10456" fg:w="12"/><text x="19.8908%" y="1007.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="19.6502%" y="981" width="0.0131%" height="15" fill="rgb(212,68,40)" fg:x="10461" fg:w="7"/><text x="19.9002%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (31 samples, 0.06%)</title><rect x="19.6671%" y="997" width="0.0582%" height="15" fill="rgb(254,125,32)" fg:x="10470" fg:w="31"/><text x="19.9171%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (19 samples, 0.04%)</title><rect x="19.6897%" y="981" width="0.0357%" height="15" fill="rgb(253,97,22)" fg:x="10482" fg:w="19"/><text x="19.9397%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (15 samples, 0.03%)</title><rect x="19.6972%" y="965" width="0.0282%" height="15" fill="rgb(241,101,14)" fg:x="10486" fg:w="15"/><text x="19.9472%" y="975.50"></text></g><g><title>async_page_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="933" width="0.0150%" height="15" fill="rgb(238,103,29)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="943.50"></text></g><g><title>do_async_page_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="917" width="0.0150%" height="15" fill="rgb(233,195,47)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="927.50"></text></g><g><title>do_page_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="901" width="0.0150%" height="15" fill="rgb(246,218,30)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="911.50"></text></g><g><title>__do_page_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="885" width="0.0150%" height="15" fill="rgb(219,145,47)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="895.50"></text></g><g><title>handle_mm_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="869" width="0.0150%" height="15" fill="rgb(243,12,26)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="879.50"></text></g><g><title>__handle_mm_fault (8 samples, 0.02%)</title><rect x="19.8644%" y="853" width="0.0150%" height="15" fill="rgb(214,87,16)" fg:x="10575" fg:w="8"/><text x="20.1144%" y="863.50"></text></g><g><title>_IO_str_seekoff (71 samples, 0.13%)</title><rect x="19.7573%" y="965" width="0.1334%" height="15" fill="rgb(208,99,42)" fg:x="10518" fg:w="71"/><text x="20.0073%" y="975.50"></text></g><g><title>_IO_str_seekoff (53 samples, 0.10%)</title><rect x="19.7911%" y="949" width="0.0996%" height="15" fill="rgb(253,99,2)" fg:x="10536" fg:w="53"/><text x="20.0411%" y="959.50"></text></g><g><title>mprotect (6 samples, 0.01%)</title><rect x="19.8794%" y="933" width="0.0113%" height="15" fill="rgb(220,168,23)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="19.8794%" y="917" width="0.0113%" height="15" fill="rgb(242,38,24)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="927.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="19.8794%" y="901" width="0.0113%" height="15" fill="rgb(225,182,9)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="911.50"></text></g><g><title>__x64_sys_mprotect (6 samples, 0.01%)</title><rect x="19.8794%" y="885" width="0.0113%" height="15" fill="rgb(243,178,37)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="895.50"></text></g><g><title>do_mprotect_pkey (6 samples, 0.01%)</title><rect x="19.8794%" y="869" width="0.0113%" height="15" fill="rgb(232,139,19)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="879.50"></text></g><g><title>mprotect_fixup (6 samples, 0.01%)</title><rect x="19.8794%" y="853" width="0.0113%" height="15" fill="rgb(225,201,24)" fg:x="10583" fg:w="6"/><text x="20.1294%" y="863.50"></text></g><g><title>__libc_calloc (109 samples, 0.20%)</title><rect x="19.7273%" y="981" width="0.2047%" height="15" fill="rgb(221,47,46)" fg:x="10502" fg:w="109"/><text x="19.9773%" y="991.50"></text></g><g><title>__nss_passwd_lookup (22 samples, 0.04%)</title><rect x="19.8907%" y="965" width="0.0413%" height="15" fill="rgb(249,23,13)" fg:x="10589" fg:w="22"/><text x="20.1407%" y="975.50"></text></g><g><title>__pthread_enable_asynccancel (31 samples, 0.06%)</title><rect x="19.9996%" y="901" width="0.0582%" height="15" fill="rgb(219,9,5)" fg:x="10647" fg:w="31"/><text x="20.2496%" y="911.50"></text></g><g><title>__fdget (13 samples, 0.02%)</title><rect x="20.1180%" y="837" width="0.0244%" height="15" fill="rgb(254,171,16)" fg:x="10710" fg:w="13"/><text x="20.3680%" y="847.50"></text></g><g><title>__fget_light (12 samples, 0.02%)</title><rect x="20.1198%" y="821" width="0.0225%" height="15" fill="rgb(230,171,20)" fg:x="10711" fg:w="12"/><text x="20.3698%" y="831.50"></text></g><g><title>__fsnotify_parent (6 samples, 0.01%)</title><rect x="20.1612%" y="821" width="0.0113%" height="15" fill="rgb(210,71,41)" fg:x="10733" fg:w="6"/><text x="20.4112%" y="831.50"></text></g><g><title>copy_page_to_iter (280 samples, 0.53%)</title><rect x="20.2232%" y="757" width="0.5260%" height="15" fill="rgb(206,173,20)" fg:x="10766" fg:w="280"/><text x="20.4732%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string (277 samples, 0.52%)</title><rect x="20.2288%" y="741" width="0.5203%" height="15" fill="rgb(233,88,34)" fg:x="10769" fg:w="277"/><text x="20.4788%" y="751.50"></text></g><g><title>activate_page (14 samples, 0.03%)</title><rect x="20.7529%" y="741" width="0.0263%" height="15" fill="rgb(223,209,46)" fg:x="11048" fg:w="14"/><text x="21.0029%" y="751.50"></text></g><g><title>pagevec_lru_move_fn (13 samples, 0.02%)</title><rect x="20.7548%" y="725" width="0.0244%" height="15" fill="rgb(250,43,18)" fg:x="11049" fg:w="13"/><text x="21.0048%" y="735.50"></text></g><g><title>__lock_text_start (13 samples, 0.02%)</title><rect x="20.7548%" y="709" width="0.0244%" height="15" fill="rgb(208,13,10)" fg:x="11049" fg:w="13"/><text x="21.0048%" y="719.50"></text></g><g><title>mark_page_accessed (17 samples, 0.03%)</title><rect x="20.7491%" y="757" width="0.0319%" height="15" fill="rgb(212,200,36)" fg:x="11046" fg:w="17"/><text x="20.9991%" y="767.50"></text></g><g><title>pagecache_get_page (204 samples, 0.38%)</title><rect x="20.7811%" y="757" width="0.3832%" height="15" fill="rgb(225,90,30)" fg:x="11063" fg:w="204"/><text x="21.0311%" y="767.50"></text></g><g><title>find_get_entry (204 samples, 0.38%)</title><rect x="20.7811%" y="741" width="0.3832%" height="15" fill="rgb(236,182,39)" fg:x="11063" fg:w="204"/><text x="21.0311%" y="751.50"></text></g><g><title>xas_load (124 samples, 0.23%)</title><rect x="20.9313%" y="725" width="0.2329%" height="15" fill="rgb(212,144,35)" fg:x="11143" fg:w="124"/><text x="21.1813%" y="735.50"></text></g><g><title>atime_needs_update (6 samples, 0.01%)</title><rect x="21.1661%" y="741" width="0.0113%" height="15" fill="rgb(228,63,44)" fg:x="11268" fg:w="6"/><text x="21.4161%" y="751.50"></text></g><g><title>touch_atime (11 samples, 0.02%)</title><rect x="21.1642%" y="757" width="0.0207%" height="15" fill="rgb(228,109,6)" fg:x="11267" fg:w="11"/><text x="21.4142%" y="767.50"></text></g><g><title>ext4_file_read_iter (532 samples, 1.00%)</title><rect x="20.1875%" y="789" width="0.9993%" height="15" fill="rgb(238,117,24)" fg:x="10747" fg:w="532"/><text x="20.4375%" y="799.50"></text></g><g><title>generic_file_read_iter (527 samples, 0.99%)</title><rect x="20.1969%" y="773" width="0.9899%" height="15" fill="rgb(242,26,26)" fg:x="10752" fg:w="527"/><text x="20.4469%" y="783.50"></text></g><g><title>__vfs_read (541 samples, 1.02%)</title><rect x="20.1724%" y="821" width="1.0162%" height="15" fill="rgb(221,92,48)" fg:x="10739" fg:w="541"/><text x="20.4224%" y="831.50"></text></g><g><title>new_sync_read (540 samples, 1.01%)</title><rect x="20.1743%" y="805" width="1.0144%" height="15" fill="rgb(209,209,32)" fg:x="10740" fg:w="540"/><text x="20.4243%" y="815.50"></text></g><g><title>__x64_sys_pread64 (586 samples, 1.10%)</title><rect x="20.1123%" y="869" width="1.1008%" height="15" fill="rgb(221,70,22)" fg:x="10707" fg:w="586"/><text x="20.3623%" y="879.50"></text></g><g><title>ksys_pread64 (585 samples, 1.10%)</title><rect x="20.1142%" y="853" width="1.0989%" height="15" fill="rgb(248,145,5)" fg:x="10708" fg:w="585"/><text x="20.3642%" y="863.50"></text></g><g><title>vfs_read (566 samples, 1.06%)</title><rect x="20.1499%" y="837" width="1.0632%" height="15" fill="rgb(226,116,26)" fg:x="10727" fg:w="566"/><text x="20.3999%" y="847.50"></text></g><g><title>rw_verify_area (8 samples, 0.02%)</title><rect x="21.1981%" y="821" width="0.0150%" height="15" fill="rgb(244,5,17)" fg:x="11285" fg:w="8"/><text x="21.4481%" y="831.50"></text></g><g><title>security_file_permission (8 samples, 0.02%)</title><rect x="21.1981%" y="805" width="0.0150%" height="15" fill="rgb(252,159,33)" fg:x="11285" fg:w="8"/><text x="21.4481%" y="815.50"></text></g><g><title>__libc_pread (680 samples, 1.28%)</title><rect x="19.9376%" y="917" width="1.2773%" height="15" fill="rgb(206,71,0)" fg:x="10614" fg:w="680"/><text x="20.1876%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (616 samples, 1.16%)</title><rect x="20.0579%" y="901" width="1.1571%" height="15" fill="rgb(233,118,54)" fg:x="10678" fg:w="616"/><text x="20.3079%" y="911.50"></text></g><g><title>do_syscall_64 (615 samples, 1.16%)</title><rect x="20.0597%" y="885" width="1.1552%" height="15" fill="rgb(234,83,48)" fg:x="10679" fg:w="615"/><text x="20.3097%" y="895.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (794 samples, 1.49%)</title><rect x="19.7254%" y="997" width="1.4915%" height="15" fill="rgb(228,3,54)" fg:x="10501" fg:w="794"/><text x="19.9754%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (684 samples, 1.28%)</title><rect x="19.9320%" y="981" width="1.2848%" height="15" fill="rgb(226,155,13)" fg:x="10611" fg:w="684"/><text x="20.1820%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (681 samples, 1.28%)</title><rect x="19.9376%" y="965" width="1.2792%" height="15" fill="rgb(241,28,37)" fg:x="10614" fg:w="681"/><text x="20.1876%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::read_at (681 samples, 1.28%)</title><rect x="19.9376%" y="949" width="1.2792%" height="15" fill="rgb(233,93,10)" fg:x="10614" fg:w="681"/><text x="20.1876%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (681 samples, 1.28%)</title><rect x="19.9376%" y="933" width="1.2792%" height="15" fill="rgb(225,113,19)" fg:x="10614" fg:w="681"/><text x="20.1876%" y="943.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (1,349 samples, 2.53%)</title><rect x="18.6866%" y="1029" width="2.5340%" height="15" fill="rgb(241,2,18)" fg:x="9948" fg:w="1349"/><text x="18.9366%" y="1039.50">re..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (1,341 samples, 2.52%)</title><rect x="18.7016%" y="1013" width="2.5190%" height="15" fill="rgb(228,207,21)" fg:x="9956" fg:w="1341"/><text x="18.9516%" y="1023.50">re..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (255 samples, 0.48%)</title><rect x="21.2206%" y="1029" width="0.4790%" height="15" fill="rgb(213,211,35)" fg:x="11297" fg:w="255"/><text x="21.4706%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (249 samples, 0.47%)</title><rect x="21.2319%" y="1013" width="0.4677%" height="15" fill="rgb(209,83,10)" fg:x="11303" fg:w="249"/><text x="21.4819%" y="1023.50"></text></g><g><title>cfree (21 samples, 0.04%)</title><rect x="21.6602%" y="997" width="0.0394%" height="15" fill="rgb(209,164,1)" fg:x="11531" fg:w="21"/><text x="21.9102%" y="1007.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (5,972 samples, 11.22%)</title><rect x="10.8705%" y="1045" width="11.2180%" height="15" fill="rgb(213,184,43)" fg:x="5787" fg:w="5972"/><text x="11.1205%" y="1055.50">redb::tree_store:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (207 samples, 0.39%)</title><rect x="21.6996%" y="1029" width="0.3888%" height="15" fill="rgb(231,61,34)" fg:x="11552" fg:w="207"/><text x="21.9496%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="22.0490%" y="1013" width="0.0394%" height="15" fill="rgb(235,75,3)" fg:x="11738" fg:w="21"/><text x="22.2990%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="22.0734%" y="997" width="0.0150%" height="15" fill="rgb(220,106,47)" fg:x="11751" fg:w="8"/><text x="22.3234%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (301 samples, 0.57%)</title><rect x="22.0884%" y="1045" width="0.5654%" height="15" fill="rgb(210,196,33)" fg:x="11759" fg:w="301"/><text x="22.3384%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (298 samples, 0.56%)</title><rect x="22.0941%" y="1029" width="0.5598%" height="15" fill="rgb(229,154,42)" fg:x="11762" fg:w="298"/><text x="22.3441%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (213 samples, 0.40%)</title><rect x="22.6538%" y="1045" width="0.4001%" height="15" fill="rgb(228,114,26)" fg:x="12060" fg:w="213"/><text x="22.9038%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (207 samples, 0.39%)</title><rect x="22.6651%" y="1029" width="0.3888%" height="15" fill="rgb(208,144,1)" fg:x="12066" fg:w="207"/><text x="22.9151%" y="1039.50"></text></g><g><title>cfree (11 samples, 0.02%)</title><rect x="23.0333%" y="1013" width="0.0207%" height="15" fill="rgb(239,112,37)" fg:x="12262" fg:w="11"/><text x="23.2833%" y="1023.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7,089 samples, 13.32%)</title><rect x="9.9294%" y="1061" width="13.3162%" height="15" fill="rgb(210,96,50)" fg:x="5286" fg:w="7089"/><text x="10.1794%" y="1071.50">redb::tree_store::bt..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (102 samples, 0.19%)</title><rect x="23.0539%" y="1045" width="0.1916%" height="15" fill="rgb(222,178,2)" fg:x="12273" fg:w="102"/><text x="23.3039%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.05%)</title><rect x="23.1948%" y="1029" width="0.0507%" height="15" fill="rgb(226,74,18)" fg:x="12348" fg:w="27"/><text x="23.4448%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="23.2268%" y="1013" width="0.0188%" height="15" fill="rgb(225,67,54)" fg:x="12365" fg:w="10"/><text x="23.4768%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (121 samples, 0.23%)</title><rect x="23.2455%" y="1061" width="0.2273%" height="15" fill="rgb(251,92,32)" fg:x="12375" fg:w="121"/><text x="23.4955%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (117 samples, 0.22%)</title><rect x="23.2531%" y="1045" width="0.2198%" height="15" fill="rgb(228,149,22)" fg:x="12379" fg:w="117"/><text x="23.5031%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (120 samples, 0.23%)</title><rect x="23.4728%" y="1061" width="0.2254%" height="15" fill="rgb(243,54,13)" fg:x="12496" fg:w="120"/><text x="23.7228%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (114 samples, 0.21%)</title><rect x="23.4841%" y="1045" width="0.2141%" height="15" fill="rgb(243,180,28)" fg:x="12502" fg:w="114"/><text x="23.7341%" y="1055.50"></text></g><g><title>cfree (9 samples, 0.02%)</title><rect x="23.6813%" y="1029" width="0.0169%" height="15" fill="rgb(208,167,24)" fg:x="12607" fg:w="9"/><text x="23.9313%" y="1039.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (73 samples, 0.14%)</title><rect x="23.6982%" y="1061" width="0.1371%" height="15" fill="rgb(245,73,45)" fg:x="12616" fg:w="73"/><text x="23.9482%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.04%)</title><rect x="23.7959%" y="1045" width="0.0394%" height="15" fill="rgb(237,203,48)" fg:x="12668" fg:w="21"/><text x="24.0459%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="23.8241%" y="1029" width="0.0113%" height="15" fill="rgb(211,197,16)" fg:x="12683" fg:w="6"/><text x="24.0741%" y="1039.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7,756 samples, 14.57%)</title><rect x="9.2682%" y="1077" width="14.5691%" height="15" fill="rgb(243,99,51)" fg:x="4934" fg:w="7756"/><text x="9.5182%" y="1087.50">redb::tree_store::btre..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (55 samples, 0.10%)</title><rect x="23.8373%" y="1077" width="0.1033%" height="15" fill="rgb(215,123,29)" fg:x="12690" fg:w="55"/><text x="24.0873%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (52 samples, 0.10%)</title><rect x="23.8429%" y="1061" width="0.0977%" height="15" fill="rgb(239,186,37)" fg:x="12693" fg:w="52"/><text x="24.0929%" y="1071.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::flush_cache (9,105 samples, 17.10%)</title><rect x="6.8394%" y="1109" width="17.1031%" height="15" fill="rgb(252,136,39)" fg:x="3641" fg:w="9105"/><text x="7.0894%" y="1119.50">ord::index::updater::inscr..</text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (8,031 samples, 15.09%)</title><rect x="8.8568%" y="1093" width="15.0857%" height="15" fill="rgb(223,213,32)" fg:x="4715" fg:w="8031"/><text x="9.1068%" y="1103.50">redb::table::Table&lt;K,V&gt;..</text></g><g><title>_IO_str_seekoff (59 samples, 0.11%)</title><rect x="24.1378%" y="1077" width="0.1108%" height="15" fill="rgb(233,115,5)" fg:x="12850" fg:w="59"/><text x="24.3878%" y="1087.50"></text></g><g><title>__libc_malloc (115 samples, 0.22%)</title><rect x="24.0382%" y="1093" width="0.2160%" height="15" fill="rgb(207,226,44)" fg:x="12797" fg:w="115"/><text x="24.2882%" y="1103.50"></text></g><g><title>__nss_passwd_lookup (51 samples, 0.10%)</title><rect x="24.2543%" y="1093" width="0.0958%" height="15" fill="rgb(208,126,0)" fg:x="12912" fg:w="51"/><text x="24.5043%" y="1103.50"></text></g><g><title>cfree (227 samples, 0.43%)</title><rect x="24.3595%" y="1093" width="0.4264%" height="15" fill="rgb(244,66,21)" fg:x="12968" fg:w="227"/><text x="24.6095%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.06%)</title><rect x="24.8948%" y="1077" width="0.0620%" height="15" fill="rgb(222,97,12)" fg:x="13253" fg:w="33"/><text x="25.1448%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="24.9230%" y="1061" width="0.0338%" height="15" fill="rgb(219,213,19)" fg:x="13268" fg:w="18"/><text x="25.1730%" y="1071.50"></text></g><g><title>__libc_malloc (15 samples, 0.03%)</title><rect x="25.0075%" y="1061" width="0.0282%" height="15" fill="rgb(252,169,30)" fg:x="13313" fg:w="15"/><text x="25.2575%" y="1071.50"></text></g><g><title>_IO_str_seekoff (15 samples, 0.03%)</title><rect x="25.0075%" y="1045" width="0.0282%" height="15" fill="rgb(206,32,51)" fg:x="13313" fg:w="15"/><text x="25.2575%" y="1055.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.02%)</title><rect x="25.0150%" y="1029" width="0.0207%" height="15" fill="rgb(250,172,42)" fg:x="13317" fg:w="11"/><text x="25.2650%" y="1039.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.02%)</title><rect x="25.0657%" y="965" width="0.0169%" height="15" fill="rgb(209,34,43)" fg:x="13344" fg:w="9"/><text x="25.3157%" y="975.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.02%)</title><rect x="25.0657%" y="949" width="0.0169%" height="15" fill="rgb(223,11,35)" fg:x="13344" fg:w="9"/><text x="25.3157%" y="959.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.02%)</title><rect x="25.0657%" y="933" width="0.0169%" height="15" fill="rgb(251,219,26)" fg:x="13344" fg:w="9"/><text x="25.3157%" y="943.50"></text></g><g><title>mem_cgroup_try_charge_delay (12 samples, 0.02%)</title><rect x="25.0883%" y="965" width="0.0225%" height="15" fill="rgb(231,119,3)" fg:x="13356" fg:w="12"/><text x="25.3383%" y="975.50"></text></g><g><title>mem_cgroup_try_charge (11 samples, 0.02%)</title><rect x="25.0902%" y="949" width="0.0207%" height="15" fill="rgb(216,97,11)" fg:x="13357" fg:w="11"/><text x="25.3402%" y="959.50"></text></g><g><title>__handle_mm_fault (29 samples, 0.05%)</title><rect x="25.0582%" y="981" width="0.0545%" height="15" fill="rgb(223,59,9)" fg:x="13340" fg:w="29"/><text x="25.3082%" y="991.50"></text></g><g><title>handle_mm_fault (30 samples, 0.06%)</title><rect x="25.0582%" y="997" width="0.0564%" height="15" fill="rgb(233,93,31)" fg:x="13340" fg:w="30"/><text x="25.3082%" y="1007.50"></text></g><g><title>async_page_fault (43 samples, 0.08%)</title><rect x="25.0357%" y="1061" width="0.0808%" height="15" fill="rgb(239,81,33)" fg:x="13328" fg:w="43"/><text x="25.2857%" y="1071.50"></text></g><g><title>do_async_page_fault (43 samples, 0.08%)</title><rect x="25.0357%" y="1045" width="0.0808%" height="15" fill="rgb(213,120,34)" fg:x="13328" fg:w="43"/><text x="25.2857%" y="1055.50"></text></g><g><title>do_page_fault (43 samples, 0.08%)</title><rect x="25.0357%" y="1029" width="0.0808%" height="15" fill="rgb(243,49,53)" fg:x="13328" fg:w="43"/><text x="25.2857%" y="1039.50"></text></g><g><title>__do_page_fault (43 samples, 0.08%)</title><rect x="25.0357%" y="1013" width="0.0808%" height="15" fill="rgb(247,216,33)" fg:x="13328" fg:w="43"/><text x="25.2857%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (249 samples, 0.47%)</title><rect x="24.8028%" y="1093" width="0.4677%" height="15" fill="rgb(226,26,14)" fg:x="13204" fg:w="249"/><text x="25.0528%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (167 samples, 0.31%)</title><rect x="24.9568%" y="1077" width="0.3137%" height="15" fill="rgb(215,49,53)" fg:x="13286" fg:w="167"/><text x="25.2068%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (82 samples, 0.15%)</title><rect x="25.1165%" y="1061" width="0.1540%" height="15" fill="rgb(245,162,40)" fg:x="13371" fg:w="82"/><text x="25.3665%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.11%)</title><rect x="25.1653%" y="1045" width="0.1052%" height="15" fill="rgb(229,68,17)" fg:x="13397" fg:w="56"/><text x="25.4153%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (422 samples, 0.79%)</title><rect x="25.2705%" y="1093" width="0.7927%" height="15" fill="rgb(213,182,10)" fg:x="13453" fg:w="422"/><text x="25.5205%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.05%)</title><rect x="26.0125%" y="1077" width="0.0507%" height="15" fill="rgb(245,125,30)" fg:x="13848" fg:w="27"/><text x="26.2625%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="26.0294%" y="1061" width="0.0338%" height="15" fill="rgb(232,202,2)" fg:x="13857" fg:w="18"/><text x="26.2794%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="26.1177%" y="1077" width="0.0131%" height="15" fill="rgb(237,140,51)" fg:x="13904" fg:w="7"/><text x="26.3677%" y="1087.50"></text></g><g><title>&lt;redb::multimap_table::MultimapRange&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="26.2060%" y="1061" width="0.0169%" height="15" fill="rgb(236,157,25)" fg:x="13951" fg:w="9"/><text x="26.4560%" y="1071.50"></text></g><g><title>&lt;redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="26.2078%" y="1045" width="0.0150%" height="15" fill="rgb(219,209,0)" fg:x="13952" fg:w="8"/><text x="26.4578%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::tree_store::btree_iters::RangeIterState&gt; (33 samples, 0.06%)</title><rect x="26.2266%" y="1061" width="0.0620%" height="15" fill="rgb(240,116,54)" fg:x="13962" fg:w="33"/><text x="26.4766%" y="1071.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get_root (36 samples, 0.07%)</title><rect x="26.2886%" y="1061" width="0.0676%" height="15" fill="rgb(216,10,36)" fg:x="13995" fg:w="36"/><text x="26.5386%" y="1071.50"></text></g><g><title>__nss_passwd_lookup (12 samples, 0.02%)</title><rect x="26.4821%" y="1029" width="0.0225%" height="15" fill="rgb(222,72,44)" fg:x="14098" fg:w="12"/><text x="26.7321%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (7 samples, 0.01%)</title><rect x="26.5046%" y="1029" width="0.0131%" height="15" fill="rgb(232,159,9)" fg:x="14110" fg:w="7"/><text x="26.7546%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_left (47 samples, 0.09%)</title><rect x="26.4332%" y="1045" width="0.0883%" height="15" fill="rgb(210,39,32)" fg:x="14072" fg:w="47"/><text x="26.6832%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (8 samples, 0.02%)</title><rect x="26.5722%" y="1029" width="0.0150%" height="15" fill="rgb(216,194,45)" fg:x="14146" fg:w="8"/><text x="26.8222%" y="1039.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::key_unchecked (7 samples, 0.01%)</title><rect x="26.5873%" y="1029" width="0.0131%" height="15" fill="rgb(218,18,35)" fg:x="14154" fg:w="7"/><text x="26.8373%" y="1039.50"></text></g><g><title>redb::tree_store::btree_iters::find_iter_right (45 samples, 0.08%)</title><rect x="26.5215%" y="1045" width="0.0845%" height="15" fill="rgb(207,83,51)" fg:x="14119" fg:w="45"/><text x="26.7715%" y="1055.50"></text></g><g><title>redb::tree_store::btree_iters::BtreeRangeIter&lt;K,V&gt;::new (261 samples, 0.49%)</title><rect x="26.3562%" y="1061" width="0.4903%" height="15" fill="rgb(225,63,43)" fg:x="14031" fg:w="261"/><text x="26.6062%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page (128 samples, 0.24%)</title><rect x="26.6061%" y="1045" width="0.2404%" height="15" fill="rgb(207,57,36)" fg:x="14164" fg:w="128"/><text x="26.8561%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (121 samples, 0.23%)</title><rect x="26.6192%" y="1029" width="0.2273%" height="15" fill="rgb(216,99,33)" fg:x="14171" fg:w="121"/><text x="26.8692%" y="1039.50"></text></g><g><title>ord::index::Index::inscriptions_on_output_ordered2 (477 samples, 0.90%)</title><rect x="26.0632%" y="1093" width="0.8960%" height="15" fill="rgb(225,42,16)" fg:x="13875" fg:w="477"/><text x="26.3132%" y="1103.50"></text></g><g><title>ord::index::Index::inscriptions_on_output_unordered (441 samples, 0.83%)</title><rect x="26.1308%" y="1077" width="0.8284%" height="15" fill="rgb(220,201,45)" fg:x="13911" fg:w="441"/><text x="26.3808%" y="1087.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_extended (60 samples, 0.11%)</title><rect x="26.8465%" y="1061" width="0.1127%" height="15" fill="rgb(225,33,4)" fg:x="14292" fg:w="60"/><text x="27.0965%" y="1071.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (58 samples, 0.11%)</title><rect x="26.8503%" y="1045" width="0.1089%" height="15" fill="rgb(224,33,50)" fg:x="14294" fg:w="58"/><text x="27.1003%" y="1055.50"></text></g><g><title>&lt;&amp;bitcoin::blockdata::script::push_bytes::primitive::PushBytes as core::convert::From&lt;&amp;[u8: 3]&gt;&gt;::from (6 samples, 0.01%)</title><rect x="27.0343%" y="1077" width="0.0113%" height="15" fill="rgb(246,198,51)" fg:x="14392" fg:w="6"/><text x="27.2843%" y="1087.50"></text></g><g><title>&lt;bitcoin::blockdata::script::instruction::Instructions as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.11%)</title><rect x="27.0456%" y="1077" width="0.1146%" height="15" fill="rgb(205,22,4)" fg:x="14398" fg:w="61"/><text x="27.2956%" y="1087.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (28 samples, 0.05%)</title><rect x="27.1076%" y="1061" width="0.0526%" height="15" fill="rgb(206,3,8)" fg:x="14431" fg:w="28"/><text x="27.3576%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.03%)</title><rect x="27.1621%" y="1077" width="0.0301%" height="15" fill="rgb(251,23,15)" fg:x="14460" fg:w="16"/><text x="27.4121%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="27.1733%" y="1061" width="0.0188%" height="15" fill="rgb(252,88,28)" fg:x="14466" fg:w="10"/><text x="27.4233%" y="1071.50"></text></g><g><title>__libc_malloc (7 samples, 0.01%)</title><rect x="27.1790%" y="1045" width="0.0131%" height="15" fill="rgb(212,127,14)" fg:x="14469" fg:w="7"/><text x="27.4290%" y="1055.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::tapscript (88 samples, 0.17%)</title><rect x="27.1940%" y="1077" width="0.1653%" height="15" fill="rgb(247,145,37)" fg:x="14477" fg:w="88"/><text x="27.4440%" y="1087.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::nth (72 samples, 0.14%)</title><rect x="27.2241%" y="1061" width="0.1352%" height="15" fill="rgb(209,117,53)" fg:x="14493" fg:w="72"/><text x="27.4741%" y="1071.50"></text></g><g><title>ord::inscription::Inscription::from_transaction (229 samples, 0.43%)</title><rect x="26.9592%" y="1093" width="0.4302%" height="15" fill="rgb(212,90,42)" fg:x="14352" fg:w="229"/><text x="27.2092%" y="1103.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 0.03%)</title><rect x="27.3593%" y="1077" width="0.0301%" height="15" fill="rgb(218,164,37)" fg:x="14565" fg:w="16"/><text x="27.6093%" y="1087.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="27.4213%" y="1029" width="0.0150%" height="15" fill="rgb(246,65,34)" fg:x="14598" fg:w="8"/><text x="27.6713%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 0.06%)</title><rect x="27.3912%" y="1077" width="0.0564%" height="15" fill="rgb(231,100,33)" fg:x="14582" fg:w="30"/><text x="27.6412%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (22 samples, 0.04%)</title><rect x="27.4063%" y="1061" width="0.0413%" height="15" fill="rgb(228,126,14)" fg:x="14590" fg:w="22"/><text x="27.6563%" y="1071.50"></text></g><g><title>cfree (16 samples, 0.03%)</title><rect x="27.4175%" y="1045" width="0.0301%" height="15" fill="rgb(215,173,21)" fg:x="14596" fg:w="16"/><text x="27.6675%" y="1055.50"></text></g><g><title>pthread_setcanceltype (6 samples, 0.01%)</title><rect x="27.4363%" y="1029" width="0.0113%" height="15" fill="rgb(210,6,40)" fg:x="14606" fg:w="6"/><text x="27.6863%" y="1039.50"></text></g><g><title>ord::index::updater::inscription_updater::InscriptionUpdater::index_transaction_inscriptions (1,875 samples, 3.52%)</title><rect x="23.9424%" y="1109" width="3.5221%" height="15" fill="rgb(212,48,18)" fg:x="12746" fg:w="1875"/><text x="24.1924%" y="1119.50">ord..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (40 samples, 0.08%)</title><rect x="27.3894%" y="1093" width="0.0751%" height="15" fill="rgb(230,214,11)" fg:x="14581" fg:w="40"/><text x="27.6394%" y="1103.50"></text></g><g><title>redb::transactions::WriteTransaction::open_table (12 samples, 0.02%)</title><rect x="27.4852%" y="1109" width="0.0225%" height="15" fill="rgb(254,105,39)" fg:x="14632" fg:w="12"/><text x="27.7352%" y="1119.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_or_create_table (10 samples, 0.02%)</title><rect x="27.4889%" y="1093" width="0.0188%" height="15" fill="rgb(245,158,5)" fg:x="14634" fg:w="10"/><text x="27.7389%" y="1103.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table (9 samples, 0.02%)</title><rect x="27.4908%" y="1077" width="0.0169%" height="15" fill="rgb(249,208,11)" fg:x="14635" fg:w="9"/><text x="27.7408%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (22 samples, 0.04%)</title><rect x="27.5547%" y="1077" width="0.0413%" height="15" fill="rgb(210,39,28)" fg:x="14669" fg:w="22"/><text x="27.8047%" y="1087.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (47 samples, 0.09%)</title><rect x="27.5190%" y="1093" width="0.0883%" height="15" fill="rgb(211,56,53)" fg:x="14650" fg:w="47"/><text x="27.7690%" y="1103.50"></text></g><g><title>ord::index::updater::Updater::index_block (12,893 samples, 24.22%)</title><rect x="3.3906%" y="1125" width="24.2186%" height="15" fill="rgb(226,201,30)" fg:x="1805" fg:w="12893"/><text x="3.6406%" y="1135.50">ord::index::updater::Updater::index_blo..</text></g><g><title>tokio::future::block_on::block_on (52 samples, 0.10%)</title><rect x="27.5115%" y="1109" width="0.0977%" height="15" fill="rgb(239,101,34)" fg:x="14646" fg:w="52"/><text x="27.7615%" y="1119.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (7 samples, 0.01%)</title><rect x="27.6091%" y="1125" width="0.0131%" height="15" fill="rgb(226,209,5)" fg:x="14698" fg:w="7"/><text x="27.8591%" y="1135.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (7 samples, 0.01%)</title><rect x="27.6091%" y="1109" width="0.0131%" height="15" fill="rgb(250,105,47)" fg:x="14698" fg:w="7"/><text x="27.8591%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="27.6580%" y="1045" width="0.0319%" height="15" fill="rgb(230,72,3)" fg:x="14724" fg:w="17"/><text x="27.9080%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.02%)</title><rect x="27.6655%" y="1029" width="0.0244%" height="15" fill="rgb(232,218,39)" fg:x="14728" fg:w="13"/><text x="27.9155%" y="1039.50"></text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="27.6655%" y="1013" width="0.0244%" height="15" fill="rgb(248,166,6)" fg:x="14728" fg:w="13"/><text x="27.9155%" y="1023.50"></text></g><g><title>ext4_block_write_begin (13 samples, 0.02%)</title><rect x="27.7200%" y="789" width="0.0244%" height="15" fill="rgb(247,89,20)" fg:x="14757" fg:w="13"/><text x="27.9700%" y="799.50"></text></g><g><title>ext4_da_get_block_prep (6 samples, 0.01%)</title><rect x="27.7331%" y="773" width="0.0113%" height="15" fill="rgb(248,130,54)" fg:x="14764" fg:w="6"/><text x="27.9831%" y="783.50"></text></g><g><title>__add_to_page_cache_locked (7 samples, 0.01%)</title><rect x="27.7444%" y="757" width="0.0131%" height="15" fill="rgb(234,196,4)" fg:x="14770" fg:w="7"/><text x="27.9944%" y="767.50"></text></g><g><title>__page_cache_alloc (8 samples, 0.02%)</title><rect x="27.7575%" y="757" width="0.0150%" height="15" fill="rgb(250,143,31)" fg:x="14777" fg:w="8"/><text x="28.0075%" y="767.50"></text></g><g><title>alloc_pages_current (7 samples, 0.01%)</title><rect x="27.7594%" y="741" width="0.0131%" height="15" fill="rgb(211,110,34)" fg:x="14778" fg:w="7"/><text x="28.0094%" y="751.50"></text></g><g><title>__alloc_pages_nodemask (7 samples, 0.01%)</title><rect x="27.7594%" y="725" width="0.0131%" height="15" fill="rgb(215,124,48)" fg:x="14778" fg:w="7"/><text x="28.0094%" y="735.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.01%)</title><rect x="27.7613%" y="709" width="0.0113%" height="15" fill="rgb(216,46,13)" fg:x="14779" fg:w="6"/><text x="28.0113%" y="719.50"></text></g><g><title>__add_to_page_cache_locked (15 samples, 0.03%)</title><rect x="27.7726%" y="741" width="0.0282%" height="15" fill="rgb(205,184,25)" fg:x="14785" fg:w="15"/><text x="28.0226%" y="751.50"></text></g><g><title>add_to_page_cache_lru (18 samples, 0.03%)</title><rect x="27.7726%" y="757" width="0.0338%" height="15" fill="rgb(228,1,10)" fg:x="14785" fg:w="18"/><text x="28.0226%" y="767.50"></text></g><g><title>ext4_da_write_begin (51 samples, 0.10%)</title><rect x="27.7125%" y="805" width="0.0958%" height="15" fill="rgb(213,116,27)" fg:x="14753" fg:w="51"/><text x="27.9625%" y="815.50"></text></g><g><title>grab_cache_page_write_begin (34 samples, 0.06%)</title><rect x="27.7444%" y="789" width="0.0639%" height="15" fill="rgb(241,95,50)" fg:x="14770" fg:w="34"/><text x="27.9944%" y="799.50"></text></g><g><title>pagecache_get_page (34 samples, 0.06%)</title><rect x="27.7444%" y="773" width="0.0639%" height="15" fill="rgb(238,48,32)" fg:x="14770" fg:w="34"/><text x="27.9944%" y="783.50"></text></g><g><title>ext4_da_write_end (12 samples, 0.02%)</title><rect x="27.8083%" y="805" width="0.0225%" height="15" fill="rgb(235,113,49)" fg:x="14804" fg:w="12"/><text x="28.0583%" y="815.50"></text></g><g><title>generic_write_end (9 samples, 0.02%)</title><rect x="27.8139%" y="789" width="0.0169%" height="15" fill="rgb(205,127,43)" fg:x="14807" fg:w="9"/><text x="28.0639%" y="799.50"></text></g><g><title>block_write_end (8 samples, 0.02%)</title><rect x="27.8158%" y="773" width="0.0150%" height="15" fill="rgb(250,162,2)" fg:x="14808" fg:w="8"/><text x="28.0658%" y="783.50"></text></g><g><title>__block_commit_write.isra.41 (8 samples, 0.02%)</title><rect x="27.8158%" y="757" width="0.0150%" height="15" fill="rgb(220,13,41)" fg:x="14808" fg:w="8"/><text x="28.0658%" y="767.50"></text></g><g><title>mark_buffer_dirty (6 samples, 0.01%)</title><rect x="27.8195%" y="741" width="0.0113%" height="15" fill="rgb(249,221,25)" fg:x="14810" fg:w="6"/><text x="28.0695%" y="751.50"></text></g><g><title>__set_page_dirty (6 samples, 0.01%)</title><rect x="27.8195%" y="725" width="0.0113%" height="15" fill="rgb(215,208,19)" fg:x="14810" fg:w="6"/><text x="28.0695%" y="735.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="27.8195%" y="709" width="0.0113%" height="15" fill="rgb(236,175,2)" fg:x="14810" fg:w="6"/><text x="28.0695%" y="719.50"></text></g><g><title>iov_iter_copy_from_user_atomic (21 samples, 0.04%)</title><rect x="27.8308%" y="805" width="0.0394%" height="15" fill="rgb(241,52,2)" fg:x="14816" fg:w="21"/><text x="28.0808%" y="815.50"></text></g><g><title>copy_user_enhanced_fast_string (21 samples, 0.04%)</title><rect x="27.8308%" y="789" width="0.0394%" height="15" fill="rgb(248,140,14)" fg:x="14816" fg:w="21"/><text x="28.0808%" y="799.50"></text></g><g><title>__generic_file_write_iter (104 samples, 0.20%)</title><rect x="27.7087%" y="837" width="0.1954%" height="15" fill="rgb(253,22,42)" fg:x="14751" fg:w="104"/><text x="27.9587%" y="847.50"></text></g><g><title>generic_perform_write (104 samples, 0.20%)</title><rect x="27.7087%" y="821" width="0.1954%" height="15" fill="rgb(234,61,47)" fg:x="14751" fg:w="104"/><text x="27.9587%" y="831.50"></text></g><g><title>iov_iter_fault_in_readable (18 samples, 0.03%)</title><rect x="27.8702%" y="805" width="0.0338%" height="15" fill="rgb(208,226,15)" fg:x="14837" fg:w="18"/><text x="28.1202%" y="815.50"></text></g><g><title>ext4_file_write_iter (107 samples, 0.20%)</title><rect x="27.7087%" y="853" width="0.2010%" height="15" fill="rgb(217,221,4)" fg:x="14751" fg:w="107"/><text x="27.9587%" y="863.50"></text></g><g><title>__libc_pwrite64 (117 samples, 0.22%)</title><rect x="27.6937%" y="981" width="0.2198%" height="15" fill="rgb(212,174,34)" fg:x="14743" fg:w="117"/><text x="27.9437%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (112 samples, 0.21%)</title><rect x="27.7031%" y="965" width="0.2104%" height="15" fill="rgb(253,83,4)" fg:x="14748" fg:w="112"/><text x="27.9531%" y="975.50"></text></g><g><title>do_syscall_64 (112 samples, 0.21%)</title><rect x="27.7031%" y="949" width="0.2104%" height="15" fill="rgb(250,195,49)" fg:x="14748" fg:w="112"/><text x="27.9531%" y="959.50"></text></g><g><title>__x64_sys_pwrite64 (112 samples, 0.21%)</title><rect x="27.7031%" y="933" width="0.2104%" height="15" fill="rgb(241,192,25)" fg:x="14748" fg:w="112"/><text x="27.9531%" y="943.50"></text></g><g><title>ksys_pwrite64 (112 samples, 0.21%)</title><rect x="27.7031%" y="917" width="0.2104%" height="15" fill="rgb(208,124,10)" fg:x="14748" fg:w="112"/><text x="27.9531%" y="927.50"></text></g><g><title>vfs_write (111 samples, 0.21%)</title><rect x="27.7049%" y="901" width="0.2085%" height="15" fill="rgb(222,33,0)" fg:x="14749" fg:w="111"/><text x="27.9549%" y="911.50"></text></g><g><title>__vfs_write (110 samples, 0.21%)</title><rect x="27.7068%" y="885" width="0.2066%" height="15" fill="rgb(234,209,28)" fg:x="14750" fg:w="110"/><text x="27.9568%" y="895.50"></text></g><g><title>new_sync_write (110 samples, 0.21%)</title><rect x="27.7068%" y="869" width="0.2066%" height="15" fill="rgb(224,11,23)" fg:x="14750" fg:w="110"/><text x="27.9568%" y="879.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::flush_write_buffer (146 samples, 0.27%)</title><rect x="27.6411%" y="1061" width="0.2743%" height="15" fill="rgb(232,99,1)" fg:x="14715" fg:w="146"/><text x="27.8911%" y="1071.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (119 samples, 0.22%)</title><rect x="27.6918%" y="1045" width="0.2235%" height="15" fill="rgb(237,95,45)" fg:x="14742" fg:w="119"/><text x="27.9418%" y="1055.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (118 samples, 0.22%)</title><rect x="27.6937%" y="1029" width="0.2217%" height="15" fill="rgb(208,109,11)" fg:x="14743" fg:w="118"/><text x="27.9437%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::write_at (118 samples, 0.22%)</title><rect x="27.6937%" y="1013" width="0.2217%" height="15" fill="rgb(216,190,48)" fg:x="14743" fg:w="118"/><text x="27.9437%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (118 samples, 0.22%)</title><rect x="27.6937%" y="997" width="0.2217%" height="15" fill="rgb(251,171,36)" fg:x="14743" fg:w="118"/><text x="27.9437%" y="1007.50"></text></g><g><title>mpage_submit_page (8 samples, 0.02%)</title><rect x="27.9247%" y="789" width="0.0150%" height="15" fill="rgb(230,62,22)" fg:x="14866" fg:w="8"/><text x="28.1747%" y="799.50"></text></g><g><title>ext4_bio_write_page (6 samples, 0.01%)</title><rect x="27.9285%" y="773" width="0.0113%" height="15" fill="rgb(225,114,35)" fg:x="14868" fg:w="6"/><text x="28.1785%" y="783.50"></text></g><g><title>mpage_map_and_submit_buffers (13 samples, 0.02%)</title><rect x="27.9210%" y="805" width="0.0244%" height="15" fill="rgb(215,118,42)" fg:x="14864" fg:w="13"/><text x="28.1710%" y="815.50"></text></g><g><title>__test_set_page_writeback (12 samples, 0.02%)</title><rect x="27.9811%" y="741" width="0.0225%" height="15" fill="rgb(243,119,21)" fg:x="14896" fg:w="12"/><text x="28.2311%" y="751.50"></text></g><g><title>ext4_io_submit (6 samples, 0.01%)</title><rect x="28.0036%" y="741" width="0.0113%" height="15" fill="rgb(252,177,53)" fg:x="14908" fg:w="6"/><text x="28.2536%" y="751.50"></text></g><g><title>submit_bio (6 samples, 0.01%)</title><rect x="28.0036%" y="725" width="0.0113%" height="15" fill="rgb(237,209,29)" fg:x="14908" fg:w="6"/><text x="28.2536%" y="735.50"></text></g><g><title>generic_make_request (6 samples, 0.01%)</title><rect x="28.0036%" y="709" width="0.0113%" height="15" fill="rgb(212,65,23)" fg:x="14908" fg:w="6"/><text x="28.2536%" y="719.50"></text></g><g><title>blk_mq_make_request (6 samples, 0.01%)</title><rect x="28.0036%" y="693" width="0.0113%" height="15" fill="rgb(230,222,46)" fg:x="14908" fg:w="6"/><text x="28.2536%" y="703.50"></text></g><g><title>mpage_process_page_bufs (35 samples, 0.07%)</title><rect x="27.9510%" y="789" width="0.0657%" height="15" fill="rgb(215,135,32)" fg:x="14880" fg:w="35"/><text x="28.2010%" y="799.50"></text></g><g><title>mpage_submit_page (30 samples, 0.06%)</title><rect x="27.9604%" y="773" width="0.0564%" height="15" fill="rgb(246,101,22)" fg:x="14885" fg:w="30"/><text x="28.2104%" y="783.50"></text></g><g><title>ext4_bio_write_page (26 samples, 0.05%)</title><rect x="27.9679%" y="757" width="0.0488%" height="15" fill="rgb(206,107,13)" fg:x="14889" fg:w="26"/><text x="28.2179%" y="767.50"></text></g><g><title>mpage_prepare_extent_to_map (42 samples, 0.08%)</title><rect x="27.9454%" y="805" width="0.0789%" height="15" fill="rgb(250,100,44)" fg:x="14877" fg:w="42"/><text x="28.1954%" y="815.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::commit (205 samples, 0.39%)</title><rect x="27.6411%" y="1093" width="0.3851%" height="15" fill="rgb(231,147,38)" fg:x="14715" fg:w="205"/><text x="27.8911%" y="1103.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::flush (205 samples, 0.39%)</title><rect x="27.6411%" y="1077" width="0.3851%" height="15" fill="rgb(229,8,40)" fg:x="14715" fg:w="205"/><text x="27.8911%" y="1087.50"></text></g><g><title>std::fs::File::sync_data (59 samples, 0.11%)</title><rect x="27.9153%" y="1061" width="0.1108%" height="15" fill="rgb(221,135,30)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::datasync (59 samples, 0.11%)</title><rect x="27.9153%" y="1045" width="0.1108%" height="15" fill="rgb(249,193,18)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="1055.50"></text></g><g><title>std::sys::unix::cvt_r (59 samples, 0.11%)</title><rect x="27.9153%" y="1029" width="0.1108%" height="15" fill="rgb(209,133,39)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::datasync::_{{closure}} (59 samples, 0.11%)</title><rect x="27.9153%" y="1013" width="0.1108%" height="15" fill="rgb(232,100,14)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::datasync::os_datasync (59 samples, 0.11%)</title><rect x="27.9153%" y="997" width="0.1108%" height="15" fill="rgb(224,185,1)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="1007.50"></text></g><g><title>fdatasync (59 samples, 0.11%)</title><rect x="27.9153%" y="981" width="0.1108%" height="15" fill="rgb(223,139,8)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (59 samples, 0.11%)</title><rect x="27.9153%" y="965" width="0.1108%" height="15" fill="rgb(232,213,38)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="975.50"></text></g><g><title>do_syscall_64 (59 samples, 0.11%)</title><rect x="27.9153%" y="949" width="0.1108%" height="15" fill="rgb(207,94,22)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="959.50"></text></g><g><title>__x64_sys_fdatasync (59 samples, 0.11%)</title><rect x="27.9153%" y="933" width="0.1108%" height="15" fill="rgb(219,183,54)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="943.50"></text></g><g><title>do_fsync (59 samples, 0.11%)</title><rect x="27.9153%" y="917" width="0.1108%" height="15" fill="rgb(216,185,54)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="927.50"></text></g><g><title>vfs_fsync_range (59 samples, 0.11%)</title><rect x="27.9153%" y="901" width="0.1108%" height="15" fill="rgb(254,217,39)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="911.50"></text></g><g><title>ext4_sync_file (59 samples, 0.11%)</title><rect x="27.9153%" y="885" width="0.1108%" height="15" fill="rgb(240,178,23)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="895.50"></text></g><g><title>file_write_and_wait_range (59 samples, 0.11%)</title><rect x="27.9153%" y="869" width="0.1108%" height="15" fill="rgb(218,11,47)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="879.50"></text></g><g><title>__filemap_fdatawrite_range (59 samples, 0.11%)</title><rect x="27.9153%" y="853" width="0.1108%" height="15" fill="rgb(218,51,51)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="863.50"></text></g><g><title>do_writepages (59 samples, 0.11%)</title><rect x="27.9153%" y="837" width="0.1108%" height="15" fill="rgb(238,126,27)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="847.50"></text></g><g><title>ext4_writepages (59 samples, 0.11%)</title><rect x="27.9153%" y="821" width="0.1108%" height="15" fill="rgb(249,202,22)" fg:x="14861" fg:w="59"/><text x="28.1653%" y="831.50"></text></g><g><title>&lt;redb::tree_store::page_store::cached_file::WritablePage as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="28.0543%" y="1013" width="0.0113%" height="15" fill="rgb(254,195,49)" fg:x="14935" fg:w="6"/><text x="28.3043%" y="1023.50"></text></g><g><title>redb::tree_store::btree_base::LeafAccessor::value_end (7 samples, 0.01%)</title><rect x="28.0675%" y="997" width="0.0131%" height="15" fill="rgb(208,123,14)" fg:x="14942" fg:w="7"/><text x="28.3175%" y="1007.50"></text></g><g><title>redb::tree_store::btree_base::leaf_checksum (45 samples, 0.08%)</title><rect x="28.0656%" y="1013" width="0.0845%" height="15" fill="rgb(224,200,8)" fg:x="14941" fg:w="45"/><text x="28.3156%" y="1023.50"></text></g><g><title>redb::tree_store::page_store::xxh3::hash128_large_avx2 (37 samples, 0.07%)</title><rect x="28.0806%" y="997" width="0.0695%" height="15" fill="rgb(217,61,36)" fg:x="14949" fg:w="37"/><text x="28.3306%" y="1007.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::insert (7 samples, 0.01%)</title><rect x="28.3173%" y="997" width="0.0131%" height="15" fill="rgb(206,35,45)" fg:x="15075" fg:w="7"/><text x="28.5673%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="28.3192%" y="981" width="0.0113%" height="15" fill="rgb(217,65,33)" fg:x="15076" fg:w="6"/><text x="28.5692%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (6 samples, 0.01%)</title><rect x="28.3192%" y="965" width="0.0113%" height="15" fill="rgb(222,158,48)" fg:x="15076" fg:w="6"/><text x="28.5692%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (6 samples, 0.01%)</title><rect x="28.3305%" y="981" width="0.0113%" height="15" fill="rgb(254,2,54)" fg:x="15082" fg:w="6"/><text x="28.5805%" y="991.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (6 samples, 0.01%)</title><rect x="28.3305%" y="965" width="0.0113%" height="15" fill="rgb(250,143,38)" fg:x="15082" fg:w="6"/><text x="28.5805%" y="975.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PrioritizedWriteCache::pop_lowest_priority (8 samples, 0.02%)</title><rect x="28.3305%" y="997" width="0.0150%" height="15" fill="rgb(248,25,0)" fg:x="15082" fg:w="8"/><text x="28.5805%" y="1007.50"></text></g><g><title>copy_page_to_iter (62 samples, 0.12%)</title><rect x="28.3830%" y="757" width="0.1165%" height="15" fill="rgb(206,152,27)" fg:x="15110" fg:w="62"/><text x="28.6330%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string (61 samples, 0.11%)</title><rect x="28.3849%" y="741" width="0.1146%" height="15" fill="rgb(240,77,30)" fg:x="15111" fg:w="61"/><text x="28.6349%" y="751.50"></text></g><g><title>pagecache_get_page (39 samples, 0.07%)</title><rect x="28.5051%" y="757" width="0.0733%" height="15" fill="rgb(231,5,3)" fg:x="15175" fg:w="39"/><text x="28.7551%" y="767.50"></text></g><g><title>find_get_entry (38 samples, 0.07%)</title><rect x="28.5070%" y="741" width="0.0714%" height="15" fill="rgb(207,226,32)" fg:x="15176" fg:w="38"/><text x="28.7570%" y="751.50"></text></g><g><title>xas_load (17 samples, 0.03%)</title><rect x="28.5465%" y="725" width="0.0319%" height="15" fill="rgb(222,207,47)" fg:x="15197" fg:w="17"/><text x="28.7965%" y="735.50"></text></g><g><title>__vfs_read (111 samples, 0.21%)</title><rect x="28.3718%" y="821" width="0.2085%" height="15" fill="rgb(229,115,45)" fg:x="15104" fg:w="111"/><text x="28.6218%" y="831.50"></text></g><g><title>new_sync_read (110 samples, 0.21%)</title><rect x="28.3737%" y="805" width="0.2066%" height="15" fill="rgb(224,191,6)" fg:x="15105" fg:w="110"/><text x="28.6237%" y="815.50"></text></g><g><title>ext4_file_read_iter (108 samples, 0.20%)</title><rect x="28.3774%" y="789" width="0.2029%" height="15" fill="rgb(230,227,24)" fg:x="15107" fg:w="108"/><text x="28.6274%" y="799.50"></text></g><g><title>generic_file_read_iter (108 samples, 0.20%)</title><rect x="28.3774%" y="773" width="0.2029%" height="15" fill="rgb(228,80,19)" fg:x="15107" fg:w="108"/><text x="28.6274%" y="783.50"></text></g><g><title>redb::tree_store::page_store::file_lock::unix::LockedFile::read (129 samples, 0.24%)</title><rect x="28.3455%" y="997" width="0.2423%" height="15" fill="rgb(247,229,0)" fg:x="15090" fg:w="129"/><text x="28.5955%" y="1007.50"></text></g><g><title>std::os::unix::fs::FileExt::read_exact_at (125 samples, 0.23%)</title><rect x="28.3530%" y="981" width="0.2348%" height="15" fill="rgb(237,194,15)" fg:x="15094" fg:w="125"/><text x="28.6030%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (124 samples, 0.23%)</title><rect x="28.3549%" y="965" width="0.2329%" height="15" fill="rgb(219,203,20)" fg:x="15095" fg:w="124"/><text x="28.6049%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::read_at (124 samples, 0.23%)</title><rect x="28.3549%" y="949" width="0.2329%" height="15" fill="rgb(234,128,8)" fg:x="15095" fg:w="124"/><text x="28.6049%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (124 samples, 0.23%)</title><rect x="28.3549%" y="933" width="0.2329%" height="15" fill="rgb(248,202,8)" fg:x="15095" fg:w="124"/><text x="28.6049%" y="943.50"></text></g><g><title>__libc_pread (124 samples, 0.23%)</title><rect x="28.3549%" y="917" width="0.2329%" height="15" fill="rgb(206,104,37)" fg:x="15095" fg:w="124"/><text x="28.6049%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (120 samples, 0.23%)</title><rect x="28.3624%" y="901" width="0.2254%" height="15" fill="rgb(223,8,27)" fg:x="15099" fg:w="120"/><text x="28.6124%" y="911.50"></text></g><g><title>do_syscall_64 (120 samples, 0.23%)</title><rect x="28.3624%" y="885" width="0.2254%" height="15" fill="rgb(216,217,28)" fg:x="15099" fg:w="120"/><text x="28.6124%" y="895.50"></text></g><g><title>__x64_sys_pread64 (118 samples, 0.22%)</title><rect x="28.3661%" y="869" width="0.2217%" height="15" fill="rgb(249,199,1)" fg:x="15101" fg:w="118"/><text x="28.6161%" y="879.50"></text></g><g><title>ksys_pread64 (118 samples, 0.22%)</title><rect x="28.3661%" y="853" width="0.2217%" height="15" fill="rgb(240,85,17)" fg:x="15101" fg:w="118"/><text x="28.6161%" y="863.50"></text></g><g><title>vfs_read (117 samples, 0.22%)</title><rect x="28.3680%" y="837" width="0.2198%" height="15" fill="rgb(206,108,45)" fg:x="15102" fg:w="117"/><text x="28.6180%" y="847.50"></text></g><g><title>__ext4_journal_start_sb (7 samples, 0.01%)</title><rect x="28.6611%" y="741" width="0.0131%" height="15" fill="rgb(245,210,41)" fg:x="15258" fg:w="7"/><text x="28.9111%" y="751.50"></text></g><g><title>jbd2__journal_start (7 samples, 0.01%)</title><rect x="28.6611%" y="725" width="0.0131%" height="15" fill="rgb(206,13,37)" fg:x="15258" fg:w="7"/><text x="28.9111%" y="735.50"></text></g><g><title>ext4_block_write_begin (13 samples, 0.02%)</title><rect x="28.6742%" y="741" width="0.0244%" height="15" fill="rgb(250,61,18)" fg:x="15265" fg:w="13"/><text x="28.9242%" y="751.50"></text></g><g><title>grab_cache_page_write_begin (6 samples, 0.01%)</title><rect x="28.6986%" y="741" width="0.0113%" height="15" fill="rgb(235,172,48)" fg:x="15278" fg:w="6"/><text x="28.9486%" y="751.50"></text></g><g><title>pagecache_get_page (6 samples, 0.01%)</title><rect x="28.6986%" y="725" width="0.0113%" height="15" fill="rgb(249,201,17)" fg:x="15278" fg:w="6"/><text x="28.9486%" y="735.50"></text></g><g><title>ext4_da_write_begin (28 samples, 0.05%)</title><rect x="28.6611%" y="757" width="0.0526%" height="15" fill="rgb(219,208,6)" fg:x="15258" fg:w="28"/><text x="28.9111%" y="767.50"></text></g><g><title>jbd2_journal_stop (7 samples, 0.01%)</title><rect x="28.7137%" y="725" width="0.0131%" height="15" fill="rgb(248,31,23)" fg:x="15286" fg:w="7"/><text x="28.9637%" y="735.50"></text></g><g><title>__ext4_journal_stop (8 samples, 0.02%)</title><rect x="28.7137%" y="741" width="0.0150%" height="15" fill="rgb(245,15,42)" fg:x="15286" fg:w="8"/><text x="28.9637%" y="751.50"></text></g><g><title>block_write_end (8 samples, 0.02%)</title><rect x="28.7324%" y="725" width="0.0150%" height="15" fill="rgb(222,217,39)" fg:x="15296" fg:w="8"/><text x="28.9824%" y="735.50"></text></g><g><title>__block_commit_write.isra.41 (8 samples, 0.02%)</title><rect x="28.7324%" y="709" width="0.0150%" height="15" fill="rgb(210,219,27)" fg:x="15296" fg:w="8"/><text x="28.9824%" y="719.50"></text></g><g><title>ext4_da_write_end (19 samples, 0.04%)</title><rect x="28.7137%" y="757" width="0.0357%" height="15" fill="rgb(252,166,36)" fg:x="15286" fg:w="19"/><text x="28.9637%" y="767.50"></text></g><g><title>generic_write_end (11 samples, 0.02%)</title><rect x="28.7287%" y="741" width="0.0207%" height="15" fill="rgb(245,132,34)" fg:x="15294" fg:w="11"/><text x="28.9787%" y="751.50"></text></g><g><title>__vfs_write (61 samples, 0.11%)</title><rect x="28.6479%" y="837" width="0.1146%" height="15" fill="rgb(236,54,3)" fg:x="15251" fg:w="61"/><text x="28.8979%" y="847.50"></text></g><g><title>new_sync_write (61 samples, 0.11%)</title><rect x="28.6479%" y="821" width="0.1146%" height="15" fill="rgb(241,173,43)" fg:x="15251" fg:w="61"/><text x="28.8979%" y="831.50"></text></g><g><title>ext4_file_write_iter (60 samples, 0.11%)</title><rect x="28.6498%" y="805" width="0.1127%" height="15" fill="rgb(215,190,9)" fg:x="15252" fg:w="60"/><text x="28.8998%" y="815.50"></text></g><g><title>__generic_file_write_iter (58 samples, 0.11%)</title><rect x="28.6535%" y="789" width="0.1089%" height="15" fill="rgb(242,101,16)" fg:x="15254" fg:w="58"/><text x="28.9035%" y="799.50"></text></g><g><title>generic_perform_write (56 samples, 0.11%)</title><rect x="28.6573%" y="773" width="0.1052%" height="15" fill="rgb(223,190,21)" fg:x="15256" fg:w="56"/><text x="28.9073%" y="783.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (328 samples, 0.62%)</title><rect x="28.1501%" y="1013" width="0.6161%" height="15" fill="rgb(215,228,25)" fg:x="14986" fg:w="328"/><text x="28.4001%" y="1023.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (95 samples, 0.18%)</title><rect x="28.5878%" y="997" width="0.1785%" height="15" fill="rgb(225,36,22)" fg:x="15219" fg:w="95"/><text x="28.8378%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (94 samples, 0.18%)</title><rect x="28.5897%" y="981" width="0.1766%" height="15" fill="rgb(251,106,46)" fg:x="15220" fg:w="94"/><text x="28.8397%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write_at (94 samples, 0.18%)</title><rect x="28.5897%" y="965" width="0.1766%" height="15" fill="rgb(208,90,1)" fg:x="15220" fg:w="94"/><text x="28.8397%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (94 samples, 0.18%)</title><rect x="28.5897%" y="949" width="0.1766%" height="15" fill="rgb(243,10,4)" fg:x="15220" fg:w="94"/><text x="28.8397%" y="959.50"></text></g><g><title>__libc_pwrite64 (94 samples, 0.18%)</title><rect x="28.5897%" y="933" width="0.1766%" height="15" fill="rgb(212,137,27)" fg:x="15220" fg:w="94"/><text x="28.8397%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (78 samples, 0.15%)</title><rect x="28.6197%" y="917" width="0.1465%" height="15" fill="rgb(231,220,49)" fg:x="15236" fg:w="78"/><text x="28.8697%" y="927.50"></text></g><g><title>do_syscall_64 (78 samples, 0.15%)</title><rect x="28.6197%" y="901" width="0.1465%" height="15" fill="rgb(237,96,20)" fg:x="15236" fg:w="78"/><text x="28.8697%" y="911.50"></text></g><g><title>__x64_sys_pwrite64 (74 samples, 0.14%)</title><rect x="28.6272%" y="885" width="0.1390%" height="15" fill="rgb(239,229,30)" fg:x="15240" fg:w="74"/><text x="28.8772%" y="895.50"></text></g><g><title>ksys_pwrite64 (74 samples, 0.14%)</title><rect x="28.6272%" y="869" width="0.1390%" height="15" fill="rgb(219,65,33)" fg:x="15240" fg:w="74"/><text x="28.8772%" y="879.50"></text></g><g><title>vfs_write (67 samples, 0.13%)</title><rect x="28.6404%" y="853" width="0.1259%" height="15" fill="rgb(243,134,7)" fg:x="15247" fg:w="67"/><text x="28.8904%" y="863.50"></text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (386 samples, 0.73%)</title><rect x="28.0468%" y="1029" width="0.7251%" height="15" fill="rgb(216,177,54)" fg:x="14931" fg:w="386"/><text x="28.2968%" y="1039.50"></text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (415 samples, 0.78%)</title><rect x="28.0355%" y="1045" width="0.7795%" height="15" fill="rgb(211,160,20)" fg:x="14925" fg:w="415"/><text x="28.2855%" y="1055.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::uncommitted (21 samples, 0.04%)</title><rect x="28.7756%" y="1029" width="0.0394%" height="15" fill="rgb(239,85,39)" fg:x="15319" fg:w="21"/><text x="29.0256%" y="1039.50"></text></g><g><title>redb::transactions::WriteTransaction::commit (637 samples, 1.20%)</title><rect x="27.6223%" y="1125" width="1.1966%" height="15" fill="rgb(232,125,22)" fg:x="14705" fg:w="637"/><text x="27.8723%" y="1135.50"></text></g><g><title>redb::transactions::WriteTransaction::durable_commit (637 samples, 1.20%)</title><rect x="27.6223%" y="1109" width="1.1966%" height="15" fill="rgb(244,57,34)" fg:x="14705" fg:w="637"/><text x="27.8723%" y="1119.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::flush_table_root_updates (418 samples, 0.79%)</title><rect x="28.0337%" y="1093" width="0.7852%" height="15" fill="rgb(214,203,32)" fg:x="14924" fg:w="418"/><text x="28.2837%" y="1103.50"></text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (418 samples, 0.79%)</title><rect x="28.0337%" y="1077" width="0.7852%" height="15" fill="rgb(207,58,43)" fg:x="14924" fg:w="418"/><text x="28.2837%" y="1087.50"></text></g><g><title>redb::tree_store::btree::UntypedBtreeMut::finalize_dirty_checksums_helper (418 samples, 0.79%)</title><rect x="28.0337%" y="1061" width="0.7852%" height="15" fill="rgb(215,193,15)" fg:x="14924" fg:w="418"/><text x="28.2837%" y="1071.50"></text></g><g><title>ord::index::Index::update (13,544 samples, 25.44%)</title><rect x="3.3830%" y="1141" width="25.4414%" height="15" fill="rgb(232,15,44)" fg:x="1801" fg:w="13544"/><text x="3.6330%" y="1151.50">ord::index::Index::update</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (419 samples, 0.79%)</title><rect x="28.8320%" y="1061" width="0.7871%" height="15" fill="rgb(212,3,48)" fg:x="15349" fg:w="419"/><text x="29.0820%" y="1071.50"></text></g><g><title>jsonrpc::Response::result (480 samples, 0.90%)</title><rect x="28.8301%" y="1093" width="0.9016%" height="15" fill="rgb(218,128,7)" fg:x="15348" fg:w="480"/><text x="29.0801%" y="1103.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (480 samples, 0.90%)</title><rect x="28.8301%" y="1077" width="0.9016%" height="15" fill="rgb(226,216,39)" fg:x="15348" fg:w="480"/><text x="29.0801%" y="1087.50"></text></g><g><title>__nss_passwd_lookup (58 samples, 0.11%)</title><rect x="29.6228%" y="1061" width="0.1089%" height="15" fill="rgb(243,47,51)" fg:x="15770" fg:w="58"/><text x="29.8728%" y="1071.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::end_raw_buffering (48 samples, 0.09%)</title><rect x="29.7318%" y="997" width="0.0902%" height="15" fill="rgb(241,183,40)" fg:x="15828" fg:w="48"/><text x="29.9818%" y="1007.50"></text></g><g><title>core::str::converts::from_utf8 (48 samples, 0.09%)</title><rect x="29.7318%" y="981" width="0.0902%" height="15" fill="rgb(231,217,32)" fg:x="15828" fg:w="48"/><text x="29.9818%" y="991.50"></text></g><g><title>core::str::validations::run_utf8_validation (48 samples, 0.09%)</title><rect x="29.7318%" y="965" width="0.0902%" height="15" fill="rgb(229,61,38)" fg:x="15828" fg:w="48"/><text x="29.9818%" y="975.50"></text></g><g><title>__kfree_skb (9 samples, 0.02%)</title><rect x="39.7344%" y="741" width="0.0169%" height="15" fill="rgb(225,210,5)" fg:x="21153" fg:w="9"/><text x="39.9844%" y="751.50"></text></g><g><title>skb_release_all (9 samples, 0.02%)</title><rect x="39.7344%" y="725" width="0.0169%" height="15" fill="rgb(231,79,45)" fg:x="21153" fg:w="9"/><text x="39.9844%" y="735.50"></text></g><g><title>skb_release_data (9 samples, 0.02%)</title><rect x="39.7344%" y="709" width="0.0169%" height="15" fill="rgb(224,100,7)" fg:x="21153" fg:w="9"/><text x="39.9844%" y="719.50"></text></g><g><title>skb_copy_datagram_iter (56 samples, 0.11%)</title><rect x="39.7551%" y="741" width="0.1052%" height="15" fill="rgb(241,198,18)" fg:x="21164" fg:w="56"/><text x="40.0051%" y="751.50"></text></g><g><title>__skb_datagram_iter (56 samples, 0.11%)</title><rect x="39.7551%" y="725" width="0.1052%" height="15" fill="rgb(252,97,53)" fg:x="21164" fg:w="56"/><text x="40.0051%" y="735.50"></text></g><g><title>simple_copy_to_iter (52 samples, 0.10%)</title><rect x="39.7626%" y="709" width="0.0977%" height="15" fill="rgb(220,88,7)" fg:x="21168" fg:w="52"/><text x="40.0126%" y="719.50"></text></g><g><title>_copy_to_iter (47 samples, 0.09%)</title><rect x="39.7720%" y="693" width="0.0883%" height="15" fill="rgb(213,176,14)" fg:x="21173" fg:w="47"/><text x="40.0220%" y="703.50"></text></g><g><title>copy_user_enhanced_fast_string (46 samples, 0.09%)</title><rect x="39.7738%" y="677" width="0.0864%" height="15" fill="rgb(246,73,7)" fg:x="21174" fg:w="46"/><text x="40.0238%" y="687.50"></text></g><g><title>tcp_cleanup_rbuf (11 samples, 0.02%)</title><rect x="39.8602%" y="741" width="0.0207%" height="15" fill="rgb(245,64,36)" fg:x="21220" fg:w="11"/><text x="40.1102%" y="751.50"></text></g><g><title>tcp_send_ack (11 samples, 0.02%)</title><rect x="39.8602%" y="725" width="0.0207%" height="15" fill="rgb(245,80,10)" fg:x="21220" fg:w="11"/><text x="40.1102%" y="735.50"></text></g><g><title>__tcp_send_ack.part.45 (11 samples, 0.02%)</title><rect x="39.8602%" y="709" width="0.0207%" height="15" fill="rgb(232,107,50)" fg:x="21220" fg:w="11"/><text x="40.1102%" y="719.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.02%)</title><rect x="39.8602%" y="693" width="0.0207%" height="15" fill="rgb(253,3,0)" fg:x="21220" fg:w="11"/><text x="40.1102%" y="703.50"></text></g><g><title>ip_queue_xmit (10 samples, 0.02%)</title><rect x="39.8621%" y="677" width="0.0188%" height="15" fill="rgb(212,99,53)" fg:x="21221" fg:w="10"/><text x="40.1121%" y="687.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.02%)</title><rect x="39.8640%" y="661" width="0.0169%" height="15" fill="rgb(249,111,54)" fg:x="21222" fg:w="9"/><text x="40.1140%" y="671.50"></text></g><g><title>ip_local_out (9 samples, 0.02%)</title><rect x="39.8640%" y="645" width="0.0169%" height="15" fill="rgb(249,55,30)" fg:x="21222" fg:w="9"/><text x="40.1140%" y="655.50"></text></g><g><title>inet_recvmsg (83 samples, 0.16%)</title><rect x="39.7325%" y="773" width="0.1559%" height="15" fill="rgb(237,47,42)" fg:x="21152" fg:w="83"/><text x="39.9825%" y="783.50"></text></g><g><title>tcp_recvmsg (83 samples, 0.16%)</title><rect x="39.7325%" y="757" width="0.1559%" height="15" fill="rgb(211,20,18)" fg:x="21152" fg:w="83"/><text x="39.9825%" y="767.50"></text></g><g><title>sock_recvmsg (84 samples, 0.16%)</title><rect x="39.7325%" y="789" width="0.1578%" height="15" fill="rgb(231,203,46)" fg:x="21152" fg:w="84"/><text x="39.9825%" y="799.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (92 samples, 0.17%)</title><rect x="39.7194%" y="933" width="0.1728%" height="15" fill="rgb(237,142,3)" fg:x="21145" fg:w="92"/><text x="39.9694%" y="943.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (92 samples, 0.17%)</title><rect x="39.7194%" y="917" width="0.1728%" height="15" fill="rgb(241,107,1)" fg:x="21145" fg:w="92"/><text x="39.9694%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (92 samples, 0.17%)</title><rect x="39.7194%" y="901" width="0.1728%" height="15" fill="rgb(229,83,13)" fg:x="21145" fg:w="92"/><text x="39.9694%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (92 samples, 0.17%)</title><rect x="39.7194%" y="885" width="0.1728%" height="15" fill="rgb(241,91,40)" fg:x="21145" fg:w="92"/><text x="39.9694%" y="895.50"></text></g><g><title>__libc_recv (92 samples, 0.17%)</title><rect x="39.7194%" y="869" width="0.1728%" height="15" fill="rgb(225,3,45)" fg:x="21145" fg:w="92"/><text x="39.9694%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (86 samples, 0.16%)</title><rect x="39.7306%" y="853" width="0.1615%" height="15" fill="rgb(244,223,14)" fg:x="21151" fg:w="86"/><text x="39.9806%" y="863.50"></text></g><g><title>do_syscall_64 (86 samples, 0.16%)</title><rect x="39.7306%" y="837" width="0.1615%" height="15" fill="rgb(224,124,37)" fg:x="21151" fg:w="86"/><text x="39.9806%" y="847.50"></text></g><g><title>__x64_sys_recvfrom (85 samples, 0.16%)</title><rect x="39.7325%" y="821" width="0.1597%" height="15" fill="rgb(251,171,30)" fg:x="21152" fg:w="85"/><text x="39.9825%" y="831.50"></text></g><g><title>__sys_recvfrom (85 samples, 0.16%)</title><rect x="39.7325%" y="805" width="0.1597%" height="15" fill="rgb(236,46,54)" fg:x="21152" fg:w="85"/><text x="39.9825%" y="815.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,732 samples, 5.13%)</title><rect x="34.7810%" y="949" width="5.1319%" height="15" fill="rgb(245,213,5)" fg:x="18516" fg:w="2732"/><text x="35.0310%" y="959.50">&lt;std::..</text></g><g><title>ret_from_intr (6 samples, 0.01%)</title><rect x="39.9016%" y="933" width="0.0113%" height="15" fill="rgb(230,144,27)" fg:x="21242" fg:w="6"/><text x="40.1516%" y="943.50"></text></g><g><title>do_IRQ (6 samples, 0.01%)</title><rect x="39.9016%" y="917" width="0.0113%" height="15" fill="rgb(220,86,6)" fg:x="21242" fg:w="6"/><text x="40.1516%" y="927.50"></text></g><g><title>irq_exit (6 samples, 0.01%)</title><rect x="39.9016%" y="901" width="0.0113%" height="15" fill="rgb(240,20,13)" fg:x="21242" fg:w="6"/><text x="40.1516%" y="911.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.01%)</title><rect x="39.9016%" y="885" width="0.0113%" height="15" fill="rgb(217,89,34)" fg:x="21242" fg:w="6"/><text x="40.1516%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (57 samples, 0.11%)</title><rect x="39.9128%" y="949" width="0.1071%" height="15" fill="rgb(229,13,5)" fg:x="21248" fg:w="57"/><text x="40.1628%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.11%)</title><rect x="39.9128%" y="933" width="0.1071%" height="15" fill="rgb(244,67,35)" fg:x="21248" fg:w="57"/><text x="40.1628%" y="943.50"></text></g><g><title>realloc (57 samples, 0.11%)</title><rect x="39.9128%" y="917" width="0.1071%" height="15" fill="rgb(221,40,2)" fg:x="21248" fg:w="57"/><text x="40.1628%" y="927.50"></text></g><g><title>_IO_str_seekoff (55 samples, 0.10%)</title><rect x="39.9166%" y="901" width="0.1033%" height="15" fill="rgb(237,157,21)" fg:x="21250" fg:w="55"/><text x="40.1666%" y="911.50"></text></g><g><title>__nss_passwd_lookup (52 samples, 0.10%)</title><rect x="39.9222%" y="885" width="0.0977%" height="15" fill="rgb(222,94,11)" fg:x="21253" fg:w="52"/><text x="40.1722%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (5,484 samples, 10.30%)</title><rect x="29.7318%" y="1045" width="10.3013%" height="15" fill="rgb(249,113,6)" fg:x="15828" fg:w="5484"/><text x="29.9818%" y="1055.50">&lt;&amp;mut serde_jso..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (5,484 samples, 10.30%)</title><rect x="29.7318%" y="1029" width="10.3013%" height="15" fill="rgb(238,137,36)" fg:x="15828" fg:w="5484"/><text x="29.9818%" y="1039.50">serde::de::impl..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (5,484 samples, 10.30%)</title><rect x="29.7318%" y="1013" width="10.3013%" height="15" fill="rgb(210,102,26)" fg:x="15828" fg:w="5484"/><text x="29.9818%" y="1023.50">serde_json::de:..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (5,436 samples, 10.21%)</title><rect x="29.8219%" y="997" width="10.2111%" height="15" fill="rgb(218,30,30)" fg:x="15876" fg:w="5436"/><text x="30.0719%" y="1007.50">serde_json::de:..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::ignore_str (5,436 samples, 10.21%)</title><rect x="29.8219%" y="981" width="10.2111%" height="15" fill="rgb(214,67,26)" fg:x="15876" fg:w="5436"/><text x="30.0719%" y="991.50">&lt;serde_json::re..</text></g><g><title>serde_json::read::next_or_eof (4,316 samples, 8.11%)</title><rect x="31.9258%" y="965" width="8.1073%" height="15" fill="rgb(251,9,53)" fg:x="16996" fg:w="4316"/><text x="32.1758%" y="975.50">serde_json:..</text></g><g><title>serde_json::de::from_reader (5,485 samples, 10.30%)</title><rect x="29.7318%" y="1061" width="10.3032%" height="15" fill="rgb(228,204,25)" fg:x="15828" fg:w="5485"/><text x="29.9818%" y="1071.50">serde_json::de:..</text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (5,973 samples, 11.22%)</title><rect x="28.8264%" y="1109" width="11.2199%" height="15" fill="rgb(207,153,8)" fg:x="15346" fg:w="5973"/><text x="29.0764%" y="1119.50">&lt;bitcoincore_rpc:..</text></g><g><title>jsonrpc::client::Client::send_request (5,491 samples, 10.31%)</title><rect x="29.7318%" y="1093" width="10.3144%" height="15" fill="rgb(242,9,16)" fg:x="15828" fg:w="5491"/><text x="29.9818%" y="1103.50">jsonrpc::client..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (5,491 samples, 10.31%)</title><rect x="29.7318%" y="1077" width="10.3144%" height="15" fill="rgb(217,211,10)" fg:x="15828" fg:w="5491"/><text x="29.9818%" y="1087.50">&lt;jsonrpc::simpl..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (9 samples, 0.02%)</title><rect x="40.2284%" y="1077" width="0.0169%" height="15" fill="rgb(219,228,52)" fg:x="21416" fg:w="9"/><text x="40.4784%" y="1087.50"></text></g><g><title>__libc_malloc (26 samples, 0.05%)</title><rect x="40.2453%" y="1077" width="0.0488%" height="15" fill="rgb(231,92,29)" fg:x="21425" fg:w="26"/><text x="40.4953%" y="1087.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="40.2754%" y="1061" width="0.0188%" height="15" fill="rgb(232,8,23)" fg:x="21441" fg:w="10"/><text x="40.5254%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (7 samples, 0.01%)</title><rect x="40.3280%" y="1061" width="0.0131%" height="15" fill="rgb(216,211,34)" fg:x="21469" fg:w="7"/><text x="40.5780%" y="1071.50"></text></g><g><title>__libc_malloc (37 samples, 0.07%)</title><rect x="40.3524%" y="1029" width="0.0695%" height="15" fill="rgb(236,151,0)" fg:x="21482" fg:w="37"/><text x="40.6024%" y="1039.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.02%)</title><rect x="40.4050%" y="1013" width="0.0169%" height="15" fill="rgb(209,168,3)" fg:x="21510" fg:w="9"/><text x="40.6550%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.08%)</title><rect x="40.3411%" y="1061" width="0.0845%" height="15" fill="rgb(208,129,28)" fg:x="21476" fg:w="45"/><text x="40.5911%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.08%)</title><rect x="40.3486%" y="1045" width="0.0770%" height="15" fill="rgb(229,78,22)" fg:x="21480" fg:w="41"/><text x="40.5986%" y="1055.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (377 samples, 0.71%)</title><rect x="40.2942%" y="1077" width="0.7082%" height="15" fill="rgb(228,187,13)" fg:x="21451" fg:w="377"/><text x="40.5442%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (307 samples, 0.58%)</title><rect x="40.4257%" y="1061" width="0.5767%" height="15" fill="rgb(240,119,24)" fg:x="21521" fg:w="307"/><text x="40.6757%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (304 samples, 0.57%)</title><rect x="40.4313%" y="1045" width="0.5710%" height="15" fill="rgb(209,194,42)" fg:x="21524" fg:w="304"/><text x="40.6813%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (870 samples, 1.63%)</title><rect x="40.1420%" y="1093" width="1.6342%" height="15" fill="rgb(247,200,46)" fg:x="21370" fg:w="870"/><text x="40.3920%" y="1103.50"></text></g><g><title>std::io::Read::read_exact (412 samples, 0.77%)</title><rect x="41.0023%" y="1077" width="0.7739%" height="15" fill="rgb(218,76,16)" fg:x="21828" fg:w="412"/><text x="41.2523%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (395 samples, 0.74%)</title><rect x="41.0343%" y="1061" width="0.7420%" height="15" fill="rgb(225,21,48)" fg:x="21845" fg:w="395"/><text x="41.2843%" y="1071.50"></text></g><g><title>__libc_malloc (25 samples, 0.05%)</title><rect x="41.8251%" y="1077" width="0.0470%" height="15" fill="rgb(239,223,50)" fg:x="22266" fg:w="25"/><text x="42.0751%" y="1087.50"></text></g><g><title>_IO_str_seekoff (12 samples, 0.02%)</title><rect x="41.8495%" y="1061" width="0.0225%" height="15" fill="rgb(244,45,21)" fg:x="22279" fg:w="12"/><text x="42.0995%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (13 samples, 0.02%)</title><rect x="41.9040%" y="1061" width="0.0244%" height="15" fill="rgb(232,33,43)" fg:x="22308" fg:w="13"/><text x="42.1540%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (11 samples, 0.02%)</title><rect x="41.9077%" y="1045" width="0.0207%" height="15" fill="rgb(209,8,3)" fg:x="22310" fg:w="11"/><text x="42.1577%" y="1055.50"></text></g><g><title>__libc_malloc (49 samples, 0.09%)</title><rect x="41.9434%" y="1029" width="0.0920%" height="15" fill="rgb(214,25,53)" fg:x="22329" fg:w="49"/><text x="42.1934%" y="1039.50"></text></g><g><title>_IO_str_seekoff (14 samples, 0.03%)</title><rect x="42.0092%" y="1013" width="0.0263%" height="15" fill="rgb(254,186,54)" fg:x="22364" fg:w="14"/><text x="42.2592%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (56 samples, 0.11%)</title><rect x="41.9322%" y="1061" width="0.1052%" height="15" fill="rgb(208,174,49)" fg:x="22323" fg:w="56"/><text x="42.1822%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.10%)</title><rect x="41.9397%" y="1045" width="0.0977%" height="15" fill="rgb(233,191,51)" fg:x="22327" fg:w="52"/><text x="42.1897%" y="1055.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (311 samples, 0.58%)</title><rect x="41.8720%" y="1077" width="0.5842%" height="15" fill="rgb(222,134,10)" fg:x="22291" fg:w="311"/><text x="42.1220%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (223 samples, 0.42%)</title><rect x="42.0373%" y="1061" width="0.4189%" height="15" fill="rgb(230,226,20)" fg:x="22379" fg:w="223"/><text x="42.2873%" y="1071.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (215 samples, 0.40%)</title><rect x="42.0524%" y="1045" width="0.4039%" height="15" fill="rgb(251,111,25)" fg:x="22387" fg:w="215"/><text x="42.3024%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (404 samples, 0.76%)</title><rect x="41.7762%" y="1093" width="0.7589%" height="15" fill="rgb(224,40,46)" fg:x="22240" fg:w="404"/><text x="42.0262%" y="1103.50"></text></g><g><title>std::io::Read::read_exact (42 samples, 0.08%)</title><rect x="42.4562%" y="1077" width="0.0789%" height="15" fill="rgb(236,108,47)" fg:x="22602" fg:w="42"/><text x="42.7062%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (34 samples, 0.06%)</title><rect x="42.4713%" y="1061" width="0.0639%" height="15" fill="rgb(234,93,0)" fg:x="22610" fg:w="34"/><text x="42.7213%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (30 samples, 0.06%)</title><rect x="42.5351%" y="1093" width="0.0564%" height="15" fill="rgb(224,213,32)" fg:x="22644" fg:w="30"/><text x="42.7851%" y="1103.50"></text></g><g><title>std::io::Read::read_exact (25 samples, 0.05%)</title><rect x="42.5445%" y="1077" width="0.0470%" height="15" fill="rgb(251,11,48)" fg:x="22649" fg:w="25"/><text x="42.7945%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (11 samples, 0.02%)</title><rect x="42.5708%" y="1061" width="0.0207%" height="15" fill="rgb(236,173,5)" fg:x="22663" fg:w="11"/><text x="42.8208%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (11 samples, 0.02%)</title><rect x="42.5915%" y="1093" width="0.0207%" height="15" fill="rgb(230,95,12)" fg:x="22674" fg:w="11"/><text x="42.8415%" y="1103.50"></text></g><g><title>_IO_str_seekoff (17 samples, 0.03%)</title><rect x="42.6948%" y="1061" width="0.0319%" height="15" fill="rgb(232,209,1)" fg:x="22729" fg:w="17"/><text x="42.9448%" y="1071.50"></text></g><g><title>__libc_calloc (63 samples, 0.12%)</title><rect x="42.6178%" y="1077" width="0.1183%" height="15" fill="rgb(232,6,1)" fg:x="22688" fg:w="63"/><text x="42.8678%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (69 samples, 0.13%)</title><rect x="42.6121%" y="1093" width="0.1296%" height="15" fill="rgb(210,224,50)" fg:x="22685" fg:w="69"/><text x="42.8621%" y="1103.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (17 samples, 0.03%)</title><rect x="42.7418%" y="1093" width="0.0319%" height="15" fill="rgb(228,127,35)" fg:x="22754" fg:w="17"/><text x="42.9918%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="42.7511%" y="1077" width="0.0225%" height="15" fill="rgb(245,102,45)" fg:x="22759" fg:w="12"/><text x="43.0011%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="42.7530%" y="1061" width="0.0207%" height="15" fill="rgb(214,1,49)" fg:x="22760" fg:w="11"/><text x="43.0030%" y="1071.50"></text></g><g><title>realloc (11 samples, 0.02%)</title><rect x="42.7530%" y="1045" width="0.0207%" height="15" fill="rgb(226,163,40)" fg:x="22760" fg:w="11"/><text x="43.0030%" y="1055.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="42.7605%" y="1029" width="0.0131%" height="15" fill="rgb(239,212,28)" fg:x="22764" fg:w="7"/><text x="43.0105%" y="1039.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="42.7605%" y="1013" width="0.0131%" height="15" fill="rgb(220,20,13)" fg:x="22764" fg:w="7"/><text x="43.0105%" y="1023.50"></text></g><g><title>core::slice::rotate::ptr_rotate (15 samples, 0.03%)</title><rect x="42.7756%" y="1093" width="0.0282%" height="15" fill="rgb(210,164,35)" fg:x="22772" fg:w="15"/><text x="43.0256%" y="1103.50"></text></g><g><title>__nss_passwd_lookup (11 samples, 0.02%)</title><rect x="42.7831%" y="1077" width="0.0207%" height="15" fill="rgb(248,109,41)" fg:x="22776" fg:w="11"/><text x="43.0331%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (969 samples, 1.82%)</title><rect x="42.8451%" y="1077" width="1.8202%" height="15" fill="rgb(238,23,50)" fg:x="22809" fg:w="969"/><text x="43.0951%" y="1087.50">&lt;..</text></g><g><title>std::io::Read::read_exact (992 samples, 1.86%)</title><rect x="42.8037%" y="1093" width="1.8634%" height="15" fill="rgb(211,48,49)" fg:x="22787" fg:w="992"/><text x="43.0537%" y="1103.50">s..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (8,435 samples, 15.84%)</title><rect x="28.8245%" y="1125" width="15.8445%" height="15" fill="rgb(223,36,21)" fg:x="15345" fg:w="8435"/><text x="29.0745%" y="1135.50">bitcoincore_rpc::client:..</text></g><g><title>bitcoincore_rpc::deserialize_hex (2,460 samples, 4.62%)</title><rect x="40.0481%" y="1109" width="4.6209%" height="15" fill="rgb(207,123,46)" fg:x="21320" fg:w="2460"/><text x="40.2981%" y="1119.50">bitco..</text></g><g><title>jsonrpc::client::Client::send_request (15 samples, 0.03%)</title><rect x="44.6878%" y="1109" width="0.0282%" height="15" fill="rgb(240,218,32)" fg:x="23790" fg:w="15"/><text x="44.9378%" y="1119.50"></text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (15 samples, 0.03%)</title><rect x="44.6878%" y="1093" width="0.0282%" height="15" fill="rgb(252,5,43)" fg:x="23790" fg:w="15"/><text x="44.9378%" y="1103.50"></text></g><g><title>ord::index::updater::Updater::get_block_with_retries (8,461 samples, 15.89%)</title><rect x="28.8245%" y="1141" width="15.8934%" height="15" fill="rgb(252,84,19)" fg:x="15345" fg:w="8461"/><text x="29.0745%" y="1151.50">ord::index::updater::Upd..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (26 samples, 0.05%)</title><rect x="44.6690%" y="1125" width="0.0488%" height="15" fill="rgb(243,152,39)" fg:x="23780" fg:w="26"/><text x="44.9190%" y="1135.50"></text></g><g><title>__rust_dealloc (12 samples, 0.02%)</title><rect x="44.8644%" y="1109" width="0.0225%" height="15" fill="rgb(234,160,15)" fg:x="23884" fg:w="12"/><text x="45.1144%" y="1119.50"></text></g><g><title>_IO_str_seekoff (554 samples, 1.04%)</title><rect x="46.6789%" y="1093" width="1.0406%" height="15" fill="rgb(237,34,20)" fg:x="24850" fg:w="554"/><text x="46.9289%" y="1103.50"></text></g><g><title>pthread_setcanceltype (6 samples, 0.01%)</title><rect x="47.7215%" y="1093" width="0.0113%" height="15" fill="rgb(229,97,13)" fg:x="25405" fg:w="6"/><text x="47.9715%" y="1103.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="47.7215%" y="1077" width="0.0113%" height="15" fill="rgb(234,71,50)" fg:x="25405" fg:w="6"/><text x="47.9715%" y="1087.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="47.7215%" y="1061" width="0.0113%" height="15" fill="rgb(253,155,4)" fg:x="25405" fg:w="6"/><text x="47.9715%" y="1071.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="47.7215%" y="1045" width="0.0113%" height="15" fill="rgb(222,185,37)" fg:x="25405" fg:w="6"/><text x="47.9715%" y="1055.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="47.7215%" y="1029" width="0.0113%" height="15" fill="rgb(251,177,13)" fg:x="25405" fg:w="6"/><text x="47.9715%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,576 samples, 2.96%)</title><rect x="44.7780%" y="1125" width="2.9604%" height="15" fill="rgb(250,179,40)" fg:x="23838" fg:w="1576"/><text x="45.0280%" y="1135.50">&lt;al..</text></g><g><title>cfree (1,518 samples, 2.85%)</title><rect x="44.8869%" y="1109" width="2.8515%" height="15" fill="rgb(242,44,2)" fg:x="23896" fg:w="1518"/><text x="45.1369%" y="1119.50">cf..</text></g><g><title>_IO_str_seekoff (55 samples, 0.10%)</title><rect x="47.7835%" y="901" width="0.1033%" height="15" fill="rgb(216,177,13)" fg:x="25438" fg:w="55"/><text x="48.0335%" y="911.50"></text></g><g><title>_IO_str_seekoff (29 samples, 0.05%)</title><rect x="47.8323%" y="885" width="0.0545%" height="15" fill="rgb(216,106,43)" fg:x="25464" fg:w="29"/><text x="48.0823%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.11%)</title><rect x="47.7835%" y="1013" width="0.1052%" height="15" fill="rgb(216,183,2)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.11%)</title><rect x="47.7835%" y="997" width="0.1052%" height="15" fill="rgb(249,75,3)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.11%)</title><rect x="47.7835%" y="981" width="0.1052%" height="15" fill="rgb(219,67,39)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.11%)</title><rect x="47.7835%" y="965" width="0.1052%" height="15" fill="rgb(253,228,2)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.11%)</title><rect x="47.7835%" y="949" width="0.1052%" height="15" fill="rgb(235,138,27)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="959.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.11%)</title><rect x="47.7835%" y="933" width="0.1052%" height="15" fill="rgb(236,97,51)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="943.50"></text></g><g><title>__libc_malloc (56 samples, 0.11%)</title><rect x="47.7835%" y="917" width="0.1052%" height="15" fill="rgb(240,80,30)" fg:x="25438" fg:w="56"/><text x="48.0335%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (60 samples, 0.11%)</title><rect x="47.7816%" y="1093" width="0.1127%" height="15" fill="rgb(230,178,19)" fg:x="25437" fg:w="60"/><text x="48.0316%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.11%)</title><rect x="47.7835%" y="1077" width="0.1108%" height="15" fill="rgb(210,190,27)" fg:x="25438" fg:w="59"/><text x="48.0335%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.11%)</title><rect x="47.7835%" y="1061" width="0.1108%" height="15" fill="rgb(222,107,31)" fg:x="25438" fg:w="59"/><text x="48.0335%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.11%)</title><rect x="47.7835%" y="1045" width="0.1108%" height="15" fill="rgb(216,127,34)" fg:x="25438" fg:w="59"/><text x="48.0335%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.11%)</title><rect x="47.7835%" y="1029" width="0.1108%" height="15" fill="rgb(234,116,52)" fg:x="25438" fg:w="59"/><text x="48.0335%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (324 samples, 0.61%)</title><rect x="47.8943%" y="1077" width="0.6086%" height="15" fill="rgb(222,124,15)" fg:x="25497" fg:w="324"/><text x="48.1443%" y="1087.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.02%)</title><rect x="48.5048%" y="1013" width="0.0207%" height="15" fill="rgb(231,179,28)" fg:x="25822" fg:w="11"/><text x="48.7548%" y="1023.50"></text></g><g><title>async_page_fault (6 samples, 0.01%)</title><rect x="49.1641%" y="997" width="0.0113%" height="15" fill="rgb(226,93,45)" fg:x="26173" fg:w="6"/><text x="49.4141%" y="1007.50"></text></g><g><title>do_async_page_fault (6 samples, 0.01%)</title><rect x="49.1641%" y="981" width="0.0113%" height="15" fill="rgb(215,8,51)" fg:x="26173" fg:w="6"/><text x="49.4141%" y="991.50"></text></g><g><title>do_page_fault (6 samples, 0.01%)</title><rect x="49.1641%" y="965" width="0.0113%" height="15" fill="rgb(223,106,5)" fg:x="26173" fg:w="6"/><text x="49.4141%" y="975.50"></text></g><g><title>__do_page_fault (6 samples, 0.01%)</title><rect x="49.1641%" y="949" width="0.0113%" height="15" fill="rgb(250,191,5)" fg:x="26173" fg:w="6"/><text x="49.4141%" y="959.50"></text></g><g><title>_IO_str_seekoff (358 samples, 0.67%)</title><rect x="48.5048%" y="1029" width="0.6725%" height="15" fill="rgb(242,132,44)" fg:x="25822" fg:w="358"/><text x="48.7548%" y="1039.50"></text></g><g><title>__nss_passwd_lookup (347 samples, 0.65%)</title><rect x="48.5254%" y="1013" width="0.6518%" height="15" fill="rgb(251,152,29)" fg:x="25833" fg:w="347"/><text x="48.7754%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (9 samples, 0.02%)</title><rect x="49.1772%" y="1029" width="0.0169%" height="15" fill="rgb(218,179,5)" fg:x="26180" fg:w="9"/><text x="49.4272%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (695 samples, 1.31%)</title><rect x="47.8943%" y="1093" width="1.3055%" height="15" fill="rgb(227,67,19)" fg:x="25497" fg:w="695"/><text x="48.1443%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (371 samples, 0.70%)</title><rect x="48.5029%" y="1077" width="0.6969%" height="15" fill="rgb(233,119,31)" fg:x="25821" fg:w="371"/><text x="48.7529%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (371 samples, 0.70%)</title><rect x="48.5029%" y="1061" width="0.6969%" height="15" fill="rgb(241,120,22)" fg:x="25821" fg:w="371"/><text x="48.7529%" y="1071.50"></text></g><g><title>realloc (370 samples, 0.70%)</title><rect x="48.5048%" y="1045" width="0.6950%" height="15" fill="rgb(224,102,30)" fg:x="25822" fg:w="370"/><text x="48.7548%" y="1055.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.06%)</title><rect x="49.2411%" y="949" width="0.0601%" height="15" fill="rgb(210,164,37)" fg:x="26214" fg:w="32"/><text x="49.4911%" y="959.50"></text></g><g><title>do_futex (32 samples, 0.06%)</title><rect x="49.2411%" y="933" width="0.0601%" height="15" fill="rgb(226,191,16)" fg:x="26214" fg:w="32"/><text x="49.4911%" y="943.50"></text></g><g><title>futex_wake (32 samples, 0.06%)</title><rect x="49.2411%" y="917" width="0.0601%" height="15" fill="rgb(214,40,45)" fg:x="26214" fg:w="32"/><text x="49.4911%" y="927.50"></text></g><g><title>wake_up_q (31 samples, 0.06%)</title><rect x="49.2430%" y="901" width="0.0582%" height="15" fill="rgb(244,29,26)" fg:x="26215" fg:w="31"/><text x="49.4930%" y="911.50"></text></g><g><title>try_to_wake_up (31 samples, 0.06%)</title><rect x="49.2430%" y="885" width="0.0582%" height="15" fill="rgb(216,16,5)" fg:x="26215" fg:w="31"/><text x="49.4930%" y="895.50"></text></g><g><title>__lock_text_start (29 samples, 0.05%)</title><rect x="49.2468%" y="869" width="0.0545%" height="15" fill="rgb(249,76,35)" fg:x="26217" fg:w="29"/><text x="49.4968%" y="879.50"></text></g><g><title>syscall (34 samples, 0.06%)</title><rect x="49.2392%" y="997" width="0.0639%" height="15" fill="rgb(207,11,44)" fg:x="26213" fg:w="34"/><text x="49.4892%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.06%)</title><rect x="49.2392%" y="981" width="0.0639%" height="15" fill="rgb(228,190,49)" fg:x="26213" fg:w="34"/><text x="49.4892%" y="991.50"></text></g><g><title>do_syscall_64 (34 samples, 0.06%)</title><rect x="49.2392%" y="965" width="0.0639%" height="15" fill="rgb(214,173,12)" fg:x="26213" fg:w="34"/><text x="49.4892%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (44 samples, 0.08%)</title><rect x="49.2392%" y="1013" width="0.0827%" height="15" fill="rgb(218,26,35)" fg:x="26213" fg:w="44"/><text x="49.4892%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (7 samples, 0.01%)</title><rect x="49.3087%" y="997" width="0.0131%" height="15" fill="rgb(220,200,19)" fg:x="26250" fg:w="7"/><text x="49.5587%" y="1007.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (67 samples, 0.13%)</title><rect x="49.1998%" y="1093" width="0.1259%" height="15" fill="rgb(239,95,49)" fg:x="26192" fg:w="67"/><text x="49.4498%" y="1103.50"></text></g><g><title>hyper::body::body::Body::poll_inner (62 samples, 0.12%)</title><rect x="49.2092%" y="1077" width="0.1165%" height="15" fill="rgb(235,85,53)" fg:x="26197" fg:w="62"/><text x="49.4592%" y="1087.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (59 samples, 0.11%)</title><rect x="49.2148%" y="1061" width="0.1108%" height="15" fill="rgb(233,133,31)" fg:x="26200" fg:w="59"/><text x="49.4648%" y="1071.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (58 samples, 0.11%)</title><rect x="49.2167%" y="1045" width="0.1089%" height="15" fill="rgb(218,25,20)" fg:x="26201" fg:w="58"/><text x="49.4667%" y="1055.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (46 samples, 0.09%)</title><rect x="49.2392%" y="1029" width="0.0864%" height="15" fill="rgb(252,210,38)" fg:x="26213" fg:w="46"/><text x="49.4892%" y="1039.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (6 samples, 0.01%)</title><rect x="49.3576%" y="1061" width="0.0113%" height="15" fill="rgb(242,134,21)" fg:x="26276" fg:w="6"/><text x="49.6076%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (6 samples, 0.01%)</title><rect x="49.3782%" y="1061" width="0.0113%" height="15" fill="rgb(213,28,48)" fg:x="26287" fg:w="6"/><text x="49.6282%" y="1071.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (43 samples, 0.08%)</title><rect x="49.3294%" y="1093" width="0.0808%" height="15" fill="rgb(250,196,2)" fg:x="26261" fg:w="43"/><text x="49.5794%" y="1103.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (41 samples, 0.08%)</title><rect x="49.3332%" y="1077" width="0.0770%" height="15" fill="rgb(227,5,17)" fg:x="26263" fg:w="41"/><text x="49.5832%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="49.4290%" y="1045" width="0.0113%" height="15" fill="rgb(221,226,24)" fg:x="26314" fg:w="6"/><text x="49.6790%" y="1055.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="49.5022%" y="901" width="0.0131%" height="15" fill="rgb(211,5,48)" fg:x="26353" fg:w="7"/><text x="49.7522%" y="911.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="49.5003%" y="917" width="0.0188%" height="15" fill="rgb(219,150,6)" fg:x="26352" fg:w="10"/><text x="49.7503%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.04%)</title><rect x="49.4853%" y="981" width="0.0357%" height="15" fill="rgb(251,46,16)" fg:x="26344" fg:w="19"/><text x="49.7353%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.03%)</title><rect x="49.4909%" y="965" width="0.0301%" height="15" fill="rgb(220,204,40)" fg:x="26347" fg:w="16"/><text x="49.7409%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.03%)</title><rect x="49.4909%" y="949" width="0.0301%" height="15" fill="rgb(211,85,2)" fg:x="26347" fg:w="16"/><text x="49.7409%" y="959.50"></text></g><g><title>realloc (15 samples, 0.03%)</title><rect x="49.4928%" y="933" width="0.0282%" height="15" fill="rgb(229,17,7)" fg:x="26348" fg:w="15"/><text x="49.7428%" y="943.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (42 samples, 0.08%)</title><rect x="49.4440%" y="1029" width="0.0789%" height="15" fill="rgb(239,72,28)" fg:x="26322" fg:w="42"/><text x="49.6940%" y="1039.50"></text></g><g><title>serde_json::ser::format_escaped_str (39 samples, 0.07%)</title><rect x="49.4496%" y="1013" width="0.0733%" height="15" fill="rgb(230,47,54)" fg:x="26325" fg:w="39"/><text x="49.6996%" y="1023.50"></text></g><g><title>std::io::Write::write_all (26 samples, 0.05%)</title><rect x="49.4740%" y="997" width="0.0488%" height="15" fill="rgb(214,50,8)" fg:x="26338" fg:w="26"/><text x="49.7240%" y="1007.50"></text></g><g><title>serde::ser::Serializer::collect_seq (46 samples, 0.09%)</title><rect x="49.4402%" y="1045" width="0.0864%" height="15" fill="rgb(216,198,43)" fg:x="26320" fg:w="46"/><text x="49.6902%" y="1055.50"></text></g><g><title>__nss_passwd_lookup (10 samples, 0.02%)</title><rect x="49.6037%" y="997" width="0.0188%" height="15" fill="rgb(234,20,35)" fg:x="26407" fg:w="10"/><text x="49.8537%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31 samples, 0.06%)</title><rect x="49.5849%" y="1013" width="0.0582%" height="15" fill="rgb(254,45,19)" fg:x="26397" fg:w="31"/><text x="49.8349%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="49.6224%" y="997" width="0.0207%" height="15" fill="rgb(219,14,44)" fg:x="26417" fg:w="11"/><text x="49.8724%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="49.6224%" y="981" width="0.0207%" height="15" fill="rgb(217,220,26)" fg:x="26417" fg:w="11"/><text x="49.8724%" y="991.50"></text></g><g><title>realloc (11 samples, 0.02%)</title><rect x="49.6224%" y="965" width="0.0207%" height="15" fill="rgb(213,158,28)" fg:x="26417" fg:w="11"/><text x="49.8724%" y="975.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="49.6243%" y="949" width="0.0188%" height="15" fill="rgb(252,51,52)" fg:x="26418" fg:w="10"/><text x="49.8743%" y="959.50"></text></g><g><title>_IO_str_seekoff (10 samples, 0.02%)</title><rect x="49.6243%" y="933" width="0.0188%" height="15" fill="rgb(246,89,16)" fg:x="26418" fg:w="10"/><text x="49.8743%" y="943.50"></text></g><g><title>serde_json::ser::format_escaped_str (64 samples, 0.12%)</title><rect x="49.5266%" y="1045" width="0.1202%" height="15" fill="rgb(216,158,49)" fg:x="26366" fg:w="64"/><text x="49.7766%" y="1055.50"></text></g><g><title>std::io::Write::write_all (44 samples, 0.08%)</title><rect x="49.5642%" y="1029" width="0.0827%" height="15" fill="rgb(236,107,19)" fg:x="26386" fg:w="44"/><text x="49.8142%" y="1039.50"></text></g><g><title>serde_json::ser::format_escaped_str (34 samples, 0.06%)</title><rect x="49.6544%" y="1029" width="0.0639%" height="15" fill="rgb(228,185,30)" fg:x="26434" fg:w="34"/><text x="49.9044%" y="1039.50"></text></g><g><title>std::io::Write::write_all (14 samples, 0.03%)</title><rect x="49.6919%" y="1013" width="0.0263%" height="15" fill="rgb(246,134,8)" fg:x="26454" fg:w="14"/><text x="49.9419%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="49.7051%" y="997" width="0.0131%" height="15" fill="rgb(214,143,50)" fg:x="26461" fg:w="7"/><text x="49.9551%" y="1007.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (41 samples, 0.08%)</title><rect x="49.6469%" y="1045" width="0.0770%" height="15" fill="rgb(228,75,8)" fg:x="26430" fg:w="41"/><text x="49.8969%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.03%)</title><rect x="49.7408%" y="1029" width="0.0282%" height="15" fill="rgb(207,175,4)" fg:x="26480" fg:w="15"/><text x="49.9908%" y="1039.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (190 samples, 0.36%)</title><rect x="49.4139%" y="1061" width="0.3569%" height="15" fill="rgb(205,108,24)" fg:x="26306" fg:w="190"/><text x="49.6639%" y="1071.50"></text></g><g><title>std::io::Write::write_all (25 samples, 0.05%)</title><rect x="49.7239%" y="1045" width="0.0470%" height="15" fill="rgb(244,120,49)" fg:x="26471" fg:w="25"/><text x="49.9739%" y="1055.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (194 samples, 0.36%)</title><rect x="49.4102%" y="1093" width="0.3644%" height="15" fill="rgb(223,47,38)" fg:x="26304" fg:w="194"/><text x="49.6602%" y="1103.50"></text></g><g><title>serde::ser::Serializer::collect_seq (193 samples, 0.36%)</title><rect x="49.4121%" y="1077" width="0.3625%" height="15" fill="rgb(229,179,11)" fg:x="26305" fg:w="193"/><text x="49.6621%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.05%)</title><rect x="49.8253%" y="1061" width="0.0451%" height="15" fill="rgb(231,122,1)" fg:x="26525" fg:w="24"/><text x="50.0753%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.04%)</title><rect x="49.8272%" y="1045" width="0.0432%" height="15" fill="rgb(245,119,9)" fg:x="26526" fg:w="23"/><text x="50.0772%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.04%)</title><rect x="49.8309%" y="1029" width="0.0394%" height="15" fill="rgb(241,163,25)" fg:x="26528" fg:w="21"/><text x="50.0809%" y="1039.50"></text></g><g><title>__libc_malloc (21 samples, 0.04%)</title><rect x="49.8309%" y="1013" width="0.0394%" height="15" fill="rgb(217,214,3)" fg:x="26528" fg:w="21"/><text x="50.0809%" y="1023.50"></text></g><g><title>_IO_str_seekoff (18 samples, 0.03%)</title><rect x="49.8366%" y="997" width="0.0338%" height="15" fill="rgb(240,86,28)" fg:x="26531" fg:w="18"/><text x="50.0866%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (37 samples, 0.07%)</title><rect x="49.8704%" y="1061" width="0.0695%" height="15" fill="rgb(215,47,9)" fg:x="26549" fg:w="37"/><text x="50.1204%" y="1071.50"></text></g><g><title>bitcoin_private::hex::buf_encoder::out_bytes::OutBytes::write (11 samples, 0.02%)</title><rect x="49.9418%" y="1061" width="0.0207%" height="15" fill="rgb(252,25,45)" fg:x="26587" fg:w="11"/><text x="50.1918%" y="1071.50"></text></g><g><title>bitcoin_private::hex::buf_encoder::out_bytes::_&lt;impl bitcoin_private::hex::buf_encoder::AsOutBytes for [u8: 64]&gt;::as_mut_out_bytes (6 samples, 0.01%)</title><rect x="49.9624%" y="1061" width="0.0113%" height="15" fill="rgb(251,164,9)" fg:x="26598" fg:w="6"/><text x="50.2124%" y="1071.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::collect_str (115 samples, 0.22%)</title><rect x="49.7746%" y="1093" width="0.2160%" height="15" fill="rgb(233,194,0)" fg:x="26498" fg:w="115"/><text x="50.0246%" y="1103.50"></text></g><g><title>bitcoin_private::hex::display::DisplayArray&lt;A,B&gt;::display (112 samples, 0.21%)</title><rect x="49.7802%" y="1077" width="0.2104%" height="15" fill="rgb(249,111,24)" fg:x="26501" fg:w="112"/><text x="50.0302%" y="1087.50"></text></g><g><title>core::str::converts::from_utf8 (7 samples, 0.01%)</title><rect x="49.9775%" y="1061" width="0.0131%" height="15" fill="rgb(250,223,3)" fg:x="26606" fg:w="7"/><text x="50.2275%" y="1071.50"></text></g><g><title>_IO_str_seekoff (159 samples, 0.30%)</title><rect x="50.0676%" y="1077" width="0.2987%" height="15" fill="rgb(236,178,37)" fg:x="26654" fg:w="159"/><text x="50.3176%" y="1087.50"></text></g><g><title>__libc_malloc (213 samples, 0.40%)</title><rect x="49.9906%" y="1093" width="0.4001%" height="15" fill="rgb(241,158,50)" fg:x="26613" fg:w="213"/><text x="50.2406%" y="1103.50"></text></g><g><title>pthread_setcanceltype (13 samples, 0.02%)</title><rect x="50.3663%" y="1077" width="0.0244%" height="15" fill="rgb(213,121,41)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.02%)</title><rect x="50.3663%" y="1061" width="0.0244%" height="15" fill="rgb(240,92,3)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1071.50"></text></g><g><title>do_syscall_64 (13 samples, 0.02%)</title><rect x="50.3663%" y="1045" width="0.0244%" height="15" fill="rgb(205,123,3)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1055.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.02%)</title><rect x="50.3663%" y="1029" width="0.0244%" height="15" fill="rgb(205,97,47)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1039.50"></text></g><g><title>do_futex (13 samples, 0.02%)</title><rect x="50.3663%" y="1013" width="0.0244%" height="15" fill="rgb(247,152,14)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1023.50"></text></g><g><title>futex_wake (13 samples, 0.02%)</title><rect x="50.3663%" y="997" width="0.0244%" height="15" fill="rgb(248,195,53)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="1007.50"></text></g><g><title>wake_up_q (13 samples, 0.02%)</title><rect x="50.3663%" y="981" width="0.0244%" height="15" fill="rgb(226,201,16)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="991.50"></text></g><g><title>try_to_wake_up (13 samples, 0.02%)</title><rect x="50.3663%" y="965" width="0.0244%" height="15" fill="rgb(205,98,0)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="975.50"></text></g><g><title>__lock_text_start (13 samples, 0.02%)</title><rect x="50.3663%" y="949" width="0.0244%" height="15" fill="rgb(214,191,48)" fg:x="26813" fg:w="13"/><text x="50.6163%" y="959.50"></text></g><g><title>_IO_str_seekoff (16 samples, 0.03%)</title><rect x="50.4640%" y="1061" width="0.0301%" height="15" fill="rgb(237,112,39)" fg:x="26865" fg:w="16"/><text x="50.7140%" y="1071.50"></text></g><g><title>__libc_malloc (25 samples, 0.05%)</title><rect x="50.4489%" y="1077" width="0.0470%" height="15" fill="rgb(247,203,27)" fg:x="26857" fg:w="25"/><text x="50.6989%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (53 samples, 0.10%)</title><rect x="50.4039%" y="1093" width="0.0996%" height="15" fill="rgb(235,124,28)" fg:x="26833" fg:w="53"/><text x="50.6539%" y="1103.50"></text></g><g><title>cfree (6 samples, 0.01%)</title><rect x="50.5053%" y="1093" width="0.0113%" height="15" fill="rgb(208,207,46)" fg:x="26887" fg:w="6"/><text x="50.7553%" y="1103.50"></text></g><g><title>apic_timer_interrupt (10 samples, 0.02%)</title><rect x="68.2921%" y="981" width="0.0188%" height="15" fill="rgb(234,176,4)" fg:x="36356" fg:w="10"/><text x="68.5421%" y="991.50"></text></g><g><title>smp_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="68.2921%" y="965" width="0.0188%" height="15" fill="rgb(230,133,28)" fg:x="36356" fg:w="10"/><text x="68.5421%" y="975.50"></text></g><g><title>irq_exit (10 samples, 0.02%)</title><rect x="68.2921%" y="949" width="0.0188%" height="15" fill="rgb(211,137,40)" fg:x="36356" fg:w="10"/><text x="68.5421%" y="959.50"></text></g><g><title>__softirqentry_text_start (10 samples, 0.02%)</title><rect x="68.2921%" y="933" width="0.0188%" height="15" fill="rgb(254,35,13)" fg:x="36356" fg:w="10"/><text x="68.5421%" y="943.50"></text></g><g><title>apic_timer_interrupt (11 samples, 0.02%)</title><rect x="82.3972%" y="965" width="0.0207%" height="15" fill="rgb(225,49,51)" fg:x="43865" fg:w="11"/><text x="82.6472%" y="975.50"></text></g><g><title>smp_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="82.3972%" y="949" width="0.0207%" height="15" fill="rgb(251,10,15)" fg:x="43865" fg:w="11"/><text x="82.6472%" y="959.50"></text></g><g><title>irq_exit (11 samples, 0.02%)</title><rect x="82.3972%" y="933" width="0.0207%" height="15" fill="rgb(228,207,15)" fg:x="43865" fg:w="11"/><text x="82.6472%" y="943.50"></text></g><g><title>__softirqentry_text_start (11 samples, 0.02%)</title><rect x="82.3972%" y="917" width="0.0207%" height="15" fill="rgb(241,99,19)" fg:x="43865" fg:w="11"/><text x="82.6472%" y="927.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.01%)</title><rect x="82.4386%" y="661" width="0.0113%" height="15" fill="rgb(207,104,49)" fg:x="43887" fg:w="6"/><text x="82.6886%" y="671.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.01%)</title><rect x="82.4386%" y="645" width="0.0113%" height="15" fill="rgb(234,99,18)" fg:x="43887" fg:w="6"/><text x="82.6886%" y="655.50"></text></g><g><title>net_rx_action (13 samples, 0.02%)</title><rect x="82.4273%" y="901" width="0.0244%" height="15" fill="rgb(213,191,49)" fg:x="43881" fg:w="13"/><text x="82.6773%" y="911.50"></text></g><g><title>ena_io_poll (12 samples, 0.02%)</title><rect x="82.4292%" y="885" width="0.0225%" height="15" fill="rgb(210,226,19)" fg:x="43882" fg:w="12"/><text x="82.6792%" y="895.50"></text></g><g><title>napi_complete_done (7 samples, 0.01%)</title><rect x="82.4386%" y="869" width="0.0131%" height="15" fill="rgb(229,97,18)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="879.50"></text></g><g><title>gro_normal_list.part.133 (7 samples, 0.01%)</title><rect x="82.4386%" y="853" width="0.0131%" height="15" fill="rgb(211,167,15)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="863.50"></text></g><g><title>netif_receive_skb_list_internal (7 samples, 0.01%)</title><rect x="82.4386%" y="837" width="0.0131%" height="15" fill="rgb(210,169,34)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="847.50"></text></g><g><title>__netif_receive_skb_list_core (7 samples, 0.01%)</title><rect x="82.4386%" y="821" width="0.0131%" height="15" fill="rgb(241,121,31)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="831.50"></text></g><g><title>ip_list_rcv (7 samples, 0.01%)</title><rect x="82.4386%" y="805" width="0.0131%" height="15" fill="rgb(232,40,11)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="815.50"></text></g><g><title>ip_sublist_rcv (7 samples, 0.01%)</title><rect x="82.4386%" y="789" width="0.0131%" height="15" fill="rgb(205,86,26)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="799.50"></text></g><g><title>ip_sublist_rcv_finish (7 samples, 0.01%)</title><rect x="82.4386%" y="773" width="0.0131%" height="15" fill="rgb(231,126,28)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="783.50"></text></g><g><title>ip_local_deliver (7 samples, 0.01%)</title><rect x="82.4386%" y="757" width="0.0131%" height="15" fill="rgb(219,221,18)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="767.50"></text></g><g><title>ip_local_deliver_finish (7 samples, 0.01%)</title><rect x="82.4386%" y="741" width="0.0131%" height="15" fill="rgb(211,40,0)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="751.50"></text></g><g><title>ip_protocol_deliver_rcu (7 samples, 0.01%)</title><rect x="82.4386%" y="725" width="0.0131%" height="15" fill="rgb(239,85,43)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="735.50"></text></g><g><title>tcp_v4_rcv (7 samples, 0.01%)</title><rect x="82.4386%" y="709" width="0.0131%" height="15" fill="rgb(231,55,21)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="719.50"></text></g><g><title>tcp_v4_do_rcv (7 samples, 0.01%)</title><rect x="82.4386%" y="693" width="0.0131%" height="15" fill="rgb(225,184,43)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="703.50"></text></g><g><title>tcp_rcv_established (7 samples, 0.01%)</title><rect x="82.4386%" y="677" width="0.0131%" height="15" fill="rgb(251,158,41)" fg:x="43887" fg:w="7"/><text x="82.6886%" y="687.50"></text></g><g><title>hex::val (7,535 samples, 14.15%)</title><rect x="68.3109%" y="981" width="14.1540%" height="15" fill="rgb(234,159,37)" fg:x="36366" fg:w="7535"/><text x="68.5609%" y="991.50">hex::val</text></g><g><title>ret_from_intr (25 samples, 0.05%)</title><rect x="82.4179%" y="965" width="0.0470%" height="15" fill="rgb(216,204,22)" fg:x="43876" fg:w="25"/><text x="82.6679%" y="975.50"></text></g><g><title>do_IRQ (25 samples, 0.05%)</title><rect x="82.4179%" y="949" width="0.0470%" height="15" fill="rgb(214,17,3)" fg:x="43876" fg:w="25"/><text x="82.6679%" y="959.50"></text></g><g><title>irq_exit (25 samples, 0.05%)</title><rect x="82.4179%" y="933" width="0.0470%" height="15" fill="rgb(212,111,17)" fg:x="43876" fg:w="25"/><text x="82.6679%" y="943.50"></text></g><g><title>__softirqentry_text_start (25 samples, 0.05%)</title><rect x="82.4179%" y="917" width="0.0470%" height="15" fill="rgb(221,157,24)" fg:x="43876" fg:w="25"/><text x="82.6679%" y="927.50"></text></g><g><title>__tcp_transmit_skb (7 samples, 0.01%)</title><rect x="82.4780%" y="645" width="0.0131%" height="15" fill="rgb(252,16,13)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="655.50"></text></g><g><title>ip_queue_xmit (7 samples, 0.01%)</title><rect x="82.4780%" y="629" width="0.0131%" height="15" fill="rgb(221,62,2)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="639.50"></text></g><g><title>__ip_queue_xmit (7 samples, 0.01%)</title><rect x="82.4780%" y="613" width="0.0131%" height="15" fill="rgb(247,87,22)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="623.50"></text></g><g><title>ip_local_out (7 samples, 0.01%)</title><rect x="82.4780%" y="597" width="0.0131%" height="15" fill="rgb(215,73,9)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="607.50"></text></g><g><title>ip_output (7 samples, 0.01%)</title><rect x="82.4780%" y="581" width="0.0131%" height="15" fill="rgb(207,175,33)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="591.50"></text></g><g><title>ip_finish_output (7 samples, 0.01%)</title><rect x="82.4780%" y="565" width="0.0131%" height="15" fill="rgb(243,129,54)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="575.50"></text></g><g><title>__ip_finish_output (7 samples, 0.01%)</title><rect x="82.4780%" y="549" width="0.0131%" height="15" fill="rgb(227,119,45)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="559.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.01%)</title><rect x="82.4780%" y="533" width="0.0131%" height="15" fill="rgb(205,109,36)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="543.50"></text></g><g><title>dev_queue_xmit (7 samples, 0.01%)</title><rect x="82.4780%" y="517" width="0.0131%" height="15" fill="rgb(205,6,39)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="527.50"></text></g><g><title>__dev_queue_xmit (7 samples, 0.01%)</title><rect x="82.4780%" y="501" width="0.0131%" height="15" fill="rgb(221,32,16)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="511.50"></text></g><g><title>sch_direct_xmit (7 samples, 0.01%)</title><rect x="82.4780%" y="485" width="0.0131%" height="15" fill="rgb(228,144,50)" fg:x="43908" fg:w="7"/><text x="82.7280%" y="495.50"></text></g><g><title>ip_local_deliver_finish (9 samples, 0.02%)</title><rect x="82.4761%" y="757" width="0.0169%" height="15" fill="rgb(229,201,53)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="767.50"></text></g><g><title>ip_protocol_deliver_rcu (9 samples, 0.02%)</title><rect x="82.4761%" y="741" width="0.0169%" height="15" fill="rgb(249,153,27)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="751.50"></text></g><g><title>tcp_v4_rcv (9 samples, 0.02%)</title><rect x="82.4761%" y="725" width="0.0169%" height="15" fill="rgb(227,106,25)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="735.50"></text></g><g><title>tcp_v4_do_rcv (9 samples, 0.02%)</title><rect x="82.4761%" y="709" width="0.0169%" height="15" fill="rgb(230,65,29)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="719.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.02%)</title><rect x="82.4761%" y="693" width="0.0169%" height="15" fill="rgb(221,57,46)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="703.50"></text></g><g><title>__tcp_push_pending_frames (9 samples, 0.02%)</title><rect x="82.4761%" y="677" width="0.0169%" height="15" fill="rgb(229,161,17)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="687.50"></text></g><g><title>tcp_write_xmit (9 samples, 0.02%)</title><rect x="82.4761%" y="661" width="0.0169%" height="15" fill="rgb(222,213,11)" fg:x="43907" fg:w="9"/><text x="82.7261%" y="671.50"></text></g><g><title>net_rx_action (14 samples, 0.03%)</title><rect x="82.4686%" y="917" width="0.0263%" height="15" fill="rgb(235,35,13)" fg:x="43903" fg:w="14"/><text x="82.7186%" y="927.50"></text></g><g><title>ena_io_poll (14 samples, 0.03%)</title><rect x="82.4686%" y="901" width="0.0263%" height="15" fill="rgb(233,158,34)" fg:x="43903" fg:w="14"/><text x="82.7186%" y="911.50"></text></g><g><title>napi_complete_done (11 samples, 0.02%)</title><rect x="82.4743%" y="885" width="0.0207%" height="15" fill="rgb(215,151,48)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="895.50"></text></g><g><title>gro_normal_list.part.133 (11 samples, 0.02%)</title><rect x="82.4743%" y="869" width="0.0207%" height="15" fill="rgb(229,84,14)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="879.50"></text></g><g><title>netif_receive_skb_list_internal (11 samples, 0.02%)</title><rect x="82.4743%" y="853" width="0.0207%" height="15" fill="rgb(229,68,14)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="863.50"></text></g><g><title>__netif_receive_skb_list_core (11 samples, 0.02%)</title><rect x="82.4743%" y="837" width="0.0207%" height="15" fill="rgb(243,106,26)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="847.50"></text></g><g><title>ip_list_rcv (11 samples, 0.02%)</title><rect x="82.4743%" y="821" width="0.0207%" height="15" fill="rgb(206,45,38)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="831.50"></text></g><g><title>ip_sublist_rcv (11 samples, 0.02%)</title><rect x="82.4743%" y="805" width="0.0207%" height="15" fill="rgb(226,6,15)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="815.50"></text></g><g><title>ip_sublist_rcv_finish (11 samples, 0.02%)</title><rect x="82.4743%" y="789" width="0.0207%" height="15" fill="rgb(232,22,54)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="799.50"></text></g><g><title>ip_local_deliver (11 samples, 0.02%)</title><rect x="82.4743%" y="773" width="0.0207%" height="15" fill="rgb(229,222,32)" fg:x="43906" fg:w="11"/><text x="82.7243%" y="783.50"></text></g><g><title>__softirqentry_text_start (25 samples, 0.05%)</title><rect x="82.4649%" y="933" width="0.0470%" height="15" fill="rgb(228,62,29)" fg:x="43901" fg:w="25"/><text x="82.7149%" y="943.50"></text></g><g><title>ret_from_intr (26 samples, 0.05%)</title><rect x="82.4649%" y="981" width="0.0488%" height="15" fill="rgb(251,103,34)" fg:x="43901" fg:w="26"/><text x="82.7149%" y="991.50"></text></g><g><title>do_IRQ (26 samples, 0.05%)</title><rect x="82.4649%" y="965" width="0.0488%" height="15" fill="rgb(233,12,30)" fg:x="43901" fg:w="26"/><text x="82.7149%" y="975.50"></text></g><g><title>irq_exit (26 samples, 0.05%)</title><rect x="82.4649%" y="949" width="0.0488%" height="15" fill="rgb(238,52,0)" fg:x="43901" fg:w="26"/><text x="82.7149%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,580 samples, 29.27%)</title><rect x="53.2516%" y="997" width="29.2659%" height="15" fill="rgb(223,98,5)" fg:x="28349" fg:w="15580"/><text x="53.5016%" y="1007.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as cor..</text></g><g><title>__libc_malloc (37 samples, 0.07%)</title><rect x="82.5175%" y="997" width="0.0695%" height="15" fill="rgb(228,75,37)" fg:x="43929" fg:w="37"/><text x="82.7675%" y="1007.50"></text></g><g><title>_IO_str_seekoff (30 samples, 0.06%)</title><rect x="82.5306%" y="981" width="0.0564%" height="15" fill="rgb(205,115,49)" fg:x="43936" fg:w="30"/><text x="82.7806%" y="991.50"></text></g><g><title>_IO_str_seekoff (198 samples, 0.37%)</title><rect x="82.9401%" y="933" width="0.3719%" height="15" fill="rgb(250,154,43)" fg:x="44154" fg:w="198"/><text x="83.1901%" y="943.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.02%)</title><rect x="83.2951%" y="917" width="0.0169%" height="15" fill="rgb(226,43,29)" fg:x="44343" fg:w="9"/><text x="83.5451%" y="927.50"></text></g><g><title>__nss_passwd_lookup (50 samples, 0.09%)</title><rect x="83.3120%" y="933" width="0.0939%" height="15" fill="rgb(249,228,39)" fg:x="44352" fg:w="50"/><text x="83.5620%" y="943.50"></text></g><g><title>_IO_str_seekoff (309 samples, 0.58%)</title><rect x="82.8274%" y="949" width="0.5804%" height="15" fill="rgb(216,79,43)" fg:x="44094" fg:w="309"/><text x="83.0774%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (438 samples, 0.82%)</title><rect x="82.5870%" y="997" width="0.8228%" height="15" fill="rgb(228,95,12)" fg:x="43966" fg:w="438"/><text x="82.8370%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (431 samples, 0.81%)</title><rect x="82.6001%" y="981" width="0.8096%" height="15" fill="rgb(249,221,15)" fg:x="43973" fg:w="431"/><text x="82.8501%" y="991.50"></text></g><g><title>realloc (425 samples, 0.80%)</title><rect x="82.6114%" y="965" width="0.7983%" height="15" fill="rgb(233,34,13)" fg:x="43979" fg:w="425"/><text x="82.8614%" y="975.50"></text></g><g><title>net_rx_action (8 samples, 0.02%)</title><rect x="83.4135%" y="933" width="0.0150%" height="15" fill="rgb(214,103,39)" fg:x="44406" fg:w="8"/><text x="83.6635%" y="943.50"></text></g><g><title>ena_io_poll (8 samples, 0.02%)</title><rect x="83.4135%" y="917" width="0.0150%" height="15" fill="rgb(251,126,39)" fg:x="44406" fg:w="8"/><text x="83.6635%" y="927.50"></text></g><g><title>ret_from_intr (11 samples, 0.02%)</title><rect x="83.4116%" y="997" width="0.0207%" height="15" fill="rgb(214,216,36)" fg:x="44405" fg:w="11"/><text x="83.6616%" y="1007.50"></text></g><g><title>do_IRQ (11 samples, 0.02%)</title><rect x="83.4116%" y="981" width="0.0207%" height="15" fill="rgb(220,221,8)" fg:x="44405" fg:w="11"/><text x="83.6616%" y="991.50"></text></g><g><title>irq_exit (11 samples, 0.02%)</title><rect x="83.4116%" y="965" width="0.0207%" height="15" fill="rgb(240,216,3)" fg:x="44405" fg:w="11"/><text x="83.6616%" y="975.50"></text></g><g><title>__softirqentry_text_start (11 samples, 0.02%)</title><rect x="83.4116%" y="949" width="0.0207%" height="15" fill="rgb(232,218,17)" fg:x="44405" fg:w="11"/><text x="83.6616%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,514 samples, 32.90%)</title><rect x="50.5354%" y="1013" width="32.8988%" height="15" fill="rgb(229,163,45)" fg:x="26903" fg:w="17514"/><text x="50.7854%" y="1023.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (17,541 samples, 32.95%)</title><rect x="50.5316%" y="1029" width="32.9495%" height="15" fill="rgb(231,110,42)" fg:x="26901" fg:w="17541"/><text x="50.7816%" y="1039.50">&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex</text></g><g><title>cfree (23 samples, 0.04%)</title><rect x="83.4379%" y="1013" width="0.0432%" height="15" fill="rgb(208,170,48)" fg:x="44419" fg:w="23"/><text x="83.6879%" y="1023.50"></text></g><g><title>__libc_malloc (55 samples, 0.10%)</title><rect x="83.7328%" y="997" width="0.1033%" height="15" fill="rgb(239,116,25)" fg:x="44576" fg:w="55"/><text x="83.9828%" y="1007.50"></text></g><g><title>_IO_str_seekoff (38 samples, 0.07%)</title><rect x="83.7647%" y="981" width="0.0714%" height="15" fill="rgb(219,200,50)" fg:x="44593" fg:w="38"/><text x="84.0147%" y="991.50"></text></g><g><title>__libc_malloc (50 samples, 0.09%)</title><rect x="83.8681%" y="949" width="0.0939%" height="15" fill="rgb(245,200,0)" fg:x="44648" fg:w="50"/><text x="84.1181%" y="959.50"></text></g><g><title>_IO_str_seekoff (32 samples, 0.06%)</title><rect x="83.9019%" y="933" width="0.0601%" height="15" fill="rgb(245,119,33)" fg:x="44666" fg:w="32"/><text x="84.1519%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (211 samples, 0.40%)</title><rect x="83.5675%" y="1013" width="0.3963%" height="15" fill="rgb(231,125,12)" fg:x="44488" fg:w="211"/><text x="83.8175%" y="1023.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (68 samples, 0.13%)</title><rect x="83.8361%" y="997" width="0.1277%" height="15" fill="rgb(216,96,41)" fg:x="44631" fg:w="68"/><text x="84.0861%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.10%)</title><rect x="83.8662%" y="981" width="0.0977%" height="15" fill="rgb(248,43,45)" fg:x="44647" fg:w="52"/><text x="84.1162%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.10%)</title><rect x="83.8681%" y="965" width="0.0958%" height="15" fill="rgb(217,222,7)" fg:x="44648" fg:w="51"/><text x="84.1181%" y="975.50"></text></g><g><title>__libc_malloc (47 samples, 0.09%)</title><rect x="84.5199%" y="997" width="0.0883%" height="15" fill="rgb(233,28,6)" fg:x="44995" fg:w="47"/><text x="84.7699%" y="1007.50"></text></g><g><title>_IO_str_seekoff (39 samples, 0.07%)</title><rect x="84.5349%" y="981" width="0.0733%" height="15" fill="rgb(231,218,15)" fg:x="45003" fg:w="39"/><text x="84.7849%" y="991.50"></text></g><g><title>__nss_passwd_lookup (63 samples, 0.12%)</title><rect x="85.1604%" y="981" width="0.1183%" height="15" fill="rgb(226,171,48)" fg:x="45336" fg:w="63"/><text x="85.4104%" y="991.50"></text></g><g><title>_IO_str_seekoff (1,077 samples, 2.02%)</title><rect x="87.1948%" y="933" width="2.0231%" height="15" fill="rgb(235,201,9)" fg:x="46419" fg:w="1077"/><text x="87.4448%" y="943.50">_..</text></g><g><title>__libc_malloc (1,984 samples, 3.73%)</title><rect x="85.4929%" y="949" width="3.7268%" height="15" fill="rgb(217,80,15)" fg:x="45513" fg:w="1984"/><text x="85.7429%" y="959.50">__li..</text></g><g><title>__rust_alloc (16 samples, 0.03%)</title><rect x="89.2291%" y="949" width="0.0301%" height="15" fill="rgb(219,152,8)" fg:x="47502" fg:w="16"/><text x="89.4791%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,054 samples, 3.86%)</title><rect x="85.4027%" y="965" width="3.8583%" height="15" fill="rgb(243,107,38)" fg:x="45465" fg:w="2054"/><text x="85.6527%" y="975.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,121 samples, 3.98%)</title><rect x="85.2788%" y="981" width="3.9841%" height="15" fill="rgb(231,17,5)" fg:x="45399" fg:w="2121"/><text x="85.5288%" y="991.50">allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (2,822 samples, 5.30%)</title><rect x="83.9639%" y="1013" width="5.3009%" height="15" fill="rgb(209,25,54)" fg:x="44699" fg:w="2822"/><text x="84.2139%" y="1023.50">&lt;alloc..</text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (2,479 samples, 4.66%)</title><rect x="84.6082%" y="997" width="4.6566%" height="15" fill="rgb(219,0,2)" fg:x="45042" fg:w="2479"/><text x="84.8582%" y="1007.50">bitco..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.04%)</title><rect x="89.2742%" y="1013" width="0.0432%" height="15" fill="rgb(246,9,5)" fg:x="47526" fg:w="23"/><text x="89.5242%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.01%)</title><rect x="89.3042%" y="997" width="0.0131%" height="15" fill="rgb(226,159,4)" fg:x="47542" fg:w="7"/><text x="89.5542%" y="1007.50"></text></g><g><title>__nss_passwd_lookup (14 samples, 0.03%)</title><rect x="89.3174%" y="1013" width="0.0263%" height="15" fill="rgb(219,175,34)" fg:x="47549" fg:w="14"/><text x="89.5674%" y="1023.50"></text></g><g><title>_IO_str_seekoff (85 samples, 0.16%)</title><rect x="89.4714%" y="981" width="0.1597%" height="15" fill="rgb(236,10,46)" fg:x="47631" fg:w="85"/><text x="89.7214%" y="991.50"></text></g><g><title>__libc_calloc (153 samples, 0.29%)</title><rect x="89.3474%" y="997" width="0.2874%" height="15" fill="rgb(240,211,16)" fg:x="47565" fg:w="153"/><text x="89.5974%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (158 samples, 0.30%)</title><rect x="89.3437%" y="1013" width="0.2968%" height="15" fill="rgb(205,3,43)" fg:x="47563" fg:w="158"/><text x="89.5937%" y="1023.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (44 samples, 0.08%)</title><rect x="89.6405%" y="1013" width="0.0827%" height="15" fill="rgb(245,7,22)" fg:x="47721" fg:w="44"/><text x="89.8905%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.03%)</title><rect x="89.6893%" y="997" width="0.0338%" height="15" fill="rgb(239,132,32)" fg:x="47747" fg:w="18"/><text x="89.9393%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.03%)</title><rect x="89.6893%" y="981" width="0.0338%" height="15" fill="rgb(228,202,34)" fg:x="47747" fg:w="18"/><text x="89.9393%" y="991.50"></text></g><g><title>realloc (17 samples, 0.03%)</title><rect x="89.6912%" y="965" width="0.0319%" height="15" fill="rgb(254,200,22)" fg:x="47748" fg:w="17"/><text x="89.9412%" y="975.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="89.7100%" y="949" width="0.0131%" height="15" fill="rgb(219,10,39)" fg:x="47758" fg:w="7"/><text x="89.9600%" y="959.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="89.7100%" y="933" width="0.0131%" height="15" fill="rgb(226,210,39)" fg:x="47758" fg:w="7"/><text x="89.9600%" y="943.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (3,334 samples, 6.26%)</title><rect x="83.4811%" y="1029" width="6.2627%" height="15" fill="rgb(208,219,16)" fg:x="44442" fg:w="3334"/><text x="83.7311%" y="1039.50">bitcoin:..</text></g><g><title>core::slice::rotate::ptr_rotate (9 samples, 0.02%)</title><rect x="89.7269%" y="1013" width="0.0169%" height="15" fill="rgb(216,158,51)" fg:x="47767" fg:w="9"/><text x="89.9769%" y="1023.50"></text></g><g><title>__nss_passwd_lookup (7 samples, 0.01%)</title><rect x="89.7306%" y="997" width="0.0131%" height="15" fill="rgb(233,14,44)" fg:x="47769" fg:w="7"/><text x="89.9806%" y="1007.50"></text></g><g><title>core::iter::adapters::try_process (20,896 samples, 39.25%)</title><rect x="50.5166%" y="1093" width="39.2516%" height="15" fill="rgb(237,97,39)" fg:x="26893" fg:w="20896"/><text x="50.7666%" y="1103.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (20,895 samples, 39.25%)</title><rect x="50.5184%" y="1077" width="39.2498%" height="15" fill="rgb(218,198,43)" fg:x="26894" fg:w="20895"/><text x="50.7684%" y="1087.50">alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20,895 samples, 39.25%)</title><rect x="50.5184%" y="1061" width="39.2498%" height="15" fill="rgb(231,104,20)" fg:x="26894" fg:w="20895"/><text x="50.7684%" y="1071.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::..</text></g><g><title>ord::index::fetcher::Fetcher::get_transactions::_{{closure}}::_{{closure}} (20,893 samples, 39.25%)</title><rect x="50.5222%" y="1045" width="39.2460%" height="15" fill="rgb(254,36,13)" fg:x="26896" fg:w="20893"/><text x="50.7722%" y="1055.50">ord::index::fetcher::Fetcher::get_transactions::_{{closure}}::_{..</text></g><g><title>cfree (13 samples, 0.02%)</title><rect x="89.7438%" y="1029" width="0.0244%" height="15" fill="rgb(248,14,50)" fg:x="47776" fg:w="13"/><text x="89.9938%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="89.7832%" y="1061" width="0.0150%" height="15" fill="rgb(217,107,29)" fg:x="47797" fg:w="8"/><text x="90.0332%" y="1071.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (8 samples, 0.02%)</title><rect x="89.7832%" y="1045" width="0.0150%" height="15" fill="rgb(251,169,33)" fg:x="47797" fg:w="8"/><text x="90.0332%" y="1055.50"></text></g><g><title>cfree (7 samples, 0.01%)</title><rect x="89.7851%" y="1029" width="0.0131%" height="15" fill="rgb(217,108,32)" fg:x="47798" fg:w="7"/><text x="90.0351%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::response::Response&lt;hyper::body::body::Body&gt;&gt; (16 samples, 0.03%)</title><rect x="89.7701%" y="1093" width="0.0301%" height="15" fill="rgb(219,66,42)" fg:x="47790" fg:w="16"/><text x="90.0201%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (9 samples, 0.02%)</title><rect x="89.7832%" y="1077" width="0.0169%" height="15" fill="rgb(206,180,7)" fg:x="47797" fg:w="9"/><text x="90.0332%" y="1087.50"></text></g><g><title>syscall (17 samples, 0.03%)</title><rect x="89.8020%" y="1045" width="0.0319%" height="15" fill="rgb(208,226,31)" fg:x="47807" fg:w="17"/><text x="90.0520%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.03%)</title><rect x="89.8020%" y="1029" width="0.0319%" height="15" fill="rgb(218,26,49)" fg:x="47807" fg:w="17"/><text x="90.0520%" y="1039.50"></text></g><g><title>do_syscall_64 (17 samples, 0.03%)</title><rect x="89.8020%" y="1013" width="0.0319%" height="15" fill="rgb(233,197,48)" fg:x="47807" fg:w="17"/><text x="90.0520%" y="1023.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.03%)</title><rect x="89.8039%" y="997" width="0.0301%" height="15" fill="rgb(252,181,51)" fg:x="47808" fg:w="16"/><text x="90.0539%" y="1007.50"></text></g><g><title>do_futex (15 samples, 0.03%)</title><rect x="89.8058%" y="981" width="0.0282%" height="15" fill="rgb(253,90,19)" fg:x="47809" fg:w="15"/><text x="90.0558%" y="991.50"></text></g><g><title>futex_wake (15 samples, 0.03%)</title><rect x="89.8058%" y="965" width="0.0282%" height="15" fill="rgb(215,171,30)" fg:x="47809" fg:w="15"/><text x="90.0558%" y="975.50"></text></g><g><title>wake_up_q (15 samples, 0.03%)</title><rect x="89.8058%" y="949" width="0.0282%" height="15" fill="rgb(214,222,9)" fg:x="47809" fg:w="15"/><text x="90.0558%" y="959.50"></text></g><g><title>try_to_wake_up (15 samples, 0.03%)</title><rect x="89.8058%" y="933" width="0.0282%" height="15" fill="rgb(223,3,22)" fg:x="47809" fg:w="15"/><text x="90.0558%" y="943.50"></text></g><g><title>__lock_text_start (15 samples, 0.03%)</title><rect x="89.8058%" y="917" width="0.0282%" height="15" fill="rgb(225,196,46)" fg:x="47809" fg:w="15"/><text x="90.0558%" y="927.50"></text></g><g><title>__vfs_write (9 samples, 0.02%)</title><rect x="89.8415%" y="869" width="0.0169%" height="15" fill="rgb(209,110,37)" fg:x="47828" fg:w="9"/><text x="90.0915%" y="879.50"></text></g><g><title>eventfd_write (9 samples, 0.02%)</title><rect x="89.8415%" y="853" width="0.0169%" height="15" fill="rgb(249,89,12)" fg:x="47828" fg:w="9"/><text x="90.0915%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (32 samples, 0.06%)</title><rect x="89.8001%" y="1093" width="0.0601%" height="15" fill="rgb(226,27,33)" fg:x="47806" fg:w="32"/><text x="90.0501%" y="1103.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (31 samples, 0.06%)</title><rect x="89.8020%" y="1077" width="0.0582%" height="15" fill="rgb(213,82,22)" fg:x="47807" fg:w="31"/><text x="90.0520%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (31 samples, 0.06%)</title><rect x="89.8020%" y="1061" width="0.0582%" height="15" fill="rgb(248,140,0)" fg:x="47807" fg:w="31"/><text x="90.0520%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (12 samples, 0.02%)</title><rect x="89.8377%" y="1045" width="0.0225%" height="15" fill="rgb(228,106,3)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="1055.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (12 samples, 0.02%)</title><rect x="89.8377%" y="1029" width="0.0225%" height="15" fill="rgb(209,23,37)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="1039.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (12 samples, 0.02%)</title><rect x="89.8377%" y="1013" width="0.0225%" height="15" fill="rgb(241,93,50)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::write (12 samples, 0.02%)</title><rect x="89.8377%" y="997" width="0.0225%" height="15" fill="rgb(253,46,43)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (12 samples, 0.02%)</title><rect x="89.8377%" y="981" width="0.0225%" height="15" fill="rgb(226,206,43)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="991.50"></text></g><g><title>__libc_write (12 samples, 0.02%)</title><rect x="89.8377%" y="965" width="0.0225%" height="15" fill="rgb(217,54,7)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="89.8377%" y="949" width="0.0225%" height="15" fill="rgb(223,5,52)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="959.50"></text></g><g><title>do_syscall_64 (12 samples, 0.02%)</title><rect x="89.8377%" y="933" width="0.0225%" height="15" fill="rgb(206,52,46)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="943.50"></text></g><g><title>__x64_sys_write (12 samples, 0.02%)</title><rect x="89.8377%" y="917" width="0.0225%" height="15" fill="rgb(253,136,11)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="927.50"></text></g><g><title>ksys_write (12 samples, 0.02%)</title><rect x="89.8377%" y="901" width="0.0225%" height="15" fill="rgb(208,106,33)" fg:x="47826" fg:w="12"/><text x="90.0877%" y="911.50"></text></g><g><title>vfs_write (10 samples, 0.02%)</title><rect x="89.8415%" y="885" width="0.0188%" height="15" fill="rgb(206,54,4)" fg:x="47828" fg:w="10"/><text x="90.0915%" y="895.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.03%)</title><rect x="89.8772%" y="1045" width="0.0319%" height="15" fill="rgb(213,3,15)" fg:x="47847" fg:w="17"/><text x="90.1272%" y="1055.50"></text></g><g><title>cfree (7 samples, 0.01%)</title><rect x="89.8959%" y="1029" width="0.0131%" height="15" fill="rgb(252,211,39)" fg:x="47857" fg:w="7"/><text x="90.1459%" y="1039.50"></text></g><g><title>cfree (35 samples, 0.07%)</title><rect x="89.9091%" y="1045" width="0.0657%" height="15" fill="rgb(223,6,36)" fg:x="47864" fg:w="35"/><text x="90.1591%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (62 samples, 0.12%)</title><rect x="89.8659%" y="1093" width="0.1165%" height="15" fill="rgb(252,169,45)" fg:x="47841" fg:w="62"/><text x="90.1159%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (62 samples, 0.12%)</title><rect x="89.8659%" y="1077" width="0.1165%" height="15" fill="rgb(212,48,26)" fg:x="47841" fg:w="62"/><text x="90.1159%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (58 samples, 0.11%)</title><rect x="89.8734%" y="1061" width="0.1089%" height="15" fill="rgb(251,102,48)" fg:x="47845" fg:w="58"/><text x="90.1234%" y="1071.50"></text></g><g><title>core::slice::sort::merge_sort (11 samples, 0.02%)</title><rect x="89.9823%" y="1093" width="0.0207%" height="15" fill="rgb(243,208,16)" fg:x="47903" fg:w="11"/><text x="90.2323%" y="1103.50"></text></g><g><title>__libc_malloc (9 samples, 0.02%)</title><rect x="89.9861%" y="1077" width="0.0169%" height="15" fill="rgb(219,96,24)" fg:x="47905" fg:w="9"/><text x="90.2361%" y="1087.50"></text></g><g><title>_IO_str_seekoff (8 samples, 0.02%)</title><rect x="89.9880%" y="1061" width="0.0150%" height="15" fill="rgb(219,33,29)" fg:x="47906" fg:w="8"/><text x="90.2380%" y="1071.50"></text></g><g><title>__libc_malloc (114 samples, 0.21%)</title><rect x="90.0124%" y="1077" width="0.2141%" height="15" fill="rgb(223,176,5)" fg:x="47919" fg:w="114"/><text x="90.2624%" y="1087.50"></text></g><g><title>_IO_str_seekoff (114 samples, 0.21%)</title><rect x="90.0124%" y="1061" width="0.2141%" height="15" fill="rgb(228,140,14)" fg:x="47919" fg:w="114"/><text x="90.2624%" y="1071.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::request (115 samples, 0.22%)</title><rect x="90.0124%" y="1093" width="0.2160%" height="15" fill="rgb(217,179,31)" fg:x="47919" fg:w="115"/><text x="90.2624%" y="1103.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (20 samples, 0.04%)</title><rect x="90.2622%" y="1013" width="0.0376%" height="15" fill="rgb(230,9,30)" fg:x="48052" fg:w="20"/><text x="90.5122%" y="1023.50"></text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.01%)</title><rect x="90.2885%" y="997" width="0.0113%" height="15" fill="rgb(230,136,20)" fg:x="48066" fg:w="6"/><text x="90.5385%" y="1007.50"></text></g><g><title>core::str::converts::from_utf8 (100 samples, 0.19%)</title><rect x="94.5751%" y="965" width="0.1878%" height="15" fill="rgb(215,210,22)" fg:x="50348" fg:w="100"/><text x="94.8251%" y="975.50"></text></g><g><title>core::str::validations::run_utf8_validation (98 samples, 0.18%)</title><rect x="94.5789%" y="949" width="0.1841%" height="15" fill="rgb(218,43,5)" fg:x="50350" fg:w="98"/><text x="94.8289%" y="959.50"></text></g><g><title>net_rx_action (6 samples, 0.01%)</title><rect x="94.7667%" y="901" width="0.0113%" height="15" fill="rgb(216,11,5)" fg:x="50450" fg:w="6"/><text x="95.0167%" y="911.50"></text></g><g><title>ena_io_poll (6 samples, 0.01%)</title><rect x="94.7667%" y="885" width="0.0113%" height="15" fill="rgb(209,82,29)" fg:x="50450" fg:w="6"/><text x="95.0167%" y="895.50"></text></g><g><title>ret_from_intr (9 samples, 0.02%)</title><rect x="94.7629%" y="965" width="0.0169%" height="15" fill="rgb(244,115,12)" fg:x="50448" fg:w="9"/><text x="95.0129%" y="975.50"></text></g><g><title>do_IRQ (9 samples, 0.02%)</title><rect x="94.7629%" y="949" width="0.0169%" height="15" fill="rgb(222,82,18)" fg:x="50448" fg:w="9"/><text x="95.0129%" y="959.50"></text></g><g><title>irq_exit (9 samples, 0.02%)</title><rect x="94.7629%" y="933" width="0.0169%" height="15" fill="rgb(249,227,8)" fg:x="50448" fg:w="9"/><text x="95.0129%" y="943.50"></text></g><g><title>__softirqentry_text_start (9 samples, 0.02%)</title><rect x="94.7629%" y="917" width="0.0169%" height="15" fill="rgb(253,141,45)" fg:x="50448" fg:w="9"/><text x="95.0129%" y="927.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2,328 samples, 4.37%)</title><rect x="90.4087%" y="981" width="4.3730%" height="15" fill="rgb(234,184,4)" fg:x="48130" fg:w="2328"/><text x="90.6587%" y="991.50">&lt;serd..</text></g><g><title>__libc_malloc (111 samples, 0.21%)</title><rect x="94.7817%" y="981" width="0.2085%" height="15" fill="rgb(218,194,23)" fg:x="50458" fg:w="111"/><text x="95.0317%" y="991.50"></text></g><g><title>_IO_str_seekoff (71 samples, 0.13%)</title><rect x="94.8569%" y="965" width="0.1334%" height="15" fill="rgb(235,66,41)" fg:x="50498" fg:w="71"/><text x="95.1069%" y="975.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2,683 samples, 5.04%)</title><rect x="90.2998%" y="1013" width="5.0398%" height="15" fill="rgb(245,217,1)" fg:x="48072" fg:w="2683"/><text x="90.5498%" y="1023.50">serde:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,629 samples, 4.94%)</title><rect x="90.4012%" y="997" width="4.9384%" height="15" fill="rgb(229,91,1)" fg:x="48126" fg:w="2629"/><text x="90.6512%" y="1007.50">&lt;&amp;mut ..</text></g><g><title>__nss_passwd_lookup (186 samples, 0.35%)</title><rect x="94.9902%" y="981" width="0.3494%" height="15" fill="rgb(207,101,30)" fg:x="50569" fg:w="186"/><text x="95.2402%" y="991.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,719 samples, 5.11%)</title><rect x="90.2341%" y="1045" width="5.1074%" height="15" fill="rgb(223,82,49)" fg:x="48037" fg:w="2719"/><text x="90.4841%" y="1055.50">&lt;serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2,717 samples, 5.10%)</title><rect x="90.2378%" y="1029" width="5.1037%" height="15" fill="rgb(218,167,17)" fg:x="48039" fg:w="2717"/><text x="90.4878%" y="1039.50">&lt;&amp;mut ..</text></g><g><title>_IO_str_seekoff (6 samples, 0.01%)</title><rect x="95.3603%" y="981" width="0.0113%" height="15" fill="rgb(208,103,14)" fg:x="50766" fg:w="6"/><text x="95.6103%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2,739 samples, 5.15%)</title><rect x="90.2284%" y="1077" width="5.1450%" height="15" fill="rgb(238,20,8)" fg:x="48034" fg:w="2739"/><text x="90.4784%" y="1087.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2,738 samples, 5.14%)</title><rect x="90.2303%" y="1061" width="5.1431%" height="15" fill="rgb(218,80,54)" fg:x="48035" fg:w="2738"/><text x="90.4803%" y="1071.50">&lt;serde..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.03%)</title><rect x="95.3415%" y="1045" width="0.0319%" height="15" fill="rgb(240,144,17)" fg:x="50756" fg:w="17"/><text x="95.5915%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.03%)</title><rect x="95.3415%" y="1029" width="0.0319%" height="15" fill="rgb(245,27,50)" fg:x="50756" fg:w="17"/><text x="95.5915%" y="1039.50"></text></g><g><title>realloc (16 samples, 0.03%)</title><rect x="95.3434%" y="1013" width="0.0301%" height="15" fill="rgb(251,51,7)" fg:x="50757" fg:w="16"/><text x="95.5934%" y="1023.50"></text></g><g><title>_IO_str_seekoff (7 samples, 0.01%)</title><rect x="95.3603%" y="997" width="0.0131%" height="15" fill="rgb(245,217,29)" fg:x="50766" fg:w="7"/><text x="95.6103%" y="1007.50"></text></g><g><title>&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (25,361 samples, 47.64%)</title><rect x="47.7384%" y="1125" width="47.6388%" height="15" fill="rgb(221,176,29)" fg:x="25414" fg:w="25361"/><text x="47.9884%" y="1135.50">&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Fu..</text></g><g><title>&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (25,360 samples, 47.64%)</title><rect x="47.7403%" y="1109" width="47.6369%" height="15" fill="rgb(212,180,24)" fg:x="25415" fg:w="25360"/><text x="47.9903%" y="1119.50">&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::futu..</text></g><g><title>serde_json::de::from_slice (2,741 samples, 5.15%)</title><rect x="90.2284%" y="1093" width="5.1488%" height="15" fill="rgb(254,24,2)" fg:x="48034" fg:w="2741"/><text x="90.4784%" y="1103.50">serde_..</text></g><g><title>__libc_malloc (243 samples, 0.46%)</title><rect x="95.3847%" y="1125" width="0.4565%" height="15" fill="rgb(230,100,2)" fg:x="50779" fg:w="243"/><text x="95.6347%" y="1135.50"></text></g><g><title>_IO_str_seekoff (234 samples, 0.44%)</title><rect x="95.4016%" y="1109" width="0.4396%" height="15" fill="rgb(219,142,25)" fg:x="50788" fg:w="234"/><text x="95.6516%" y="1119.50"></text></g><g><title>_IO_str_seekoff (59 samples, 0.11%)</title><rect x="95.7303%" y="1093" width="0.1108%" height="15" fill="rgb(240,73,43)" fg:x="50963" fg:w="59"/><text x="95.9803%" y="1103.50"></text></g><g><title>__nss_passwd_lookup (25 samples, 0.05%)</title><rect x="95.8412%" y="1125" width="0.0470%" height="15" fill="rgb(214,114,15)" fg:x="51022" fg:w="25"/><text x="96.0912%" y="1135.50"></text></g><g><title>_IO_str_seekoff (34 samples, 0.06%)</title><rect x="96.6301%" y="1045" width="0.0639%" height="15" fill="rgb(207,130,4)" fg:x="51442" fg:w="34"/><text x="96.8801%" y="1055.50"></text></g><g><title>_IO_str_seekoff (426 samples, 0.80%)</title><rect x="95.8956%" y="1061" width="0.8002%" height="15" fill="rgb(221,25,40)" fg:x="51051" fg:w="426"/><text x="96.1456%" y="1071.50"></text></g><g><title>_IO_str_seekoff (427 samples, 0.80%)</title><rect x="95.8956%" y="1077" width="0.8021%" height="15" fill="rgb(241,184,7)" fg:x="51051" fg:w="427"/><text x="96.1456%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (432 samples, 0.81%)</title><rect x="95.8881%" y="1125" width="0.8115%" height="15" fill="rgb(235,159,4)" fg:x="51047" fg:w="432"/><text x="96.1381%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (431 samples, 0.81%)</title><rect x="95.8900%" y="1109" width="0.8096%" height="15" fill="rgb(214,87,48)" fg:x="51048" fg:w="431"/><text x="96.1400%" y="1119.50"></text></g><g><title>realloc (430 samples, 0.81%)</title><rect x="95.8919%" y="1093" width="0.8077%" height="15" fill="rgb(246,198,24)" fg:x="51049" fg:w="430"/><text x="96.1419%" y="1103.50"></text></g><g><title>cfree (11 samples, 0.02%)</title><rect x="96.6996%" y="1125" width="0.0207%" height="15" fill="rgb(209,66,40)" fg:x="51479" fg:w="11"/><text x="96.9496%" y="1135.50"></text></g><g><title>_IO_str_seekoff (11 samples, 0.02%)</title><rect x="96.6996%" y="1109" width="0.0207%" height="15" fill="rgb(233,147,39)" fg:x="51479" fg:w="11"/><text x="96.9496%" y="1119.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (7 samples, 0.01%)</title><rect x="96.7315%" y="1109" width="0.0131%" height="15" fill="rgb(231,145,52)" fg:x="51496" fg:w="7"/><text x="96.9815%" y="1119.50"></text></g><g><title>cfree (6 samples, 0.01%)</title><rect x="96.7541%" y="1093" width="0.0113%" height="15" fill="rgb(206,20,26)" fg:x="51508" fg:w="6"/><text x="97.0041%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (12 samples, 0.02%)</title><rect x="96.7447%" y="1109" width="0.0225%" height="15" fill="rgb(238,220,4)" fg:x="51503" fg:w="12"/><text x="96.9947%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (24 samples, 0.05%)</title><rect x="96.7240%" y="1125" width="0.0451%" height="15" fill="rgb(252,195,42)" fg:x="51492" fg:w="24"/><text x="96.9740%" y="1135.50"></text></g><g><title>futex_wait_queue_me (35 samples, 0.07%)</title><rect x="96.7973%" y="965" width="0.0657%" height="15" fill="rgb(209,10,6)" fg:x="51531" fg:w="35"/><text x="97.0473%" y="975.50"></text></g><g><title>schedule (35 samples, 0.07%)</title><rect x="96.7973%" y="949" width="0.0657%" height="15" fill="rgb(229,3,52)" fg:x="51531" fg:w="35"/><text x="97.0473%" y="959.50"></text></g><g><title>__sched_text_start (35 samples, 0.07%)</title><rect x="96.7973%" y="933" width="0.0657%" height="15" fill="rgb(253,49,37)" fg:x="51531" fg:w="35"/><text x="97.0473%" y="943.50"></text></g><g><title>finish_task_switch (34 samples, 0.06%)</title><rect x="96.7992%" y="917" width="0.0639%" height="15" fill="rgb(240,103,49)" fg:x="51532" fg:w="34"/><text x="97.0492%" y="927.50"></text></g><g><title>tokio::runtime::park::Inner::park (51 samples, 0.10%)</title><rect x="96.7729%" y="1125" width="0.0958%" height="15" fill="rgb(250,182,30)" fg:x="51518" fg:w="51"/><text x="97.0229%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (48 samples, 0.09%)</title><rect x="96.7785%" y="1109" width="0.0902%" height="15" fill="rgb(248,8,30)" fg:x="51521" fg:w="48"/><text x="97.0285%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (47 samples, 0.09%)</title><rect x="96.7804%" y="1093" width="0.0883%" height="15" fill="rgb(237,120,30)" fg:x="51522" fg:w="47"/><text x="97.0304%" y="1103.50"></text></g><g><title>std::sys::unix::futex::futex_wait (47 samples, 0.09%)</title><rect x="96.7804%" y="1077" width="0.0883%" height="15" fill="rgb(221,146,34)" fg:x="51522" fg:w="47"/><text x="97.0304%" y="1087.50"></text></g><g><title>syscall (46 samples, 0.09%)</title><rect x="96.7823%" y="1061" width="0.0864%" height="15" fill="rgb(242,55,13)" fg:x="51523" fg:w="46"/><text x="97.0323%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 0.08%)</title><rect x="96.7898%" y="1045" width="0.0789%" height="15" fill="rgb(242,112,31)" fg:x="51527" fg:w="42"/><text x="97.0398%" y="1055.50"></text></g><g><title>do_syscall_64 (42 samples, 0.08%)</title><rect x="96.7898%" y="1029" width="0.0789%" height="15" fill="rgb(249,192,27)" fg:x="51527" fg:w="42"/><text x="97.0398%" y="1039.50"></text></g><g><title>__x64_sys_futex (40 samples, 0.08%)</title><rect x="96.7935%" y="1013" width="0.0751%" height="15" fill="rgb(208,204,44)" fg:x="51529" fg:w="40"/><text x="97.0435%" y="1023.50"></text></g><g><title>do_futex (40 samples, 0.08%)</title><rect x="96.7935%" y="997" width="0.0751%" height="15" fill="rgb(208,93,54)" fg:x="51529" fg:w="40"/><text x="97.0435%" y="1007.50"></text></g><g><title>futex_wait (39 samples, 0.07%)</title><rect x="96.7954%" y="981" width="0.0733%" height="15" fill="rgb(242,1,31)" fg:x="51530" fg:w="39"/><text x="97.0454%" y="991.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (16 samples, 0.03%)</title><rect x="96.8762%" y="1125" width="0.0301%" height="15" fill="rgb(241,83,25)" fg:x="51573" fg:w="16"/><text x="97.1262%" y="1135.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (8 samples, 0.02%)</title><rect x="96.9062%" y="1125" width="0.0150%" height="15" fill="rgb(205,169,50)" fg:x="51589" fg:w="8"/><text x="97.1562%" y="1135.50"></text></g><g><title>ord (51,598 samples, 96.92%)</title><rect x="0.0000%" y="1269" width="96.9231%" height="15" fill="rgb(239,186,37)" fg:x="0" fg:w="51598"/><text x="0.2500%" y="1279.50">ord</text></g><g><title>clone (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1253" width="95.7679%" height="15" fill="rgb(205,221,10)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1263.50">clone</text></g><g><title>start_thread (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1237" width="95.7679%" height="15" fill="rgb(218,196,15)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1247.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1221" width="95.7679%" height="15" fill="rgb(218,196,35)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1231.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1205" width="95.7679%" height="15" fill="rgb(233,63,24)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1189" width="95.7679%" height="15" fill="rgb(225,8,4)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1173" width="95.7679%" height="15" fill="rgb(234,105,35)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1183.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50,983 samples, 95.77%)</title><rect x="1.1552%" y="1157" width="95.7679%" height="15" fill="rgb(236,21,32)" fg:x="615" fg:w="50983"/><text x="1.4052%" y="1167.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (27,790 samples, 52.20%)</title><rect x="44.7216%" y="1141" width="52.2015%" height="15" fill="rgb(228,109,6)" fg:x="23808" fg:w="27790"/><text x="44.9716%" y="1151.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (12 samples, 0.02%)</title><rect x="96.9231%" y="1237" width="0.0225%" height="15" fill="rgb(229,215,31)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.02%)</title><rect x="96.9231%" y="1221" width="0.0225%" height="15" fill="rgb(221,52,54)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1231.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="96.9231%" y="1205" width="0.0225%" height="15" fill="rgb(252,129,43)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="96.9231%" y="1189" width="0.0225%" height="15" fill="rgb(248,183,27)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1199.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="96.9231%" y="1173" width="0.0225%" height="15" fill="rgb(250,0,22)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1183.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (12 samples, 0.02%)</title><rect x="96.9231%" y="1157" width="0.0225%" height="15" fill="rgb(213,166,10)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1167.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (12 samples, 0.02%)</title><rect x="96.9231%" y="1141" width="0.0225%" height="15" fill="rgb(207,163,36)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1151.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (12 samples, 0.02%)</title><rect x="96.9231%" y="1125" width="0.0225%" height="15" fill="rgb(208,122,22)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1135.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (12 samples, 0.02%)</title><rect x="96.9231%" y="1109" width="0.0225%" height="15" fill="rgb(207,104,49)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1119.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (12 samples, 0.02%)</title><rect x="96.9231%" y="1093" width="0.0225%" height="15" fill="rgb(248,211,50)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1103.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (12 samples, 0.02%)</title><rect x="96.9231%" y="1077" width="0.0225%" height="15" fill="rgb(217,13,45)" fg:x="51598" fg:w="12"/><text x="97.1731%" y="1087.50"></text></g><g><title>[unknown] (29 samples, 0.05%)</title><rect x="96.9231%" y="1253" width="0.0545%" height="15" fill="rgb(211,216,49)" fg:x="51598" fg:w="29"/><text x="97.1731%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (17 samples, 0.03%)</title><rect x="96.9457%" y="1237" width="0.0319%" height="15" fill="rgb(221,58,53)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (17 samples, 0.03%)</title><rect x="96.9457%" y="1221" width="0.0319%" height="15" fill="rgb(220,112,41)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (17 samples, 0.03%)</title><rect x="96.9457%" y="1205" width="0.0319%" height="15" fill="rgb(236,38,28)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="96.9457%" y="1189" width="0.0319%" height="15" fill="rgb(227,195,22)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="96.9457%" y="1173" width="0.0319%" height="15" fill="rgb(214,55,33)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1183.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="96.9457%" y="1157" width="0.0319%" height="15" fill="rgb(248,80,13)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1167.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (17 samples, 0.03%)</title><rect x="96.9457%" y="1141" width="0.0319%" height="15" fill="rgb(238,52,6)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1151.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (17 samples, 0.03%)</title><rect x="96.9457%" y="1125" width="0.0319%" height="15" fill="rgb(224,198,47)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (17 samples, 0.03%)</title><rect x="96.9457%" y="1109" width="0.0319%" height="15" fill="rgb(233,171,20)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1119.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (17 samples, 0.03%)</title><rect x="96.9457%" y="1093" width="0.0319%" height="15" fill="rgb(241,30,25)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1103.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (17 samples, 0.03%)</title><rect x="96.9457%" y="1077" width="0.0319%" height="15" fill="rgb(207,171,38)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1087.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (17 samples, 0.03%)</title><rect x="96.9457%" y="1061" width="0.0319%" height="15" fill="rgb(234,70,1)" fg:x="51610" fg:w="17"/><text x="97.1957%" y="1071.50"></text></g><g><title>pow (27 samples, 0.05%)</title><rect x="97.0171%" y="1045" width="0.0507%" height="15" fill="rgb(232,178,18)" fg:x="51648" fg:w="27"/><text x="97.2671%" y="1055.50"></text></g><g><title>__iscanonicall (23 samples, 0.04%)</title><rect x="97.0246%" y="1029" width="0.0432%" height="15" fill="rgb(241,78,40)" fg:x="51652" fg:w="23"/><text x="97.2746%" y="1039.50"></text></g><g><title>__iscanonicall (10 samples, 0.02%)</title><rect x="97.0490%" y="1013" width="0.0188%" height="15" fill="rgb(222,35,25)" fg:x="51665" fg:w="10"/><text x="97.2990%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (8 samples, 0.02%)</title><rect x="97.0678%" y="1045" width="0.0150%" height="15" fill="rgb(207,92,16)" fg:x="51675" fg:w="8"/><text x="97.3178%" y="1055.50"></text></g><g><title>__clock_gettime (7 samples, 0.01%)</title><rect x="97.0697%" y="1029" width="0.0131%" height="15" fill="rgb(216,59,51)" fg:x="51676" fg:w="7"/><text x="97.3197%" y="1039.50"></text></g><g><title>futex_wait_queue_me (111 samples, 0.21%)</title><rect x="97.1542%" y="869" width="0.2085%" height="15" fill="rgb(213,80,28)" fg:x="51721" fg:w="111"/><text x="97.4042%" y="879.50"></text></g><g><title>schedule (108 samples, 0.20%)</title><rect x="97.1598%" y="853" width="0.2029%" height="15" fill="rgb(220,93,7)" fg:x="51724" fg:w="108"/><text x="97.4098%" y="863.50"></text></g><g><title>__sched_text_start (107 samples, 0.20%)</title><rect x="97.1617%" y="837" width="0.2010%" height="15" fill="rgb(225,24,44)" fg:x="51725" fg:w="107"/><text x="97.4117%" y="847.50"></text></g><g><title>finish_task_switch (106 samples, 0.20%)</title><rect x="97.1636%" y="821" width="0.1991%" height="15" fill="rgb(243,74,40)" fg:x="51726" fg:w="106"/><text x="97.4136%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wait (126 samples, 0.24%)</title><rect x="97.1373%" y="981" width="0.2367%" height="15" fill="rgb(228,39,7)" fg:x="51712" fg:w="126"/><text x="97.3873%" y="991.50"></text></g><g><title>syscall (124 samples, 0.23%)</title><rect x="97.1410%" y="965" width="0.2329%" height="15" fill="rgb(227,79,8)" fg:x="51714" fg:w="124"/><text x="97.3910%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (121 samples, 0.23%)</title><rect x="97.1467%" y="949" width="0.2273%" height="15" fill="rgb(236,58,11)" fg:x="51717" fg:w="121"/><text x="97.3967%" y="959.50"></text></g><g><title>do_syscall_64 (121 samples, 0.23%)</title><rect x="97.1467%" y="933" width="0.2273%" height="15" fill="rgb(249,63,35)" fg:x="51717" fg:w="121"/><text x="97.3967%" y="943.50"></text></g><g><title>__x64_sys_futex (120 samples, 0.23%)</title><rect x="97.1485%" y="917" width="0.2254%" height="15" fill="rgb(252,114,16)" fg:x="51718" fg:w="120"/><text x="97.3985%" y="927.50"></text></g><g><title>do_futex (120 samples, 0.23%)</title><rect x="97.1485%" y="901" width="0.2254%" height="15" fill="rgb(254,151,24)" fg:x="51718" fg:w="120"/><text x="97.3985%" y="911.50"></text></g><g><title>futex_wait (120 samples, 0.23%)</title><rect x="97.1485%" y="885" width="0.2254%" height="15" fill="rgb(253,54,39)" fg:x="51718" fg:w="120"/><text x="97.3985%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (128 samples, 0.24%)</title><rect x="97.1354%" y="1013" width="0.2404%" height="15" fill="rgb(243,25,45)" fg:x="51711" fg:w="128"/><text x="97.3854%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (127 samples, 0.24%)</title><rect x="97.1373%" y="997" width="0.2386%" height="15" fill="rgb(234,134,9)" fg:x="51712" fg:w="127"/><text x="97.3873%" y="1007.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (9 samples, 0.02%)</title><rect x="97.3758%" y="1013" width="0.0169%" height="15" fill="rgb(227,166,31)" fg:x="51839" fg:w="9"/><text x="97.6258%" y="1023.50"></text></g><g><title>ep_send_events_proc (18 samples, 0.03%)</title><rect x="97.4810%" y="853" width="0.0338%" height="15" fill="rgb(245,143,41)" fg:x="51895" fg:w="18"/><text x="97.7310%" y="863.50"></text></g><g><title>ep_item_poll.isra.16 (12 samples, 0.02%)</title><rect x="97.4923%" y="837" width="0.0225%" height="15" fill="rgb(238,181,32)" fg:x="51901" fg:w="12"/><text x="97.7423%" y="847.50"></text></g><g><title>sock_poll (7 samples, 0.01%)</title><rect x="97.5017%" y="821" width="0.0131%" height="15" fill="rgb(224,113,18)" fg:x="51906" fg:w="7"/><text x="97.7517%" y="831.50"></text></g><g><title>ep_scan_ready_list.constprop.20 (24 samples, 0.05%)</title><rect x="97.4735%" y="869" width="0.0451%" height="15" fill="rgb(240,229,28)" fg:x="51891" fg:w="24"/><text x="97.7235%" y="879.50"></text></g><g><title>hrtimer_start_range_ns (6 samples, 0.01%)</title><rect x="97.5374%" y="837" width="0.0113%" height="15" fill="rgb(250,185,3)" fg:x="51925" fg:w="6"/><text x="97.7874%" y="847.50"></text></g><g><title>__lock_text_start (6 samples, 0.01%)</title><rect x="97.5374%" y="821" width="0.0113%" height="15" fill="rgb(212,59,25)" fg:x="51925" fg:w="6"/><text x="97.7874%" y="831.50"></text></g><g><title>schedule_hrtimeout_range (183 samples, 0.34%)</title><rect x="97.5280%" y="869" width="0.3438%" height="15" fill="rgb(221,87,20)" fg:x="51920" fg:w="183"/><text x="97.7780%" y="879.50"></text></g><g><title>schedule_hrtimeout_range_clock (183 samples, 0.34%)</title><rect x="97.5280%" y="853" width="0.3438%" height="15" fill="rgb(213,74,28)" fg:x="51920" fg:w="183"/><text x="97.7780%" y="863.50"></text></g><g><title>schedule (169 samples, 0.32%)</title><rect x="97.5543%" y="837" width="0.3175%" height="15" fill="rgb(224,132,34)" fg:x="51934" fg:w="169"/><text x="97.8043%" y="847.50"></text></g><g><title>__sched_text_start (168 samples, 0.32%)</title><rect x="97.5562%" y="821" width="0.3156%" height="15" fill="rgb(222,101,24)" fg:x="51935" fg:w="168"/><text x="97.8062%" y="831.50"></text></g><g><title>finish_task_switch (168 samples, 0.32%)</title><rect x="97.5562%" y="805" width="0.3156%" height="15" fill="rgb(254,142,4)" fg:x="51935" fg:w="168"/><text x="97.8062%" y="815.50"></text></g><g><title>ep_poll (225 samples, 0.42%)</title><rect x="97.4547%" y="885" width="0.4226%" height="15" fill="rgb(230,229,49)" fg:x="51881" fg:w="225"/><text x="97.7047%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (234 samples, 0.44%)</title><rect x="97.4435%" y="949" width="0.4396%" height="15" fill="rgb(238,70,47)" fg:x="51875" fg:w="234"/><text x="97.6935%" y="959.50"></text></g><g><title>do_syscall_64 (232 samples, 0.44%)</title><rect x="97.4472%" y="933" width="0.4358%" height="15" fill="rgb(231,160,17)" fg:x="51877" fg:w="232"/><text x="97.6972%" y="943.50"></text></g><g><title>__x64_sys_epoll_wait (230 samples, 0.43%)</title><rect x="97.4510%" y="917" width="0.4320%" height="15" fill="rgb(218,68,53)" fg:x="51879" fg:w="230"/><text x="97.7010%" y="927.50"></text></g><g><title>do_epoll_wait (230 samples, 0.43%)</title><rect x="97.4510%" y="901" width="0.4320%" height="15" fill="rgb(236,111,10)" fg:x="51879" fg:w="230"/><text x="97.7010%" y="911.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (243 samples, 0.46%)</title><rect x="97.4341%" y="981" width="0.4565%" height="15" fill="rgb(224,34,41)" fg:x="51870" fg:w="243"/><text x="97.6841%" y="991.50"></text></g><g><title>epoll_wait (242 samples, 0.45%)</title><rect x="97.4359%" y="965" width="0.4546%" height="15" fill="rgb(241,118,19)" fg:x="51871" fg:w="242"/><text x="97.6859%" y="975.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (7 samples, 0.01%)</title><rect x="97.8905%" y="981" width="0.0131%" height="15" fill="rgb(238,129,25)" fg:x="52113" fg:w="7"/><text x="98.1405%" y="991.50"></text></g><g><title>tokio::runtime::io::Driver::turn (263 samples, 0.49%)</title><rect x="97.4115%" y="997" width="0.4940%" height="15" fill="rgb(238,22,31)" fg:x="51858" fg:w="263"/><text x="97.6615%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (431 samples, 0.81%)</title><rect x="97.0978%" y="1045" width="0.8096%" height="15" fill="rgb(222,174,48)" fg:x="51691" fg:w="431"/><text x="97.3478%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (422 samples, 0.79%)</title><rect x="97.1147%" y="1029" width="0.7927%" height="15" fill="rgb(206,152,40)" fg:x="51700" fg:w="422"/><text x="97.3647%" y="1039.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (274 samples, 0.51%)</title><rect x="97.3927%" y="1013" width="0.5147%" height="15" fill="rgb(218,99,54)" fg:x="51848" fg:w="274"/><text x="97.6427%" y="1023.50"></text></g><g><title>syscall (78 samples, 0.15%)</title><rect x="97.9112%" y="1029" width="0.1465%" height="15" fill="rgb(220,174,26)" fg:x="52124" fg:w="78"/><text x="98.1612%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (78 samples, 0.15%)</title><rect x="97.9112%" y="1013" width="0.1465%" height="15" fill="rgb(245,116,9)" fg:x="52124" fg:w="78"/><text x="98.1612%" y="1023.50"></text></g><g><title>do_syscall_64 (77 samples, 0.14%)</title><rect x="97.9131%" y="997" width="0.1446%" height="15" fill="rgb(209,72,35)" fg:x="52125" fg:w="77"/><text x="98.1631%" y="1007.50"></text></g><g><title>__x64_sys_futex (77 samples, 0.14%)</title><rect x="97.9131%" y="981" width="0.1446%" height="15" fill="rgb(226,126,21)" fg:x="52125" fg:w="77"/><text x="98.1631%" y="991.50"></text></g><g><title>do_futex (77 samples, 0.14%)</title><rect x="97.9131%" y="965" width="0.1446%" height="15" fill="rgb(227,192,1)" fg:x="52125" fg:w="77"/><text x="98.1631%" y="975.50"></text></g><g><title>futex_wake (77 samples, 0.14%)</title><rect x="97.9131%" y="949" width="0.1446%" height="15" fill="rgb(237,180,29)" fg:x="52125" fg:w="77"/><text x="98.1631%" y="959.50"></text></g><g><title>wake_up_q (74 samples, 0.14%)</title><rect x="97.9187%" y="933" width="0.1390%" height="15" fill="rgb(230,197,35)" fg:x="52128" fg:w="74"/><text x="98.1687%" y="943.50"></text></g><g><title>try_to_wake_up (74 samples, 0.14%)</title><rect x="97.9187%" y="917" width="0.1390%" height="15" fill="rgb(246,193,31)" fg:x="52128" fg:w="74"/><text x="98.1687%" y="927.50"></text></g><g><title>__lock_text_start (74 samples, 0.14%)</title><rect x="97.9187%" y="901" width="0.1390%" height="15" fill="rgb(241,36,4)" fg:x="52128" fg:w="74"/><text x="98.1687%" y="911.50"></text></g><g><title>__vfs_write (58 samples, 0.11%)</title><rect x="98.0821%" y="853" width="0.1089%" height="15" fill="rgb(241,130,17)" fg:x="52215" fg:w="58"/><text x="98.3321%" y="863.50"></text></g><g><title>eventfd_write (58 samples, 0.11%)</title><rect x="98.0821%" y="837" width="0.1089%" height="15" fill="rgb(206,137,32)" fg:x="52215" fg:w="58"/><text x="98.3321%" y="847.50"></text></g><g><title>ksys_write (62 samples, 0.12%)</title><rect x="98.0765%" y="885" width="0.1165%" height="15" fill="rgb(237,228,51)" fg:x="52212" fg:w="62"/><text x="98.3265%" y="895.50"></text></g><g><title>vfs_write (59 samples, 0.11%)</title><rect x="98.0821%" y="869" width="0.1108%" height="15" fill="rgb(243,6,42)" fg:x="52215" fg:w="59"/><text x="98.3321%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (71 samples, 0.13%)</title><rect x="98.0615%" y="1029" width="0.1334%" height="15" fill="rgb(251,74,28)" fg:x="52204" fg:w="71"/><text x="98.3115%" y="1039.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (67 samples, 0.13%)</title><rect x="98.0690%" y="1013" width="0.1259%" height="15" fill="rgb(218,20,49)" fg:x="52208" fg:w="67"/><text x="98.3190%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (66 samples, 0.12%)</title><rect x="98.0709%" y="997" width="0.1240%" height="15" fill="rgb(238,28,14)" fg:x="52209" fg:w="66"/><text x="98.3209%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (66 samples, 0.12%)</title><rect x="98.0709%" y="981" width="0.1240%" height="15" fill="rgb(229,40,46)" fg:x="52209" fg:w="66"/><text x="98.3209%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (66 samples, 0.12%)</title><rect x="98.0709%" y="965" width="0.1240%" height="15" fill="rgb(244,195,20)" fg:x="52209" fg:w="66"/><text x="98.3209%" y="975.50"></text></g><g><title>__libc_write (66 samples, 0.12%)</title><rect x="98.0709%" y="949" width="0.1240%" height="15" fill="rgb(253,56,35)" fg:x="52209" fg:w="66"/><text x="98.3209%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (65 samples, 0.12%)</title><rect x="98.0727%" y="933" width="0.1221%" height="15" fill="rgb(210,149,44)" fg:x="52210" fg:w="65"/><text x="98.3227%" y="943.50"></text></g><g><title>do_syscall_64 (64 samples, 0.12%)</title><rect x="98.0746%" y="917" width="0.1202%" height="15" fill="rgb(240,135,12)" fg:x="52211" fg:w="64"/><text x="98.3246%" y="927.50"></text></g><g><title>__x64_sys_write (63 samples, 0.12%)</title><rect x="98.0765%" y="901" width="0.1183%" height="15" fill="rgb(251,24,50)" fg:x="52212" fg:w="63"/><text x="98.3265%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::dispatch::Callback&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;hyper::body::body::Body&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="98.2531%" y="869" width="0.0150%" height="15" fill="rgb(243,200,47)" fg:x="52306" fg:w="8"/><text x="98.5031%" y="879.50"></text></g><g><title>tokio::runtime::park::wake_by_ref (19 samples, 0.04%)</title><rect x="98.2737%" y="853" width="0.0357%" height="15" fill="rgb(224,166,26)" fg:x="52317" fg:w="19"/><text x="98.5237%" y="863.50"></text></g><g><title>syscall (18 samples, 0.03%)</title><rect x="98.2756%" y="837" width="0.0338%" height="15" fill="rgb(233,0,47)" fg:x="52318" fg:w="18"/><text x="98.5256%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.03%)</title><rect x="98.2756%" y="821" width="0.0338%" height="15" fill="rgb(253,80,5)" fg:x="52318" fg:w="18"/><text x="98.5256%" y="831.50"></text></g><g><title>do_syscall_64 (18 samples, 0.03%)</title><rect x="98.2756%" y="805" width="0.0338%" height="15" fill="rgb(214,133,25)" fg:x="52318" fg:w="18"/><text x="98.5256%" y="815.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.03%)</title><rect x="98.2775%" y="789" width="0.0319%" height="15" fill="rgb(209,27,14)" fg:x="52319" fg:w="17"/><text x="98.5275%" y="799.50"></text></g><g><title>do_futex (17 samples, 0.03%)</title><rect x="98.2775%" y="773" width="0.0319%" height="15" fill="rgb(219,102,51)" fg:x="52319" fg:w="17"/><text x="98.5275%" y="783.50"></text></g><g><title>futex_wake (17 samples, 0.03%)</title><rect x="98.2775%" y="757" width="0.0319%" height="15" fill="rgb(237,18,16)" fg:x="52319" fg:w="17"/><text x="98.5275%" y="767.50"></text></g><g><title>wake_up_q (16 samples, 0.03%)</title><rect x="98.2794%" y="741" width="0.0301%" height="15" fill="rgb(241,85,17)" fg:x="52320" fg:w="16"/><text x="98.5294%" y="751.50"></text></g><g><title>try_to_wake_up (16 samples, 0.03%)</title><rect x="98.2794%" y="725" width="0.0301%" height="15" fill="rgb(236,90,42)" fg:x="52320" fg:w="16"/><text x="98.5294%" y="735.50"></text></g><g><title>__lock_text_start (16 samples, 0.03%)</title><rect x="98.2794%" y="709" width="0.0301%" height="15" fill="rgb(249,57,21)" fg:x="52320" fg:w="16"/><text x="98.5294%" y="719.50"></text></g><g><title>hyper::client::dispatch::Callback&lt;T,U&gt;::send (31 samples, 0.06%)</title><rect x="98.2531%" y="885" width="0.0582%" height="15" fill="rgb(243,12,36)" fg:x="52306" fg:w="31"/><text x="98.5031%" y="895.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (23 samples, 0.04%)</title><rect x="98.2681%" y="869" width="0.0432%" height="15" fill="rgb(253,128,47)" fg:x="52314" fg:w="23"/><text x="98.5181%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (35 samples, 0.07%)</title><rect x="98.2493%" y="901" width="0.0657%" height="15" fill="rgb(207,33,20)" fg:x="52304" fg:w="35"/><text x="98.4993%" y="911.50"></text></g><g><title>futures_channel::mpsc::channel (7 samples, 0.01%)</title><rect x="98.3301%" y="885" width="0.0131%" height="15" fill="rgb(233,215,35)" fg:x="52347" fg:w="7"/><text x="98.5801%" y="895.50"></text></g><g><title>hyper::body::body::Body::new_channel (13 samples, 0.02%)</title><rect x="98.3207%" y="901" width="0.0244%" height="15" fill="rgb(249,188,52)" fg:x="52342" fg:w="13"/><text x="98.5707%" y="911.50"></text></g><g><title>hyper::body::body::Sender::poll_ready (7 samples, 0.01%)</title><rect x="98.3451%" y="901" width="0.0131%" height="15" fill="rgb(225,12,32)" fg:x="52355" fg:w="7"/><text x="98.5951%" y="911.50"></text></g><g><title>hyper::body::body::Sender::try_send_data (34 samples, 0.06%)</title><rect x="98.3583%" y="901" width="0.0639%" height="15" fill="rgb(247,98,14)" fg:x="52362" fg:w="34"/><text x="98.6083%" y="911.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (33 samples, 0.06%)</title><rect x="98.3601%" y="885" width="0.0620%" height="15" fill="rgb(247,219,48)" fg:x="52363" fg:w="33"/><text x="98.6101%" y="895.50"></text></g><g><title>tokio::runtime::park::wake (24 samples, 0.05%)</title><rect x="98.3770%" y="869" width="0.0451%" height="15" fill="rgb(253,60,48)" fg:x="52372" fg:w="24"/><text x="98.6270%" y="879.50"></text></g><g><title>syscall (24 samples, 0.05%)</title><rect x="98.3770%" y="853" width="0.0451%" height="15" fill="rgb(245,15,52)" fg:x="52372" fg:w="24"/><text x="98.6270%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.04%)</title><rect x="98.3789%" y="837" width="0.0432%" height="15" fill="rgb(220,133,28)" fg:x="52373" fg:w="23"/><text x="98.6289%" y="847.50"></text></g><g><title>do_syscall_64 (23 samples, 0.04%)</title><rect x="98.3789%" y="821" width="0.0432%" height="15" fill="rgb(217,180,4)" fg:x="52373" fg:w="23"/><text x="98.6289%" y="831.50"></text></g><g><title>__x64_sys_futex (23 samples, 0.04%)</title><rect x="98.3789%" y="805" width="0.0432%" height="15" fill="rgb(251,24,1)" fg:x="52373" fg:w="23"/><text x="98.6289%" y="815.50"></text></g><g><title>do_futex (23 samples, 0.04%)</title><rect x="98.3789%" y="789" width="0.0432%" height="15" fill="rgb(212,185,49)" fg:x="52373" fg:w="23"/><text x="98.6289%" y="799.50"></text></g><g><title>futex_wake (23 samples, 0.04%)</title><rect x="98.3789%" y="773" width="0.0432%" height="15" fill="rgb(215,175,22)" fg:x="52373" fg:w="23"/><text x="98.6289%" y="783.50"></text></g><g><title>wake_up_q (21 samples, 0.04%)</title><rect x="98.3827%" y="757" width="0.0394%" height="15" fill="rgb(250,205,14)" fg:x="52375" fg:w="21"/><text x="98.6327%" y="767.50"></text></g><g><title>try_to_wake_up (21 samples, 0.04%)</title><rect x="98.3827%" y="741" width="0.0394%" height="15" fill="rgb(225,211,22)" fg:x="52375" fg:w="21"/><text x="98.6327%" y="751.50"></text></g><g><title>__lock_text_start (21 samples, 0.04%)</title><rect x="98.3827%" y="725" width="0.0394%" height="15" fill="rgb(251,179,42)" fg:x="52375" fg:w="21"/><text x="98.6327%" y="735.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (11 samples, 0.02%)</title><rect x="98.4259%" y="869" width="0.0207%" height="15" fill="rgb(208,216,51)" fg:x="52398" fg:w="11"/><text x="98.6759%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.02%)</title><rect x="98.4259%" y="885" width="0.0225%" height="15" fill="rgb(235,36,11)" fg:x="52398" fg:w="12"/><text x="98.6759%" y="895.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (20 samples, 0.04%)</title><rect x="98.4221%" y="901" width="0.0376%" height="15" fill="rgb(213,189,28)" fg:x="52396" fg:w="20"/><text x="98.6721%" y="911.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.01%)</title><rect x="98.4484%" y="885" width="0.0113%" height="15" fill="rgb(227,203,42)" fg:x="52410" fg:w="6"/><text x="98.6984%" y="895.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (10 samples, 0.02%)</title><rect x="98.4653%" y="869" width="0.0188%" height="15" fill="rgb(244,72,36)" fg:x="52419" fg:w="10"/><text x="98.7153%" y="879.50"></text></g><g><title>bytes::bytes::promotable_even_drop (10 samples, 0.02%)</title><rect x="98.4653%" y="853" width="0.0188%" height="15" fill="rgb(213,53,17)" fg:x="52419" fg:w="10"/><text x="98.7153%" y="863.50"></text></g><g><title>cfree (10 samples, 0.02%)</title><rect x="98.4653%" y="837" width="0.0188%" height="15" fill="rgb(207,167,3)" fg:x="52419" fg:w="10"/><text x="98.7153%" y="847.50"></text></g><g><title>pthread_setcanceltype (9 samples, 0.02%)</title><rect x="98.4672%" y="821" width="0.0169%" height="15" fill="rgb(216,98,30)" fg:x="52420" fg:w="9"/><text x="98.7172%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="98.4728%" y="805" width="0.0113%" height="15" fill="rgb(236,123,15)" fg:x="52423" fg:w="6"/><text x="98.7228%" y="815.50"></text></g><g><title>do_syscall_64 (6 samples, 0.01%)</title><rect x="98.4728%" y="789" width="0.0113%" height="15" fill="rgb(248,81,50)" fg:x="52423" fg:w="6"/><text x="98.7228%" y="799.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="98.4728%" y="773" width="0.0113%" height="15" fill="rgb(214,120,4)" fg:x="52423" fg:w="6"/><text x="98.7228%" y="783.50"></text></g><g><title>do_futex (6 samples, 0.01%)</title><rect x="98.4728%" y="757" width="0.0113%" height="15" fill="rgb(208,179,34)" fg:x="52423" fg:w="6"/><text x="98.7228%" y="767.50"></text></g><g><title>_copy_from_iter_full (6 samples, 0.01%)</title><rect x="98.5029%" y="549" width="0.0113%" height="15" fill="rgb(227,140,7)" fg:x="52439" fg:w="6"/><text x="98.7529%" y="559.50"></text></g><g><title>copy_user_enhanced_fast_string (6 samples, 0.01%)</title><rect x="98.5029%" y="533" width="0.0113%" height="15" fill="rgb(214,22,6)" fg:x="52439" fg:w="6"/><text x="98.7529%" y="543.50"></text></g><g><title>ipv4_conntrack_local (7 samples, 0.01%)</title><rect x="98.5367%" y="405" width="0.0131%" height="15" fill="rgb(207,137,27)" fg:x="52457" fg:w="7"/><text x="98.7867%" y="415.50"></text></g><g><title>nf_conntrack_in (7 samples, 0.01%)</title><rect x="98.5367%" y="389" width="0.0131%" height="15" fill="rgb(210,8,46)" fg:x="52457" fg:w="7"/><text x="98.7867%" y="399.50"></text></g><g><title>__ip_local_out (8 samples, 0.02%)</title><rect x="98.5367%" y="437" width="0.0150%" height="15" fill="rgb(240,16,54)" fg:x="52457" fg:w="8"/><text x="98.7867%" y="447.50"></text></g><g><title>nf_hook_slow (8 samples, 0.02%)</title><rect x="98.5367%" y="421" width="0.0150%" height="15" fill="rgb(211,209,29)" fg:x="52457" fg:w="8"/><text x="98.7867%" y="431.50"></text></g><g><title>tcp_data_queue (7 samples, 0.01%)</title><rect x="98.5799%" y="117" width="0.0131%" height="15" fill="rgb(226,228,24)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="127.50"></text></g><g><title>tcp_data_ready (7 samples, 0.01%)</title><rect x="98.5799%" y="101" width="0.0131%" height="15" fill="rgb(222,84,9)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="111.50"></text></g><g><title>sock_def_readable (7 samples, 0.01%)</title><rect x="98.5799%" y="85" width="0.0131%" height="15" fill="rgb(234,203,30)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="95.50"></text></g><g><title>__wake_up_sync_key (7 samples, 0.01%)</title><rect x="98.5799%" y="69" width="0.0131%" height="15" fill="rgb(238,109,14)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="79.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.01%)</title><rect x="98.5799%" y="53" width="0.0131%" height="15" fill="rgb(233,206,34)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="63.50"></text></g><g><title>__lock_text_start (7 samples, 0.01%)</title><rect x="98.5799%" y="37" width="0.0131%" height="15" fill="rgb(220,167,47)" fg:x="52480" fg:w="7"/><text x="98.8299%" y="47.50"></text></g><g><title>tcp_v4_do_rcv (23 samples, 0.04%)</title><rect x="98.5705%" y="149" width="0.0432%" height="15" fill="rgb(238,105,10)" fg:x="52475" fg:w="23"/><text x="98.8205%" y="159.50"></text></g><g><title>tcp_rcv_established (23 samples, 0.04%)</title><rect x="98.5705%" y="133" width="0.0432%" height="15" fill="rgb(213,227,17)" fg:x="52475" fg:w="23"/><text x="98.8205%" y="143.50"></text></g><g><title>tcp_data_ready (11 samples, 0.02%)</title><rect x="98.5931%" y="117" width="0.0207%" height="15" fill="rgb(217,132,38)" fg:x="52487" fg:w="11"/><text x="98.8431%" y="127.50"></text></g><g><title>sock_def_readable (11 samples, 0.02%)</title><rect x="98.5931%" y="101" width="0.0207%" height="15" fill="rgb(242,146,4)" fg:x="52487" fg:w="11"/><text x="98.8431%" y="111.50"></text></g><g><title>__wake_up_sync_key (11 samples, 0.02%)</title><rect x="98.5931%" y="85" width="0.0207%" height="15" fill="rgb(212,61,9)" fg:x="52487" fg:w="11"/><text x="98.8431%" y="95.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.02%)</title><rect x="98.5931%" y="69" width="0.0207%" height="15" fill="rgb(247,126,22)" fg:x="52487" fg:w="11"/><text x="98.8431%" y="79.50"></text></g><g><title>__lock_text_start (11 samples, 0.02%)</title><rect x="98.5931%" y="53" width="0.0207%" height="15" fill="rgb(220,196,2)" fg:x="52487" fg:w="11"/><text x="98.8431%" y="63.50"></text></g><g><title>ip_local_deliver_finish (27 samples, 0.05%)</title><rect x="98.5649%" y="197" width="0.0507%" height="15" fill="rgb(208,46,4)" fg:x="52472" fg:w="27"/><text x="98.8149%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (27 samples, 0.05%)</title><rect x="98.5649%" y="181" width="0.0507%" height="15" fill="rgb(252,104,46)" fg:x="52472" fg:w="27"/><text x="98.8149%" y="191.50"></text></g><g><title>tcp_v4_rcv (27 samples, 0.05%)</title><rect x="98.5649%" y="165" width="0.0507%" height="15" fill="rgb(237,152,48)" fg:x="52472" fg:w="27"/><text x="98.8149%" y="175.50"></text></g><g><title>ip_rcv_finish (29 samples, 0.05%)</title><rect x="98.5649%" y="229" width="0.0545%" height="15" fill="rgb(221,59,37)" fg:x="52472" fg:w="29"/><text x="98.8149%" y="239.50"></text></g><g><title>ip_local_deliver (29 samples, 0.05%)</title><rect x="98.5649%" y="213" width="0.0545%" height="15" fill="rgb(209,202,51)" fg:x="52472" fg:w="29"/><text x="98.8149%" y="223.50"></text></g><g><title>__local_bh_enable_ip (37 samples, 0.07%)</title><rect x="98.5536%" y="373" width="0.0695%" height="15" fill="rgb(228,81,30)" fg:x="52466" fg:w="37"/><text x="98.8036%" y="383.50"></text></g><g><title>do_softirq.part.20 (37 samples, 0.07%)</title><rect x="98.5536%" y="357" width="0.0695%" height="15" fill="rgb(227,42,39)" fg:x="52466" fg:w="37"/><text x="98.8036%" y="367.50"></text></g><g><title>do_softirq_own_stack (37 samples, 0.07%)</title><rect x="98.5536%" y="341" width="0.0695%" height="15" fill="rgb(221,26,2)" fg:x="52466" fg:w="37"/><text x="98.8036%" y="351.50"></text></g><g><title>__softirqentry_text_start (37 samples, 0.07%)</title><rect x="98.5536%" y="325" width="0.0695%" height="15" fill="rgb(254,61,31)" fg:x="52466" fg:w="37"/><text x="98.8036%" y="335.50"></text></g><g><title>net_rx_action (36 samples, 0.07%)</title><rect x="98.5555%" y="309" width="0.0676%" height="15" fill="rgb(222,173,38)" fg:x="52467" fg:w="36"/><text x="98.8055%" y="319.50"></text></g><g><title>process_backlog (36 samples, 0.07%)</title><rect x="98.5555%" y="293" width="0.0676%" height="15" fill="rgb(218,50,12)" fg:x="52467" fg:w="36"/><text x="98.8055%" y="303.50"></text></g><g><title>__netif_receive_skb (36 samples, 0.07%)</title><rect x="98.5555%" y="277" width="0.0676%" height="15" fill="rgb(223,88,40)" fg:x="52467" fg:w="36"/><text x="98.8055%" y="287.50"></text></g><g><title>__netif_receive_skb_one_core (36 samples, 0.07%)</title><rect x="98.5555%" y="261" width="0.0676%" height="15" fill="rgb(237,54,19)" fg:x="52467" fg:w="36"/><text x="98.8055%" y="271.50"></text></g><g><title>ip_rcv (33 samples, 0.06%)</title><rect x="98.5611%" y="245" width="0.0620%" height="15" fill="rgb(251,129,25)" fg:x="52470" fg:w="33"/><text x="98.8111%" y="255.50"></text></g><g><title>dev_queue_xmit (6 samples, 0.01%)</title><rect x="98.6231%" y="373" width="0.0113%" height="15" fill="rgb(238,97,19)" fg:x="52503" fg:w="6"/><text x="98.8731%" y="383.50"></text></g><g><title>__dev_queue_xmit (6 samples, 0.01%)</title><rect x="98.6231%" y="357" width="0.0113%" height="15" fill="rgb(240,169,18)" fg:x="52503" fg:w="6"/><text x="98.8731%" y="367.50"></text></g><g><title>__ip_finish_output (44 samples, 0.08%)</title><rect x="98.5536%" y="405" width="0.0827%" height="15" fill="rgb(230,187,49)" fg:x="52466" fg:w="44"/><text x="98.8036%" y="415.50"></text></g><g><title>ip_finish_output2 (44 samples, 0.08%)</title><rect x="98.5536%" y="389" width="0.0827%" height="15" fill="rgb(209,44,26)" fg:x="52466" fg:w="44"/><text x="98.8036%" y="399.50"></text></g><g><title>ip_output (46 samples, 0.09%)</title><rect x="98.5517%" y="437" width="0.0864%" height="15" fill="rgb(244,0,6)" fg:x="52465" fg:w="46"/><text x="98.8017%" y="447.50"></text></g><g><title>ip_finish_output (45 samples, 0.08%)</title><rect x="98.5536%" y="421" width="0.0845%" height="15" fill="rgb(248,18,21)" fg:x="52466" fg:w="45"/><text x="98.8036%" y="431.50"></text></g><g><title>ip_queue_xmit (56 samples, 0.11%)</title><rect x="98.5348%" y="485" width="0.1052%" height="15" fill="rgb(245,180,19)" fg:x="52456" fg:w="56"/><text x="98.7848%" y="495.50"></text></g><g><title>__ip_queue_xmit (56 samples, 0.11%)</title><rect x="98.5348%" y="469" width="0.1052%" height="15" fill="rgb(252,118,36)" fg:x="52456" fg:w="56"/><text x="98.7848%" y="479.50"></text></g><g><title>ip_local_out (55 samples, 0.10%)</title><rect x="98.5367%" y="453" width="0.1033%" height="15" fill="rgb(210,224,19)" fg:x="52457" fg:w="55"/><text x="98.7867%" y="463.50"></text></g><g><title>__tcp_transmit_skb (59 samples, 0.11%)</title><rect x="98.5311%" y="501" width="0.1108%" height="15" fill="rgb(218,30,24)" fg:x="52454" fg:w="59"/><text x="98.7811%" y="511.50"></text></g><g><title>tcp_push (65 samples, 0.12%)</title><rect x="98.5273%" y="549" width="0.1221%" height="15" fill="rgb(219,75,50)" fg:x="52452" fg:w="65"/><text x="98.7773%" y="559.50"></text></g><g><title>__tcp_push_pending_frames (65 samples, 0.12%)</title><rect x="98.5273%" y="533" width="0.1221%" height="15" fill="rgb(234,72,50)" fg:x="52452" fg:w="65"/><text x="98.7773%" y="543.50"></text></g><g><title>tcp_write_xmit (65 samples, 0.12%)</title><rect x="98.5273%" y="517" width="0.1221%" height="15" fill="rgb(219,100,48)" fg:x="52452" fg:w="65"/><text x="98.7773%" y="527.50"></text></g><g><title>do_iter_readv_writev (84 samples, 0.16%)</title><rect x="98.4954%" y="645" width="0.1578%" height="15" fill="rgb(253,5,41)" fg:x="52435" fg:w="84"/><text x="98.7454%" y="655.50"></text></g><g><title>sock_write_iter (84 samples, 0.16%)</title><rect x="98.4954%" y="629" width="0.1578%" height="15" fill="rgb(247,181,11)" fg:x="52435" fg:w="84"/><text x="98.7454%" y="639.50"></text></g><g><title>sock_sendmsg (84 samples, 0.16%)</title><rect x="98.4954%" y="613" width="0.1578%" height="15" fill="rgb(222,223,25)" fg:x="52435" fg:w="84"/><text x="98.7454%" y="623.50"></text></g><g><title>inet_sendmsg (84 samples, 0.16%)</title><rect x="98.4954%" y="597" width="0.1578%" height="15" fill="rgb(214,198,28)" fg:x="52435" fg:w="84"/><text x="98.7454%" y="607.50"></text></g><g><title>tcp_sendmsg (84 samples, 0.16%)</title><rect x="98.4954%" y="581" width="0.1578%" height="15" fill="rgb(230,46,43)" fg:x="52435" fg:w="84"/><text x="98.7454%" y="591.50"></text></g><g><title>tcp_sendmsg_locked (83 samples, 0.16%)</title><rect x="98.4973%" y="565" width="0.1559%" height="15" fill="rgb(233,65,53)" fg:x="52436" fg:w="83"/><text x="98.7473%" y="575.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (106 samples, 0.20%)</title><rect x="98.4597%" y="901" width="0.1991%" height="15" fill="rgb(221,121,27)" fg:x="52416" fg:w="106"/><text x="98.7097%" y="911.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (103 samples, 0.19%)</title><rect x="98.4653%" y="885" width="0.1935%" height="15" fill="rgb(247,70,47)" fg:x="52419" fg:w="103"/><text x="98.7153%" y="895.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (93 samples, 0.17%)</title><rect x="98.4841%" y="869" width="0.1747%" height="15" fill="rgb(228,85,35)" fg:x="52429" fg:w="93"/><text x="98.7341%" y="879.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (92 samples, 0.17%)</title><rect x="98.4860%" y="853" width="0.1728%" height="15" fill="rgb(209,50,18)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="863.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (92 samples, 0.17%)</title><rect x="98.4860%" y="837" width="0.1728%" height="15" fill="rgb(250,19,35)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (92 samples, 0.17%)</title><rect x="98.4860%" y="821" width="0.1728%" height="15" fill="rgb(253,107,29)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::write_vectored (92 samples, 0.17%)</title><rect x="98.4860%" y="805" width="0.1728%" height="15" fill="rgb(252,179,29)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::write_vectored (92 samples, 0.17%)</title><rect x="98.4860%" y="789" width="0.1728%" height="15" fill="rgb(238,194,6)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="799.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (92 samples, 0.17%)</title><rect x="98.4860%" y="773" width="0.1728%" height="15" fill="rgb(238,164,29)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="783.50"></text></g><g><title>writev (92 samples, 0.17%)</title><rect x="98.4860%" y="757" width="0.1728%" height="15" fill="rgb(224,25,9)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (92 samples, 0.17%)</title><rect x="98.4860%" y="741" width="0.1728%" height="15" fill="rgb(244,153,23)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="751.50"></text></g><g><title>do_syscall_64 (92 samples, 0.17%)</title><rect x="98.4860%" y="725" width="0.1728%" height="15" fill="rgb(212,203,14)" fg:x="52430" fg:w="92"/><text x="98.7360%" y="735.50"></text></g><g><title>__x64_sys_writev (91 samples, 0.17%)</title><rect x="98.4879%" y="709" width="0.1709%" height="15" fill="rgb(220,164,20)" fg:x="52431" fg:w="91"/><text x="98.7379%" y="719.50"></text></g><g><title>do_writev (91 samples, 0.17%)</title><rect x="98.4879%" y="693" width="0.1709%" height="15" fill="rgb(222,203,48)" fg:x="52431" fg:w="91"/><text x="98.7379%" y="703.50"></text></g><g><title>vfs_writev (89 samples, 0.17%)</title><rect x="98.4916%" y="677" width="0.1672%" height="15" fill="rgb(215,159,22)" fg:x="52433" fg:w="89"/><text x="98.7416%" y="687.50"></text></g><g><title>do_iter_write (87 samples, 0.16%)</title><rect x="98.4954%" y="661" width="0.1634%" height="15" fill="rgb(216,183,47)" fg:x="52435" fg:w="87"/><text x="98.7454%" y="671.50"></text></g><g><title>__libc_malloc (12 samples, 0.02%)</title><rect x="98.6907%" y="821" width="0.0225%" height="15" fill="rgb(229,195,25)" fg:x="52539" fg:w="12"/><text x="98.9407%" y="831.50"></text></g><g><title>_IO_str_seekoff (9 samples, 0.02%)</title><rect x="98.6964%" y="805" width="0.0169%" height="15" fill="rgb(224,132,51)" fg:x="52542" fg:w="9"/><text x="98.9464%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (18 samples, 0.03%)</title><rect x="98.6851%" y="837" width="0.0338%" height="15" fill="rgb(240,63,7)" fg:x="52536" fg:w="18"/><text x="98.9351%" y="847.50"></text></g><g><title>__put_page (11 samples, 0.02%)</title><rect x="98.7415%" y="565" width="0.0207%" height="15" fill="rgb(249,182,41)" fg:x="52566" fg:w="11"/><text x="98.9915%" y="575.50"></text></g><g><title>__put_compound_page (11 samples, 0.02%)</title><rect x="98.7415%" y="549" width="0.0207%" height="15" fill="rgb(243,47,26)" fg:x="52566" fg:w="11"/><text x="98.9915%" y="559.50"></text></g><g><title>free_compound_page (10 samples, 0.02%)</title><rect x="98.7433%" y="533" width="0.0188%" height="15" fill="rgb(233,48,2)" fg:x="52567" fg:w="10"/><text x="98.9933%" y="543.50"></text></g><g><title>__free_pages_ok (10 samples, 0.02%)</title><rect x="98.7433%" y="517" width="0.0188%" height="15" fill="rgb(244,165,34)" fg:x="52567" fg:w="10"/><text x="98.9933%" y="527.50"></text></g><g><title>skb_release_data (15 samples, 0.03%)</title><rect x="98.7415%" y="581" width="0.0282%" height="15" fill="rgb(207,89,7)" fg:x="52566" fg:w="15"/><text x="98.9915%" y="591.50"></text></g><g><title>__kfree_skb (18 samples, 0.03%)</title><rect x="98.7396%" y="613" width="0.0338%" height="15" fill="rgb(244,117,36)" fg:x="52565" fg:w="18"/><text x="98.9896%" y="623.50"></text></g><g><title>skb_release_all (17 samples, 0.03%)</title><rect x="98.7415%" y="597" width="0.0319%" height="15" fill="rgb(226,144,34)" fg:x="52566" fg:w="17"/><text x="98.9915%" y="607.50"></text></g><g><title>tcp_data_ready (17 samples, 0.03%)</title><rect x="98.7865%" y="549" width="0.0319%" height="15" fill="rgb(213,23,19)" fg:x="52590" fg:w="17"/><text x="99.0365%" y="559.50"></text></g><g><title>sock_def_readable (17 samples, 0.03%)</title><rect x="98.7865%" y="533" width="0.0319%" height="15" fill="rgb(217,75,12)" fg:x="52590" fg:w="17"/><text x="99.0365%" y="543.50"></text></g><g><title>__wake_up_sync_key (15 samples, 0.03%)</title><rect x="98.7903%" y="517" width="0.0282%" height="15" fill="rgb(224,159,17)" fg:x="52592" fg:w="15"/><text x="99.0403%" y="527.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.03%)</title><rect x="98.7903%" y="501" width="0.0282%" height="15" fill="rgb(217,118,1)" fg:x="52592" fg:w="15"/><text x="99.0403%" y="511.50"></text></g><g><title>__lock_text_start (15 samples, 0.03%)</title><rect x="98.7903%" y="485" width="0.0282%" height="15" fill="rgb(232,180,48)" fg:x="52592" fg:w="15"/><text x="99.0403%" y="495.50"></text></g><g><title>release_sock (25 samples, 0.05%)</title><rect x="98.7734%" y="613" width="0.0470%" height="15" fill="rgb(230,27,33)" fg:x="52583" fg:w="25"/><text x="99.0234%" y="623.50"></text></g><g><title>__release_sock (25 samples, 0.05%)</title><rect x="98.7734%" y="597" width="0.0470%" height="15" fill="rgb(205,31,21)" fg:x="52583" fg:w="25"/><text x="99.0234%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (24 samples, 0.05%)</title><rect x="98.7753%" y="581" width="0.0451%" height="15" fill="rgb(253,59,4)" fg:x="52584" fg:w="24"/><text x="99.0253%" y="591.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.05%)</title><rect x="98.7753%" y="565" width="0.0451%" height="15" fill="rgb(224,201,9)" fg:x="52584" fg:w="24"/><text x="99.0253%" y="575.50"></text></g><g><title>__check_object_size (7 samples, 0.01%)</title><rect x="98.8279%" y="565" width="0.0131%" height="15" fill="rgb(229,206,30)" fg:x="52612" fg:w="7"/><text x="99.0779%" y="575.50"></text></g><g><title>_copy_to_iter (327 samples, 0.61%)</title><rect x="98.8448%" y="565" width="0.6142%" height="15" fill="rgb(212,67,47)" fg:x="52621" fg:w="327"/><text x="99.0948%" y="575.50"></text></g><g><title>copy_user_enhanced_fast_string (321 samples, 0.60%)</title><rect x="98.8560%" y="549" width="0.6030%" height="15" fill="rgb(211,96,50)" fg:x="52627" fg:w="321"/><text x="99.1060%" y="559.50"></text></g><g><title>skb_copy_datagram_iter (340 samples, 0.64%)</title><rect x="98.8222%" y="613" width="0.6387%" height="15" fill="rgb(252,114,18)" fg:x="52609" fg:w="340"/><text x="99.0722%" y="623.50"></text></g><g><title>__skb_datagram_iter (340 samples, 0.64%)</title><rect x="98.8222%" y="597" width="0.6387%" height="15" fill="rgb(223,58,37)" fg:x="52609" fg:w="340"/><text x="99.0722%" y="607.50"></text></g><g><title>simple_copy_to_iter (337 samples, 0.63%)</title><rect x="98.8279%" y="581" width="0.6330%" height="15" fill="rgb(237,70,4)" fg:x="52612" fg:w="337"/><text x="99.0779%" y="591.50"></text></g><g><title>__ip_local_out (6 samples, 0.01%)</title><rect x="99.4797%" y="501" width="0.0113%" height="15" fill="rgb(244,85,46)" fg:x="52959" fg:w="6"/><text x="99.7297%" y="511.50"></text></g><g><title>ip_queue_xmit (8 samples, 0.02%)</title><rect x="99.5210%" y="133" width="0.0150%" height="15" fill="rgb(223,39,52)" fg:x="52981" fg:w="8"/><text x="99.7710%" y="143.50"></text></g><g><title>__ip_queue_xmit (8 samples, 0.02%)</title><rect x="99.5210%" y="117" width="0.0150%" height="15" fill="rgb(218,200,14)" fg:x="52981" fg:w="8"/><text x="99.7710%" y="127.50"></text></g><g><title>ip_local_out (7 samples, 0.01%)</title><rect x="99.5229%" y="101" width="0.0131%" height="15" fill="rgb(208,171,16)" fg:x="52982" fg:w="7"/><text x="99.7729%" y="111.50"></text></g><g><title>__tcp_transmit_skb (11 samples, 0.02%)</title><rect x="99.5191%" y="149" width="0.0207%" height="15" fill="rgb(234,200,18)" fg:x="52980" fg:w="11"/><text x="99.7691%" y="159.50"></text></g><g><title>__tcp_push_pending_frames (16 samples, 0.03%)</title><rect x="99.5191%" y="181" width="0.0301%" height="15" fill="rgb(228,45,11)" fg:x="52980" fg:w="16"/><text x="99.7691%" y="191.50"></text></g><g><title>tcp_write_xmit (16 samples, 0.03%)</title><rect x="99.5191%" y="165" width="0.0301%" height="15" fill="rgb(237,182,11)" fg:x="52980" fg:w="16"/><text x="99.7691%" y="175.50"></text></g><g><title>__kfree_skb (10 samples, 0.02%)</title><rect x="99.5586%" y="149" width="0.0188%" height="15" fill="rgb(241,175,49)" fg:x="53001" fg:w="10"/><text x="99.8086%" y="159.50"></text></g><g><title>skb_release_all (8 samples, 0.02%)</title><rect x="99.5623%" y="133" width="0.0150%" height="15" fill="rgb(247,38,35)" fg:x="53003" fg:w="8"/><text x="99.8123%" y="143.50"></text></g><g><title>skb_release_data (7 samples, 0.01%)</title><rect x="99.5642%" y="117" width="0.0131%" height="15" fill="rgb(228,39,49)" fg:x="53004" fg:w="7"/><text x="99.8142%" y="127.50"></text></g><g><title>tcp_clean_rtx_queue (14 samples, 0.03%)</title><rect x="99.5567%" y="165" width="0.0263%" height="15" fill="rgb(226,101,26)" fg:x="53000" fg:w="14"/><text x="99.8067%" y="175.50"></text></g><g><title>tcp_ack (19 samples, 0.04%)</title><rect x="99.5492%" y="181" width="0.0357%" height="15" fill="rgb(206,141,19)" fg:x="52996" fg:w="19"/><text x="99.7992%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (39 samples, 0.07%)</title><rect x="99.5154%" y="213" width="0.0733%" height="15" fill="rgb(211,200,13)" fg:x="52978" fg:w="39"/><text x="99.7654%" y="223.50"></text></g><g><title>tcp_rcv_established (39 samples, 0.07%)</title><rect x="99.5154%" y="197" width="0.0733%" height="15" fill="rgb(241,121,6)" fg:x="52978" fg:w="39"/><text x="99.7654%" y="207.50"></text></g><g><title>ip_local_deliver_finish (48 samples, 0.09%)</title><rect x="99.5003%" y="261" width="0.0902%" height="15" fill="rgb(234,221,29)" fg:x="52970" fg:w="48"/><text x="99.7503%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (48 samples, 0.09%)</title><rect x="99.5003%" y="245" width="0.0902%" height="15" fill="rgb(229,136,5)" fg:x="52970" fg:w="48"/><text x="99.7503%" y="255.50"></text></g><g><title>tcp_v4_rcv (46 samples, 0.09%)</title><rect x="99.5041%" y="229" width="0.0864%" height="15" fill="rgb(238,36,11)" fg:x="52972" fg:w="46"/><text x="99.7541%" y="239.50"></text></g><g><title>ip_rcv_finish (52 samples, 0.10%)</title><rect x="99.4985%" y="293" width="0.0977%" height="15" fill="rgb(251,55,41)" fg:x="52969" fg:w="52"/><text x="99.7485%" y="303.50"></text></g><g><title>ip_local_deliver (52 samples, 0.10%)</title><rect x="99.4985%" y="277" width="0.0977%" height="15" fill="rgb(242,34,40)" fg:x="52969" fg:w="52"/><text x="99.7485%" y="287.50"></text></g><g><title>ip_rcv (55 samples, 0.10%)</title><rect x="99.4985%" y="309" width="0.1033%" height="15" fill="rgb(215,42,17)" fg:x="52969" fg:w="55"/><text x="99.7485%" y="319.50"></text></g><g><title>__local_bh_enable_ip (58 samples, 0.11%)</title><rect x="99.4947%" y="437" width="0.1089%" height="15" fill="rgb(207,44,46)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="447.50"></text></g><g><title>do_softirq.part.20 (58 samples, 0.11%)</title><rect x="99.4947%" y="421" width="0.1089%" height="15" fill="rgb(211,206,28)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="431.50"></text></g><g><title>do_softirq_own_stack (58 samples, 0.11%)</title><rect x="99.4947%" y="405" width="0.1089%" height="15" fill="rgb(237,167,16)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="415.50"></text></g><g><title>__softirqentry_text_start (58 samples, 0.11%)</title><rect x="99.4947%" y="389" width="0.1089%" height="15" fill="rgb(233,66,6)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="399.50"></text></g><g><title>net_rx_action (58 samples, 0.11%)</title><rect x="99.4947%" y="373" width="0.1089%" height="15" fill="rgb(246,123,29)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="383.50"></text></g><g><title>process_backlog (58 samples, 0.11%)</title><rect x="99.4947%" y="357" width="0.1089%" height="15" fill="rgb(209,62,40)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="367.50"></text></g><g><title>__netif_receive_skb (58 samples, 0.11%)</title><rect x="99.4947%" y="341" width="0.1089%" height="15" fill="rgb(218,4,25)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="351.50"></text></g><g><title>__netif_receive_skb_one_core (58 samples, 0.11%)</title><rect x="99.4947%" y="325" width="0.1089%" height="15" fill="rgb(253,91,49)" fg:x="52967" fg:w="58"/><text x="99.7447%" y="335.50"></text></g><g><title>ip_finish_output (63 samples, 0.12%)</title><rect x="99.4928%" y="485" width="0.1183%" height="15" fill="rgb(228,155,29)" fg:x="52966" fg:w="63"/><text x="99.7428%" y="495.50"></text></g><g><title>__ip_finish_output (63 samples, 0.12%)</title><rect x="99.4928%" y="469" width="0.1183%" height="15" fill="rgb(243,57,37)" fg:x="52966" fg:w="63"/><text x="99.7428%" y="479.50"></text></g><g><title>ip_finish_output2 (63 samples, 0.12%)</title><rect x="99.4928%" y="453" width="0.1183%" height="15" fill="rgb(244,167,17)" fg:x="52966" fg:w="63"/><text x="99.7428%" y="463.50"></text></g><g><title>ip_output (66 samples, 0.12%)</title><rect x="99.4909%" y="501" width="0.1240%" height="15" fill="rgb(207,181,38)" fg:x="52965" fg:w="66"/><text x="99.7409%" y="511.50"></text></g><g><title>ip_local_out (74 samples, 0.14%)</title><rect x="99.4797%" y="517" width="0.1390%" height="15" fill="rgb(211,8,23)" fg:x="52959" fg:w="74"/><text x="99.7297%" y="527.50"></text></g><g><title>ip_queue_xmit (75 samples, 0.14%)</title><rect x="99.4797%" y="549" width="0.1409%" height="15" fill="rgb(235,11,44)" fg:x="52959" fg:w="75"/><text x="99.7297%" y="559.50"></text></g><g><title>__ip_queue_xmit (75 samples, 0.14%)</title><rect x="99.4797%" y="533" width="0.1409%" height="15" fill="rgb(248,18,52)" fg:x="52959" fg:w="75"/><text x="99.7297%" y="543.50"></text></g><g><title>tcp_cleanup_rbuf (86 samples, 0.16%)</title><rect x="99.4609%" y="613" width="0.1615%" height="15" fill="rgb(208,4,7)" fg:x="52949" fg:w="86"/><text x="99.7109%" y="623.50"></text></g><g><title>tcp_send_ack (84 samples, 0.16%)</title><rect x="99.4646%" y="597" width="0.1578%" height="15" fill="rgb(240,17,39)" fg:x="52951" fg:w="84"/><text x="99.7146%" y="607.50"></text></g><g><title>__tcp_send_ack.part.45 (84 samples, 0.16%)</title><rect x="99.4646%" y="581" width="0.1578%" height="15" fill="rgb(207,170,3)" fg:x="52951" fg:w="84"/><text x="99.7146%" y="591.50"></text></g><g><title>__tcp_transmit_skb (81 samples, 0.15%)</title><rect x="99.4703%" y="565" width="0.1522%" height="15" fill="rgb(236,100,52)" fg:x="52954" fg:w="81"/><text x="99.7203%" y="575.50"></text></g><g><title>inet_recvmsg (474 samples, 0.89%)</title><rect x="98.7339%" y="645" width="0.8904%" height="15" fill="rgb(246,78,51)" fg:x="52562" fg:w="474"/><text x="98.9839%" y="655.50"></text></g><g><title>tcp_recvmsg (473 samples, 0.89%)</title><rect x="98.7358%" y="629" width="0.8885%" height="15" fill="rgb(211,17,15)" fg:x="52563" fg:w="473"/><text x="98.9858%" y="639.50"></text></g><g><title>sock_recvmsg (475 samples, 0.89%)</title><rect x="98.7339%" y="661" width="0.8923%" height="15" fill="rgb(209,59,46)" fg:x="52562" fg:w="475"/><text x="98.9839%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (483 samples, 0.91%)</title><rect x="98.7227%" y="821" width="0.9073%" height="15" fill="rgb(210,92,25)" fg:x="52556" fg:w="483"/><text x="98.9727%" y="831.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (482 samples, 0.91%)</title><rect x="98.7245%" y="805" width="0.9054%" height="15" fill="rgb(238,174,52)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="815.50"></text></g><g><title>std::sys_common::net::TcpStream::read (482 samples, 0.91%)</title><rect x="98.7245%" y="789" width="0.9054%" height="15" fill="rgb(230,73,7)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::read (482 samples, 0.91%)</title><rect x="98.7245%" y="773" width="0.9054%" height="15" fill="rgb(243,124,40)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (482 samples, 0.91%)</title><rect x="98.7245%" y="757" width="0.9054%" height="15" fill="rgb(244,170,11)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="767.50"></text></g><g><title>__libc_recv (482 samples, 0.91%)</title><rect x="98.7245%" y="741" width="0.9054%" height="15" fill="rgb(207,114,54)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (482 samples, 0.91%)</title><rect x="98.7245%" y="725" width="0.9054%" height="15" fill="rgb(205,42,20)" fg:x="52557" fg:w="482"/><text x="98.9745%" y="735.50"></text></g><g><title>do_syscall_64 (481 samples, 0.90%)</title><rect x="98.7264%" y="709" width="0.9035%" height="15" fill="rgb(230,30,28)" fg:x="52558" fg:w="481"/><text x="98.9764%" y="719.50"></text></g><g><title>__x64_sys_recvfrom (479 samples, 0.90%)</title><rect x="98.7302%" y="693" width="0.8998%" height="15" fill="rgb(205,73,54)" fg:x="52560" fg:w="479"/><text x="98.9802%" y="703.50"></text></g><g><title>__sys_recvfrom (479 samples, 0.90%)</title><rect x="98.7302%" y="677" width="0.8998%" height="15" fill="rgb(254,227,23)" fg:x="52560" fg:w="479"/><text x="98.9802%" y="687.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::decode (509 samples, 0.96%)</title><rect x="98.6757%" y="885" width="0.9561%" height="15" fill="rgb(228,202,34)" fg:x="52531" fg:w="509"/><text x="98.9257%" y="895.50"></text></g><g><title>&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (509 samples, 0.96%)</title><rect x="98.6757%" y="869" width="0.9561%" height="15" fill="rgb(222,225,37)" fg:x="52531" fg:w="509"/><text x="98.9257%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (505 samples, 0.95%)</title><rect x="98.6832%" y="853" width="0.9486%" height="15" fill="rgb(221,14,54)" fg:x="52535" fg:w="505"/><text x="98.9332%" y="863.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (486 samples, 0.91%)</title><rect x="98.7189%" y="837" width="0.9129%" height="15" fill="rgb(254,102,2)" fg:x="52554" fg:w="486"/><text x="98.9689%" y="847.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (520 samples, 0.98%)</title><rect x="98.6588%" y="901" width="0.9768%" height="15" fill="rgb(232,104,17)" fg:x="52522" fg:w="520"/><text x="98.9088%" y="911.50"></text></g><g><title>tcp_send_ack (10 samples, 0.02%)</title><rect x="99.6732%" y="549" width="0.0188%" height="15" fill="rgb(250,220,14)" fg:x="53062" fg:w="10"/><text x="99.9232%" y="559.50"></text></g><g><title>__tcp_send_ack.part.45 (10 samples, 0.02%)</title><rect x="99.6732%" y="533" width="0.0188%" height="15" fill="rgb(241,158,9)" fg:x="53062" fg:w="10"/><text x="99.9232%" y="543.50"></text></g><g><title>__tcp_transmit_skb (9 samples, 0.02%)</title><rect x="99.6750%" y="517" width="0.0169%" height="15" fill="rgb(246,9,43)" fg:x="53063" fg:w="9"/><text x="99.9250%" y="527.50"></text></g><g><title>ip_queue_xmit (9 samples, 0.02%)</title><rect x="99.6750%" y="501" width="0.0169%" height="15" fill="rgb(206,73,33)" fg:x="53063" fg:w="9"/><text x="99.9250%" y="511.50"></text></g><g><title>__ip_queue_xmit (9 samples, 0.02%)</title><rect x="99.6750%" y="485" width="0.0169%" height="15" fill="rgb(222,79,8)" fg:x="53063" fg:w="9"/><text x="99.9250%" y="495.50"></text></g><g><title>ip_local_out (9 samples, 0.02%)</title><rect x="99.6750%" y="469" width="0.0169%" height="15" fill="rgb(234,8,54)" fg:x="53063" fg:w="9"/><text x="99.9250%" y="479.50"></text></g><g><title>ip_output (6 samples, 0.01%)</title><rect x="99.6807%" y="453" width="0.0113%" height="15" fill="rgb(209,134,38)" fg:x="53066" fg:w="6"/><text x="99.9307%" y="463.50"></text></g><g><title>ip_finish_output (6 samples, 0.01%)</title><rect x="99.6807%" y="437" width="0.0113%" height="15" fill="rgb(230,127,29)" fg:x="53066" fg:w="6"/><text x="99.9307%" y="447.50"></text></g><g><title>__ip_finish_output (6 samples, 0.01%)</title><rect x="99.6807%" y="421" width="0.0113%" height="15" fill="rgb(242,44,41)" fg:x="53066" fg:w="6"/><text x="99.9307%" y="431.50"></text></g><g><title>ip_finish_output2 (6 samples, 0.01%)</title><rect x="99.6807%" y="405" width="0.0113%" height="15" fill="rgb(222,56,43)" fg:x="53066" fg:w="6"/><text x="99.9307%" y="415.50"></text></g><g><title>__tcp_ack_snd_check (11 samples, 0.02%)</title><rect x="99.6732%" y="565" width="0.0207%" height="15" fill="rgb(238,39,47)" fg:x="53062" fg:w="11"/><text x="99.9232%" y="575.50"></text></g><g><title>release_sock (18 samples, 0.03%)</title><rect x="99.6656%" y="629" width="0.0338%" height="15" fill="rgb(226,79,43)" fg:x="53058" fg:w="18"/><text x="99.9156%" y="639.50"></text></g><g><title>__release_sock (18 samples, 0.03%)</title><rect x="99.6656%" y="613" width="0.0338%" height="15" fill="rgb(242,105,53)" fg:x="53058" fg:w="18"/><text x="99.9156%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (17 samples, 0.03%)</title><rect x="99.6675%" y="597" width="0.0319%" height="15" fill="rgb(251,132,46)" fg:x="53059" fg:w="17"/><text x="99.9175%" y="607.50"></text></g><g><title>tcp_rcv_established (16 samples, 0.03%)</title><rect x="99.6694%" y="581" width="0.0301%" height="15" fill="rgb(231,77,14)" fg:x="53060" fg:w="16"/><text x="99.9194%" y="591.50"></text></g><g><title>skb_copy_datagram_iter (26 samples, 0.05%)</title><rect x="99.6995%" y="629" width="0.0488%" height="15" fill="rgb(240,135,9)" fg:x="53076" fg:w="26"/><text x="99.9495%" y="639.50"></text></g><g><title>__skb_datagram_iter (25 samples, 0.05%)</title><rect x="99.7013%" y="613" width="0.0470%" height="15" fill="rgb(248,109,14)" fg:x="53077" fg:w="25"/><text x="99.9513%" y="623.50"></text></g><g><title>simple_copy_to_iter (23 samples, 0.04%)</title><rect x="99.7051%" y="597" width="0.0432%" height="15" fill="rgb(227,146,52)" fg:x="53079" fg:w="23"/><text x="99.9551%" y="607.50"></text></g><g><title>_copy_to_iter (23 samples, 0.04%)</title><rect x="99.7051%" y="581" width="0.0432%" height="15" fill="rgb(232,54,3)" fg:x="53079" fg:w="23"/><text x="99.9551%" y="591.50"></text></g><g><title>copy_user_enhanced_fast_string (23 samples, 0.04%)</title><rect x="99.7051%" y="565" width="0.0432%" height="15" fill="rgb(229,201,43)" fg:x="53079" fg:w="23"/><text x="99.9551%" y="575.50"></text></g><g><title>ip_local_deliver_finish (12 samples, 0.02%)</title><rect x="99.7633%" y="277" width="0.0225%" height="15" fill="rgb(252,161,33)" fg:x="53110" fg:w="12"/><text x="100.0133%" y="287.50"></text></g><g><title>ip_protocol_deliver_rcu (12 samples, 0.02%)</title><rect x="99.7633%" y="261" width="0.0225%" height="15" fill="rgb(226,146,40)" fg:x="53110" fg:w="12"/><text x="100.0133%" y="271.50"></text></g><g><title>tcp_v4_rcv (10 samples, 0.02%)</title><rect x="99.7671%" y="245" width="0.0188%" height="15" fill="rgb(219,47,25)" fg:x="53112" fg:w="10"/><text x="100.0171%" y="255.50"></text></g><g><title>__local_bh_enable_ip (13 samples, 0.02%)</title><rect x="99.7633%" y="453" width="0.0244%" height="15" fill="rgb(250,135,13)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="463.50"></text></g><g><title>do_softirq.part.20 (13 samples, 0.02%)</title><rect x="99.7633%" y="437" width="0.0244%" height="15" fill="rgb(219,229,18)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="447.50"></text></g><g><title>do_softirq_own_stack (13 samples, 0.02%)</title><rect x="99.7633%" y="421" width="0.0244%" height="15" fill="rgb(217,152,27)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="431.50"></text></g><g><title>__softirqentry_text_start (13 samples, 0.02%)</title><rect x="99.7633%" y="405" width="0.0244%" height="15" fill="rgb(225,71,47)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="415.50"></text></g><g><title>net_rx_action (13 samples, 0.02%)</title><rect x="99.7633%" y="389" width="0.0244%" height="15" fill="rgb(220,139,14)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="399.50"></text></g><g><title>process_backlog (13 samples, 0.02%)</title><rect x="99.7633%" y="373" width="0.0244%" height="15" fill="rgb(247,54,32)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="383.50"></text></g><g><title>__netif_receive_skb (13 samples, 0.02%)</title><rect x="99.7633%" y="357" width="0.0244%" height="15" fill="rgb(252,131,39)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="367.50"></text></g><g><title>__netif_receive_skb_one_core (13 samples, 0.02%)</title><rect x="99.7633%" y="341" width="0.0244%" height="15" fill="rgb(210,108,39)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="351.50"></text></g><g><title>ip_rcv (13 samples, 0.02%)</title><rect x="99.7633%" y="325" width="0.0244%" height="15" fill="rgb(205,23,29)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="335.50"></text></g><g><title>ip_rcv_finish (13 samples, 0.02%)</title><rect x="99.7633%" y="309" width="0.0244%" height="15" fill="rgb(246,139,46)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="319.50"></text></g><g><title>ip_local_deliver (13 samples, 0.02%)</title><rect x="99.7633%" y="293" width="0.0244%" height="15" fill="rgb(250,81,26)" fg:x="53110" fg:w="13"/><text x="100.0133%" y="303.50"></text></g><g><title>ip_finish_output (19 samples, 0.04%)</title><rect x="99.7614%" y="501" width="0.0357%" height="15" fill="rgb(214,104,7)" fg:x="53109" fg:w="19"/><text x="100.0114%" y="511.50"></text></g><g><title>__ip_finish_output (19 samples, 0.04%)</title><rect x="99.7614%" y="485" width="0.0357%" height="15" fill="rgb(233,189,8)" fg:x="53109" fg:w="19"/><text x="100.0114%" y="495.50"></text></g><g><title>ip_finish_output2 (18 samples, 0.03%)</title><rect x="99.7633%" y="469" width="0.0338%" height="15" fill="rgb(228,141,17)" fg:x="53110" fg:w="18"/><text x="100.0133%" y="479.50"></text></g><g><title>ip_local_out (24 samples, 0.05%)</title><rect x="99.7539%" y="533" width="0.0451%" height="15" fill="rgb(247,157,1)" fg:x="53105" fg:w="24"/><text x="100.0039%" y="543.50"></text></g><g><title>ip_output (20 samples, 0.04%)</title><rect x="99.7614%" y="517" width="0.0376%" height="15" fill="rgb(249,225,5)" fg:x="53109" fg:w="20"/><text x="100.0114%" y="527.50"></text></g><g><title>tcp_cleanup_rbuf (28 samples, 0.05%)</title><rect x="99.7483%" y="629" width="0.0526%" height="15" fill="rgb(242,55,13)" fg:x="53102" fg:w="28"/><text x="99.9983%" y="639.50"></text></g><g><title>tcp_send_ack (28 samples, 0.05%)</title><rect x="99.7483%" y="613" width="0.0526%" height="15" fill="rgb(230,49,50)" fg:x="53102" fg:w="28"/><text x="99.9983%" y="623.50"></text></g><g><title>__tcp_send_ack.part.45 (28 samples, 0.05%)</title><rect x="99.7483%" y="597" width="0.0526%" height="15" fill="rgb(241,111,38)" fg:x="53102" fg:w="28"/><text x="99.9983%" y="607.50"></text></g><g><title>__tcp_transmit_skb (27 samples, 0.05%)</title><rect x="99.7502%" y="581" width="0.0507%" height="15" fill="rgb(252,155,4)" fg:x="53103" fg:w="27"/><text x="100.0002%" y="591.50"></text></g><g><title>ip_queue_xmit (26 samples, 0.05%)</title><rect x="99.7520%" y="565" width="0.0488%" height="15" fill="rgb(212,69,32)" fg:x="53104" fg:w="26"/><text x="100.0020%" y="575.50"></text></g><g><title>__ip_queue_xmit (26 samples, 0.05%)</title><rect x="99.7520%" y="549" width="0.0488%" height="15" fill="rgb(243,107,47)" fg:x="53104" fg:w="26"/><text x="100.0020%" y="559.50"></text></g><g><title>inet_recvmsg (82 samples, 0.15%)</title><rect x="99.6525%" y="661" width="0.1540%" height="15" fill="rgb(247,130,12)" fg:x="53051" fg:w="82"/><text x="99.9025%" y="671.50"></text></g><g><title>tcp_recvmsg (82 samples, 0.15%)</title><rect x="99.6525%" y="645" width="0.1540%" height="15" fill="rgb(233,74,16)" fg:x="53051" fg:w="82"/><text x="99.9025%" y="655.50"></text></g><g><title>sock_recvmsg (84 samples, 0.16%)</title><rect x="99.6525%" y="677" width="0.1578%" height="15" fill="rgb(208,58,18)" fg:x="53051" fg:w="84"/><text x="99.9025%" y="687.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (93 samples, 0.17%)</title><rect x="99.6412%" y="869" width="0.1747%" height="15" fill="rgb(242,225,1)" fg:x="53045" fg:w="93"/><text x="99.8912%" y="879.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (91 samples, 0.17%)</title><rect x="99.6450%" y="853" width="0.1709%" height="15" fill="rgb(249,39,40)" fg:x="53047" fg:w="91"/><text x="99.8950%" y="863.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (91 samples, 0.17%)</title><rect x="99.6450%" y="837" width="0.1709%" height="15" fill="rgb(207,72,44)" fg:x="53047" fg:w="91"/><text x="99.8950%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (90 samples, 0.17%)</title><rect x="99.6469%" y="821" width="0.1691%" height="15" fill="rgb(215,193,12)" fg:x="53048" fg:w="90"/><text x="99.8969%" y="831.50"></text></g><g><title>std::sys_common::net::TcpStream::read (90 samples, 0.17%)</title><rect x="99.6469%" y="805" width="0.1691%" height="15" fill="rgb(248,41,39)" fg:x="53048" fg:w="90"/><text x="99.8969%" y="815.50"></text></g><g><title>std::sys::unix::net::Socket::read (90 samples, 0.17%)</title><rect x="99.6469%" y="789" width="0.1691%" height="15" fill="rgb(253,85,4)" fg:x="53048" fg:w="90"/><text x="99.8969%" y="799.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (90 samples, 0.17%)</title><rect x="99.6469%" y="773" width="0.1691%" height="15" fill="rgb(243,70,31)" fg:x="53048" fg:w="90"/><text x="99.8969%" y="783.50"></text></g><g><title>__libc_recv (90 samples, 0.17%)</title><rect x="99.6469%" y="757" width="0.1691%" height="15" fill="rgb(253,195,26)" fg:x="53048" fg:w="90"/><text x="99.8969%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (89 samples, 0.17%)</title><rect x="99.6487%" y="741" width="0.1672%" height="15" fill="rgb(243,42,11)" fg:x="53049" fg:w="89"/><text x="99.8987%" y="751.50"></text></g><g><title>do_syscall_64 (89 samples, 0.17%)</title><rect x="99.6487%" y="725" width="0.1672%" height="15" fill="rgb(239,66,17)" fg:x="53049" fg:w="89"/><text x="99.8987%" y="735.50"></text></g><g><title>__x64_sys_recvfrom (87 samples, 0.16%)</title><rect x="99.6525%" y="709" width="0.1634%" height="15" fill="rgb(217,132,21)" fg:x="53051" fg:w="87"/><text x="99.9025%" y="719.50"></text></g><g><title>__sys_recvfrom (87 samples, 0.16%)</title><rect x="99.6525%" y="693" width="0.1634%" height="15" fill="rgb(252,202,21)" fg:x="53051" fg:w="87"/><text x="99.9025%" y="703.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (106 samples, 0.20%)</title><rect x="99.6356%" y="901" width="0.1991%" height="15" fill="rgb(233,98,36)" fg:x="53042" fg:w="106"/><text x="99.8856%" y="911.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (104 samples, 0.20%)</title><rect x="99.6393%" y="885" width="0.1954%" height="15" fill="rgb(216,153,54)" fg:x="53044" fg:w="104"/><text x="99.8893%" y="895.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (8 samples, 0.02%)</title><rect x="99.8197%" y="869" width="0.0150%" height="15" fill="rgb(250,99,7)" fg:x="53140" fg:w="8"/><text x="100.0697%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (9 samples, 0.02%)</title><rect x="99.8385%" y="885" width="0.0169%" height="15" fill="rgb(207,56,50)" fg:x="53150" fg:w="9"/><text x="100.0885%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (7 samples, 0.01%)</title><rect x="99.8422%" y="869" width="0.0131%" height="15" fill="rgb(244,61,34)" fg:x="53152" fg:w="7"/><text x="100.0922%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (13 samples, 0.02%)</title><rect x="99.8347%" y="901" width="0.0244%" height="15" fill="rgb(241,50,38)" fg:x="53148" fg:w="13"/><text x="100.0847%" y="911.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (16 samples, 0.03%)</title><rect x="99.8629%" y="853" width="0.0301%" height="15" fill="rgb(212,166,30)" fg:x="53163" fg:w="16"/><text x="100.1129%" y="863.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (22 samples, 0.04%)</title><rect x="99.8591%" y="885" width="0.0413%" height="15" fill="rgb(249,127,32)" fg:x="53161" fg:w="22"/><text x="100.1091%" y="895.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (21 samples, 0.04%)</title><rect x="99.8610%" y="869" width="0.0394%" height="15" fill="rgb(209,103,0)" fg:x="53162" fg:w="21"/><text x="100.1110%" y="879.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (23 samples, 0.04%)</title><rect x="99.8591%" y="901" width="0.0432%" height="15" fill="rgb(238,209,51)" fg:x="53161" fg:w="23"/><text x="100.1091%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (907 samples, 1.70%)</title><rect x="98.2080%" y="965" width="1.7037%" height="15" fill="rgb(237,56,23)" fg:x="52282" fg:w="907"/><text x="98.4580%" y="975.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (907 samples, 1.70%)</title><rect x="98.2080%" y="949" width="1.7037%" height="15" fill="rgb(215,153,46)" fg:x="52282" fg:w="907"/><text x="98.4580%" y="959.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (904 samples, 1.70%)</title><rect x="98.2136%" y="933" width="1.6981%" height="15" fill="rgb(224,49,31)" fg:x="52285" fg:w="904"/><text x="98.4636%" y="943.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (898 samples, 1.69%)</title><rect x="98.2249%" y="917" width="1.6868%" height="15" fill="rgb(250,18,42)" fg:x="52291" fg:w="898"/><text x="98.4749%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;hyper::body::body::Body&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="99.9117%" y="965" width="0.0263%" height="15" fill="rgb(215,176,39)" fg:x="53189" fg:w="14"/><text x="100.1617%" y="975.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="99.9117%" y="949" width="0.0263%" height="15" fill="rgb(223,77,29)" fg:x="53189" fg:w="14"/><text x="100.1617%" y="959.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (9 samples, 0.02%)</title><rect x="99.9211%" y="933" width="0.0169%" height="15" fill="rgb(234,94,52)" fg:x="53194" fg:w="9"/><text x="100.1711%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (927 samples, 1.74%)</title><rect x="98.2042%" y="981" width="1.7413%" height="15" fill="rgb(220,154,50)" fg:x="52280" fg:w="927"/><text x="98.4542%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (935 samples, 1.76%)</title><rect x="98.1986%" y="1013" width="1.7563%" height="15" fill="rgb(212,11,10)" fg:x="52277" fg:w="935"/><text x="98.4486%" y="1023.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (933 samples, 1.75%)</title><rect x="98.2023%" y="997" width="1.7526%" height="15" fill="rgb(205,166,19)" fg:x="52279" fg:w="933"/><text x="98.4523%" y="1007.50"></text></g><g><title>futex_wait (6 samples, 0.01%)</title><rect x="99.9606%" y="901" width="0.0113%" height="15" fill="rgb(244,198,16)" fg:x="53215" fg:w="6"/><text x="100.2106%" y="911.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.01%)</title><rect x="99.9606%" y="885" width="0.0113%" height="15" fill="rgb(219,69,12)" fg:x="53215" fg:w="6"/><text x="100.2106%" y="895.50"></text></g><g><title>schedule (6 samples, 0.01%)</title><rect x="99.9606%" y="869" width="0.0113%" height="15" fill="rgb(245,30,7)" fg:x="53215" fg:w="6"/><text x="100.2106%" y="879.50"></text></g><g><title>__sched_text_start (6 samples, 0.01%)</title><rect x="99.9606%" y="853" width="0.0113%" height="15" fill="rgb(218,221,48)" fg:x="53215" fg:w="6"/><text x="100.2106%" y="863.50"></text></g><g><title>finish_task_switch (6 samples, 0.01%)</title><rect x="99.9606%" y="837" width="0.0113%" height="15" fill="rgb(216,66,15)" fg:x="53215" fg:w="6"/><text x="100.2106%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (9 samples, 0.02%)</title><rect x="99.9568%" y="1013" width="0.0169%" height="15" fill="rgb(226,122,50)" fg:x="53213" fg:w="9"/><text x="100.2068%" y="1023.50"></text></g><g><title>cfree (8 samples, 0.02%)</title><rect x="99.9587%" y="997" width="0.0150%" height="15" fill="rgb(239,156,16)" fg:x="53214" fg:w="8"/><text x="100.2087%" y="1007.50"></text></g><g><title>pthread_setcanceltype (8 samples, 0.02%)</title><rect x="99.9587%" y="981" width="0.0150%" height="15" fill="rgb(224,27,38)" fg:x="53214" fg:w="8"/><text x="100.2087%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="99.9606%" y="965" width="0.0131%" height="15" fill="rgb(224,39,27)" fg:x="53215" fg:w="7"/><text x="100.2106%" y="975.50"></text></g><g><title>do_syscall_64 (7 samples, 0.01%)</title><rect x="99.9606%" y="949" width="0.0131%" height="15" fill="rgb(215,92,29)" fg:x="53215" fg:w="7"/><text x="100.2106%" y="959.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="99.9606%" y="933" width="0.0131%" height="15" fill="rgb(207,159,16)" fg:x="53215" fg:w="7"/><text x="100.2106%" y="943.50"></text></g><g><title>do_futex (7 samples, 0.01%)</title><rect x="99.9606%" y="917" width="0.0131%" height="15" fill="rgb(238,163,47)" fg:x="53215" fg:w="7"/><text x="100.2106%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (950 samples, 1.78%)</title><rect x="98.1948%" y="1029" width="1.7845%" height="15" fill="rgb(219,91,49)" fg:x="52275" fg:w="950"/><text x="98.4448%" y="1039.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,104 samples, 2.07%)</title><rect x="97.9074%" y="1045" width="2.0738%" height="15" fill="rgb(227,167,31)" fg:x="52122" fg:w="1104"/><text x="98.1574%" y="1055.50">t..</text></g><g><title>all (53,236 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(234,80,54)" fg:x="0" fg:w="53236"/><text x="0.2500%" y="1295.50"></text></g><g><title>tokio-runtime-w (1,638 samples, 3.08%)</title><rect x="96.9231%" y="1269" width="3.0769%" height="15" fill="rgb(212,114,2)" fg:x="51598" fg:w="1638"/><text x="97.1731%" y="1279.50">tok..</text></g><g><title>clone (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1253" width="3.0224%" height="15" fill="rgb(234,50,24)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1263.50">clo..</text></g><g><title>start_thread (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1237" width="3.0224%" height="15" fill="rgb(221,68,8)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1247.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1221" width="3.0224%" height="15" fill="rgb(254,180,31)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1231.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1205" width="3.0224%" height="15" fill="rgb(247,130,50)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1215.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1189" width="3.0224%" height="15" fill="rgb(211,109,4)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1199.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1173" width="3.0224%" height="15" fill="rgb(238,50,21)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1183.50">cor..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1157" width="3.0224%" height="15" fill="rgb(225,57,45)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1167.50">std..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1141" width="3.0224%" height="15" fill="rgb(209,196,50)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1151.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1125" width="3.0224%" height="15" fill="rgb(242,140,13)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1135.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1109" width="3.0224%" height="15" fill="rgb(217,111,7)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1119.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1093" width="3.0224%" height="15" fill="rgb(253,193,51)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1103.50">tok..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1077" width="3.0224%" height="15" fill="rgb(252,70,29)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1087.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,609 samples, 3.02%)</title><rect x="96.9776%" y="1061" width="3.0224%" height="15" fill="rgb(232,127,12)" fg:x="51627" fg:w="1609"/><text x="97.2276%" y="1071.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (10 samples, 0.02%)</title><rect x="99.9812%" y="1045" width="0.0188%" height="15" fill="rgb(211,180,21)" fg:x="53226" fg:w="10"/><text x="100.2312%" y="1055.50"></text></g></svg></svg>