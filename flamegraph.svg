<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="90"><g><title>[ld-2.27.so] (1 samples, 1.11%)</title><rect x="0.0000%" y="901" width="1.1111%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[ld-2.27.so] (1 samples, 1.11%)</title><rect x="0.0000%" y="885" width="1.1111%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>__get_cpu_features (1 samples, 1.11%)</title><rect x="0.0000%" y="869" width="1.1111%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[ld-2.27.so] (1 samples, 1.11%)</title><rect x="0.0000%" y="853" width="1.1111%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>_dl_rtld_di_serinfo (1 samples, 1.11%)</title><rect x="0.0000%" y="837" width="1.1111%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>&lt;ord::arguments::Arguments as clap_builder::derive::Args&gt;::augment_args (1 samples, 1.11%)</title><rect x="1.1111%" y="885" width="1.1111%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.3611%" y="895.50"></text></g><g><title>&lt;ord::subcommand::Subcommand as clap_builder::derive::Subcommand&gt;::augment_subcommands (1 samples, 1.11%)</title><rect x="1.1111%" y="869" width="1.1111%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.3611%" y="879.50"></text></g><g><title>&lt;ord::subcommand::preview::Preview as clap_builder::derive::Args&gt;::augment_args (1 samples, 1.11%)</title><rect x="1.1111%" y="853" width="1.1111%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="1.3611%" y="863.50"></text></g><g><title>&lt;ord::subcommand::server::Server as clap_builder::derive::Args&gt;::augment_args (1 samples, 1.11%)</title><rect x="1.1111%" y="837" width="1.1111%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="1.3611%" y="847.50"></text></g><g><title>clap_builder::builder::arg::Arg::default_value (1 samples, 1.11%)</title><rect x="1.1111%" y="821" width="1.1111%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="1.3611%" y="831.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="1.1111%" y="805" width="1.1111%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="1.3611%" y="815.50"></text></g><g><title>[unknown] (2 samples, 2.22%)</title><rect x="1.1111%" y="901" width="2.2222%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="2"/><text x="1.3611%" y="911.50">[..</text></g><g><title>ord::subcommand::Subcommand::run (1 samples, 1.11%)</title><rect x="2.2222%" y="885" width="1.1111%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="2.4722%" y="895.50"></text></g><g><title>ord::subcommand::server::Server::run (1 samples, 1.11%)</title><rect x="2.2222%" y="869" width="1.1111%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="2.4722%" y="879.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1 samples, 1.11%)</title><rect x="2.2222%" y="853" width="1.1111%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="2.4722%" y="863.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 1.11%)</title><rect x="2.2222%" y="837" width="1.1111%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="2.4722%" y="847.50"></text></g><g><title>ord::subcommand::server::Server::run::_{{closure}} (1 samples, 1.11%)</title><rect x="2.2222%" y="821" width="1.1111%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="2.4722%" y="831.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,B,_&gt;::route (1 samples, 1.11%)</title><rect x="2.2222%" y="805" width="1.1111%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="2.4722%" y="815.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,B,_&gt;::set_node (1 samples, 1.11%)</title><rect x="2.2222%" y="789" width="1.1111%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="2.4722%" y="799.50"></text></g><g><title>cfree (1 samples, 1.11%)</title><rect x="2.2222%" y="773" width="1.1111%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="2.4722%" y="783.50"></text></g><g><title>_IO_str_seekoff (1 samples, 1.11%)</title><rect x="2.2222%" y="757" width="1.1111%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="2.4722%" y="767.50"></text></g><g><title>log::__private_api::log (1 samples, 1.11%)</title><rect x="3.3333%" y="613" width="1.1111%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="3.5833%" y="623.50"></text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (1 samples, 1.11%)</title><rect x="3.3333%" y="597" width="1.1111%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="3.5833%" y="607.50"></text></g><g><title>&lt;log4rs::append::console::ConsoleAppender as log4rs::append::Append&gt;::append (1 samples, 1.11%)</title><rect x="3.3333%" y="581" width="1.1111%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="3.5833%" y="591.50"></text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (1 samples, 1.11%)</title><rect x="3.3333%" y="565" width="1.1111%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="3.5833%" y="575.50"></text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (1 samples, 1.11%)</title><rect x="3.3333%" y="549" width="1.1111%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="3.5833%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 1.11%)</title><rect x="3.3333%" y="533" width="1.1111%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="3.5833%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 1.11%)</title><rect x="3.3333%" y="517" width="1.1111%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="3.5833%" y="527.50"></text></g><g><title>core::fmt::run (1 samples, 1.11%)</title><rect x="3.3333%" y="501" width="1.1111%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="3.5833%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 1.11%)</title><rect x="3.3333%" y="485" width="1.1111%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="3.5833%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 1.11%)</title><rect x="3.3333%" y="469" width="1.1111%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="3.5833%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (1 samples, 1.11%)</title><rect x="3.3333%" y="453" width="1.1111%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="3.5833%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 1.11%)</title><rect x="3.3333%" y="437" width="1.1111%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="1"/><text x="3.5833%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 1.11%)</title><rect x="3.3333%" y="421" width="1.1111%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="1"/><text x="3.5833%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (1 samples, 1.11%)</title><rect x="3.3333%" y="405" width="1.1111%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="1"/><text x="3.5833%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 1.11%)</title><rect x="3.3333%" y="389" width="1.1111%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="1"/><text x="3.5833%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 1.11%)</title><rect x="3.3333%" y="373" width="1.1111%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="1"/><text x="3.5833%" y="383.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 1.11%)</title><rect x="3.3333%" y="357" width="1.1111%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="1"/><text x="3.5833%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 1.11%)</title><rect x="3.3333%" y="341" width="1.1111%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="1"/><text x="3.5833%" y="351.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 1.11%)</title><rect x="3.3333%" y="325" width="1.1111%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="1"/><text x="3.5833%" y="335.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 1.11%)</title><rect x="3.3333%" y="309" width="1.1111%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="1"/><text x="3.5833%" y="319.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 1.11%)</title><rect x="3.3333%" y="293" width="1.1111%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="1"/><text x="3.5833%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 1.11%)</title><rect x="3.3333%" y="277" width="1.1111%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="1"/><text x="3.5833%" y="287.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 1.11%)</title><rect x="3.3333%" y="261" width="1.1111%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="1"/><text x="3.5833%" y="271.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 1.11%)</title><rect x="3.3333%" y="245" width="1.1111%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="1"/><text x="3.5833%" y="255.50"></text></g><g><title>__libc_write (1 samples, 1.11%)</title><rect x="3.3333%" y="229" width="1.1111%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="1"/><text x="3.5833%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 1.11%)</title><rect x="3.3333%" y="213" width="1.1111%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="1"/><text x="3.5833%" y="223.50"></text></g><g><title>do_syscall_64 (1 samples, 1.11%)</title><rect x="3.3333%" y="197" width="1.1111%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="1"/><text x="3.5833%" y="207.50"></text></g><g><title>__x64_sys_write (1 samples, 1.11%)</title><rect x="3.3333%" y="181" width="1.1111%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="1"/><text x="3.5833%" y="191.50"></text></g><g><title>ksys_write (1 samples, 1.11%)</title><rect x="3.3333%" y="165" width="1.1111%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="1"/><text x="3.5833%" y="175.50"></text></g><g><title>vfs_write (1 samples, 1.11%)</title><rect x="3.3333%" y="149" width="1.1111%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="1"/><text x="3.5833%" y="159.50"></text></g><g><title>__vfs_write (1 samples, 1.11%)</title><rect x="3.3333%" y="133" width="1.1111%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="1"/><text x="3.5833%" y="143.50"></text></g><g><title>tty_write (1 samples, 1.11%)</title><rect x="3.3333%" y="117" width="1.1111%" height="15" fill="rgb(247,123,22)" fg:x="3" fg:w="1"/><text x="3.5833%" y="127.50"></text></g><g><title>n_tty_write (1 samples, 1.11%)</title><rect x="3.3333%" y="101" width="1.1111%" height="15" fill="rgb(231,138,38)" fg:x="3" fg:w="1"/><text x="3.5833%" y="111.50"></text></g><g><title>pty_write (1 samples, 1.11%)</title><rect x="3.3333%" y="85" width="1.1111%" height="15" fill="rgb(231,145,46)" fg:x="3" fg:w="1"/><text x="3.5833%" y="95.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (1 samples, 1.11%)</title><rect x="3.3333%" y="69" width="1.1111%" height="15" fill="rgb(251,118,11)" fg:x="3" fg:w="1"/><text x="3.5833%" y="79.50"></text></g><g><title>queue_work_on (1 samples, 1.11%)</title><rect x="3.3333%" y="53" width="1.1111%" height="15" fill="rgb(217,147,25)" fg:x="3" fg:w="1"/><text x="3.5833%" y="63.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::flush_write_buffer (1 samples, 1.11%)</title><rect x="4.4444%" y="565" width="1.1111%" height="15" fill="rgb(247,81,37)" fg:x="4" fg:w="1"/><text x="4.6944%" y="575.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (1 samples, 1.11%)</title><rect x="4.4444%" y="549" width="1.1111%" height="15" fill="rgb(209,12,38)" fg:x="4" fg:w="1"/><text x="4.6944%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (1 samples, 1.11%)</title><rect x="4.4444%" y="533" width="1.1111%" height="15" fill="rgb(227,1,9)" fg:x="4" fg:w="1"/><text x="4.6944%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (1 samples, 1.11%)</title><rect x="4.4444%" y="517" width="1.1111%" height="15" fill="rgb(248,47,43)" fg:x="4" fg:w="1"/><text x="4.6944%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (1 samples, 1.11%)</title><rect x="4.4444%" y="501" width="1.1111%" height="15" fill="rgb(221,10,30)" fg:x="4" fg:w="1"/><text x="4.6944%" y="511.50"></text></g><g><title>__libc_pwrite64 (1 samples, 1.11%)</title><rect x="4.4444%" y="485" width="1.1111%" height="15" fill="rgb(210,229,1)" fg:x="4" fg:w="1"/><text x="4.6944%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 1.11%)</title><rect x="4.4444%" y="469" width="1.1111%" height="15" fill="rgb(222,148,37)" fg:x="4" fg:w="1"/><text x="4.6944%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 1.11%)</title><rect x="4.4444%" y="453" width="1.1111%" height="15" fill="rgb(234,67,33)" fg:x="4" fg:w="1"/><text x="4.6944%" y="463.50"></text></g><g><title>__x64_sys_pwrite64 (1 samples, 1.11%)</title><rect x="4.4444%" y="437" width="1.1111%" height="15" fill="rgb(247,98,35)" fg:x="4" fg:w="1"/><text x="4.6944%" y="447.50"></text></g><g><title>ksys_pwrite64 (1 samples, 1.11%)</title><rect x="4.4444%" y="421" width="1.1111%" height="15" fill="rgb(247,138,52)" fg:x="4" fg:w="1"/><text x="4.6944%" y="431.50"></text></g><g><title>vfs_write (1 samples, 1.11%)</title><rect x="4.4444%" y="405" width="1.1111%" height="15" fill="rgb(213,79,30)" fg:x="4" fg:w="1"/><text x="4.6944%" y="415.50"></text></g><g><title>__vfs_write (1 samples, 1.11%)</title><rect x="4.4444%" y="389" width="1.1111%" height="15" fill="rgb(246,177,23)" fg:x="4" fg:w="1"/><text x="4.6944%" y="399.50"></text></g><g><title>new_sync_write (1 samples, 1.11%)</title><rect x="4.4444%" y="373" width="1.1111%" height="15" fill="rgb(230,62,27)" fg:x="4" fg:w="1"/><text x="4.6944%" y="383.50"></text></g><g><title>ext4_file_write_iter (1 samples, 1.11%)</title><rect x="4.4444%" y="357" width="1.1111%" height="15" fill="rgb(216,154,8)" fg:x="4" fg:w="1"/><text x="4.6944%" y="367.50"></text></g><g><title>__generic_file_write_iter (1 samples, 1.11%)</title><rect x="4.4444%" y="341" width="1.1111%" height="15" fill="rgb(244,35,45)" fg:x="4" fg:w="1"/><text x="4.6944%" y="351.50"></text></g><g><title>generic_perform_write (1 samples, 1.11%)</title><rect x="4.4444%" y="325" width="1.1111%" height="15" fill="rgb(251,115,12)" fg:x="4" fg:w="1"/><text x="4.6944%" y="335.50"></text></g><g><title>iov_iter_copy_from_user_atomic (1 samples, 1.11%)</title><rect x="4.4444%" y="309" width="1.1111%" height="15" fill="rgb(240,54,50)" fg:x="4" fg:w="1"/><text x="4.6944%" y="319.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 1.11%)</title><rect x="4.4444%" y="293" width="1.1111%" height="15" fill="rgb(233,84,52)" fg:x="4" fg:w="1"/><text x="4.6944%" y="303.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::new (1 samples, 1.11%)</title><rect x="5.5556%" y="533" width="1.1111%" height="15" fill="rgb(207,117,47)" fg:x="5" fg:w="1"/><text x="5.8056%" y="543.50"></text></g><g><title>__libc_calloc (1 samples, 1.11%)</title><rect x="5.5556%" y="517" width="1.1111%" height="15" fill="rgb(249,43,39)" fg:x="5" fg:w="1"/><text x="5.8056%" y="527.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="5.5556%" y="501" width="1.1111%" height="15" fill="rgb(209,38,44)" fg:x="5" fg:w="1"/><text x="5.8056%" y="511.50"></text></g><g><title>async_page_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="485" width="1.1111%" height="15" fill="rgb(236,212,23)" fg:x="5" fg:w="1"/><text x="5.8056%" y="495.50"></text></g><g><title>do_async_page_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="469" width="1.1111%" height="15" fill="rgb(242,79,21)" fg:x="5" fg:w="1"/><text x="5.8056%" y="479.50"></text></g><g><title>do_page_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="453" width="1.1111%" height="15" fill="rgb(211,96,35)" fg:x="5" fg:w="1"/><text x="5.8056%" y="463.50"></text></g><g><title>__do_page_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="437" width="1.1111%" height="15" fill="rgb(253,215,40)" fg:x="5" fg:w="1"/><text x="5.8056%" y="447.50"></text></g><g><title>handle_mm_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="421" width="1.1111%" height="15" fill="rgb(211,81,21)" fg:x="5" fg:w="1"/><text x="5.8056%" y="431.50"></text></g><g><title>__handle_mm_fault (1 samples, 1.11%)</title><rect x="5.5556%" y="405" width="1.1111%" height="15" fill="rgb(208,190,38)" fg:x="5" fg:w="1"/><text x="5.8056%" y="415.50"></text></g><g><title>lru_cache_add_active_or_unevictable (1 samples, 1.11%)</title><rect x="5.5556%" y="389" width="1.1111%" height="15" fill="rgb(235,213,38)" fg:x="5" fg:w="1"/><text x="5.8056%" y="399.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="6.6667%" y="517" width="1.1111%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="1"/><text x="6.9167%" y="527.50"></text></g><g><title>async_page_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="501" width="1.1111%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="1"/><text x="6.9167%" y="511.50"></text></g><g><title>do_async_page_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="485" width="1.1111%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="1"/><text x="6.9167%" y="495.50"></text></g><g><title>do_page_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="469" width="1.1111%" height="15" fill="rgb(210,16,53)" fg:x="6" fg:w="1"/><text x="6.9167%" y="479.50"></text></g><g><title>__do_page_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="453" width="1.1111%" height="15" fill="rgb(235,124,12)" fg:x="6" fg:w="1"/><text x="6.9167%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="437" width="1.1111%" height="15" fill="rgb(224,169,11)" fg:x="6" fg:w="1"/><text x="6.9167%" y="447.50"></text></g><g><title>__handle_mm_fault (1 samples, 1.11%)</title><rect x="6.6667%" y="421" width="1.1111%" height="15" fill="rgb(250,166,2)" fg:x="6" fg:w="1"/><text x="6.9167%" y="431.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 1.11%)</title><rect x="6.6667%" y="405" width="1.1111%" height="15" fill="rgb(242,216,29)" fg:x="6" fg:w="1"/><text x="6.9167%" y="415.50"></text></g><g><title>redb::tree_store::page_store::layout::DatabaseLayout::calculate (3 samples, 3.33%)</title><rect x="5.5556%" y="565" width="3.3333%" height="15" fill="rgb(230,116,27)" fg:x="5" fg:w="3"/><text x="5.8056%" y="575.50">red..</text></g><g><title>redb::tree_store::page_store::region::RegionHeader::header_pages_expensive (3 samples, 3.33%)</title><rect x="5.5556%" y="549" width="3.3333%" height="15" fill="rgb(228,99,48)" fg:x="5" fg:w="3"/><text x="5.8056%" y="559.50">red..</text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::to_vec (2 samples, 2.22%)</title><rect x="6.6667%" y="533" width="2.2222%" height="15" fill="rgb(253,11,6)" fg:x="6" fg:w="2"/><text x="6.9167%" y="543.50">r..</text></g><g><title>redb::tree_store::page_store::bitmap::U64GroupedBitmap::to_vec (1 samples, 1.11%)</title><rect x="7.7778%" y="517" width="1.1111%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="1"/><text x="8.0278%" y="527.50"></text></g><g><title>redb::tree_store::page_store::region::Allocators::flush_to (1 samples, 1.11%)</title><rect x="8.8889%" y="565" width="1.1111%" height="15" fill="rgb(236,97,10)" fg:x="8" fg:w="1"/><text x="9.1389%" y="575.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::to_vec (1 samples, 1.11%)</title><rect x="8.8889%" y="549" width="1.1111%" height="15" fill="rgb(233,208,19)" fg:x="8" fg:w="1"/><text x="9.1389%" y="559.50"></text></g><g><title>redb::tree_store::page_store::bitmap::U64GroupedBitmap::to_vec (1 samples, 1.11%)</title><rect x="8.8889%" y="533" width="1.1111%" height="15" fill="rgb(216,164,2)" fg:x="8" fg:w="1"/><text x="9.1389%" y="543.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="8.8889%" y="517" width="1.1111%" height="15" fill="rgb(220,129,5)" fg:x="8" fg:w="1"/><text x="9.1389%" y="527.50"></text></g><g><title>_start (7 samples, 7.78%)</title><rect x="3.3333%" y="901" width="7.7778%" height="15" fill="rgb(242,17,10)" fg:x="3" fg:w="7"/><text x="3.5833%" y="911.50">_start</text></g><g><title>__libc_start_main (7 samples, 7.78%)</title><rect x="3.3333%" y="885" width="7.7778%" height="15" fill="rgb(242,107,0)" fg:x="3" fg:w="7"/><text x="3.5833%" y="895.50">__libc_star..</text></g><g><title>main (7 samples, 7.78%)</title><rect x="3.3333%" y="869" width="7.7778%" height="15" fill="rgb(251,28,31)" fg:x="3" fg:w="7"/><text x="3.5833%" y="879.50">main</text></g><g><title>std::rt::lang_start_internal (7 samples, 7.78%)</title><rect x="3.3333%" y="853" width="7.7778%" height="15" fill="rgb(233,223,10)" fg:x="3" fg:w="7"/><text x="3.5833%" y="863.50">std::rt::la..</text></g><g><title>std::panic::catch_unwind (7 samples, 7.78%)</title><rect x="3.3333%" y="837" width="7.7778%" height="15" fill="rgb(215,21,27)" fg:x="3" fg:w="7"/><text x="3.5833%" y="847.50">std::panic:..</text></g><g><title>std::panicking::try (7 samples, 7.78%)</title><rect x="3.3333%" y="821" width="7.7778%" height="15" fill="rgb(232,23,21)" fg:x="3" fg:w="7"/><text x="3.5833%" y="831.50">std::panick..</text></g><g><title>std::panicking::try::do_call (7 samples, 7.78%)</title><rect x="3.3333%" y="805" width="7.7778%" height="15" fill="rgb(244,5,23)" fg:x="3" fg:w="7"/><text x="3.5833%" y="815.50">std::panick..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (7 samples, 7.78%)</title><rect x="3.3333%" y="789" width="7.7778%" height="15" fill="rgb(226,81,46)" fg:x="3" fg:w="7"/><text x="3.5833%" y="799.50">std::rt::la..</text></g><g><title>std::panic::catch_unwind (7 samples, 7.78%)</title><rect x="3.3333%" y="773" width="7.7778%" height="15" fill="rgb(247,70,30)" fg:x="3" fg:w="7"/><text x="3.5833%" y="783.50">std::panic:..</text></g><g><title>std::panicking::try (7 samples, 7.78%)</title><rect x="3.3333%" y="757" width="7.7778%" height="15" fill="rgb(212,68,19)" fg:x="3" fg:w="7"/><text x="3.5833%" y="767.50">std::panick..</text></g><g><title>std::panicking::try::do_call (7 samples, 7.78%)</title><rect x="3.3333%" y="741" width="7.7778%" height="15" fill="rgb(240,187,13)" fg:x="3" fg:w="7"/><text x="3.5833%" y="751.50">std::panick..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 7.78%)</title><rect x="3.3333%" y="725" width="7.7778%" height="15" fill="rgb(223,113,26)" fg:x="3" fg:w="7"/><text x="3.5833%" y="735.50">core::ops::..</text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 7.78%)</title><rect x="3.3333%" y="709" width="7.7778%" height="15" fill="rgb(206,192,2)" fg:x="3" fg:w="7"/><text x="3.5833%" y="719.50">std::rt::la..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 7.78%)</title><rect x="3.3333%" y="693" width="7.7778%" height="15" fill="rgb(241,108,4)" fg:x="3" fg:w="7"/><text x="3.5833%" y="703.50">std::sys_co..</text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 7.78%)</title><rect x="3.3333%" y="677" width="7.7778%" height="15" fill="rgb(247,173,49)" fg:x="3" fg:w="7"/><text x="3.5833%" y="687.50">core::ops::..</text></g><g><title>ord::main (7 samples, 7.78%)</title><rect x="3.3333%" y="661" width="7.7778%" height="15" fill="rgb(224,114,35)" fg:x="3" fg:w="7"/><text x="3.5833%" y="671.50">ord::main</text></g><g><title>ord::subcommand::Subcommand::run (7 samples, 7.78%)</title><rect x="3.3333%" y="645" width="7.7778%" height="15" fill="rgb(245,159,27)" fg:x="3" fg:w="7"/><text x="3.5833%" y="655.50">ord::subcom..</text></g><g><title>ord::index::Index::open (7 samples, 7.78%)</title><rect x="3.3333%" y="629" width="7.7778%" height="15" fill="rgb(245,172,44)" fg:x="3" fg:w="7"/><text x="3.5833%" y="639.50">ord::index:..</text></g><g><title>redb::db::Builder::create (6 samples, 6.67%)</title><rect x="4.4444%" y="613" width="6.6667%" height="15" fill="rgb(236,23,11)" fg:x="4" fg:w="6"/><text x="4.6944%" y="623.50">redb::db:..</text></g><g><title>redb::db::Database::new (6 samples, 6.67%)</title><rect x="4.4444%" y="597" width="6.6667%" height="15" fill="rgb(205,117,38)" fg:x="4" fg:w="6"/><text x="4.6944%" y="607.50">redb::db:..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::new (6 samples, 6.67%)</title><rect x="4.4444%" y="581" width="6.6667%" height="15" fill="rgb(237,72,25)" fg:x="4" fg:w="6"/><text x="4.6944%" y="591.50">redb::tre..</text></g><g><title>redb::tree_store::page_store::region::Allocators::new (1 samples, 1.11%)</title><rect x="10.0000%" y="565" width="1.1111%" height="15" fill="rgb(244,70,9)" fg:x="9" fg:w="1"/><text x="10.2500%" y="575.50"></text></g><g><title>redb::tree_store::page_store::buddy_allocator::BuddyAllocator::new (1 samples, 1.11%)</title><rect x="10.0000%" y="549" width="1.1111%" height="15" fill="rgb(217,125,39)" fg:x="9" fg:w="1"/><text x="10.2500%" y="559.50"></text></g><g><title>__libc_calloc (1 samples, 1.11%)</title><rect x="10.0000%" y="533" width="1.1111%" height="15" fill="rgb(235,36,10)" fg:x="9" fg:w="1"/><text x="10.2500%" y="543.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="10.0000%" y="517" width="1.1111%" height="15" fill="rgb(251,123,47)" fg:x="9" fg:w="1"/><text x="10.2500%" y="527.50"></text></g><g><title>async_page_fault (1 samples, 1.11%)</title><rect x="10.0000%" y="501" width="1.1111%" height="15" fill="rgb(221,13,13)" fg:x="9" fg:w="1"/><text x="10.2500%" y="511.50"></text></g><g><title>do_async_page_fault (1 samples, 1.11%)</title><rect x="10.0000%" y="485" width="1.1111%" height="15" fill="rgb(238,131,9)" fg:x="9" fg:w="1"/><text x="10.2500%" y="495.50"></text></g><g><title>do_page_fault (1 samples, 1.11%)</title><rect x="10.0000%" y="469" width="1.1111%" height="15" fill="rgb(211,50,8)" fg:x="9" fg:w="1"/><text x="10.2500%" y="479.50"></text></g><g><title>__do_page_fault (1 samples, 1.11%)</title><rect x="10.0000%" y="453" width="1.1111%" height="15" fill="rgb(245,182,24)" fg:x="9" fg:w="1"/><text x="10.2500%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 1.11%)</title><rect x="11.1111%" y="789" width="1.1111%" height="15" fill="rgb(242,14,37)" fg:x="10" fg:w="1"/><text x="11.3611%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.11%)</title><rect x="11.1111%" y="773" width="1.1111%" height="15" fill="rgb(246,228,12)" fg:x="10" fg:w="1"/><text x="11.3611%" y="783.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (1 samples, 1.11%)</title><rect x="11.1111%" y="757" width="1.1111%" height="15" fill="rgb(213,55,15)" fg:x="10" fg:w="1"/><text x="11.3611%" y="767.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (1 samples, 1.11%)</title><rect x="11.1111%" y="741" width="1.1111%" height="15" fill="rgb(209,9,3)" fg:x="10" fg:w="1"/><text x="11.3611%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 1.11%)</title><rect x="11.1111%" y="725" width="1.1111%" height="15" fill="rgb(230,59,30)" fg:x="10" fg:w="1"/><text x="11.3611%" y="735.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1 samples, 1.11%)</title><rect x="11.1111%" y="709" width="1.1111%" height="15" fill="rgb(209,121,21)" fg:x="10" fg:w="1"/><text x="11.3611%" y="719.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1 samples, 1.11%)</title><rect x="11.1111%" y="693" width="1.1111%" height="15" fill="rgb(220,109,13)" fg:x="10" fg:w="1"/><text x="11.3611%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 1.11%)</title><rect x="12.2222%" y="741" width="1.1111%" height="15" fill="rgb(232,18,1)" fg:x="11" fg:w="1"/><text x="12.4722%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;core::option::Option&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt;&gt;&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="725" width="1.1111%" height="15" fill="rgb(215,41,42)" fg:x="11" fg:w="1"/><text x="12.4722%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt;&gt;&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="709" width="1.1111%" height="15" fill="rgb(224,123,36)" fg:x="11" fg:w="1"/><text x="12.4722%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt;&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="693" width="1.1111%" height="15" fill="rgb(240,125,3)" fg:x="11" fg:w="1"/><text x="12.4722%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="677" width="1.1111%" height="15" fill="rgb(205,98,50)" fg:x="11" fg:w="1"/><text x="12.4722%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="661" width="1.1111%" height="15" fill="rgb(205,185,37)" fg:x="11" fg:w="1"/><text x="12.4722%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="645" width="1.1111%" height="15" fill="rgb(238,207,15)" fg:x="11" fg:w="1"/><text x="12.4722%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="629" width="1.1111%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="1"/><text x="12.4722%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="613" width="1.1111%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="1"/><text x="12.4722%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 1.11%)</title><rect x="12.2222%" y="597" width="1.1111%" height="15" fill="rgb(207,46,11)" fg:x="11" fg:w="1"/><text x="12.4722%" y="607.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 1.11%)</title><rect x="12.2222%" y="581" width="1.1111%" height="15" fill="rgb(241,35,35)" fg:x="11" fg:w="1"/><text x="12.4722%" y="591.50"></text></g><g><title>__libc_close (1 samples, 1.11%)</title><rect x="12.2222%" y="565" width="1.1111%" height="15" fill="rgb(243,32,47)" fg:x="11" fg:w="1"/><text x="12.4722%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 1.11%)</title><rect x="12.2222%" y="549" width="1.1111%" height="15" fill="rgb(247,202,23)" fg:x="11" fg:w="1"/><text x="12.4722%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 1.11%)</title><rect x="12.2222%" y="533" width="1.1111%" height="15" fill="rgb(219,102,11)" fg:x="11" fg:w="1"/><text x="12.4722%" y="543.50"></text></g><g><title>exit_to_usermode_loop (1 samples, 1.11%)</title><rect x="12.2222%" y="517" width="1.1111%" height="15" fill="rgb(243,110,44)" fg:x="11" fg:w="1"/><text x="12.4722%" y="527.50"></text></g><g><title>task_work_run (1 samples, 1.11%)</title><rect x="12.2222%" y="501" width="1.1111%" height="15" fill="rgb(222,74,54)" fg:x="11" fg:w="1"/><text x="12.4722%" y="511.50"></text></g><g><title>____fput (1 samples, 1.11%)</title><rect x="12.2222%" y="485" width="1.1111%" height="15" fill="rgb(216,99,12)" fg:x="11" fg:w="1"/><text x="12.4722%" y="495.50"></text></g><g><title>__fput (1 samples, 1.11%)</title><rect x="12.2222%" y="469" width="1.1111%" height="15" fill="rgb(226,22,26)" fg:x="11" fg:w="1"/><text x="12.4722%" y="479.50"></text></g><g><title>sock_close (1 samples, 1.11%)</title><rect x="12.2222%" y="453" width="1.1111%" height="15" fill="rgb(217,163,10)" fg:x="11" fg:w="1"/><text x="12.4722%" y="463.50"></text></g><g><title>__sock_release (1 samples, 1.11%)</title><rect x="12.2222%" y="437" width="1.1111%" height="15" fill="rgb(213,25,53)" fg:x="11" fg:w="1"/><text x="12.4722%" y="447.50"></text></g><g><title>inet_release (1 samples, 1.11%)</title><rect x="12.2222%" y="421" width="1.1111%" height="15" fill="rgb(252,105,26)" fg:x="11" fg:w="1"/><text x="12.4722%" y="431.50"></text></g><g><title>tcp_close (1 samples, 1.11%)</title><rect x="12.2222%" y="405" width="1.1111%" height="15" fill="rgb(220,39,43)" fg:x="11" fg:w="1"/><text x="12.4722%" y="415.50"></text></g><g><title>tcp_send_fin (1 samples, 1.11%)</title><rect x="12.2222%" y="389" width="1.1111%" height="15" fill="rgb(229,68,48)" fg:x="11" fg:w="1"/><text x="12.4722%" y="399.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 1.11%)</title><rect x="12.2222%" y="373" width="1.1111%" height="15" fill="rgb(252,8,32)" fg:x="11" fg:w="1"/><text x="12.4722%" y="383.50"></text></g><g><title>tcp_write_xmit (1 samples, 1.11%)</title><rect x="12.2222%" y="357" width="1.1111%" height="15" fill="rgb(223,20,43)" fg:x="11" fg:w="1"/><text x="12.4722%" y="367.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 1.11%)</title><rect x="12.2222%" y="341" width="1.1111%" height="15" fill="rgb(229,81,49)" fg:x="11" fg:w="1"/><text x="12.4722%" y="351.50"></text></g><g><title>ip_queue_xmit (1 samples, 1.11%)</title><rect x="12.2222%" y="325" width="1.1111%" height="15" fill="rgb(236,28,36)" fg:x="11" fg:w="1"/><text x="12.4722%" y="335.50"></text></g><g><title>__ip_queue_xmit (1 samples, 1.11%)</title><rect x="12.2222%" y="309" width="1.1111%" height="15" fill="rgb(249,185,26)" fg:x="11" fg:w="1"/><text x="12.4722%" y="319.50"></text></g><g><title>ip_local_out (1 samples, 1.11%)</title><rect x="12.2222%" y="293" width="1.1111%" height="15" fill="rgb(249,174,33)" fg:x="11" fg:w="1"/><text x="12.4722%" y="303.50"></text></g><g><title>__ip_local_out (1 samples, 1.11%)</title><rect x="12.2222%" y="277" width="1.1111%" height="15" fill="rgb(233,201,37)" fg:x="11" fg:w="1"/><text x="12.4722%" y="287.50"></text></g><g><title>nf_hook_slow (1 samples, 1.11%)</title><rect x="12.2222%" y="261" width="1.1111%" height="15" fill="rgb(221,78,26)" fg:x="11" fg:w="1"/><text x="12.4722%" y="271.50"></text></g><g><title>ipv4_conntrack_local (1 samples, 1.11%)</title><rect x="12.2222%" y="245" width="1.1111%" height="15" fill="rgb(250,127,30)" fg:x="11" fg:w="1"/><text x="12.4722%" y="255.50"></text></g><g><title>nf_conntrack_in (1 samples, 1.11%)</title><rect x="12.2222%" y="229" width="1.1111%" height="15" fill="rgb(230,49,44)" fg:x="11" fg:w="1"/><text x="12.4722%" y="239.50"></text></g><g><title>__nf_conntrack_find_get (1 samples, 1.11%)</title><rect x="12.2222%" y="213" width="1.1111%" height="15" fill="rgb(229,67,23)" fg:x="11" fg:w="1"/><text x="12.4722%" y="223.50"></text></g><g><title>ord::index::updater::Updater::commit (2 samples, 2.22%)</title><rect x="12.2222%" y="757" width="2.2222%" height="15" fill="rgb(249,83,47)" fg:x="11" fg:w="2"/><text x="12.4722%" y="767.50">o..</text></g><g><title>redb::transactions::WriteTransaction::commit (1 samples, 1.11%)</title><rect x="13.3333%" y="741" width="1.1111%" height="15" fill="rgb(215,43,3)" fg:x="12" fg:w="1"/><text x="13.5833%" y="751.50"></text></g><g><title>redb::transactions::WriteTransaction::durable_commit (1 samples, 1.11%)</title><rect x="13.3333%" y="725" width="1.1111%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="1"/><text x="13.5833%" y="735.50"></text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::commit (1 samples, 1.11%)</title><rect x="13.3333%" y="709" width="1.1111%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="1"/><text x="13.5833%" y="719.50"></text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::flush_write_buffer (1 samples, 1.11%)</title><rect x="13.3333%" y="693" width="1.1111%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="1"/><text x="13.5833%" y="703.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (1 samples, 1.11%)</title><rect x="13.3333%" y="677" width="1.1111%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="1"/><text x="13.5833%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (1 samples, 1.11%)</title><rect x="13.3333%" y="661" width="1.1111%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="1"/><text x="13.5833%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::write_at (1 samples, 1.11%)</title><rect x="13.3333%" y="645" width="1.1111%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="1"/><text x="13.5833%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (1 samples, 1.11%)</title><rect x="13.3333%" y="629" width="1.1111%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="1"/><text x="13.5833%" y="639.50"></text></g><g><title>__libc_pwrite64 (1 samples, 1.11%)</title><rect x="13.3333%" y="613" width="1.1111%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="1"/><text x="13.5833%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 1.11%)</title><rect x="13.3333%" y="597" width="1.1111%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="1"/><text x="13.5833%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 1.11%)</title><rect x="13.3333%" y="581" width="1.1111%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="1"/><text x="13.5833%" y="591.50"></text></g><g><title>__x64_sys_pwrite64 (1 samples, 1.11%)</title><rect x="13.3333%" y="565" width="1.1111%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="1"/><text x="13.5833%" y="575.50"></text></g><g><title>ksys_pwrite64 (1 samples, 1.11%)</title><rect x="13.3333%" y="549" width="1.1111%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="1"/><text x="13.5833%" y="559.50"></text></g><g><title>vfs_write (1 samples, 1.11%)</title><rect x="13.3333%" y="533" width="1.1111%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="1"/><text x="13.5833%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::table::Table&lt;&amp;[u8: 36],&amp;[u8]&gt;&gt; (1 samples, 1.11%)</title><rect x="14.4444%" y="741" width="1.1111%" height="15" fill="rgb(234,150,53)" fg:x="13" fg:w="1"/><text x="14.6944%" y="751.50"></text></g><g><title>redb::transactions::WriteTransaction::close_table (1 samples, 1.11%)</title><rect x="14.4444%" y="725" width="1.1111%" height="15" fill="rgb(228,201,54)" fg:x="13" fg:w="1"/><text x="14.6944%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 1.11%)</title><rect x="14.4444%" y="709" width="1.1111%" height="15" fill="rgb(222,22,37)" fg:x="13" fg:w="1"/><text x="14.6944%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::table::Table&lt;i32,u32&gt;&gt; (1 samples, 1.11%)</title><rect x="15.5556%" y="741" width="1.1111%" height="15" fill="rgb(237,53,32)" fg:x="14" fg:w="1"/><text x="15.8056%" y="751.50"></text></g><g><title>redb::transactions::WriteTransaction::close_table (1 samples, 1.11%)</title><rect x="15.5556%" y="725" width="1.1111%" height="15" fill="rgb(233,25,53)" fg:x="14" fg:w="1"/><text x="15.8056%" y="735.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::stage_update_table_root (1 samples, 1.11%)</title><rect x="15.5556%" y="709" width="1.1111%" height="15" fill="rgb(210,40,34)" fg:x="14" fg:w="1"/><text x="15.8056%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 1.11%)</title><rect x="15.5556%" y="693" width="1.1111%" height="15" fill="rgb(241,220,44)" fg:x="14" fg:w="1"/><text x="15.8056%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 1.11%)</title><rect x="15.5556%" y="677" width="1.1111%" height="15" fill="rgb(235,28,35)" fg:x="14" fg:w="1"/><text x="15.8056%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 1.11%)</title><rect x="15.5556%" y="661" width="1.1111%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="1"/><text x="15.8056%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 1.11%)</title><rect x="15.5556%" y="645" width="1.1111%" height="15" fill="rgb(224,130,29)" fg:x="14" fg:w="1"/><text x="15.8056%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 1.11%)</title><rect x="15.5556%" y="629" width="1.1111%" height="15" fill="rgb(235,212,8)" fg:x="14" fg:w="1"/><text x="15.8056%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 1.11%)</title><rect x="15.5556%" y="613" width="1.1111%" height="15" fill="rgb(223,33,50)" fg:x="14" fg:w="1"/><text x="15.8056%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 1.11%)</title><rect x="15.5556%" y="597" width="1.1111%" height="15" fill="rgb(219,149,13)" fg:x="14" fg:w="1"/><text x="15.8056%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 1.11%)</title><rect x="15.5556%" y="581" width="1.1111%" height="15" fill="rgb(250,156,29)" fg:x="14" fg:w="1"/><text x="15.8056%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 1.11%)</title><rect x="15.5556%" y="565" width="1.1111%" height="15" fill="rgb(216,193,19)" fg:x="14" fg:w="1"/><text x="15.8056%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 1.11%)</title><rect x="15.5556%" y="549" width="1.1111%" height="15" fill="rgb(216,135,14)" fg:x="14" fg:w="1"/><text x="15.8056%" y="559.50"></text></g><g><title>core::cmp::min (1 samples, 1.11%)</title><rect x="15.5556%" y="533" width="1.1111%" height="15" fill="rgb(241,47,5)" fg:x="14" fg:w="1"/><text x="15.8056%" y="543.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 1.11%)</title><rect x="15.5556%" y="517" width="1.1111%" height="15" fill="rgb(233,42,35)" fg:x="14" fg:w="1"/><text x="15.8056%" y="527.50"></text></g><g><title>core::cmp::min_by (1 samples, 1.11%)</title><rect x="15.5556%" y="501" width="1.1111%" height="15" fill="rgb(231,13,6)" fg:x="14" fg:w="1"/><text x="15.8056%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;redb::table::Table&lt;u64,u64&gt;&gt; (1 samples, 1.11%)</title><rect x="16.6667%" y="741" width="1.1111%" height="15" fill="rgb(207,181,40)" fg:x="15" fg:w="1"/><text x="16.9167%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 1.11%)</title><rect x="16.6667%" y="725" width="1.1111%" height="15" fill="rgb(254,173,49)" fg:x="15" fg:w="1"/><text x="16.9167%" y="735.50"></text></g><g><title>add_wait_queue (1 samples, 1.11%)</title><rect x="17.7778%" y="421" width="1.1111%" height="15" fill="rgb(221,1,38)" fg:x="16" fg:w="1"/><text x="18.0278%" y="431.50"></text></g><g><title>__lock_text_start (1 samples, 1.11%)</title><rect x="17.7778%" y="405" width="1.1111%" height="15" fill="rgb(206,124,46)" fg:x="16" fg:w="1"/><text x="18.0278%" y="415.50"></text></g><g><title>down_read (1 samples, 1.11%)</title><rect x="18.8889%" y="421" width="1.1111%" height="15" fill="rgb(249,21,11)" fg:x="17" fg:w="1"/><text x="19.1389%" y="431.50"></text></g><g><title>__lock_text_start (1 samples, 1.11%)</title><rect x="20.0000%" y="389" width="1.1111%" height="15" fill="rgb(222,201,40)" fg:x="18" fg:w="1"/><text x="20.2500%" y="399.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (8 samples, 8.89%)</title><rect x="17.7778%" y="677" width="8.8889%" height="15" fill="rgb(235,61,29)" fg:x="16" fg:w="8"/><text x="18.0278%" y="687.50">&lt;std::io::std..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (8 samples, 8.89%)</title><rect x="17.7778%" y="661" width="8.8889%" height="15" fill="rgb(219,207,3)" fg:x="16" fg:w="8"/><text x="18.0278%" y="671.50">&lt;std::io::buf..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (8 samples, 8.89%)</title><rect x="17.7778%" y="645" width="8.8889%" height="15" fill="rgb(222,56,46)" fg:x="16" fg:w="8"/><text x="18.0278%" y="655.50">&lt;std::io::buf..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (8 samples, 8.89%)</title><rect x="17.7778%" y="629" width="8.8889%" height="15" fill="rgb(239,76,54)" fg:x="16" fg:w="8"/><text x="18.0278%" y="639.50">std::io::buff..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (8 samples, 8.89%)</title><rect x="17.7778%" y="613" width="8.8889%" height="15" fill="rgb(231,124,27)" fg:x="16" fg:w="8"/><text x="18.0278%" y="623.50">&lt;std::io::std..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (8 samples, 8.89%)</title><rect x="17.7778%" y="597" width="8.8889%" height="15" fill="rgb(249,195,6)" fg:x="16" fg:w="8"/><text x="18.0278%" y="607.50">&lt;std::sys::un..</text></g><g><title>std::sys::unix::fd::FileDesc::write (8 samples, 8.89%)</title><rect x="17.7778%" y="581" width="8.8889%" height="15" fill="rgb(237,174,47)" fg:x="16" fg:w="8"/><text x="18.0278%" y="591.50">std::sys::uni..</text></g><g><title>__libc_write (8 samples, 8.89%)</title><rect x="17.7778%" y="565" width="8.8889%" height="15" fill="rgb(206,201,31)" fg:x="16" fg:w="8"/><text x="18.0278%" y="575.50">__libc_write</text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 8.89%)</title><rect x="17.7778%" y="549" width="8.8889%" height="15" fill="rgb(231,57,52)" fg:x="16" fg:w="8"/><text x="18.0278%" y="559.50">entry_SYSCALL..</text></g><g><title>do_syscall_64 (8 samples, 8.89%)</title><rect x="17.7778%" y="533" width="8.8889%" height="15" fill="rgb(248,177,22)" fg:x="16" fg:w="8"/><text x="18.0278%" y="543.50">do_syscall_64</text></g><g><title>__x64_sys_write (8 samples, 8.89%)</title><rect x="17.7778%" y="517" width="8.8889%" height="15" fill="rgb(215,211,37)" fg:x="16" fg:w="8"/><text x="18.0278%" y="527.50">__x64_sys_wri..</text></g><g><title>ksys_write (8 samples, 8.89%)</title><rect x="17.7778%" y="501" width="8.8889%" height="15" fill="rgb(241,128,51)" fg:x="16" fg:w="8"/><text x="18.0278%" y="511.50">ksys_write</text></g><g><title>vfs_write (8 samples, 8.89%)</title><rect x="17.7778%" y="485" width="8.8889%" height="15" fill="rgb(227,165,31)" fg:x="16" fg:w="8"/><text x="18.0278%" y="495.50">vfs_write</text></g><g><title>__vfs_write (8 samples, 8.89%)</title><rect x="17.7778%" y="469" width="8.8889%" height="15" fill="rgb(228,167,24)" fg:x="16" fg:w="8"/><text x="18.0278%" y="479.50">__vfs_write</text></g><g><title>tty_write (8 samples, 8.89%)</title><rect x="17.7778%" y="453" width="8.8889%" height="15" fill="rgb(228,143,12)" fg:x="16" fg:w="8"/><text x="18.0278%" y="463.50">tty_write</text></g><g><title>n_tty_write (8 samples, 8.89%)</title><rect x="17.7778%" y="437" width="8.8889%" height="15" fill="rgb(249,149,8)" fg:x="16" fg:w="8"/><text x="18.0278%" y="447.50">n_tty_write</text></g><g><title>pty_write (6 samples, 6.67%)</title><rect x="20.0000%" y="421" width="6.6667%" height="15" fill="rgb(243,35,44)" fg:x="18" fg:w="6"/><text x="20.2500%" y="431.50">pty_write</text></g><g><title>tty_insert_flip_string_and_push_buffer (6 samples, 6.67%)</title><rect x="20.0000%" y="405" width="6.6667%" height="15" fill="rgb(246,89,9)" fg:x="18" fg:w="6"/><text x="20.2500%" y="415.50">tty_inser..</text></g><g><title>queue_work_on (5 samples, 5.56%)</title><rect x="21.1111%" y="389" width="5.5556%" height="15" fill="rgb(233,213,13)" fg:x="19" fg:w="5"/><text x="21.3611%" y="399.50">queue_w..</text></g><g><title>chrono::format::formatting::DelayedFormat&lt;I&gt;::new_with_offset (1 samples, 1.11%)</title><rect x="26.6667%" y="661" width="1.1111%" height="15" fill="rgb(233,141,41)" fg:x="24" fg:w="1"/><text x="26.9167%" y="671.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 1.11%)</title><rect x="26.6667%" y="645" width="1.1111%" height="15" fill="rgb(239,167,4)" fg:x="24" fg:w="1"/><text x="26.9167%" y="655.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (1 samples, 1.11%)</title><rect x="26.6667%" y="629" width="1.1111%" height="15" fill="rgb(209,217,16)" fg:x="24" fg:w="1"/><text x="26.9167%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 1.11%)</title><rect x="26.6667%" y="613" width="1.1111%" height="15" fill="rgb(219,88,35)" fg:x="24" fg:w="1"/><text x="26.9167%" y="623.50"></text></g><g><title>core::fmt::run (1 samples, 1.11%)</title><rect x="26.6667%" y="597" width="1.1111%" height="15" fill="rgb(220,193,23)" fg:x="24" fg:w="1"/><text x="26.9167%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 1.11%)</title><rect x="26.6667%" y="581" width="1.1111%" height="15" fill="rgb(230,90,52)" fg:x="24" fg:w="1"/><text x="26.9167%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 1.11%)</title><rect x="26.6667%" y="565" width="1.1111%" height="15" fill="rgb(252,106,19)" fg:x="24" fg:w="1"/><text x="26.9167%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 1.11%)</title><rect x="26.6667%" y="549" width="1.1111%" height="15" fill="rgb(206,74,20)" fg:x="24" fg:w="1"/><text x="26.9167%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 1.11%)</title><rect x="26.6667%" y="533" width="1.1111%" height="15" fill="rgb(230,138,44)" fg:x="24" fg:w="1"/><text x="26.9167%" y="543.50"></text></g><g><title>core::mem::replace (1 samples, 1.11%)</title><rect x="26.6667%" y="517" width="1.1111%" height="15" fill="rgb(235,182,43)" fg:x="24" fg:w="1"/><text x="26.9167%" y="527.50"></text></g><g><title>core::ptr::read (1 samples, 1.11%)</title><rect x="26.6667%" y="501" width="1.1111%" height="15" fill="rgb(242,16,51)" fg:x="24" fg:w="1"/><text x="26.9167%" y="511.50"></text></g><g><title>&lt;chrono::datetime::DateTime&lt;Tz&gt; as core::fmt::Display&gt;::fmt (1 samples, 1.11%)</title><rect x="27.7778%" y="613" width="1.1111%" height="15" fill="rgb(248,9,4)" fg:x="25" fg:w="1"/><text x="28.0278%" y="623.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::fmt::Display&gt;::fmt (1 samples, 1.11%)</title><rect x="27.7778%" y="597" width="1.1111%" height="15" fill="rgb(210,31,22)" fg:x="25" fg:w="1"/><text x="28.0278%" y="607.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::fmt::Debug&gt;::fmt (1 samples, 1.11%)</title><rect x="27.7778%" y="581" width="1.1111%" height="15" fill="rgb(239,54,39)" fg:x="25" fg:w="1"/><text x="28.0278%" y="591.50"></text></g><g><title>chrono::format::formatting::write_hundreds (1 samples, 1.11%)</title><rect x="27.7778%" y="565" width="1.1111%" height="15" fill="rgb(230,99,41)" fg:x="25" fg:w="1"/><text x="28.0278%" y="575.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 1.11%)</title><rect x="27.7778%" y="549" width="1.1111%" height="15" fill="rgb(253,106,12)" fg:x="25" fg:w="1"/><text x="28.0278%" y="559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 1.11%)</title><rect x="27.7778%" y="533" width="1.1111%" height="15" fill="rgb(213,46,41)" fg:x="25" fg:w="1"/><text x="28.0278%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 1.11%)</title><rect x="27.7778%" y="517" width="1.1111%" height="15" fill="rgb(215,133,35)" fg:x="25" fg:w="1"/><text x="28.0278%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 1.11%)</title><rect x="27.7778%" y="501" width="1.1111%" height="15" fill="rgb(213,28,5)" fg:x="25" fg:w="1"/><text x="28.0278%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 1.11%)</title><rect x="27.7778%" y="485" width="1.1111%" height="15" fill="rgb(215,77,49)" fg:x="25" fg:w="1"/><text x="28.0278%" y="495.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 1.11%)</title><rect x="27.7778%" y="469" width="1.1111%" height="15" fill="rgb(248,100,22)" fg:x="25" fg:w="1"/><text x="28.0278%" y="479.50"></text></g><g><title>&lt;log4rs::append::console::ConsoleAppender as log4rs::append::Append&gt;::append (11 samples, 12.22%)</title><rect x="17.7778%" y="709" width="12.2222%" height="15" fill="rgb(208,67,9)" fg:x="16" fg:w="11"/><text x="18.0278%" y="719.50">&lt;log4rs::append::c..</text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (11 samples, 12.22%)</title><rect x="17.7778%" y="693" width="12.2222%" height="15" fill="rgb(219,133,21)" fg:x="16" fg:w="11"/><text x="18.0278%" y="703.50">&lt;log4rs::encode::p..</text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (3 samples, 3.33%)</title><rect x="26.6667%" y="677" width="3.3333%" height="15" fill="rgb(246,46,29)" fg:x="24" fg:w="3"/><text x="26.9167%" y="687.50">log..</text></g><g><title>std::io::Write::write_fmt (2 samples, 2.22%)</title><rect x="27.7778%" y="661" width="2.2222%" height="15" fill="rgb(246,185,52)" fg:x="25" fg:w="2"/><text x="28.0278%" y="671.50">s..</text></g><g><title>core::fmt::write (2 samples, 2.22%)</title><rect x="27.7778%" y="645" width="2.2222%" height="15" fill="rgb(252,136,11)" fg:x="25" fg:w="2"/><text x="28.0278%" y="655.50">c..</text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 2.22%)</title><rect x="27.7778%" y="629" width="2.2222%" height="15" fill="rgb(219,138,53)" fg:x="25" fg:w="2"/><text x="28.0278%" y="639.50">c..</text></g><g><title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 1.11%)</title><rect x="28.8889%" y="613" width="1.1111%" height="15" fill="rgb(211,51,23)" fg:x="26" fg:w="1"/><text x="29.1389%" y="623.50"></text></g><g><title>chrono::format::formatting::format (1 samples, 1.11%)</title><rect x="28.8889%" y="597" width="1.1111%" height="15" fill="rgb(247,221,28)" fg:x="26" fg:w="1"/><text x="29.1389%" y="607.50"></text></g><g><title>chrono::format::formatting::format_inner (1 samples, 1.11%)</title><rect x="28.8889%" y="581" width="1.1111%" height="15" fill="rgb(251,222,45)" fg:x="26" fg:w="1"/><text x="29.1389%" y="591.50"></text></g><g><title>chrono::format::formatting::write_rfc3339 (1 samples, 1.11%)</title><rect x="28.8889%" y="565" width="1.1111%" height="15" fill="rgb(217,162,53)" fg:x="26" fg:w="1"/><text x="29.1389%" y="575.50"></text></g><g><title>&lt;log4rs::append::rolling_file::RollingFileAppender as log4rs::append::Append&gt;::append (1 samples, 1.11%)</title><rect x="30.0000%" y="709" width="1.1111%" height="15" fill="rgb(229,93,14)" fg:x="27" fg:w="1"/><text x="30.2500%" y="719.50"></text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (1 samples, 1.11%)</title><rect x="30.0000%" y="693" width="1.1111%" height="15" fill="rgb(209,67,49)" fg:x="27" fg:w="1"/><text x="30.2500%" y="703.50"></text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (1 samples, 1.11%)</title><rect x="30.0000%" y="677" width="1.1111%" height="15" fill="rgb(213,87,29)" fg:x="27" fg:w="1"/><text x="30.2500%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 1.11%)</title><rect x="30.0000%" y="661" width="1.1111%" height="15" fill="rgb(205,151,52)" fg:x="27" fg:w="1"/><text x="30.2500%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 1.11%)</title><rect x="30.0000%" y="645" width="1.1111%" height="15" fill="rgb(253,215,39)" fg:x="27" fg:w="1"/><text x="30.2500%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 1.11%)</title><rect x="30.0000%" y="629" width="1.1111%" height="15" fill="rgb(221,220,41)" fg:x="27" fg:w="1"/><text x="30.2500%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 1.11%)</title><rect x="30.0000%" y="613" width="1.1111%" height="15" fill="rgb(218,133,21)" fg:x="27" fg:w="1"/><text x="30.2500%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 1.11%)</title><rect x="30.0000%" y="597" width="1.1111%" height="15" fill="rgb(221,193,43)" fg:x="27" fg:w="1"/><text x="30.2500%" y="607.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 1.11%)</title><rect x="30.0000%" y="581" width="1.1111%" height="15" fill="rgb(240,128,52)" fg:x="27" fg:w="1"/><text x="30.2500%" y="591.50"></text></g><g><title>log::__private_api::log (13 samples, 14.44%)</title><rect x="17.7778%" y="741" width="14.4444%" height="15" fill="rgb(253,114,12)" fg:x="16" fg:w="13"/><text x="18.0278%" y="751.50">log::__private_api::log</text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (13 samples, 14.44%)</title><rect x="17.7778%" y="725" width="14.4444%" height="15" fill="rgb(215,223,47)" fg:x="16" fg:w="13"/><text x="18.0278%" y="735.50">&lt;log4rs::Logger as log..</text></g><g><title>log4rs::ConfiguredLogger::find (1 samples, 1.11%)</title><rect x="31.1111%" y="709" width="1.1111%" height="15" fill="rgb(248,225,23)" fg:x="28" fg:w="1"/><text x="31.3611%" y="719.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 1.11%)</title><rect x="31.1111%" y="693" width="1.1111%" height="15" fill="rgb(250,108,0)" fg:x="28" fg:w="1"/><text x="31.3611%" y="703.50"></text></g><g><title>ord::index::Index::block_hash (2 samples, 2.22%)</title><rect x="32.2222%" y="741" width="2.2222%" height="15" fill="rgb(228,208,7)" fg:x="29" fg:w="2"/><text x="32.4722%" y="751.50">o..</text></g><g><title>ord::index::rtx::Rtx::block_hash (2 samples, 2.22%)</title><rect x="32.2222%" y="725" width="2.2222%" height="15" fill="rgb(244,45,10)" fg:x="29" fg:w="2"/><text x="32.4722%" y="735.50">o..</text></g><g><title>redb::transactions::ReadTransaction::open_table (2 samples, 2.22%)</title><rect x="32.2222%" y="709" width="2.2222%" height="15" fill="rgb(207,125,25)" fg:x="29" fg:w="2"/><text x="32.4722%" y="719.50">r..</text></g><g><title>redb::tree_store::table_tree::TableTree::get_table (1 samples, 1.11%)</title><rect x="33.3333%" y="693" width="1.1111%" height="15" fill="rgb(210,195,18)" fg:x="30" fg:w="1"/><text x="33.5833%" y="703.50"></text></g><g><title>&lt;&amp;[u8: N] as redb::types::RedbValue&gt;::type_name (1 samples, 1.11%)</title><rect x="33.3333%" y="677" width="1.1111%" height="15" fill="rgb(249,80,12)" fg:x="30" fg:w="1"/><text x="33.5833%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 1.11%)</title><rect x="33.3333%" y="661" width="1.1111%" height="15" fill="rgb(221,65,9)" fg:x="30" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 1.11%)</title><rect x="33.3333%" y="645" width="1.1111%" height="15" fill="rgb(235,49,36)" fg:x="30" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 1.11%)</title><rect x="33.3333%" y="629" width="1.1111%" height="15" fill="rgb(225,32,20)" fg:x="30" fg:w="1"/><text x="33.5833%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 1.11%)</title><rect x="33.3333%" y="613" width="1.1111%" height="15" fill="rgb(215,141,46)" fg:x="30" fg:w="1"/><text x="33.5833%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.11%)</title><rect x="33.3333%" y="597" width="1.1111%" height="15" fill="rgb(250,160,47)" fg:x="30" fg:w="1"/><text x="33.5833%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 1.11%)</title><rect x="33.3333%" y="581" width="1.1111%" height="15" fill="rgb(216,222,40)" fg:x="30" fg:w="1"/><text x="33.5833%" y="591.50"></text></g><g><title>ord::index::updater::Updater::index_transaction_sats (2 samples, 2.22%)</title><rect x="34.4444%" y="741" width="2.2222%" height="15" fill="rgb(234,217,39)" fg:x="31" fg:w="2"/><text x="34.6944%" y="751.50">o..</text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::insert (2 samples, 2.22%)</title><rect x="34.4444%" y="725" width="2.2222%" height="15" fill="rgb(207,178,40)" fg:x="31" fg:w="2"/><text x="34.6944%" y="735.50">r..</text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (1 samples, 1.11%)</title><rect x="35.5556%" y="709" width="1.1111%" height="15" fill="rgb(221,136,13)" fg:x="32" fg:w="1"/><text x="35.8056%" y="719.50"></text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (1 samples, 1.11%)</title><rect x="35.5556%" y="693" width="1.1111%" height="15" fill="rgb(249,199,10)" fg:x="32" fg:w="1"/><text x="35.8056%" y="703.50"></text></g><g><title>redb::tree_store::btree_base::LeafBuilder::build_split (1 samples, 1.11%)</title><rect x="35.5556%" y="677" width="1.1111%" height="15" fill="rgb(249,222,13)" fg:x="32" fg:w="1"/><text x="35.8056%" y="687.50"></text></g><g><title>redb::tree_store::btree_base::RawLeafBuilder::append (1 samples, 1.11%)</title><rect x="35.5556%" y="661" width="1.1111%" height="15" fill="rgb(244,185,38)" fg:x="32" fg:w="1"/><text x="35.8056%" y="671.50"></text></g><g><title>pty_write (2 samples, 2.22%)</title><rect x="37.7778%" y="405" width="2.2222%" height="15" fill="rgb(236,202,9)" fg:x="34" fg:w="2"/><text x="38.0278%" y="415.50">p..</text></g><g><title>tty_insert_flip_string_and_push_buffer (2 samples, 2.22%)</title><rect x="37.7778%" y="389" width="2.2222%" height="15" fill="rgb(250,229,37)" fg:x="34" fg:w="2"/><text x="38.0278%" y="399.50">t..</text></g><g><title>queue_work_on (2 samples, 2.22%)</title><rect x="37.7778%" y="373" width="2.2222%" height="15" fill="rgb(206,174,23)" fg:x="34" fg:w="2"/><text x="38.0278%" y="383.50">q..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 3.33%)</title><rect x="37.7778%" y="661" width="3.3333%" height="15" fill="rgb(211,33,43)" fg:x="34" fg:w="3"/><text x="38.0278%" y="671.50">&lt;st..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 3.33%)</title><rect x="37.7778%" y="645" width="3.3333%" height="15" fill="rgb(245,58,50)" fg:x="34" fg:w="3"/><text x="38.0278%" y="655.50">&lt;st..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 3.33%)</title><rect x="37.7778%" y="629" width="3.3333%" height="15" fill="rgb(244,68,36)" fg:x="34" fg:w="3"/><text x="38.0278%" y="639.50">&lt;st..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3 samples, 3.33%)</title><rect x="37.7778%" y="613" width="3.3333%" height="15" fill="rgb(232,229,15)" fg:x="34" fg:w="3"/><text x="38.0278%" y="623.50">std..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (3 samples, 3.33%)</title><rect x="37.7778%" y="597" width="3.3333%" height="15" fill="rgb(254,30,23)" fg:x="34" fg:w="3"/><text x="38.0278%" y="607.50">&lt;st..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (3 samples, 3.33%)</title><rect x="37.7778%" y="581" width="3.3333%" height="15" fill="rgb(235,160,14)" fg:x="34" fg:w="3"/><text x="38.0278%" y="591.50">&lt;st..</text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 3.33%)</title><rect x="37.7778%" y="565" width="3.3333%" height="15" fill="rgb(212,155,44)" fg:x="34" fg:w="3"/><text x="38.0278%" y="575.50">std..</text></g><g><title>__libc_write (3 samples, 3.33%)</title><rect x="37.7778%" y="549" width="3.3333%" height="15" fill="rgb(226,2,50)" fg:x="34" fg:w="3"/><text x="38.0278%" y="559.50">__l..</text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 3.33%)</title><rect x="37.7778%" y="533" width="3.3333%" height="15" fill="rgb(234,177,6)" fg:x="34" fg:w="3"/><text x="38.0278%" y="543.50">ent..</text></g><g><title>do_syscall_64 (3 samples, 3.33%)</title><rect x="37.7778%" y="517" width="3.3333%" height="15" fill="rgb(217,24,9)" fg:x="34" fg:w="3"/><text x="38.0278%" y="527.50">do_..</text></g><g><title>__x64_sys_write (3 samples, 3.33%)</title><rect x="37.7778%" y="501" width="3.3333%" height="15" fill="rgb(220,13,46)" fg:x="34" fg:w="3"/><text x="38.0278%" y="511.50">__x..</text></g><g><title>ksys_write (3 samples, 3.33%)</title><rect x="37.7778%" y="485" width="3.3333%" height="15" fill="rgb(239,221,27)" fg:x="34" fg:w="3"/><text x="38.0278%" y="495.50">ksy..</text></g><g><title>vfs_write (3 samples, 3.33%)</title><rect x="37.7778%" y="469" width="3.3333%" height="15" fill="rgb(222,198,25)" fg:x="34" fg:w="3"/><text x="38.0278%" y="479.50">vfs..</text></g><g><title>__vfs_write (3 samples, 3.33%)</title><rect x="37.7778%" y="453" width="3.3333%" height="15" fill="rgb(211,99,13)" fg:x="34" fg:w="3"/><text x="38.0278%" y="463.50">__v..</text></g><g><title>tty_write (3 samples, 3.33%)</title><rect x="37.7778%" y="437" width="3.3333%" height="15" fill="rgb(232,111,31)" fg:x="34" fg:w="3"/><text x="38.0278%" y="447.50">tty..</text></g><g><title>n_tty_write (3 samples, 3.33%)</title><rect x="37.7778%" y="421" width="3.3333%" height="15" fill="rgb(245,82,37)" fg:x="34" fg:w="3"/><text x="38.0278%" y="431.50">n_t..</text></g><g><title>up_read (1 samples, 1.11%)</title><rect x="40.0000%" y="405" width="1.1111%" height="15" fill="rgb(227,149,46)" fg:x="36" fg:w="1"/><text x="40.2500%" y="415.50"></text></g><g><title>&lt;log4rs::append::console::ConsoleAppender as log4rs::append::Append&gt;::append (4 samples, 4.44%)</title><rect x="37.7778%" y="693" width="4.4444%" height="15" fill="rgb(218,36,50)" fg:x="34" fg:w="4"/><text x="38.0278%" y="703.50">&lt;log4..</text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (4 samples, 4.44%)</title><rect x="37.7778%" y="677" width="4.4444%" height="15" fill="rgb(226,80,48)" fg:x="34" fg:w="4"/><text x="38.0278%" y="687.50">&lt;log4..</text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (1 samples, 1.11%)</title><rect x="41.1111%" y="661" width="1.1111%" height="15" fill="rgb(238,224,15)" fg:x="37" fg:w="1"/><text x="41.3611%" y="671.50"></text></g><g><title>chrono::format::formatting::DelayedFormat&lt;I&gt;::new_with_offset (1 samples, 1.11%)</title><rect x="41.1111%" y="645" width="1.1111%" height="15" fill="rgb(241,136,10)" fg:x="37" fg:w="1"/><text x="41.3611%" y="655.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 1.11%)</title><rect x="41.1111%" y="629" width="1.1111%" height="15" fill="rgb(208,32,45)" fg:x="37" fg:w="1"/><text x="41.3611%" y="639.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (1 samples, 1.11%)</title><rect x="41.1111%" y="613" width="1.1111%" height="15" fill="rgb(207,135,9)" fg:x="37" fg:w="1"/><text x="41.3611%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 1.11%)</title><rect x="41.1111%" y="597" width="1.1111%" height="15" fill="rgb(206,86,44)" fg:x="37" fg:w="1"/><text x="41.3611%" y="607.50"></text></g><g><title>core::fmt::run (1 samples, 1.11%)</title><rect x="41.1111%" y="581" width="1.1111%" height="15" fill="rgb(245,177,15)" fg:x="37" fg:w="1"/><text x="41.3611%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 1.11%)</title><rect x="41.1111%" y="565" width="1.1111%" height="15" fill="rgb(206,64,50)" fg:x="37" fg:w="1"/><text x="41.3611%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 1.11%)</title><rect x="41.1111%" y="549" width="1.1111%" height="15" fill="rgb(234,36,40)" fg:x="37" fg:w="1"/><text x="41.3611%" y="559.50"></text></g><g><title>&lt;log4rs::encode::pattern::PatternEncoder as log4rs::encode::Encode&gt;::encode (1 samples, 1.11%)</title><rect x="42.2222%" y="677" width="1.1111%" height="15" fill="rgb(213,64,8)" fg:x="38" fg:w="1"/><text x="42.4722%" y="687.50"></text></g><g><title>log4rs::encode::pattern::FormattedChunk::encode (1 samples, 1.11%)</title><rect x="42.2222%" y="661" width="1.1111%" height="15" fill="rgb(210,75,36)" fg:x="38" fg:w="1"/><text x="42.4722%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 1.11%)</title><rect x="42.2222%" y="645" width="1.1111%" height="15" fill="rgb(229,88,21)" fg:x="38" fg:w="1"/><text x="42.4722%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 1.11%)</title><rect x="42.2222%" y="629" width="1.1111%" height="15" fill="rgb(252,204,47)" fg:x="38" fg:w="1"/><text x="42.4722%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 1.11%)</title><rect x="42.2222%" y="613" width="1.1111%" height="15" fill="rgb(208,77,27)" fg:x="38" fg:w="1"/><text x="42.4722%" y="623.50"></text></g><g><title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 1.11%)</title><rect x="42.2222%" y="597" width="1.1111%" height="15" fill="rgb(221,76,26)" fg:x="38" fg:w="1"/><text x="42.4722%" y="607.50"></text></g><g><title>chrono::format::formatting::format (1 samples, 1.11%)</title><rect x="42.2222%" y="581" width="1.1111%" height="15" fill="rgb(225,139,18)" fg:x="38" fg:w="1"/><text x="42.4722%" y="591.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="42.2222%" y="565" width="1.1111%" height="15" fill="rgb(230,137,11)" fg:x="38" fg:w="1"/><text x="42.4722%" y="575.50"></text></g><g><title>?? (1 samples, 1.11%)</title><rect x="42.2222%" y="549" width="1.1111%" height="15" fill="rgb(212,28,1)" fg:x="38" fg:w="1"/><text x="42.4722%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="42.2222%" y="533" width="1.1111%" height="15" fill="rgb(248,164,17)" fg:x="38" fg:w="1"/><text x="42.4722%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 1.11%)</title><rect x="42.2222%" y="517" width="1.1111%" height="15" fill="rgb(222,171,42)" fg:x="38" fg:w="1"/><text x="42.4722%" y="527.50"></text></g><g><title>ord::okx::protocol::protocol_manager::ProtocolManager&lt;RW&gt;::index_block (7 samples, 7.78%)</title><rect x="36.6667%" y="741" width="7.7778%" height="15" fill="rgb(243,84,45)" fg:x="33" fg:w="7"/><text x="36.9167%" y="751.50">ord::okx::p..</text></g><g><title>log::__private_api::log (6 samples, 6.67%)</title><rect x="37.7778%" y="725" width="6.6667%" height="15" fill="rgb(252,49,23)" fg:x="34" fg:w="6"/><text x="38.0278%" y="735.50">log::__pr..</text></g><g><title>&lt;log4rs::Logger as log::Log&gt;::log (6 samples, 6.67%)</title><rect x="37.7778%" y="709" width="6.6667%" height="15" fill="rgb(215,19,7)" fg:x="34" fg:w="6"/><text x="38.0278%" y="719.50">&lt;log4rs::..</text></g><g><title>&lt;log4rs::append::rolling_file::RollingFileAppender as log4rs::append::Append&gt;::append (2 samples, 2.22%)</title><rect x="42.2222%" y="693" width="2.2222%" height="15" fill="rgb(238,81,41)" fg:x="38" fg:w="2"/><text x="42.4722%" y="703.50">&lt;..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 1.11%)</title><rect x="43.3333%" y="677" width="1.1111%" height="15" fill="rgb(210,199,37)" fg:x="39" fg:w="1"/><text x="43.5833%" y="687.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 1.11%)</title><rect x="43.3333%" y="661" width="1.1111%" height="15" fill="rgb(244,192,49)" fg:x="39" fg:w="1"/><text x="43.5833%" y="671.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 1.11%)</title><rect x="43.3333%" y="645" width="1.1111%" height="15" fill="rgb(226,211,11)" fg:x="39" fg:w="1"/><text x="43.5833%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 1.11%)</title><rect x="43.3333%" y="629" width="1.1111%" height="15" fill="rgb(236,162,54)" fg:x="39" fg:w="1"/><text x="43.5833%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 1.11%)</title><rect x="43.3333%" y="613" width="1.1111%" height="15" fill="rgb(220,229,9)" fg:x="39" fg:w="1"/><text x="43.5833%" y="623.50"></text></g><g><title>__libc_write (1 samples, 1.11%)</title><rect x="43.3333%" y="597" width="1.1111%" height="15" fill="rgb(250,87,22)" fg:x="39" fg:w="1"/><text x="43.5833%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 1.11%)</title><rect x="43.3333%" y="581" width="1.1111%" height="15" fill="rgb(239,43,17)" fg:x="39" fg:w="1"/><text x="43.5833%" y="591.50"></text></g><g><title>do_syscall_64 (1 samples, 1.11%)</title><rect x="43.3333%" y="565" width="1.1111%" height="15" fill="rgb(231,177,25)" fg:x="39" fg:w="1"/><text x="43.5833%" y="575.50"></text></g><g><title>__x64_sys_write (1 samples, 1.11%)</title><rect x="43.3333%" y="549" width="1.1111%" height="15" fill="rgb(219,179,1)" fg:x="39" fg:w="1"/><text x="43.5833%" y="559.50"></text></g><g><title>ksys_write (1 samples, 1.11%)</title><rect x="43.3333%" y="533" width="1.1111%" height="15" fill="rgb(238,219,53)" fg:x="39" fg:w="1"/><text x="43.5833%" y="543.50"></text></g><g><title>vfs_write (1 samples, 1.11%)</title><rect x="43.3333%" y="517" width="1.1111%" height="15" fill="rgb(232,167,36)" fg:x="39" fg:w="1"/><text x="43.5833%" y="527.50"></text></g><g><title>__vfs_write (1 samples, 1.11%)</title><rect x="43.3333%" y="501" width="1.1111%" height="15" fill="rgb(244,19,51)" fg:x="39" fg:w="1"/><text x="43.5833%" y="511.50"></text></g><g><title>new_sync_write (1 samples, 1.11%)</title><rect x="43.3333%" y="485" width="1.1111%" height="15" fill="rgb(224,6,22)" fg:x="39" fg:w="1"/><text x="43.5833%" y="495.50"></text></g><g><title>ext4_file_write_iter (1 samples, 1.11%)</title><rect x="43.3333%" y="469" width="1.1111%" height="15" fill="rgb(224,145,5)" fg:x="39" fg:w="1"/><text x="43.5833%" y="479.50"></text></g><g><title>__generic_file_write_iter (1 samples, 1.11%)</title><rect x="43.3333%" y="453" width="1.1111%" height="15" fill="rgb(234,130,49)" fg:x="39" fg:w="1"/><text x="43.5833%" y="463.50"></text></g><g><title>generic_perform_write (1 samples, 1.11%)</title><rect x="43.3333%" y="437" width="1.1111%" height="15" fill="rgb(254,6,2)" fg:x="39" fg:w="1"/><text x="43.5833%" y="447.50"></text></g><g><title>ext4_da_write_end (1 samples, 1.11%)</title><rect x="43.3333%" y="421" width="1.1111%" height="15" fill="rgb(208,96,46)" fg:x="39" fg:w="1"/><text x="43.5833%" y="431.50"></text></g><g><title>generic_write_end (1 samples, 1.11%)</title><rect x="43.3333%" y="405" width="1.1111%" height="15" fill="rgb(239,3,39)" fg:x="39" fg:w="1"/><text x="43.5833%" y="415.50"></text></g><g><title>__mark_inode_dirty (1 samples, 1.11%)</title><rect x="43.3333%" y="389" width="1.1111%" height="15" fill="rgb(233,210,1)" fg:x="39" fg:w="1"/><text x="43.5833%" y="399.50"></text></g><g><title>ext4_dirty_inode (1 samples, 1.11%)</title><rect x="43.3333%" y="373" width="1.1111%" height="15" fill="rgb(244,137,37)" fg:x="39" fg:w="1"/><text x="43.5833%" y="383.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 1.11%)</title><rect x="43.3333%" y="357" width="1.1111%" height="15" fill="rgb(240,136,2)" fg:x="39" fg:w="1"/><text x="43.5833%" y="367.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::insert (3 samples, 3.33%)</title><rect x="44.4444%" y="741" width="3.3333%" height="15" fill="rgb(239,18,37)" fg:x="40" fg:w="3"/><text x="44.6944%" y="751.50">red..</text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::insert (3 samples, 3.33%)</title><rect x="44.4444%" y="725" width="3.3333%" height="15" fill="rgb(218,185,22)" fg:x="40" fg:w="3"/><text x="44.6944%" y="735.50">red..</text></g><g><title>redb::tree_store::btree_mutator::MutateHelper&lt;K,V&gt;::insert_helper (2 samples, 2.22%)</title><rect x="45.5556%" y="709" width="2.2222%" height="15" fill="rgb(225,218,4)" fg:x="41" fg:w="2"/><text x="45.8056%" y="719.50">r..</text></g><g><title>redb::tree_store::page_store::page_manager::TransactionalMemory::get_page_mut (2 samples, 2.22%)</title><rect x="45.5556%" y="693" width="2.2222%" height="15" fill="rgb(230,182,32)" fg:x="41" fg:w="2"/><text x="45.8056%" y="703.50">r..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::write (2 samples, 2.22%)</title><rect x="45.5556%" y="677" width="2.2222%" height="15" fill="rgb(242,56,43)" fg:x="41" fg:w="2"/><text x="45.8056%" y="687.50">r..</text></g><g><title>__libc_malloc (1 samples, 1.11%)</title><rect x="47.7778%" y="725" width="1.1111%" height="15" fill="rgb(233,99,24)" fg:x="43" fg:w="1"/><text x="48.0278%" y="735.50"></text></g><g><title>redb::transactions::WriteTransaction::open_multimap_table (2 samples, 2.22%)</title><rect x="47.7778%" y="741" width="2.2222%" height="15" fill="rgb(234,209,42)" fg:x="43" fg:w="2"/><text x="48.0278%" y="751.50">r..</text></g><g><title>redb::transactions::TableNamespace::inner_open (1 samples, 1.11%)</title><rect x="48.8889%" y="725" width="1.1111%" height="15" fill="rgb(227,7,12)" fg:x="44" fg:w="1"/><text x="49.1389%" y="735.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_or_create_table (1 samples, 1.11%)</title><rect x="48.8889%" y="709" width="1.1111%" height="15" fill="rgb(245,203,43)" fg:x="44" fg:w="1"/><text x="49.1389%" y="719.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table (1 samples, 1.11%)</title><rect x="48.8889%" y="693" width="1.1111%" height="15" fill="rgb(238,205,33)" fg:x="44" fg:w="1"/><text x="49.1389%" y="703.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table_untyped (1 samples, 1.11%)</title><rect x="48.8889%" y="677" width="1.1111%" height="15" fill="rgb(231,56,7)" fg:x="44" fg:w="1"/><text x="49.1389%" y="687.50"></text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get (1 samples, 1.11%)</title><rect x="48.8889%" y="661" width="1.1111%" height="15" fill="rgb(244,186,29)" fg:x="44" fg:w="1"/><text x="49.1389%" y="671.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1 samples, 1.11%)</title><rect x="48.8889%" y="645" width="1.1111%" height="15" fill="rgb(234,111,31)" fg:x="44" fg:w="1"/><text x="49.1389%" y="655.50"></text></g><g><title>&lt;&amp;str as redb::types::RedbKey&gt;::compare (1 samples, 1.11%)</title><rect x="48.8889%" y="629" width="1.1111%" height="15" fill="rgb(241,149,10)" fg:x="44" fg:w="1"/><text x="49.1389%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 1.11%)</title><rect x="48.8889%" y="613" width="1.1111%" height="15" fill="rgb(249,206,44)" fg:x="44" fg:w="1"/><text x="49.1389%" y="623.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 1.11%)</title><rect x="48.8889%" y="597" width="1.1111%" height="15" fill="rgb(251,153,30)" fg:x="44" fg:w="1"/><text x="49.1389%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 2.22%)</title><rect x="50.0000%" y="725" width="2.2222%" height="15" fill="rgb(239,152,38)" fg:x="45" fg:w="2"/><text x="50.2500%" y="735.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 1.11%)</title><rect x="51.1111%" y="709" width="1.1111%" height="15" fill="rgb(249,139,47)" fg:x="46" fg:w="1"/><text x="51.3611%" y="719.50"></text></g><g><title>redb::table::Table&lt;K,V&gt;::new (1 samples, 1.11%)</title><rect x="52.2222%" y="725" width="1.1111%" height="15" fill="rgb(244,64,35)" fg:x="47" fg:w="1"/><text x="52.4722%" y="735.50"></text></g><g><title>redb::transactions::TableNamespace::inner_open (1 samples, 1.11%)</title><rect x="53.3333%" y="725" width="1.1111%" height="15" fill="rgb(216,46,15)" fg:x="48" fg:w="1"/><text x="53.5833%" y="735.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="55.5556%" y="693" width="1.1111%" height="15" fill="rgb(250,74,19)" fg:x="50" fg:w="1"/><text x="55.8056%" y="703.50"></text></g><g><title>redb::tree_store::btree::Btree&lt;K,V&gt;::get_helper (1 samples, 1.11%)</title><rect x="56.6667%" y="661" width="1.1111%" height="15" fill="rgb(249,42,33)" fg:x="51" fg:w="1"/><text x="56.9167%" y="671.50"></text></g><g><title>&lt;&amp;str as redb::types::RedbKey&gt;::compare (1 samples, 1.11%)</title><rect x="56.6667%" y="645" width="1.1111%" height="15" fill="rgb(242,149,17)" fg:x="51" fg:w="1"/><text x="56.9167%" y="655.50"></text></g><g><title>redb::tree_store::table_tree::TableTree::get_table_untyped (2 samples, 2.22%)</title><rect x="56.6667%" y="693" width="2.2222%" height="15" fill="rgb(244,29,21)" fg:x="51" fg:w="2"/><text x="56.9167%" y="703.50">r..</text></g><g><title>redb::tree_store::btree::BtreeMut&lt;K,V&gt;::get (2 samples, 2.22%)</title><rect x="56.6667%" y="677" width="2.2222%" height="15" fill="rgb(220,130,37)" fg:x="51" fg:w="2"/><text x="56.9167%" y="687.50">r..</text></g><g><title>redb::tree_store::page_store::cached_file::PagedCachedFile::read (1 samples, 1.11%)</title><rect x="57.7778%" y="661" width="1.1111%" height="15" fill="rgb(211,67,2)" fg:x="52" fg:w="1"/><text x="58.0278%" y="671.50"></text></g><g><title>redb::transactions::WriteTransaction::open_table (9 samples, 10.00%)</title><rect x="50.0000%" y="741" width="10.0000%" height="15" fill="rgb(235,68,52)" fg:x="45" fg:w="9"/><text x="50.2500%" y="751.50">redb::transact..</text></g><g><title>redb::tree_store::table_tree::TableTree::get_or_create_table (5 samples, 5.56%)</title><rect x="54.4444%" y="725" width="5.5556%" height="15" fill="rgb(246,142,3)" fg:x="49" fg:w="5"/><text x="54.6944%" y="735.50">redb::t..</text></g><g><title>redb::tree_store::table_tree::TableTree::get_table (5 samples, 5.56%)</title><rect x="54.4444%" y="709" width="5.5556%" height="15" fill="rgb(241,25,7)" fg:x="49" fg:w="5"/><text x="54.6944%" y="719.50">redb::t..</text></g><g><title>redb::tuple_types::&lt;impl redb::types::RedbValue for (T0,T1,T2,T3,T4,T5,T6,T7,T8)&gt;::type_name (1 samples, 1.11%)</title><rect x="58.8889%" y="693" width="1.1111%" height="15" fill="rgb(242,119,39)" fg:x="53" fg:w="1"/><text x="59.1389%" y="703.50"></text></g><g><title>cfree (1 samples, 1.11%)</title><rect x="58.8889%" y="677" width="1.1111%" height="15" fill="rgb(241,98,45)" fg:x="53" fg:w="1"/><text x="59.1389%" y="687.50"></text></g><g><title>ord::index::updater::Updater::index_block (43 samples, 47.78%)</title><rect x="14.4444%" y="757" width="47.7778%" height="15" fill="rgb(254,28,30)" fg:x="13" fg:w="43"/><text x="14.6944%" y="767.50">ord::index::updater::Updater::index_block</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 2.22%)</title><rect x="60.0000%" y="741" width="2.2222%" height="15" fill="rgb(241,142,54)" fg:x="54" fg:w="2"/><text x="60.2500%" y="751.50">s..</text></g><g><title>__clock_gettime (1 samples, 1.11%)</title><rect x="61.1111%" y="725" width="1.1111%" height="15" fill="rgb(222,85,15)" fg:x="55" fg:w="1"/><text x="61.3611%" y="735.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 1.11%)</title><rect x="61.1111%" y="709" width="1.1111%" height="15" fill="rgb(210,85,47)" fg:x="55" fg:w="1"/><text x="61.3611%" y="719.50"></text></g><g><title>ord::index::Index::update (48 samples, 53.33%)</title><rect x="12.2222%" y="789" width="53.3333%" height="15" fill="rgb(224,206,25)" fg:x="11" fg:w="48"/><text x="12.4722%" y="799.50">ord::index::Index::update</text></g><g><title>ord::index::updater::Updater::update_index (48 samples, 53.33%)</title><rect x="12.2222%" y="773" width="53.3333%" height="15" fill="rgb(243,201,19)" fg:x="11" fg:w="48"/><text x="12.4722%" y="783.50">ord::index::updater::Updater::update_index</text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (3 samples, 3.33%)</title><rect x="62.2222%" y="757" width="3.3333%" height="15" fill="rgb(236,59,4)" fg:x="56" fg:w="3"/><text x="62.4722%" y="767.50">std..</text></g><g><title>std::sync::mpmc::context::Context::with::_{{closure}} (3 samples, 3.33%)</title><rect x="62.2222%" y="741" width="3.3333%" height="15" fill="rgb(254,179,45)" fg:x="56" fg:w="3"/><text x="62.4722%" y="751.50">std..</text></g><g><title>std::thread::park (2 samples, 2.22%)</title><rect x="63.3333%" y="725" width="2.2222%" height="15" fill="rgb(226,14,10)" fg:x="57" fg:w="2"/><text x="63.5833%" y="735.50">s..</text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (2 samples, 2.22%)</title><rect x="63.3333%" y="709" width="2.2222%" height="15" fill="rgb(244,27,41)" fg:x="57" fg:w="2"/><text x="63.5833%" y="719.50">s..</text></g><g><title>std::sys::unix::futex::futex_wait (2 samples, 2.22%)</title><rect x="63.3333%" y="693" width="2.2222%" height="15" fill="rgb(235,35,32)" fg:x="57" fg:w="2"/><text x="63.5833%" y="703.50">s..</text></g><g><title>syscall (2 samples, 2.22%)</title><rect x="63.3333%" y="677" width="2.2222%" height="15" fill="rgb(218,68,31)" fg:x="57" fg:w="2"/><text x="63.5833%" y="687.50">s..</text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 2.22%)</title><rect x="63.3333%" y="661" width="2.2222%" height="15" fill="rgb(207,120,37)" fg:x="57" fg:w="2"/><text x="63.5833%" y="671.50">e..</text></g><g><title>do_syscall_64 (2 samples, 2.22%)</title><rect x="63.3333%" y="645" width="2.2222%" height="15" fill="rgb(227,98,0)" fg:x="57" fg:w="2"/><text x="63.5833%" y="655.50">d..</text></g><g><title>__x64_sys_futex (2 samples, 2.22%)</title><rect x="63.3333%" y="629" width="2.2222%" height="15" fill="rgb(207,7,3)" fg:x="57" fg:w="2"/><text x="63.5833%" y="639.50">_..</text></g><g><title>do_futex (2 samples, 2.22%)</title><rect x="63.3333%" y="613" width="2.2222%" height="15" fill="rgb(206,98,19)" fg:x="57" fg:w="2"/><text x="63.5833%" y="623.50">d..</text></g><g><title>futex_wait (2 samples, 2.22%)</title><rect x="63.3333%" y="597" width="2.2222%" height="15" fill="rgb(217,5,26)" fg:x="57" fg:w="2"/><text x="63.5833%" y="607.50">f..</text></g><g><title>futex_wait_queue_me (2 samples, 2.22%)</title><rect x="63.3333%" y="581" width="2.2222%" height="15" fill="rgb(235,190,38)" fg:x="57" fg:w="2"/><text x="63.5833%" y="591.50">f..</text></g><g><title>schedule (2 samples, 2.22%)</title><rect x="63.3333%" y="565" width="2.2222%" height="15" fill="rgb(247,86,24)" fg:x="57" fg:w="2"/><text x="63.5833%" y="575.50">s..</text></g><g><title>__sched_text_start (2 samples, 2.22%)</title><rect x="63.3333%" y="549" width="2.2222%" height="15" fill="rgb(205,101,16)" fg:x="57" fg:w="2"/><text x="63.5833%" y="559.50">_..</text></g><g><title>finish_task_switch (2 samples, 2.22%)</title><rect x="63.3333%" y="533" width="2.2222%" height="15" fill="rgb(246,168,33)" fg:x="57" fg:w="2"/><text x="63.5833%" y="543.50">f..</text></g><g><title>__libc_malloc (1 samples, 1.11%)</title><rect x="66.6667%" y="693" width="1.1111%" height="15" fill="rgb(231,114,1)" fg:x="60" fg:w="1"/><text x="66.9167%" y="703.50"></text></g><g><title>_IO_str_seekoff (1 samples, 1.11%)</title><rect x="66.6667%" y="677" width="1.1111%" height="15" fill="rgb(207,184,53)" fg:x="60" fg:w="1"/><text x="66.9167%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 2.22%)</title><rect x="66.6667%" y="741" width="2.2222%" height="15" fill="rgb(224,95,51)" fg:x="60" fg:w="2"/><text x="66.9167%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 2.22%)</title><rect x="66.6667%" y="725" width="2.2222%" height="15" fill="rgb(212,188,45)" fg:x="60" fg:w="2"/><text x="66.9167%" y="735.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 2.22%)</title><rect x="66.6667%" y="709" width="2.2222%" height="15" fill="rgb(223,154,38)" fg:x="60" fg:w="2"/><text x="66.9167%" y="719.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 1.11%)</title><rect x="67.7778%" y="693" width="1.1111%" height="15" fill="rgb(251,22,52)" fg:x="61" fg:w="1"/><text x="68.0278%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 1.11%)</title><rect x="67.7778%" y="677" width="1.1111%" height="15" fill="rgb(229,209,22)" fg:x="61" fg:w="1"/><text x="68.0278%" y="687.50"></text></g><g><title>jsonrpc::Response::result (1 samples, 1.11%)</title><rect x="68.8889%" y="741" width="1.1111%" height="15" fill="rgb(234,138,34)" fg:x="62" fg:w="1"/><text x="69.1389%" y="751.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 1.11%)</title><rect x="68.8889%" y="725" width="1.1111%" height="15" fill="rgb(212,95,11)" fg:x="62" fg:w="1"/><text x="69.1389%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 1.11%)</title><rect x="68.8889%" y="709" width="1.1111%" height="15" fill="rgb(240,179,47)" fg:x="62" fg:w="1"/><text x="69.1389%" y="719.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 1.11%)</title><rect x="68.8889%" y="693" width="1.1111%" height="15" fill="rgb(240,163,11)" fg:x="62" fg:w="1"/><text x="69.1389%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 1.11%)</title><rect x="68.8889%" y="677" width="1.1111%" height="15" fill="rgb(236,37,12)" fg:x="62" fg:w="1"/><text x="69.1389%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 2.22%)</title><rect x="70.0000%" y="549" width="2.2222%" height="15" fill="rgb(232,164,16)" fg:x="63" fg:w="2"/><text x="70.2500%" y="559.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.11%)</title><rect x="71.1111%" y="533" width="1.1111%" height="15" fill="rgb(244,205,15)" fg:x="64" fg:w="1"/><text x="71.3611%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.11%)</title><rect x="71.1111%" y="517" width="1.1111%" height="15" fill="rgb(223,117,47)" fg:x="64" fg:w="1"/><text x="71.3611%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.11%)</title><rect x="71.1111%" y="501" width="1.1111%" height="15" fill="rgb(244,107,35)" fg:x="64" fg:w="1"/><text x="71.3611%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 1.11%)</title><rect x="71.1111%" y="485" width="1.1111%" height="15" fill="rgb(205,140,8)" fg:x="64" fg:w="1"/><text x="71.3611%" y="495.50"></text></g><g><title>?? (1 samples, 1.11%)</title><rect x="71.1111%" y="469" width="1.1111%" height="15" fill="rgb(228,84,46)" fg:x="64" fg:w="1"/><text x="71.3611%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 1.11%)</title><rect x="71.1111%" y="453" width="1.1111%" height="15" fill="rgb(254,188,9)" fg:x="64" fg:w="1"/><text x="71.3611%" y="463.50"></text></g><g><title>realloc (1 samples, 1.11%)</title><rect x="71.1111%" y="437" width="1.1111%" height="15" fill="rgb(206,112,54)" fg:x="64" fg:w="1"/><text x="71.3611%" y="447.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="709" width="3.3333%" height="15" fill="rgb(216,84,49)" fg:x="63" fg:w="3"/><text x="70.2500%" y="719.50">&lt;co..</text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="693" width="3.3333%" height="15" fill="rgb(214,194,35)" fg:x="63" fg:w="3"/><text x="70.2500%" y="703.50">cor..</text></g><g><title>core::fmt::write (3 samples, 3.33%)</title><rect x="70.0000%" y="677" width="3.3333%" height="15" fill="rgb(249,28,3)" fg:x="63" fg:w="3"/><text x="70.2500%" y="687.50">cor..</text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="661" width="3.3333%" height="15" fill="rgb(222,56,52)" fg:x="63" fg:w="3"/><text x="70.2500%" y="671.50">cor..</text></g><g><title>&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="645" width="3.3333%" height="15" fill="rgb(245,217,50)" fg:x="63" fg:w="3"/><text x="70.2500%" y="655.50">&lt;co..</text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="629" width="3.3333%" height="15" fill="rgb(213,201,24)" fg:x="63" fg:w="3"/><text x="70.2500%" y="639.50">cor..</text></g><g><title>core::fmt::write (3 samples, 3.33%)</title><rect x="70.0000%" y="613" width="3.3333%" height="15" fill="rgb(248,116,28)" fg:x="63" fg:w="3"/><text x="70.2500%" y="623.50">cor..</text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="597" width="3.3333%" height="15" fill="rgb(219,72,43)" fg:x="63" fg:w="3"/><text x="70.2500%" y="607.50">cor..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (3 samples, 3.33%)</title><rect x="70.0000%" y="581" width="3.3333%" height="15" fill="rgb(209,138,14)" fg:x="63" fg:w="3"/><text x="70.2500%" y="591.50">cor..</text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 3.33%)</title><rect x="70.0000%" y="565" width="3.3333%" height="15" fill="rgb(222,18,33)" fg:x="63" fg:w="3"/><text x="70.2500%" y="575.50">cor..</text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 1.11%)</title><rect x="72.2222%" y="549" width="1.1111%" height="15" fill="rgb(213,199,7)" fg:x="65" fg:w="1"/><text x="72.4722%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 1.11%)</title><rect x="72.2222%" y="533" width="1.1111%" height="15" fill="rgb(250,110,10)" fg:x="65" fg:w="1"/><text x="72.4722%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 1.11%)</title><rect x="73.3333%" y="645" width="1.1111%" height="15" fill="rgb(248,123,6)" fg:x="66" fg:w="1"/><text x="73.5833%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 2.22%)</title><rect x="73.3333%" y="709" width="2.2222%" height="15" fill="rgb(206,91,31)" fg:x="66" fg:w="2"/><text x="73.5833%" y="719.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 2.22%)</title><rect x="73.3333%" y="693" width="2.2222%" height="15" fill="rgb(211,154,13)" fg:x="66" fg:w="2"/><text x="73.5833%" y="703.50">&lt;..</text></g><g><title>?? (2 samples, 2.22%)</title><rect x="73.3333%" y="677" width="2.2222%" height="15" fill="rgb(225,148,7)" fg:x="66" fg:w="2"/><text x="73.5833%" y="687.50">??</text></g><g><title>alloc::alloc::realloc (2 samples, 2.22%)</title><rect x="73.3333%" y="661" width="2.2222%" height="15" fill="rgb(220,160,43)" fg:x="66" fg:w="2"/><text x="73.5833%" y="671.50">a..</text></g><g><title>realloc (1 samples, 1.11%)</title><rect x="74.4444%" y="645" width="1.1111%" height="15" fill="rgb(213,52,39)" fg:x="67" fg:w="1"/><text x="74.6944%" y="655.50"></text></g><g><title>_IO_str_seekoff (1 samples, 1.11%)</title><rect x="74.4444%" y="629" width="1.1111%" height="15" fill="rgb(243,137,7)" fg:x="67" fg:w="1"/><text x="74.6944%" y="639.50"></text></g><g><title>serde_json::de::from_reader (2 samples, 2.22%)</title><rect x="75.5556%" y="709" width="2.2222%" height="15" fill="rgb(230,79,13)" fg:x="68" fg:w="2"/><text x="75.8056%" y="719.50">s..</text></g><g><title>serde_json::de::from_trait (2 samples, 2.22%)</title><rect x="75.5556%" y="693" width="2.2222%" height="15" fill="rgb(247,105,23)" fg:x="68" fg:w="2"/><text x="75.8056%" y="703.50">s..</text></g><g><title>jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize (2 samples, 2.22%)</title><rect x="75.5556%" y="677" width="2.2222%" height="15" fill="rgb(223,179,41)" fg:x="68" fg:w="2"/><text x="75.8056%" y="687.50">j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 2.22%)</title><rect x="75.5556%" y="661" width="2.2222%" height="15" fill="rgb(218,9,34)" fg:x="68" fg:w="2"/><text x="75.8056%" y="671.50">&lt;..</text></g><g><title>&lt;jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 2.22%)</title><rect x="75.5556%" y="645" width="2.2222%" height="15" fill="rgb(222,106,8)" fg:x="68" fg:w="2"/><text x="75.8056%" y="655.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_value (2 samples, 2.22%)</title><rect x="75.5556%" y="629" width="2.2222%" height="15" fill="rgb(211,220,0)" fg:x="68" fg:w="2"/><text x="75.8056%" y="639.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 2.22%)</title><rect x="75.5556%" y="613" width="2.2222%" height="15" fill="rgb(229,52,16)" fg:x="68" fg:w="2"/><text x="75.8056%" y="623.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 2.22%)</title><rect x="75.5556%" y="597" width="2.2222%" height="15" fill="rgb(212,155,18)" fg:x="68" fg:w="2"/><text x="75.8056%" y="607.50">&lt;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2 samples, 2.22%)</title><rect x="75.5556%" y="581" width="2.2222%" height="15" fill="rgb(242,21,14)" fg:x="68" fg:w="2"/><text x="75.8056%" y="591.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 2.22%)</title><rect x="75.5556%" y="565" width="2.2222%" height="15" fill="rgb(222,19,48)" fg:x="68" fg:w="2"/><text x="75.8056%" y="575.50">&lt;..</text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (2 samples, 2.22%)</title><rect x="75.5556%" y="549" width="2.2222%" height="15" fill="rgb(232,45,27)" fg:x="68" fg:w="2"/><text x="75.8056%" y="559.50">&lt;..</text></g><g><title>serde_json::raw::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;::deserialize (2 samples, 2.22%)</title><rect x="75.5556%" y="533" width="2.2222%" height="15" fill="rgb(249,103,42)" fg:x="68" fg:w="2"/><text x="75.8056%" y="543.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (2 samples, 2.22%)</title><rect x="75.5556%" y="517" width="2.2222%" height="15" fill="rgb(246,81,33)" fg:x="68" fg:w="2"/><text x="75.8056%" y="527.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (2 samples, 2.22%)</title><rect x="75.5556%" y="501" width="2.2222%" height="15" fill="rgb(252,33,42)" fg:x="68" fg:w="2"/><text x="75.8056%" y="511.50">s..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (2 samples, 2.22%)</title><rect x="75.5556%" y="485" width="2.2222%" height="15" fill="rgb(209,212,41)" fg:x="68" fg:w="2"/><text x="75.8056%" y="495.50">s..</text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::ignore_str (2 samples, 2.22%)</title><rect x="75.5556%" y="469" width="2.2222%" height="15" fill="rgb(207,154,6)" fg:x="68" fg:w="2"/><text x="75.8056%" y="479.50">&lt;..</text></g><g><title>serde_json::read::next_or_eof (1 samples, 1.11%)</title><rect x="76.6667%" y="453" width="1.1111%" height="15" fill="rgb(223,64,47)" fg:x="69" fg:w="1"/><text x="76.9167%" y="463.50"></text></g><g><title>del_timer_sync (1 samples, 1.11%)</title><rect x="78.8889%" y="373" width="1.1111%" height="15" fill="rgb(211,161,38)" fg:x="71" fg:w="1"/><text x="79.1389%" y="383.50"></text></g><g><title>try_to_del_timer_sync (1 samples, 1.11%)</title><rect x="78.8889%" y="357" width="1.1111%" height="15" fill="rgb(219,138,40)" fg:x="71" fg:w="1"/><text x="79.1389%" y="367.50"></text></g><g><title>lock_timer_base (1 samples, 1.11%)</title><rect x="78.8889%" y="341" width="1.1111%" height="15" fill="rgb(241,228,46)" fg:x="71" fg:w="1"/><text x="79.1389%" y="351.50"></text></g><g><title>inet_recvmsg (3 samples, 3.33%)</title><rect x="77.7778%" y="453" width="3.3333%" height="15" fill="rgb(223,209,38)" fg:x="70" fg:w="3"/><text x="78.0278%" y="463.50">ine..</text></g><g><title>tcp_recvmsg (3 samples, 3.33%)</title><rect x="77.7778%" y="437" width="3.3333%" height="15" fill="rgb(236,164,45)" fg:x="70" fg:w="3"/><text x="78.0278%" y="447.50">tcp..</text></g><g><title>sk_wait_data (2 samples, 2.22%)</title><rect x="78.8889%" y="421" width="2.2222%" height="15" fill="rgb(231,15,5)" fg:x="71" fg:w="2"/><text x="79.1389%" y="431.50">s..</text></g><g><title>wait_woken (2 samples, 2.22%)</title><rect x="78.8889%" y="405" width="2.2222%" height="15" fill="rgb(252,35,15)" fg:x="71" fg:w="2"/><text x="79.1389%" y="415.50">w..</text></g><g><title>schedule_timeout (2 samples, 2.22%)</title><rect x="78.8889%" y="389" width="2.2222%" height="15" fill="rgb(248,181,18)" fg:x="71" fg:w="2"/><text x="79.1389%" y="399.50">s..</text></g><g><title>schedule (1 samples, 1.11%)</title><rect x="80.0000%" y="373" width="1.1111%" height="15" fill="rgb(233,39,42)" fg:x="72" fg:w="1"/><text x="80.2500%" y="383.50"></text></g><g><title>__sched_text_start (1 samples, 1.11%)</title><rect x="80.0000%" y="357" width="1.1111%" height="15" fill="rgb(238,110,33)" fg:x="72" fg:w="1"/><text x="80.2500%" y="367.50"></text></g><g><title>finish_task_switch (1 samples, 1.11%)</title><rect x="80.0000%" y="341" width="1.1111%" height="15" fill="rgb(233,195,10)" fg:x="72" fg:w="1"/><text x="80.2500%" y="351.50"></text></g><g><title>std::io::append_to_string (4 samples, 4.44%)</title><rect x="77.7778%" y="709" width="4.4444%" height="15" fill="rgb(254,105,3)" fg:x="70" fg:w="4"/><text x="78.0278%" y="719.50">std::..</text></g><g><title>std::io::BufRead::read_line::_{{closure}} (4 samples, 4.44%)</title><rect x="77.7778%" y="693" width="4.4444%" height="15" fill="rgb(221,225,9)" fg:x="70" fg:w="4"/><text x="78.0278%" y="703.50">std::..</text></g><g><title>std::io::read_until (4 samples, 4.44%)</title><rect x="77.7778%" y="677" width="4.4444%" height="15" fill="rgb(224,227,45)" fg:x="70" fg:w="4"/><text x="78.0278%" y="687.50">std::..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (4 samples, 4.44%)</title><rect x="77.7778%" y="661" width="4.4444%" height="15" fill="rgb(229,198,43)" fg:x="70" fg:w="4"/><text x="78.0278%" y="671.50">&lt;std:..</text></g><g><title>?? (4 samples, 4.44%)</title><rect x="77.7778%" y="645" width="4.4444%" height="15" fill="rgb(206,209,35)" fg:x="70" fg:w="4"/><text x="78.0278%" y="655.50">??</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (4 samples, 4.44%)</title><rect x="77.7778%" y="629" width="4.4444%" height="15" fill="rgb(245,195,53)" fg:x="70" fg:w="4"/><text x="78.0278%" y="639.50">std::..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (4 samples, 4.44%)</title><rect x="77.7778%" y="613" width="4.4444%" height="15" fill="rgb(240,92,26)" fg:x="70" fg:w="4"/><text x="78.0278%" y="623.50">&lt;std:..</text></g><g><title>std::sys_common::net::TcpStream::read_buf (4 samples, 4.44%)</title><rect x="77.7778%" y="597" width="4.4444%" height="15" fill="rgb(207,40,23)" fg:x="70" fg:w="4"/><text x="78.0278%" y="607.50">std::..</text></g><g><title>std::sys::unix::net::Socket::read_buf (4 samples, 4.44%)</title><rect x="77.7778%" y="581" width="4.4444%" height="15" fill="rgb(223,111,35)" fg:x="70" fg:w="4"/><text x="78.0278%" y="591.50">std::..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 4.44%)</title><rect x="77.7778%" y="565" width="4.4444%" height="15" fill="rgb(229,147,28)" fg:x="70" fg:w="4"/><text x="78.0278%" y="575.50">std::..</text></g><g><title>__libc_recv (4 samples, 4.44%)</title><rect x="77.7778%" y="549" width="4.4444%" height="15" fill="rgb(211,29,28)" fg:x="70" fg:w="4"/><text x="78.0278%" y="559.50">__lib..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 4.44%)</title><rect x="77.7778%" y="533" width="4.4444%" height="15" fill="rgb(228,72,33)" fg:x="70" fg:w="4"/><text x="78.0278%" y="543.50">entry..</text></g><g><title>do_syscall_64 (4 samples, 4.44%)</title><rect x="77.7778%" y="517" width="4.4444%" height="15" fill="rgb(205,214,31)" fg:x="70" fg:w="4"/><text x="78.0278%" y="527.50">do_sy..</text></g><g><title>__x64_sys_recvfrom (4 samples, 4.44%)</title><rect x="77.7778%" y="501" width="4.4444%" height="15" fill="rgb(224,111,15)" fg:x="70" fg:w="4"/><text x="78.0278%" y="511.50">__x64..</text></g><g><title>__sys_recvfrom (4 samples, 4.44%)</title><rect x="77.7778%" y="485" width="4.4444%" height="15" fill="rgb(253,21,26)" fg:x="70" fg:w="4"/><text x="78.0278%" y="495.50">__sys..</text></g><g><title>sock_recvmsg (4 samples, 4.44%)</title><rect x="77.7778%" y="469" width="4.4444%" height="15" fill="rgb(245,139,43)" fg:x="70" fg:w="4"/><text x="78.0278%" y="479.50">sock_..</text></g><g><title>security_socket_recvmsg (1 samples, 1.11%)</title><rect x="81.1111%" y="453" width="1.1111%" height="15" fill="rgb(252,170,7)" fg:x="73" fg:w="1"/><text x="81.3611%" y="463.50"></text></g><g><title>apparmor_socket_recvmsg (1 samples, 1.11%)</title><rect x="81.1111%" y="437" width="1.1111%" height="15" fill="rgb(231,118,14)" fg:x="73" fg:w="1"/><text x="81.3611%" y="447.50"></text></g><g><title>aa_sock_msg_perm (1 samples, 1.11%)</title><rect x="81.1111%" y="421" width="1.1111%" height="15" fill="rgb(238,83,0)" fg:x="73" fg:w="1"/><text x="81.3611%" y="431.50"></text></g><g><title>aa_sk_perm (1 samples, 1.11%)</title><rect x="81.1111%" y="405" width="1.1111%" height="15" fill="rgb(221,39,39)" fg:x="73" fg:w="1"/><text x="81.3611%" y="415.50"></text></g><g><title>tcp_ack (1 samples, 1.11%)</title><rect x="82.2222%" y="101" width="1.1111%" height="15" fill="rgb(222,119,46)" fg:x="74" fg:w="1"/><text x="82.4722%" y="111.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 1.11%)</title><rect x="82.2222%" y="85" width="1.1111%" height="15" fill="rgb(222,165,49)" fg:x="74" fg:w="1"/><text x="82.4722%" y="95.50"></text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (16 samples, 17.78%)</title><rect x="66.6667%" y="757" width="17.7778%" height="15" fill="rgb(219,113,52)" fg:x="60" fg:w="16"/><text x="66.9167%" y="767.50">&lt;bitcoincore_rpc::client::Cl..</text></g><g><title>jsonrpc::client::Client::send_request (13 samples, 14.44%)</title><rect x="70.0000%" y="741" width="14.4444%" height="15" fill="rgb(214,7,15)" fg:x="63" fg:w="13"/><text x="70.2500%" y="751.50">jsonrpc::client::Clien..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (13 samples, 14.44%)</title><rect x="70.0000%" y="725" width="14.4444%" height="15" fill="rgb(235,32,4)" fg:x="63" fg:w="13"/><text x="70.2500%" y="735.50">&lt;jsonrpc::simple_http:..</text></g><g><title>std::net::udp::UdpSocket::send (2 samples, 2.22%)</title><rect x="82.2222%" y="709" width="2.2222%" height="15" fill="rgb(238,90,54)" fg:x="74" fg:w="2"/><text x="82.4722%" y="719.50">s..</text></g><g><title>std::sys_common::net::UdpSocket::send (2 samples, 2.22%)</title><rect x="82.2222%" y="693" width="2.2222%" height="15" fill="rgb(213,208,19)" fg:x="74" fg:w="2"/><text x="82.4722%" y="703.50">s..</text></g><g><title>__libc_send (2 samples, 2.22%)</title><rect x="82.2222%" y="677" width="2.2222%" height="15" fill="rgb(233,156,4)" fg:x="74" fg:w="2"/><text x="82.4722%" y="687.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 2.22%)</title><rect x="82.2222%" y="661" width="2.2222%" height="15" fill="rgb(207,194,5)" fg:x="74" fg:w="2"/><text x="82.4722%" y="671.50">e..</text></g><g><title>do_syscall_64 (2 samples, 2.22%)</title><rect x="82.2222%" y="645" width="2.2222%" height="15" fill="rgb(206,111,30)" fg:x="74" fg:w="2"/><text x="82.4722%" y="655.50">d..</text></g><g><title>__x64_sys_sendto (2 samples, 2.22%)</title><rect x="82.2222%" y="629" width="2.2222%" height="15" fill="rgb(243,70,54)" fg:x="74" fg:w="2"/><text x="82.4722%" y="639.50">_..</text></g><g><title>__sys_sendto (2 samples, 2.22%)</title><rect x="82.2222%" y="613" width="2.2222%" height="15" fill="rgb(242,28,8)" fg:x="74" fg:w="2"/><text x="82.4722%" y="623.50">_..</text></g><g><title>sock_sendmsg (2 samples, 2.22%)</title><rect x="82.2222%" y="597" width="2.2222%" height="15" fill="rgb(219,106,18)" fg:x="74" fg:w="2"/><text x="82.4722%" y="607.50">s..</text></g><g><title>inet_sendmsg (2 samples, 2.22%)</title><rect x="82.2222%" y="581" width="2.2222%" height="15" fill="rgb(244,222,10)" fg:x="74" fg:w="2"/><text x="82.4722%" y="591.50">i..</text></g><g><title>tcp_sendmsg (2 samples, 2.22%)</title><rect x="82.2222%" y="565" width="2.2222%" height="15" fill="rgb(236,179,52)" fg:x="74" fg:w="2"/><text x="82.4722%" y="575.50">t..</text></g><g><title>tcp_sendmsg_locked (2 samples, 2.22%)</title><rect x="82.2222%" y="549" width="2.2222%" height="15" fill="rgb(213,23,39)" fg:x="74" fg:w="2"/><text x="82.4722%" y="559.50">t..</text></g><g><title>tcp_push (2 samples, 2.22%)</title><rect x="82.2222%" y="533" width="2.2222%" height="15" fill="rgb(238,48,10)" fg:x="74" fg:w="2"/><text x="82.4722%" y="543.50">t..</text></g><g><title>__tcp_push_pending_frames (2 samples, 2.22%)</title><rect x="82.2222%" y="517" width="2.2222%" height="15" fill="rgb(251,196,23)" fg:x="74" fg:w="2"/><text x="82.4722%" y="527.50">_..</text></g><g><title>tcp_write_xmit (2 samples, 2.22%)</title><rect x="82.2222%" y="501" width="2.2222%" height="15" fill="rgb(250,152,24)" fg:x="74" fg:w="2"/><text x="82.4722%" y="511.50">t..</text></g><g><title>__tcp_transmit_skb (2 samples, 2.22%)</title><rect x="82.2222%" y="485" width="2.2222%" height="15" fill="rgb(209,150,17)" fg:x="74" fg:w="2"/><text x="82.4722%" y="495.50">_..</text></g><g><title>ip_queue_xmit (2 samples, 2.22%)</title><rect x="82.2222%" y="469" width="2.2222%" height="15" fill="rgb(234,202,34)" fg:x="74" fg:w="2"/><text x="82.4722%" y="479.50">i..</text></g><g><title>__ip_queue_xmit (2 samples, 2.22%)</title><rect x="82.2222%" y="453" width="2.2222%" height="15" fill="rgb(253,148,53)" fg:x="74" fg:w="2"/><text x="82.4722%" y="463.50">_..</text></g><g><title>ip_local_out (2 samples, 2.22%)</title><rect x="82.2222%" y="437" width="2.2222%" height="15" fill="rgb(218,129,16)" fg:x="74" fg:w="2"/><text x="82.4722%" y="447.50">i..</text></g><g><title>ip_output (2 samples, 2.22%)</title><rect x="82.2222%" y="421" width="2.2222%" height="15" fill="rgb(216,85,19)" fg:x="74" fg:w="2"/><text x="82.4722%" y="431.50">i..</text></g><g><title>ip_finish_output (2 samples, 2.22%)</title><rect x="82.2222%" y="405" width="2.2222%" height="15" fill="rgb(235,228,7)" fg:x="74" fg:w="2"/><text x="82.4722%" y="415.50">i..</text></g><g><title>__ip_finish_output (2 samples, 2.22%)</title><rect x="82.2222%" y="389" width="2.2222%" height="15" fill="rgb(245,175,0)" fg:x="74" fg:w="2"/><text x="82.4722%" y="399.50">_..</text></g><g><title>ip_finish_output2 (2 samples, 2.22%)</title><rect x="82.2222%" y="373" width="2.2222%" height="15" fill="rgb(208,168,36)" fg:x="74" fg:w="2"/><text x="82.4722%" y="383.50">i..</text></g><g><title>__local_bh_enable_ip (2 samples, 2.22%)</title><rect x="82.2222%" y="357" width="2.2222%" height="15" fill="rgb(246,171,24)" fg:x="74" fg:w="2"/><text x="82.4722%" y="367.50">_..</text></g><g><title>do_softirq.part.20 (2 samples, 2.22%)</title><rect x="82.2222%" y="341" width="2.2222%" height="15" fill="rgb(215,142,24)" fg:x="74" fg:w="2"/><text x="82.4722%" y="351.50">d..</text></g><g><title>do_softirq_own_stack (2 samples, 2.22%)</title><rect x="82.2222%" y="325" width="2.2222%" height="15" fill="rgb(250,187,7)" fg:x="74" fg:w="2"/><text x="82.4722%" y="335.50">d..</text></g><g><title>__softirqentry_text_start (2 samples, 2.22%)</title><rect x="82.2222%" y="309" width="2.2222%" height="15" fill="rgb(228,66,33)" fg:x="74" fg:w="2"/><text x="82.4722%" y="319.50">_..</text></g><g><title>net_rx_action (2 samples, 2.22%)</title><rect x="82.2222%" y="293" width="2.2222%" height="15" fill="rgb(234,215,21)" fg:x="74" fg:w="2"/><text x="82.4722%" y="303.50">n..</text></g><g><title>process_backlog (2 samples, 2.22%)</title><rect x="82.2222%" y="277" width="2.2222%" height="15" fill="rgb(222,191,20)" fg:x="74" fg:w="2"/><text x="82.4722%" y="287.50">p..</text></g><g><title>__netif_receive_skb (2 samples, 2.22%)</title><rect x="82.2222%" y="261" width="2.2222%" height="15" fill="rgb(245,79,54)" fg:x="74" fg:w="2"/><text x="82.4722%" y="271.50">_..</text></g><g><title>__netif_receive_skb_one_core (2 samples, 2.22%)</title><rect x="82.2222%" y="245" width="2.2222%" height="15" fill="rgb(240,10,37)" fg:x="74" fg:w="2"/><text x="82.4722%" y="255.50">_..</text></g><g><title>ip_rcv (2 samples, 2.22%)</title><rect x="82.2222%" y="229" width="2.2222%" height="15" fill="rgb(214,192,32)" fg:x="74" fg:w="2"/><text x="82.4722%" y="239.50">i..</text></g><g><title>ip_rcv_finish (2 samples, 2.22%)</title><rect x="82.2222%" y="213" width="2.2222%" height="15" fill="rgb(209,36,54)" fg:x="74" fg:w="2"/><text x="82.4722%" y="223.50">i..</text></g><g><title>ip_local_deliver (2 samples, 2.22%)</title><rect x="82.2222%" y="197" width="2.2222%" height="15" fill="rgb(220,10,11)" fg:x="74" fg:w="2"/><text x="82.4722%" y="207.50">i..</text></g><g><title>ip_local_deliver_finish (2 samples, 2.22%)</title><rect x="82.2222%" y="181" width="2.2222%" height="15" fill="rgb(221,106,17)" fg:x="74" fg:w="2"/><text x="82.4722%" y="191.50">i..</text></g><g><title>ip_protocol_deliver_rcu (2 samples, 2.22%)</title><rect x="82.2222%" y="165" width="2.2222%" height="15" fill="rgb(251,142,44)" fg:x="74" fg:w="2"/><text x="82.4722%" y="175.50">i..</text></g><g><title>tcp_v4_rcv (2 samples, 2.22%)</title><rect x="82.2222%" y="149" width="2.2222%" height="15" fill="rgb(238,13,15)" fg:x="74" fg:w="2"/><text x="82.4722%" y="159.50">t..</text></g><g><title>tcp_v4_do_rcv (2 samples, 2.22%)</title><rect x="82.2222%" y="133" width="2.2222%" height="15" fill="rgb(208,107,27)" fg:x="74" fg:w="2"/><text x="82.4722%" y="143.50">t..</text></g><g><title>tcp_rcv_established (2 samples, 2.22%)</title><rect x="82.2222%" y="117" width="2.2222%" height="15" fill="rgb(205,136,37)" fg:x="74" fg:w="2"/><text x="82.4722%" y="127.50">t..</text></g><g><title>tcp_data_ready (1 samples, 1.11%)</title><rect x="83.3333%" y="101" width="1.1111%" height="15" fill="rgb(250,205,27)" fg:x="75" fg:w="1"/><text x="83.5833%" y="111.50"></text></g><g><title>sock_def_readable (1 samples, 1.11%)</title><rect x="83.3333%" y="85" width="1.1111%" height="15" fill="rgb(210,80,43)" fg:x="75" fg:w="1"/><text x="83.5833%" y="95.50"></text></g><g><title>__wake_up_sync_key (1 samples, 1.11%)</title><rect x="83.3333%" y="69" width="1.1111%" height="15" fill="rgb(247,160,36)" fg:x="75" fg:w="1"/><text x="83.5833%" y="79.50"></text></g><g><title>__wake_up_common_lock (1 samples, 1.11%)</title><rect x="83.3333%" y="53" width="1.1111%" height="15" fill="rgb(234,13,49)" fg:x="75" fg:w="1"/><text x="83.5833%" y="63.50"></text></g><g><title>__lock_text_start (1 samples, 1.11%)</title><rect x="83.3333%" y="37" width="1.1111%" height="15" fill="rgb(234,122,0)" fg:x="75" fg:w="1"/><text x="83.5833%" y="47.50"></text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (18 samples, 20.00%)</title><rect x="65.5556%" y="773" width="20.0000%" height="15" fill="rgb(207,146,38)" fg:x="59" fg:w="18"/><text x="65.8056%" y="783.50">bitcoincore_rpc::client::RpcApi..</text></g><g><title>bitcoincore_rpc::deserialize_hex (1 samples, 1.11%)</title><rect x="84.4444%" y="757" width="1.1111%" height="15" fill="rgb(207,177,25)" fg:x="76" fg:w="1"/><text x="84.6944%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1 samples, 1.11%)</title><rect x="84.4444%" y="741" width="1.1111%" height="15" fill="rgb(211,178,42)" fg:x="76" fg:w="1"/><text x="84.6944%" y="751.50"></text></g><g><title>bitcoin::blockdata::script::&lt;impl bitcoin::consensus::encode::Decodable for bitcoin::blockdata::script::owned::ScriptBuf&gt;::consensus_decode_from_finite_reader (1 samples, 1.11%)</title><rect x="84.4444%" y="725" width="1.1111%" height="15" fill="rgb(230,69,54)" fg:x="76" fg:w="1"/><text x="84.6944%" y="735.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 1.11%)</title><rect x="84.4444%" y="709" width="1.1111%" height="15" fill="rgb(214,135,41)" fg:x="76" fg:w="1"/><text x="84.6944%" y="719.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as std::io::Read&gt;::read (1 samples, 1.11%)</title><rect x="84.4444%" y="693" width="1.1111%" height="15" fill="rgb(237,67,25)" fg:x="76" fg:w="1"/><text x="84.6944%" y="703.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="84.4444%" y="677" width="1.1111%" height="15" fill="rgb(222,189,50)" fg:x="76" fg:w="1"/><text x="84.6944%" y="687.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="84.4444%" y="661" width="1.1111%" height="15" fill="rgb(245,148,34)" fg:x="76" fg:w="1"/><text x="84.6944%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="84.4444%" y="645" width="1.1111%" height="15" fill="rgb(222,29,6)" fg:x="76" fg:w="1"/><text x="84.6944%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="84.4444%" y="629" width="1.1111%" height="15" fill="rgb(221,189,43)" fg:x="76" fg:w="1"/><text x="84.6944%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 1.11%)</title><rect x="84.4444%" y="613" width="1.1111%" height="15" fill="rgb(207,36,27)" fg:x="76" fg:w="1"/><text x="84.6944%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 1.11%)</title><rect x="85.5556%" y="725" width="1.1111%" height="15" fill="rgb(217,90,24)" fg:x="77" fg:w="1"/><text x="85.8056%" y="735.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 1.11%)</title><rect x="85.5556%" y="709" width="1.1111%" height="15" fill="rgb(224,66,35)" fg:x="77" fg:w="1"/><text x="85.8056%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 1.11%)</title><rect x="85.5556%" y="693" width="1.1111%" height="15" fill="rgb(221,13,50)" fg:x="77" fg:w="1"/><text x="85.8056%" y="703.50"></text></g><g><title>__nss_passwd_lookup (1 samples, 1.11%)</title><rect x="85.5556%" y="677" width="1.1111%" height="15" fill="rgb(236,68,49)" fg:x="77" fg:w="1"/><text x="85.8056%" y="687.50"></text></g><g><title>sk_wait_data (2 samples, 2.22%)</title><rect x="86.6667%" y="437" width="2.2222%" height="15" fill="rgb(229,146,28)" fg:x="78" fg:w="2"/><text x="86.9167%" y="447.50">s..</text></g><g><title>wait_woken (2 samples, 2.22%)</title><rect x="86.6667%" y="421" width="2.2222%" height="15" fill="rgb(225,31,38)" fg:x="78" fg:w="2"/><text x="86.9167%" y="431.50">w..</text></g><g><title>schedule_timeout (2 samples, 2.22%)</title><rect x="86.6667%" y="405" width="2.2222%" height="15" fill="rgb(250,208,3)" fg:x="78" fg:w="2"/><text x="86.9167%" y="415.50">s..</text></g><g><title>schedule (2 samples, 2.22%)</title><rect x="86.6667%" y="389" width="2.2222%" height="15" fill="rgb(246,54,23)" fg:x="78" fg:w="2"/><text x="86.9167%" y="399.50">s..</text></g><g><title>__sched_text_start (2 samples, 2.22%)</title><rect x="86.6667%" y="373" width="2.2222%" height="15" fill="rgb(243,76,11)" fg:x="78" fg:w="2"/><text x="86.9167%" y="383.50">_..</text></g><g><title>finish_task_switch (2 samples, 2.22%)</title><rect x="86.6667%" y="357" width="2.2222%" height="15" fill="rgb(245,21,50)" fg:x="78" fg:w="2"/><text x="86.9167%" y="367.50">f..</text></g><g><title>std::io::append_to_string (3 samples, 3.33%)</title><rect x="86.6667%" y="725" width="3.3333%" height="15" fill="rgb(228,9,43)" fg:x="78" fg:w="3"/><text x="86.9167%" y="735.50">std..</text></g><g><title>std::io::BufRead::read_line::_{{closure}} (3 samples, 3.33%)</title><rect x="86.6667%" y="709" width="3.3333%" height="15" fill="rgb(208,100,47)" fg:x="78" fg:w="3"/><text x="86.9167%" y="719.50">std..</text></g><g><title>std::io::read_until (3 samples, 3.33%)</title><rect x="86.6667%" y="693" width="3.3333%" height="15" fill="rgb(232,26,8)" fg:x="78" fg:w="3"/><text x="86.9167%" y="703.50">std..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (3 samples, 3.33%)</title><rect x="86.6667%" y="677" width="3.3333%" height="15" fill="rgb(216,166,38)" fg:x="78" fg:w="3"/><text x="86.9167%" y="687.50">&lt;st..</text></g><g><title>?? (3 samples, 3.33%)</title><rect x="86.6667%" y="661" width="3.3333%" height="15" fill="rgb(251,202,51)" fg:x="78" fg:w="3"/><text x="86.9167%" y="671.50">??</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (3 samples, 3.33%)</title><rect x="86.6667%" y="645" width="3.3333%" height="15" fill="rgb(254,216,34)" fg:x="78" fg:w="3"/><text x="86.9167%" y="655.50">std..</text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (3 samples, 3.33%)</title><rect x="86.6667%" y="629" width="3.3333%" height="15" fill="rgb(251,32,27)" fg:x="78" fg:w="3"/><text x="86.9167%" y="639.50">&lt;st..</text></g><g><title>std::sys_common::net::TcpStream::read_buf (3 samples, 3.33%)</title><rect x="86.6667%" y="613" width="3.3333%" height="15" fill="rgb(208,127,28)" fg:x="78" fg:w="3"/><text x="86.9167%" y="623.50">std..</text></g><g><title>std::sys::unix::net::Socket::read_buf (3 samples, 3.33%)</title><rect x="86.6667%" y="597" width="3.3333%" height="15" fill="rgb(224,137,22)" fg:x="78" fg:w="3"/><text x="86.9167%" y="607.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 3.33%)</title><rect x="86.6667%" y="581" width="3.3333%" height="15" fill="rgb(254,70,32)" fg:x="78" fg:w="3"/><text x="86.9167%" y="591.50">std..</text></g><g><title>__libc_recv (3 samples, 3.33%)</title><rect x="86.6667%" y="565" width="3.3333%" height="15" fill="rgb(229,75,37)" fg:x="78" fg:w="3"/><text x="86.9167%" y="575.50">__l..</text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 3.33%)</title><rect x="86.6667%" y="549" width="3.3333%" height="15" fill="rgb(252,64,23)" fg:x="78" fg:w="3"/><text x="86.9167%" y="559.50">ent..</text></g><g><title>do_syscall_64 (3 samples, 3.33%)</title><rect x="86.6667%" y="533" width="3.3333%" height="15" fill="rgb(232,162,48)" fg:x="78" fg:w="3"/><text x="86.9167%" y="543.50">do_..</text></g><g><title>__x64_sys_recvfrom (3 samples, 3.33%)</title><rect x="86.6667%" y="517" width="3.3333%" height="15" fill="rgb(246,160,12)" fg:x="78" fg:w="3"/><text x="86.9167%" y="527.50">__x..</text></g><g><title>__sys_recvfrom (3 samples, 3.33%)</title><rect x="86.6667%" y="501" width="3.3333%" height="15" fill="rgb(247,166,0)" fg:x="78" fg:w="3"/><text x="86.9167%" y="511.50">__s..</text></g><g><title>sock_recvmsg (3 samples, 3.33%)</title><rect x="86.6667%" y="485" width="3.3333%" height="15" fill="rgb(249,219,21)" fg:x="78" fg:w="3"/><text x="86.9167%" y="495.50">soc..</text></g><g><title>inet_recvmsg (3 samples, 3.33%)</title><rect x="86.6667%" y="469" width="3.3333%" height="15" fill="rgb(205,209,3)" fg:x="78" fg:w="3"/><text x="86.9167%" y="479.50">ine..</text></g><g><title>tcp_recvmsg (3 samples, 3.33%)</title><rect x="86.6667%" y="453" width="3.3333%" height="15" fill="rgb(243,44,1)" fg:x="78" fg:w="3"/><text x="86.9167%" y="463.50">tcp..</text></g><g><title>tcp_cleanup_rbuf (1 samples, 1.11%)</title><rect x="88.8889%" y="437" width="1.1111%" height="15" fill="rgb(206,159,16)" fg:x="80" fg:w="1"/><text x="89.1389%" y="447.50"></text></g><g><title>__ip_local_out (1 samples, 1.11%)</title><rect x="90.0000%" y="437" width="1.1111%" height="15" fill="rgb(244,77,30)" fg:x="81" fg:w="1"/><text x="90.2500%" y="447.50"></text></g><g><title>nf_hook_slow (1 samples, 1.11%)</title><rect x="90.0000%" y="421" width="1.1111%" height="15" fill="rgb(218,69,12)" fg:x="81" fg:w="1"/><text x="90.2500%" y="431.50"></text></g><g><title>ipv4_conntrack_local (1 samples, 1.11%)</title><rect x="90.0000%" y="405" width="1.1111%" height="15" fill="rgb(212,87,7)" fg:x="81" fg:w="1"/><text x="90.2500%" y="415.50"></text></g><g><title>nf_conntrack_in (1 samples, 1.11%)</title><rect x="90.0000%" y="389" width="1.1111%" height="15" fill="rgb(245,114,25)" fg:x="81" fg:w="1"/><text x="90.2500%" y="399.50"></text></g><g><title>nf_conntrack_tcp_packet (1 samples, 1.11%)</title><rect x="90.0000%" y="373" width="1.1111%" height="15" fill="rgb(210,61,42)" fg:x="81" fg:w="1"/><text x="90.2500%" y="383.50"></text></g><g><title>tcp_in_window (1 samples, 1.11%)</title><rect x="90.0000%" y="357" width="1.1111%" height="15" fill="rgb(211,52,33)" fg:x="81" fg:w="1"/><text x="90.2500%" y="367.50"></text></g><g><title>ip_queue_xmit (3 samples, 3.33%)</title><rect x="90.0000%" y="485" width="3.3333%" height="15" fill="rgb(234,58,33)" fg:x="81" fg:w="3"/><text x="90.2500%" y="495.50">ip_..</text></g><g><title>__ip_queue_xmit (3 samples, 3.33%)</title><rect x="90.0000%" y="469" width="3.3333%" height="15" fill="rgb(220,115,36)" fg:x="81" fg:w="3"/><text x="90.2500%" y="479.50">__i..</text></g><g><title>ip_local_out (3 samples, 3.33%)</title><rect x="90.0000%" y="453" width="3.3333%" height="15" fill="rgb(243,153,54)" fg:x="81" fg:w="3"/><text x="90.2500%" y="463.50">ip_..</text></g><g><title>ip_output (2 samples, 2.22%)</title><rect x="91.1111%" y="437" width="2.2222%" height="15" fill="rgb(251,47,18)" fg:x="82" fg:w="2"/><text x="91.3611%" y="447.50">i..</text></g><g><title>ip_finish_output (2 samples, 2.22%)</title><rect x="91.1111%" y="421" width="2.2222%" height="15" fill="rgb(242,102,42)" fg:x="82" fg:w="2"/><text x="91.3611%" y="431.50">i..</text></g><g><title>__ip_finish_output (2 samples, 2.22%)</title><rect x="91.1111%" y="405" width="2.2222%" height="15" fill="rgb(234,31,38)" fg:x="82" fg:w="2"/><text x="91.3611%" y="415.50">_..</text></g><g><title>ip_finish_output2 (2 samples, 2.22%)</title><rect x="91.1111%" y="389" width="2.2222%" height="15" fill="rgb(221,117,51)" fg:x="82" fg:w="2"/><text x="91.3611%" y="399.50">i..</text></g><g><title>__local_bh_enable_ip (2 samples, 2.22%)</title><rect x="91.1111%" y="373" width="2.2222%" height="15" fill="rgb(212,20,18)" fg:x="82" fg:w="2"/><text x="91.3611%" y="383.50">_..</text></g><g><title>do_softirq.part.20 (2 samples, 2.22%)</title><rect x="91.1111%" y="357" width="2.2222%" height="15" fill="rgb(245,133,36)" fg:x="82" fg:w="2"/><text x="91.3611%" y="367.50">d..</text></g><g><title>do_softirq_own_stack (2 samples, 2.22%)</title><rect x="91.1111%" y="341" width="2.2222%" height="15" fill="rgb(212,6,19)" fg:x="82" fg:w="2"/><text x="91.3611%" y="351.50">d..</text></g><g><title>__softirqentry_text_start (2 samples, 2.22%)</title><rect x="91.1111%" y="325" width="2.2222%" height="15" fill="rgb(218,1,36)" fg:x="82" fg:w="2"/><text x="91.3611%" y="335.50">_..</text></g><g><title>net_rx_action (2 samples, 2.22%)</title><rect x="91.1111%" y="309" width="2.2222%" height="15" fill="rgb(246,84,54)" fg:x="82" fg:w="2"/><text x="91.3611%" y="319.50">n..</text></g><g><title>process_backlog (2 samples, 2.22%)</title><rect x="91.1111%" y="293" width="2.2222%" height="15" fill="rgb(242,110,6)" fg:x="82" fg:w="2"/><text x="91.3611%" y="303.50">p..</text></g><g><title>__netif_receive_skb (2 samples, 2.22%)</title><rect x="91.1111%" y="277" width="2.2222%" height="15" fill="rgb(214,47,5)" fg:x="82" fg:w="2"/><text x="91.3611%" y="287.50">_..</text></g><g><title>__netif_receive_skb_one_core (2 samples, 2.22%)</title><rect x="91.1111%" y="261" width="2.2222%" height="15" fill="rgb(218,159,25)" fg:x="82" fg:w="2"/><text x="91.3611%" y="271.50">_..</text></g><g><title>ip_rcv (2 samples, 2.22%)</title><rect x="91.1111%" y="245" width="2.2222%" height="15" fill="rgb(215,211,28)" fg:x="82" fg:w="2"/><text x="91.3611%" y="255.50">i..</text></g><g><title>ip_rcv_finish (2 samples, 2.22%)</title><rect x="91.1111%" y="229" width="2.2222%" height="15" fill="rgb(238,59,32)" fg:x="82" fg:w="2"/><text x="91.3611%" y="239.50">i..</text></g><g><title>ip_local_deliver (2 samples, 2.22%)</title><rect x="91.1111%" y="213" width="2.2222%" height="15" fill="rgb(226,82,3)" fg:x="82" fg:w="2"/><text x="91.3611%" y="223.50">i..</text></g><g><title>ip_local_deliver_finish (2 samples, 2.22%)</title><rect x="91.1111%" y="197" width="2.2222%" height="15" fill="rgb(240,164,32)" fg:x="82" fg:w="2"/><text x="91.3611%" y="207.50">i..</text></g><g><title>ip_protocol_deliver_rcu (2 samples, 2.22%)</title><rect x="91.1111%" y="181" width="2.2222%" height="15" fill="rgb(232,46,7)" fg:x="82" fg:w="2"/><text x="91.3611%" y="191.50">i..</text></g><g><title>tcp_v4_rcv (2 samples, 2.22%)</title><rect x="91.1111%" y="165" width="2.2222%" height="15" fill="rgb(229,129,53)" fg:x="82" fg:w="2"/><text x="91.3611%" y="175.50">t..</text></g><g><title>tcp_v4_do_rcv (2 samples, 2.22%)</title><rect x="91.1111%" y="149" width="2.2222%" height="15" fill="rgb(234,188,29)" fg:x="82" fg:w="2"/><text x="91.3611%" y="159.50">t..</text></g><g><title>tcp_rcv_established (2 samples, 2.22%)</title><rect x="91.1111%" y="133" width="2.2222%" height="15" fill="rgb(246,141,4)" fg:x="82" fg:w="2"/><text x="91.3611%" y="143.50">t..</text></g><g><title>tcp_data_ready (2 samples, 2.22%)</title><rect x="91.1111%" y="117" width="2.2222%" height="15" fill="rgb(229,23,39)" fg:x="82" fg:w="2"/><text x="91.3611%" y="127.50">t..</text></g><g><title>sock_def_readable (2 samples, 2.22%)</title><rect x="91.1111%" y="101" width="2.2222%" height="15" fill="rgb(206,12,3)" fg:x="82" fg:w="2"/><text x="91.3611%" y="111.50">s..</text></g><g><title>__wake_up_sync_key (2 samples, 2.22%)</title><rect x="91.1111%" y="85" width="2.2222%" height="15" fill="rgb(252,226,20)" fg:x="82" fg:w="2"/><text x="91.3611%" y="95.50">_..</text></g><g><title>__wake_up_common_lock (2 samples, 2.22%)</title><rect x="91.1111%" y="69" width="2.2222%" height="15" fill="rgb(216,123,35)" fg:x="82" fg:w="2"/><text x="91.3611%" y="79.50">_..</text></g><g><title>__lock_text_start (2 samples, 2.22%)</title><rect x="91.1111%" y="53" width="2.2222%" height="15" fill="rgb(212,68,40)" fg:x="82" fg:w="2"/><text x="91.3611%" y="63.50">_..</text></g><g><title>ord::index::updater::Updater::get_block_with_retries (26 samples, 28.89%)</title><rect x="65.5556%" y="789" width="28.8889%" height="15" fill="rgb(254,125,32)" fg:x="59" fg:w="26"/><text x="65.8056%" y="799.50">ord::index::updater::Updater::get_block_with_r..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (8 samples, 8.89%)</title><rect x="85.5556%" y="773" width="8.8889%" height="15" fill="rgb(253,97,22)" fg:x="77" fg:w="8"/><text x="85.8056%" y="783.50">bitcoincore_r..</text></g><g><title>jsonrpc::client::Client::send_request (8 samples, 8.89%)</title><rect x="85.5556%" y="757" width="8.8889%" height="15" fill="rgb(241,101,14)" fg:x="77" fg:w="8"/><text x="85.8056%" y="767.50">jsonrpc::clie..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (8 samples, 8.89%)</title><rect x="85.5556%" y="741" width="8.8889%" height="15" fill="rgb(238,103,29)" fg:x="77" fg:w="8"/><text x="85.8056%" y="751.50">&lt;jsonrpc::sim..</text></g><g><title>std::net::udp::UdpSocket::send (4 samples, 4.44%)</title><rect x="90.0000%" y="725" width="4.4444%" height="15" fill="rgb(233,195,47)" fg:x="81" fg:w="4"/><text x="90.2500%" y="735.50">std::..</text></g><g><title>std::sys_common::net::UdpSocket::send (4 samples, 4.44%)</title><rect x="90.0000%" y="709" width="4.4444%" height="15" fill="rgb(246,218,30)" fg:x="81" fg:w="4"/><text x="90.2500%" y="719.50">std::..</text></g><g><title>__libc_send (4 samples, 4.44%)</title><rect x="90.0000%" y="693" width="4.4444%" height="15" fill="rgb(219,145,47)" fg:x="81" fg:w="4"/><text x="90.2500%" y="703.50">__lib..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 4.44%)</title><rect x="90.0000%" y="677" width="4.4444%" height="15" fill="rgb(243,12,26)" fg:x="81" fg:w="4"/><text x="90.2500%" y="687.50">entry..</text></g><g><title>do_syscall_64 (4 samples, 4.44%)</title><rect x="90.0000%" y="661" width="4.4444%" height="15" fill="rgb(214,87,16)" fg:x="81" fg:w="4"/><text x="90.2500%" y="671.50">do_sy..</text></g><g><title>__x64_sys_sendto (4 samples, 4.44%)</title><rect x="90.0000%" y="645" width="4.4444%" height="15" fill="rgb(208,99,42)" fg:x="81" fg:w="4"/><text x="90.2500%" y="655.50">__x64..</text></g><g><title>__sys_sendto (4 samples, 4.44%)</title><rect x="90.0000%" y="629" width="4.4444%" height="15" fill="rgb(253,99,2)" fg:x="81" fg:w="4"/><text x="90.2500%" y="639.50">__sys..</text></g><g><title>sock_sendmsg (4 samples, 4.44%)</title><rect x="90.0000%" y="613" width="4.4444%" height="15" fill="rgb(220,168,23)" fg:x="81" fg:w="4"/><text x="90.2500%" y="623.50">sock_..</text></g><g><title>inet_sendmsg (4 samples, 4.44%)</title><rect x="90.0000%" y="597" width="4.4444%" height="15" fill="rgb(242,38,24)" fg:x="81" fg:w="4"/><text x="90.2500%" y="607.50">inet_..</text></g><g><title>tcp_sendmsg (4 samples, 4.44%)</title><rect x="90.0000%" y="581" width="4.4444%" height="15" fill="rgb(225,182,9)" fg:x="81" fg:w="4"/><text x="90.2500%" y="591.50">tcp_s..</text></g><g><title>tcp_sendmsg_locked (4 samples, 4.44%)</title><rect x="90.0000%" y="565" width="4.4444%" height="15" fill="rgb(243,178,37)" fg:x="81" fg:w="4"/><text x="90.2500%" y="575.50">tcp_s..</text></g><g><title>tcp_push (4 samples, 4.44%)</title><rect x="90.0000%" y="549" width="4.4444%" height="15" fill="rgb(232,139,19)" fg:x="81" fg:w="4"/><text x="90.2500%" y="559.50">tcp_p..</text></g><g><title>__tcp_push_pending_frames (4 samples, 4.44%)</title><rect x="90.0000%" y="533" width="4.4444%" height="15" fill="rgb(225,201,24)" fg:x="81" fg:w="4"/><text x="90.2500%" y="543.50">__tcp..</text></g><g><title>tcp_write_xmit (4 samples, 4.44%)</title><rect x="90.0000%" y="517" width="4.4444%" height="15" fill="rgb(221,47,46)" fg:x="81" fg:w="4"/><text x="90.2500%" y="527.50">tcp_w..</text></g><g><title>__tcp_transmit_skb (4 samples, 4.44%)</title><rect x="90.0000%" y="501" width="4.4444%" height="15" fill="rgb(249,23,13)" fg:x="81" fg:w="4"/><text x="90.2500%" y="511.50">__tcp..</text></g><g><title>skb_clone (1 samples, 1.11%)</title><rect x="93.3333%" y="485" width="1.1111%" height="15" fill="rgb(219,9,5)" fg:x="84" fg:w="1"/><text x="93.5833%" y="495.50"></text></g><g><title>__skb_clone (1 samples, 1.11%)</title><rect x="93.3333%" y="469" width="1.1111%" height="15" fill="rgb(254,171,16)" fg:x="84" fg:w="1"/><text x="93.5833%" y="479.50"></text></g><g><title>all (90 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(230,171,20)" fg:x="0" fg:w="90"/><text x="0.2500%" y="943.50"></text></g><g><title>ord (90 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(210,71,41)" fg:x="0" fg:w="90"/><text x="0.2500%" y="927.50">ord</text></g><g><title>clone (80 samples, 88.89%)</title><rect x="11.1111%" y="901" width="88.8889%" height="15" fill="rgb(206,173,20)" fg:x="10" fg:w="80"/><text x="11.3611%" y="911.50">clone</text></g><g><title>start_thread (80 samples, 88.89%)</title><rect x="11.1111%" y="885" width="88.8889%" height="15" fill="rgb(233,88,34)" fg:x="10" fg:w="80"/><text x="11.3611%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (80 samples, 88.89%)</title><rect x="11.1111%" y="869" width="88.8889%" height="15" fill="rgb(223,209,46)" fg:x="10" fg:w="80"/><text x="11.3611%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (80 samples, 88.89%)</title><rect x="11.1111%" y="853" width="88.8889%" height="15" fill="rgb(250,43,18)" fg:x="10" fg:w="80"/><text x="11.3611%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (80 samples, 88.89%)</title><rect x="11.1111%" y="837" width="88.8889%" height="15" fill="rgb(208,13,10)" fg:x="10" fg:w="80"/><text x="11.3611%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (80 samples, 88.89%)</title><rect x="11.1111%" y="821" width="88.8889%" height="15" fill="rgb(212,200,36)" fg:x="10" fg:w="80"/><text x="11.3611%" y="831.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (80 samples, 88.89%)</title><rect x="11.1111%" y="805" width="88.8889%" height="15" fill="rgb(225,90,30)" fg:x="10" fg:w="80"/><text x="11.3611%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::send (5 samples, 5.56%)</title><rect x="94.4444%" y="789" width="5.5556%" height="15" fill="rgb(236,182,39)" fg:x="85" fg:w="5"/><text x="94.6944%" y="799.50">std::sy..</text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (5 samples, 5.56%)</title><rect x="94.4444%" y="773" width="5.5556%" height="15" fill="rgb(212,144,35)" fg:x="85" fg:w="5"/><text x="94.6944%" y="783.50">std::sy..</text></g><g><title>std::sys::unix::futex::futex_wake (4 samples, 4.44%)</title><rect x="95.5556%" y="757" width="4.4444%" height="15" fill="rgb(228,63,44)" fg:x="86" fg:w="4"/><text x="95.8056%" y="767.50">std::..</text></g><g><title>syscall (4 samples, 4.44%)</title><rect x="95.5556%" y="741" width="4.4444%" height="15" fill="rgb(228,109,6)" fg:x="86" fg:w="4"/><text x="95.8056%" y="751.50">sysca..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 4.44%)</title><rect x="95.5556%" y="725" width="4.4444%" height="15" fill="rgb(238,117,24)" fg:x="86" fg:w="4"/><text x="95.8056%" y="735.50">entry..</text></g><g><title>do_syscall_64 (4 samples, 4.44%)</title><rect x="95.5556%" y="709" width="4.4444%" height="15" fill="rgb(242,26,26)" fg:x="86" fg:w="4"/><text x="95.8056%" y="719.50">do_sy..</text></g><g><title>__x64_sys_futex (4 samples, 4.44%)</title><rect x="95.5556%" y="693" width="4.4444%" height="15" fill="rgb(221,92,48)" fg:x="86" fg:w="4"/><text x="95.8056%" y="703.50">__x64..</text></g><g><title>do_futex (4 samples, 4.44%)</title><rect x="95.5556%" y="677" width="4.4444%" height="15" fill="rgb(209,209,32)" fg:x="86" fg:w="4"/><text x="95.8056%" y="687.50">do_fu..</text></g><g><title>futex_wake (4 samples, 4.44%)</title><rect x="95.5556%" y="661" width="4.4444%" height="15" fill="rgb(221,70,22)" fg:x="86" fg:w="4"/><text x="95.8056%" y="671.50">futex..</text></g><g><title>wake_up_q (4 samples, 4.44%)</title><rect x="95.5556%" y="645" width="4.4444%" height="15" fill="rgb(248,145,5)" fg:x="86" fg:w="4"/><text x="95.8056%" y="655.50">wake_..</text></g><g><title>try_to_wake_up (4 samples, 4.44%)</title><rect x="95.5556%" y="629" width="4.4444%" height="15" fill="rgb(226,116,26)" fg:x="86" fg:w="4"/><text x="95.8056%" y="639.50">try_t..</text></g><g><title>__lock_text_start (4 samples, 4.44%)</title><rect x="95.5556%" y="613" width="4.4444%" height="15" fill="rgb(244,5,17)" fg:x="86" fg:w="4"/><text x="95.8056%" y="623.50">__loc..</text></g></svg></svg>